var searchIndex = JSON.parse('{\
"calloop":{"doc":"Calloop, a Callback-based Event Loop","i":[[3,"Poll","calloop","The polling system",null,null],[3,"Readiness","","Readiness for a file descriptor notification",null,null],[12,"readable","","Is the FD readable",0,null],[12,"writable","","Is the FD writable",0,null],[12,"error","","Is the FD in an error state",0,null],[3,"Token","","A Token for registration",null,null],[12,"sub_id","","The source-internal ID",1,null],[3,"EventLoop","","An event loop",null,null],[3,"InsertError","","An error generated when trying to insert an event source",null,null],[12,"source","","The source that could not be inserted",2,null],[12,"error","","The generated error",2,null],[3,"LoopHandle","","An handle to an event loop",null,null],[3,"LoopSignal","","A signal that can be shared between thread to stop or…",null,null],[3,"Source","","A token representing an event source inserted in the event…",null,null],[3,"Idle","","An idle callback that was inserted in this loop",null,null],[4,"Interest","","Interest to register regarding the file descriptor",null,null],[13,"Readable","","Will generate events when readable",3,null],[13,"Writable","","Will generate events when writable",3,null],[13,"Both","","Will generate events when readable or writable",3,null],[4,"Mode","","Possible modes for registering a file descriptor",null,null],[13,"OneShot","","Single event generation",4,null],[13,"Level","","Level-triggering",4,null],[13,"Edge","","Edge-triggering",4,null],[11,"register","","Register a new file descriptor for polling",5,[[["rawfd",6],["mode",4],["interest",4],["token",3]],["result",6]]],[11,"reregister","","Update the registration for a file descriptor",5,[[["rawfd",6],["mode",4],["interest",4],["token",3]],["result",6]]],[11,"unregister","","Unregister a file descriptor",5,[[["rawfd",6]],["result",6]]],[0,"channel","","An MPSC channel whose receiving end is an event source",null,null],[3,"Sender","calloop::channel","The sender end of a channel",null,null],[3,"SyncSender","","The sender end of a synchronous channel",null,null],[3,"Channel","","The receiving end of the channel",null,null],[4,"Event","","The events generated by the channel event source",null,null],[13,"Msg","","A message was received and is bundled here",6,null],[13,"Closed","","The channel was closed",6,null],[5,"channel","","Create a new asynchronous channel",null,[[]]],[5,"sync_channel","","Create a new synchronous, bounded channel",null,[[]]],[0,"generic","calloop","A generic event source wrapping a file descriptor",null,null],[3,"Generic","calloop::generic","A generic event source wrapping a FD-backed type",null,null],[12,"file","","The wrapped FD-backed type",7,null],[12,"interest","","The programmed interest",7,null],[12,"mode","","The programmed mode",7,null],[3,"Fd","","A wrapper to insert a raw file descriptor into a `Generic`…",null,null],[12,"0","","",8,null],[0,"ping","calloop","Ping to the event loop",null,null],[3,"PingSource","calloop::ping","The ping event source",null,null],[3,"Ping","","The Ping handle",null,null],[5,"make_ping","","Create a new ping event source",null,[[],["result",6]]],[0,"signals","calloop","Event source for tracking Unix signals",null,null],[4,"Signal","calloop::signals","",null,null],[13,"SIGHUP","","",9,null],[13,"SIGINT","","",9,null],[13,"SIGQUIT","","",9,null],[13,"SIGILL","","",9,null],[13,"SIGTRAP","","",9,null],[13,"SIGABRT","","",9,null],[13,"SIGBUS","","",9,null],[13,"SIGFPE","","",9,null],[13,"SIGKILL","","",9,null],[13,"SIGUSR1","","",9,null],[13,"SIGSEGV","","",9,null],[13,"SIGUSR2","","",9,null],[13,"SIGPIPE","","",9,null],[13,"SIGALRM","","",9,null],[13,"SIGTERM","","",9,null],[13,"SIGSTKFLT","","",9,null],[13,"SIGCHLD","","",9,null],[13,"SIGCONT","","",9,null],[13,"SIGSTOP","","",9,null],[13,"SIGTSTP","","",9,null],[13,"SIGTTIN","","",9,null],[13,"SIGTTOU","","",9,null],[13,"SIGURG","","",9,null],[13,"SIGXCPU","","",9,null],[13,"SIGXFSZ","","",9,null],[13,"SIGVTALRM","","",9,null],[13,"SIGPROF","","",9,null],[13,"SIGWINCH","","",9,null],[13,"SIGIO","","",9,null],[13,"SIGPWR","","",9,null],[13,"SIGSYS","","",9,null],[3,"siginfo","","",null,null],[12,"ssi_signo","","",10,null],[12,"ssi_errno","","",10,null],[12,"ssi_code","","",10,null],[12,"ssi_pid","","",10,null],[12,"ssi_uid","","",10,null],[12,"ssi_fd","","",10,null],[12,"ssi_tid","","",10,null],[12,"ssi_band","","",10,null],[12,"ssi_overrun","","",10,null],[12,"ssi_trapno","","",10,null],[12,"ssi_status","","",10,null],[12,"ssi_int","","",10,null],[12,"ssi_ptr","","",10,null],[12,"ssi_utime","","",10,null],[12,"ssi_stime","","",10,null],[12,"ssi_addr","","",10,null],[12,"ssi_addr_lsb","","",10,null],[12,"ssi_syscall","","",10,null],[12,"ssi_call_addr","","",10,null],[12,"ssi_arch","","",10,null],[3,"Event","","An event generated by the signal event source",null,null],[3,"Signals","","An event source for receiving Unix signals",null,null],[0,"timer","calloop","Timer-based event sources",null,null],[3,"Timer","calloop::timer","A Timer event source",null,null],[3,"TimerHandle","","An handle to a timer, used to set or cancel timeouts",null,null],[3,"Timeout","","An itentifier to cancel a timeout if necessary",null,null],[11,"insert_source","calloop","Insert an new event source in the loop",11,[[],[["inserterror",3],["result",4],["source",3]]]],[11,"insert_idle","","Insert an idle callback",11,[[["fnonce",8]],["idle",3]]],[11,"with_source","","Access this event source",11,[[["fnonce",8],["source",3]]]],[11,"enable","","Enable this previously disabled event source",11,[[["source",3]],["result",6]]],[11,"update","","Make this source update its registration",11,[[["source",3]],["result",6]]],[11,"disable","","Disable this event source",11,[[["source",3]],["result",6]]],[11,"remove","","Remove this source from the event loop",11,[[["eventsource",8],["source",3]],["eventsource",8]]],[11,"kill","","Remove this event source from the event loop and drop it",11,[[["eventsource",8],["source",3]]]],[11,"new","","Create a new event loop",12,[[],[["eventloop",3],["result",6]]]],[11,"handle","","Retrieve a loop handle",12,[[],["loophandle",3]]],[11,"dispatch","","Dispatch pending events to their callbacks",12,[[["option",4],["into",8]],["result",6]]],[11,"get_signal","","Get a signal to stop this event loop from running",12,[[],["loopsignal",3]]],[11,"run","","Run this event loop",12,[[["option",4],["duration",3]],["result",6]]],[11,"stop","","Stop the event loop",13,[[]]],[11,"wakeup","","Wake up the event loop",13,[[]]],[11,"send","calloop::channel","Send a message to the channel",14,[[],[["senderror",3],["result",4]]]],[11,"send","","Send a message to the synchronous channel",15,[[],[["senderror",3],["result",4]]]],[11,"try_send","","Send a message to the synchronous channel",15,[[],[["result",4],["trysenderror",4]]]],[11,"new","calloop::generic","Wrap a FD-backed type into a `Generic` event source",7,[[["mode",4],["interest",4]],["generic",3]]],[11,"unwrap","","Unwrap the `Generic` source to retrieve the underlying type",7,[[]]],[11,"from_fd","","Wrap a raw file descriptor into a `Generic` event source",7,[[["rawfd",6],["mode",4],["interest",4]],[["generic",3],["fd",3]]]],[11,"ping","calloop::ping","Send a ping to the `PingSource`",16,[[]]],[11,"signal","calloop::signals","Retrieve the signal number that was receive",17,[[],["signal",4]]],[11,"full_info","","Access the full `siginfo_t` associated with this signal…",17,[[],["siginfo",3]]],[11,"new","","Create a new signal event source listening on the…",18,[[],[["signals",3],["result",6]]]],[11,"add_signals","","Add a list of signals to the signals source",18,[[],["result",6]]],[11,"remove_signals","","Remove a list of signals to the signals source",18,[[],["result",6]]],[11,"set_signals","","Replace the list of signals of the source",18,[[],["result",6]]],[11,"new","calloop::timer","Create a new timer with default parameters",19,[[],[["timer",3],["result",6]]]],[11,"handle","","Get an handle for this timer",19,[[],["timerhandle",3]]],[11,"add_timeout","","Set a new timeout",20,[[["duration",3]],["timeout",3]]],[11,"cancel_timeout","","Cancel a previsouly set timeout and retrieve the…",20,[[["timeout",3]],["option",4]]],[11,"cancel_all_timeouts","","Cancel all planned timeouts for this timer",20,[[]]],[11,"cancel","calloop","Cancel the idle callback if it was not already run",21,[[]]],[8,"EventSource","","Trait representing an event source",null,null],[16,"Event","","The type of events generated by your source.",22,null],[16,"Metadata","","Some metadata of your event source",22,null],[16,"Ret","","The return type of the user callback",22,null],[10,"process_events","","Process any relevant events",22,[[["token",3],["readiness",3]],["result",6]]],[10,"register","","Register yourself to this poll instance",22,[[["token",3],["poll",3]],["result",6]]],[10,"reregister","","Re-register your file descriptors",22,[[["token",3],["poll",3]],["result",6]]],[10,"unregister","","Unregister your file descriptors",22,[[["poll",3]],["result",6]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","calloop::channel","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","calloop::generic","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","calloop::ping","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","calloop::signals","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","calloop::timer","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"fmt","calloop::signals","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"hash","","",9,[[]]],[11,"try_from","","",9,[[],[["signal",4],["error",4],["result",4]]]],[11,"from_str","","",9,[[],[["signal",4],["error",4],["result",4]]]],[11,"partial_cmp","","",9,[[["signal",4]],[["ordering",4],["option",4]]]],[11,"eq","","",9,[[["signal",4]]]],[11,"fmt","","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_ref","","",9,[[]]],[11,"cmp","","",9,[[["signal",4]],["ordering",4]]],[11,"clone","","",9,[[],["signal",4]]],[11,"eq","","",10,[[["signalfd_siginfo",3]]]],[11,"ne","","",10,[[["signalfd_siginfo",3]]]],[11,"clone","","",10,[[],["signalfd_siginfo",3]]],[11,"hash","","",10,[[]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"process_events","calloop::channel","",24,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",24,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",24,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",24,[[["poll",3]],["result",6]]],[11,"process_events","calloop::generic","",7,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",7,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",7,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",7,[[["poll",3]],["result",6]]],[11,"process_events","calloop::ping","",25,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",25,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",25,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",25,[[["poll",3]],["result",6]]],[11,"process_events","calloop::signals","",18,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",18,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",18,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",18,[[["poll",3]],["result",6]]],[11,"process_events","calloop::timer","",19,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",19,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",19,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",19,[[["poll",3]],["result",6]]],[11,"drop","calloop::channel","",14,[[]]],[11,"drop","calloop::ping","",25,[[]]],[11,"drop","calloop::signals","",18,[[]]],[11,"clone","calloop","",4,[[],["mode",4]]],[11,"clone","","",3,[[],["interest",4]]],[11,"clone","","",0,[[],["readiness",3]]],[11,"clone","","",1,[[],["token",3]]],[11,"clone","","",11,[[],["loophandle",3]]],[11,"clone","","",13,[[],["loopsignal",3]]],[11,"clone","calloop::channel","",14,[[],["sender",3]]],[11,"clone","","",15,[[],["syncsender",3]]],[11,"clone","calloop::ping","",16,[[],["ping",3]]],[11,"clone","calloop::signals","",17,[[],["event",3]]],[11,"clone","calloop::timer","",20,[[],["timerhandle",3]]],[11,"eq","calloop","",1,[[["token",3]]]],[11,"ne","","",1,[[["token",3]]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_raw_fd","calloop::generic","",8,[[],["rawfd",6]]],[11,"as_str","calloop::signals","Returns name of signal.",9,[[]]],[11,"iterator","","",9,[[],["signaliterator",3]]]],"p":[[3,"Readiness"],[3,"Token"],[3,"InsertError"],[4,"Interest"],[4,"Mode"],[3,"Poll"],[4,"Event"],[3,"Generic"],[3,"Fd"],[4,"Signal"],[3,"siginfo"],[3,"LoopHandle"],[3,"EventLoop"],[3,"LoopSignal"],[3,"Sender"],[3,"SyncSender"],[3,"Ping"],[3,"Event"],[3,"Signals"],[3,"Timer"],[3,"TimerHandle"],[3,"Idle"],[8,"EventSource"],[3,"Source"],[3,"Channel"],[3,"PingSource"],[3,"Timeout"]]},\
"dbus":{"doc":"D-Bus bindings for Rust","i":[[3,"Error","dbus","D-Bus Error wrapper.",null,null],[0,"message","","Contains structs and traits closely related to D-Bus…",null,null],[3,"MatchRule","dbus::message","A \\\"match rule\\\", that can match Messages on its headers.",null,null],[12,"msg_type","","Match on message type (you typically want to do this)",0,null],[12,"sender","","Match on message sender",0,null],[12,"strict_sender","","If false (the default), match if sender could possibly…",0,null],[12,"path","","Match on message object path",0,null],[12,"path_is_namespace","","If true, will match all subpaths to the path as well as…",0,null],[12,"interface","","Match on message interface",0,null],[12,"member","","Match on message member (signal or method name)",0,null],[12,"eavesdrop","","If true, also receive messages not intended for us.…",0,null],[3,"Message","","A D-Bus message. A message contains headers - usually…",null,null],[4,"MessageType","","One of the four different message types.",null,null],[13,"MethodCall","","This is a method call D-Bus message",1,null],[13,"MethodReturn","","This is a method return Ok D-Bus message, used when the…",1,null],[13,"Error","","This is a method return with error D-Bus message, used…",1,null],[13,"Signal","","This is a signal, usually sent to whoever wants to listen",1,null],[11,"match_str","","Make a string which you can use in the call to \\\"add_match\\\".",0,[[],["string",3]]],[11,"matches","","Returns whether or not the message matches the rule.",0,[[["message",3]]]],[11,"new","","Create a new struct which matches every message.",0,[[]]],[11,"new_method_call","","Create a new struct which matches every incoming method…",0,[[]]],[11,"new_signal","","Create a new struct which matches signals on the interface…",0,[[["into",8],["into",8],["interface",3],["member",3]]]],[11,"static_clone","","Returns a clone with no borrowed references",0,[[],["matchrule",3]]],[8,"SignalArgs","","Helper methods for structs representing a Signal",null,null],[18,"NAME","","D-Bus name of signal",2,null],[18,"INTERFACE","","D-Bus name of interface this signal belongs to",2,null],[11,"to_emit_message","","Returns a message that emits the signal.",2,[[["path",3]],["message",3]]],[11,"from_message","","If the message is a signal of the correct type, return its…",2,[[["message",3]],["option",4]]],[11,"match_rule","","Returns a match rule matching this signal.",2,[[["path",3],["option",4],["option",4],["busname",3]],["matchrule",3]]],[11,"match_str","","Returns a string that can be sent to…",2,[[["option",4],["option",4],["busname",3],["path",3]],["string",3]]],[11,"new_method_call","","Creates a new method call message.",3,[[],[["string",3],["message",3],["result",4]]]],[11,"method_call","","Creates a new method call message.",3,[[["member",3],["busname",3],["path",3],["interface",3]],["message",3]]],[11,"call_with_args","","Creates a new method call message.",3,[[],["message",3]]],[11,"new_signal","","Creates a new signal message.",3,[[],[["string",3],["message",3],["result",4]]]],[11,"signal","","Creates a new signal message.",3,[[["member",3],["path",3],["interface",3]],["message",3]]],[11,"new_method_return","","Creates a method reply for this method call.",3,[[["message",3]],[["message",3],["option",4]]]],[11,"method_return","","Creates a method return (reply) for this method call.",3,[[],["message",3]]],[11,"return_with_args","","Creates a reply for a method call message.",3,[[["appendall",8]],["message",3]]],[11,"new_error","","The old way to create a new error reply",3,[[["message",3]],[["message",3],["option",4]]]],[11,"error","","Creates a new error reply",3,[[["errorname",3],["cstr",3]],["message",3]]],[11,"get_items","","Get the MessageItems that make up the message.",3,[[],[["vec",3],["messageitem",4]]]],[11,"get_serial","","Get the D-Bus serial of a message, if one was specified.",3,[[],["option",4]]],[11,"get_reply_serial","","Get the serial of the message this message is a reply to,…",3,[[],["option",4]]],[11,"get_no_reply","","Returns true if the message does not expect a reply.",3,[[]]],[11,"set_no_reply","","Set whether or not the message expects a reply.",3,[[]]],[11,"get_auto_start","","Returns true if the message can cause a service to be…",3,[[]]],[11,"set_auto_start","","Sets whether or not the message can cause a service to be…",3,[[]]],[11,"append_items","","Add one or more MessageItems to this Message.",3,[[]]],[11,"append1","","Appends one argument to this message. Use in builder…",3,[[["append",8]]]],[11,"append2","","Appends two arguments to this message. Use in builder…",3,[[["append",8]]]],[11,"append3","","Appends three arguments to this message. Use in builder…",3,[[["append",8]]]],[11,"append_ref","","Appends RefArgs to this message. Use in builder style: e g…",3,[[]]],[11,"append_all","","Appends arguments to a message.",3,[[["appendall",8]]]],[11,"get1","","Gets the first argument from the message, if that argument…",3,[[],[["get",8],["option",4]]]],[11,"get2","","Gets the first two arguments from the message, if those…",3,[[]]],[11,"get3","","Gets the first three arguments from the message, if those…",3,[[]]],[11,"get4","","Gets the first four arguments from the message, if those…",3,[[]]],[11,"get5","","Gets the first five arguments from the message, if those…",3,[[]]],[11,"read1","","Gets the first argument from the message, if that argument…",3,[[],[["result",4],["arg",8],["get",8],["typemismatcherror",3]]]],[11,"read2","","Gets the first two arguments from the message, if those…",3,[[],[["result",4],["typemismatcherror",3]]]],[11,"read3","","Gets the first three arguments from the message, if those…",3,[[],[["typemismatcherror",3],["result",4]]]],[11,"read4","","Gets the first four arguments from the message, if those…",3,[[],[["result",4],["typemismatcherror",3]]]],[11,"read5","","Gets the first five arguments from the message, if those…",3,[[],[["result",4],["typemismatcherror",3]]]],[11,"read_all","","Gets arguments from a message.",3,[[],[["readall",8],["error",3],["result",4]]]],[11,"iter_init","","Returns a struct for retreiving the arguments from a…",3,[[],["iter",3]]],[11,"msg_type","","Gets the MessageType of the Message.",3,[[],["messagetype",4]]],[11,"sender","","Gets the name of the connection that originated this…",3,[[],[["busname",3],["option",4]]]],[11,"headers","","Returns a tuple of (Message type, Path, Interface, Member)…",3,[[]]],[11,"path","","Gets the object path this Message is being sent to.",3,[[],[["option",4],["path",3]]]],[11,"destination","","Gets the destination this Message is being sent to.",3,[[],[["busname",3],["option",4]]]],[11,"set_destination","","Sets the destination of this Message",3,[[["busname",3],["option",4]]]],[11,"interface","","Gets the interface this Message is being sent to.",3,[[],[["interface",3],["option",4]]]],[11,"member","","Gets the interface member being called.",3,[[],[["option",4],["member",3]]]],[11,"as_result","","When the remote end returns an error, the message itself…",3,[[],[["error",3],["result",4],["message",3]]]],[11,"set_serial","","Sets serial number manually - should not be used in…",3,[[]]],[0,"ffidisp","dbus","A connection that uses FFI callbacks to dispatch messages.",null,null],[4,"RequestNameReply","dbus::ffidisp","",null,null],[13,"PrimaryOwner","","",4,null],[13,"InQueue","","",4,null],[13,"Exists","","",4,null],[13,"AlreadyOwner","","",4,null],[4,"ReleaseNameReply","","",null,null],[13,"Released","","",5,null],[13,"NonExistent","","",5,null],[13,"NotOwner","","",5,null],[4,"BusType","","System or Session bus",null,null],[13,"Session","","",6,null],[13,"System","","",6,null],[13,"Starter","","",6,null],[3,"Connection","","A D-Bus connection. Start here if you want to get on the…",null,null],[3,"ConnMsgs","","Iterator over incoming messages on a connection.",null,null],[12,"conn","","The connection or some reference to it.",7,null],[12,"timeout_ms","","How many ms dbus should block, waiting for incoming…",7,null],[3,"ConnPath","","A convenience struct that wraps connection, destination…",null,null],[12,"conn","","Some way to access the connection, e g a &Connection or Rc",8,null],[12,"dest","","Destination, i e what D-Bus service you\'re communicating…",8,null],[12,"path","","Object path on the destination",8,null],[12,"timeout","","Timeout in milliseconds for blocking method calls",8,null],[3,"Watch","","A file descriptor, and an indication whether it should be…",null,null],[3,"MsgHandlerResult","","The result from MsgHandler::handle.",null,null],[12,"handled","","Indicates that the message has been dealt with and should…",9,null],[12,"done","","Indicates that this MsgHandler no longer wants to receive…",9,null],[12,"reply","","Messages to send (e g, a reply to a method call)",9,null],[3,"MessageReply","","The struct returned from `Connection::send_and_reply`.",null,null],[4,"WatchEvent","","A file descriptor to watch for incoming events (for async…",null,null],[13,"Readable","","The fd is readable",10,null],[13,"Writable","","The fd is writable",10,null],[13,"Error","","An error occured on the fd",10,null],[13,"Hangup","","The fd received a hangup.",10,null],[4,"NameFlag","","Flags to use for Connection::register_name.",null,null],[13,"AllowReplacement","","Allow another service to become the primary owner if…",11,null],[13,"ReplaceExisting","","Request to replace the current primary owner",11,null],[13,"DoNotQueue","","If we can not become the primary owner do not place us in…",11,null],[4,"ConnectionItem","","When listening for incoming events on the D-Bus, this enum…",null,null],[13,"Nothing","","No event between now and timeout",12,null],[13,"MethodCall","","Incoming method call",12,null],[13,"Signal","","Incoming signal",12,null],[13,"MethodReturn","","Incoming method return, including method return errors…",12,null],[4,"MsgHandlerType","","Type of messages to be handled by a MsgHandler.",null,null],[13,"All","","Handle all messages",13,null],[13,"MsgType","","Handle only messages of a specific type",13,null],[13,"Reply","","Handle only method replies with this serial number",13,null],[0,"stdintf","","This module contains some standard interfaces and an easy…",null,null],[0,"org_freedesktop_dbus","dbus::ffidisp::stdintf","",null,null],[3,"PropertiesPropertiesChanged","dbus::ffidisp::stdintf::org_freedesktop_dbus","Struct to send/receive the PropertiesChanged signal of the…",null,null],[12,"interface_name","","",14,null],[12,"changed_properties","","",14,null],[12,"invalidated_properties","","",14,null],[3,"ObjectManagerInterfacesAdded","","Struct to send/receive the InterfacesAdded signal of the…",null,null],[12,"object","","",15,null],[12,"interfaces","","",15,null],[3,"ObjectManagerInterfacesRemoved","","Struct to send/receive the InterfacesRemoved signal of the…",null,null],[12,"object","","",16,null],[12,"interfaces","","",16,null],[8,"Introspectable","","Method of the org.freedesktop.DBus.Introspectable interface.",null,null],[16,"Err","","",17,null],[10,"introspect","","",17,[[],[["result",4],["string",3]]]],[8,"Properties","","Methods of the org.freedesktop.DBus.Properties interface.",null,null],[16,"Err","","",18,null],[10,"get","","",18,[[],[["result",4],["get",8]]]],[10,"get_all","","",18,[[],[["hashmap",3],["result",4]]]],[10,"set","","",18,[[["append",8],["arg",8]],["result",4]]],[8,"ObjectManager","","Method of the org.freedesktop.DBus.ObjectManager interface.",null,null],[16,"Err","","",19,null],[10,"get_managed_objects","","",19,[[],[["result",4],["hashmap",3]]]],[8,"Peer","","Methods of the org.freedesktop.DBus.Peer interface.",null,null],[16,"Err","","",20,null],[10,"ping","","",20,[[],["result",4]]],[10,"get_machine_id","","",20,[[],[["result",4],["string",3]]]],[11,"new_session","dbus::ffidisp","Creates a new connection to the session bus.",21,[[],[["error",3],["result",4],["connection",3]]]],[11,"new_system","","Creates a new connection to the system bus.",21,[[],[["error",3],["result",4],["connection",3]]]],[11,"get_private","","Creates a new D-Bus connection.",21,[[["bustype",4]],[["error",3],["result",4],["connection",3]]]],[11,"open_private","","Creates a new D-Bus connection to a remote address.",21,[[],[["error",3],["result",4],["connection",3]]]],[11,"register","","Registers a new D-Bus connection with the bus.",21,[[],[["error",3],["result",4]]]],[11,"is_connected","","Gets whether the connection is currently open.",21,[[]]],[11,"send_with_reply_and_block","","Sends a message over the D-Bus and waits for a reply. This…",21,[[["message",3]],[["error",3],["result",4],["message",3]]]],[11,"send","","Sends a message over the D-Bus without waiting. Useful for…",21,[[["message",3]],["result",4]]],[11,"send_with_reply","","Sends a message over the D-Bus, returning a MessageReply.",21,[[["fnonce",8],["message",3]],[["result",4],["messagereply",3]]]],[11,"add_handler","","Adds a message handler to the connection.",21,[[["msghandler",8]]]],[11,"extract_handler","","Removes a MsgHandler from the connection.",21,[[],[["box",3],["option",4]]]],[11,"unique_name","","Get the connection\'s unique name.",21,[[],["string",3]]],[11,"iter","","Check if there are new incoming events",21,[[],["connectionitems",3]]],[11,"incoming","","Check if there are new incoming events",21,[[],["connmsgs",3]]],[11,"register_object_path","","Register an object path.",21,[[],[["error",3],["result",4]]]],[11,"unregister_object_path","","Unregister an object path.",21,[[]]],[11,"list_registered_object_paths","","List registered object paths.",21,[[],[["vec",3],["string",3]]]],[11,"register_name","","Register a name.",21,[[],[["requestnamereply",4],["result",4],["error",3]]]],[11,"release_name","","Release a name.",21,[[],[["result",4],["releasenamereply",4],["error",3]]]],[11,"add_match","","Add a match rule to match messages on the message bus.",21,[[],[["error",3],["result",4]]]],[11,"remove_match","","Remove a match rule to match messages on the message bus.",21,[[],[["error",3],["result",4]]]],[11,"watch_fds","","Async I/O: Get an up-to-date list of file descriptors to…",21,[[],[["vec",3],["watch",3]]]],[11,"watch_handle","","Async I/O: Call this function whenever you detected an…",21,[[["rawfd",6],["c_uint",6]],["connectionitems",3]]],[11,"with_path","","Create a convenience struct for easier calling of many…",21,[[["busname",3],["into",8],["into",8],["path",3]],[["connpath",3],["connection",3]]]],[11,"replace_message_callback","","Replace the default message callback. Returns the…",21,[[["messagecallback",6],["option",4]],[["messagecallback",6],["option",4]]]],[11,"set_watch_callback","","Sets a callback to be called if a file descriptor status…",21,[[["box",3],["fn",8]]]],[11,"from_revents","","After running poll, this transforms the revents into a…",10,[[["c_short",6]],["c_uint",6]]],[11,"fd","","Get the RawFd this Watch is for",22,[[],["rawfd",6]]],[11,"readable","","Add POLLIN to events to listen for",22,[[]]],[11,"writable","","Add POLLOUT to events to listen for",22,[[]]],[11,"to_pollfd","","Returns the current watch as a libc::pollfd, to use with…",22,[[],["pollfd",3]]],[6,"MessageCallback","","The type of function to use for replacing the message…",null,null],[8,"MsgHandler","","A trait for handling incoming messages.",null,null],[10,"handler_type","","Type of messages for which the handler will be called",23,[[],["msghandlertype",4]]],[11,"handle_msg","","Function to be called if the message matches the…",23,[[["message",3]],[["option",4],["msghandlerresult",3]]]],[11,"method_call_with_args","","Make a D-Bus method call, where you can append arguments…",8,[[["fnonce",8],["interface",3],["member",3]],[["error",3],["result",4],["message",3]]]],[11,"signal_with_args","","Emit a D-Bus signal, where you can append arguments inside…",8,[[["fnonce",8],["interface",3],["member",3]],[["result",4],["error",3]]]],[11,"emit","","Emit a D-Bus signal, where the arguments are in a struct.",8,[[],[["result",4],["error",3]]]],[11,"method_call","","Make a method call using typed input and output arguments.",8,[[["into",8],["appendall",8],["into",8],["interface",3],["member",3]],[["readall",8],["error",3],["result",4]]]],[11,"value","","u32 value of flag.",11,[[]]],[11,"new_custom","dbus","Create a new custom D-Bus Error.",24,[[["errorname",3],["into",8]],["error",3]]],[11,"new_failed","","Create a new generic D-Bus Error with…",24,[[],["error",3]]],[11,"name","","Error name/type, e g \'org.freedesktop.DBus.Error.Failed\'",24,[[],["option",4]]],[11,"message","","Custom message, e g \'Could not find a matching object path\'",24,[[],["option",4]]],[0,"channel","","Connection base / building block.",null,null],[3,"Watch","dbus::channel","A file descriptor, and an indication whether it should be…",null,null],[12,"fd","","File descriptor",25,null],[12,"read","","True if wakeup should happen when the file descriptor is…",25,null],[12,"write","","True if wakeup should happen when the file descriptor is…",25,null],[3,"Channel","","Low-level connection - handles read/write to the socket",null,null],[3,"Token","","Token used to identify a callback in the MatchingReceiver…",null,null],[12,"0","","",26,null],[4,"BusType","","Which bus to connect to",null,null],[13,"Session","","The Session bus - local to every logged in session",27,null],[13,"System","","The system wide bus",27,null],[13,"Starter","","The bus that started us, if any",27,null],[5,"default_reply","","Handles what we need to be a good D-Bus citizen.",null,[[["message",3]],[["message",3],["option",4]]]],[8,"Sender","","Abstraction over different connections that send data",null,null],[10,"send","","Schedules a message for sending.",28,[[["message",3]],["result",4]]],[8,"MatchingReceiver","","Abstraction over different connections that receive data",null,null],[16,"F","","Type of callback",29,null],[10,"start_receive","","Add a callback to be called in case a message matches.",29,[[["matchrule",3]],["token",3]]],[10,"stop_receive","","Remove a previously added callback.",29,[[["token",3]],["option",4]]],[11,"get_private","","Creates a new D-Bus connection.",30,[[["bustype",4]],[["result",4],["channel",3],["error",3]]]],[11,"open_private","","Creates a new D-Bus connection to a remote address.",30,[[],[["result",4],["channel",3],["error",3]]]],[11,"register","","Registers a new D-Bus connection with the bus.",30,[[],[["error",3],["result",4]]]],[11,"is_connected","","Gets whether the connection is currently open.",30,[[]]],[11,"unique_name","","Get the connection\'s unique name.",30,[[],["option",4]]],[11,"send","","Puts a message into libdbus out queue, and tries to send it.",30,[[["message",3]],["result",4]]],[11,"send_with_reply_and_block","","Sends a message over the D-Bus and waits for a reply. This…",30,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[11,"flush","","Flush the queue of outgoing messages.",30,[[]]],[11,"read_write","","Read and write to the connection.",30,[[["option",4],["duration",3]],["result",4]]],[11,"has_messages_to_send","","Gets whether the output message buffer is non-empty",30,[[]]],[11,"pop_message","","Removes a message from the incoming queue, or returns None…",30,[[],[["message",3],["option",4]]]],[11,"blocking_pop_message","","Removes a message from the incoming queue, or waits until…",30,[[["duration",3]],[["result",4],["error",3],["option",4]]]],[11,"set_watch_enabled","","Enables watch tracking, a prequisite for calling watch.",30,[[]]],[11,"watch","","Gets the file descriptor to listen for read/write.",30,[[],["watch",3]]],[11,"watch_fds","","Get an up-to-date list of file descriptors to watch.",30,[[],[["result",4],["vec",3]]]],[0,"blocking","dbus","Connections and proxies that make blocking method calls.",null,null],[3,"LocalConnection","dbus::blocking","A connection to D-Bus, thread local + non-async version",null,null],[3,"Connection","","A connection to D-Bus, non-async version where callbacks…",null,null],[3,"SyncConnection","","A connection to D-Bus, Send + Sync + non-async version",null,null],[3,"Proxy","","A struct that wraps a connection, destination and path.",null,null],[12,"destination","","Destination, i e what D-Bus service you\'re communicating…",31,null],[12,"path","","Object path on the destination",31,null],[12,"timeout","","Timeout for method calls",31,null],[12,"connection","","Some way to send and/or receive messages, either blocking…",31,null],[0,"stdintf","","This module contains some standard interfaces and an easy…",null,null],[0,"org_freedesktop_dbus","dbus::blocking::stdintf","",null,null],[3,"PropertiesPropertiesChanged","dbus::blocking::stdintf::org_freedesktop_dbus","",null,null],[12,"interface_name","","",32,null],[12,"changed_properties","","",32,null],[12,"invalidated_properties","","",32,null],[3,"ObjectManagerInterfacesAdded","","",null,null],[12,"object","","",33,null],[12,"interfaces","","",33,null],[3,"ObjectManagerInterfacesRemoved","","",null,null],[12,"object","","",34,null],[12,"interfaces","","",34,null],[4,"RequestNameReply","","",null,null],[13,"PrimaryOwner","","",35,null],[13,"InQueue","","",35,null],[13,"Exists","","",35,null],[13,"AlreadyOwner","","",35,null],[4,"ReleaseNameReply","","",null,null],[13,"Released","","",36,null],[13,"NonExistent","","",36,null],[13,"NotOwner","","",36,null],[8,"Properties","","",null,null],[10,"get","","",37,[[],[["get",8],["result",4],["error",3]]]],[10,"get_all","","",37,[[],[["hashmap",3],["error",3],["result",4]]]],[10,"set","","",37,[[["append",8],["arg",8]],[["result",4],["error",3]]]],[8,"Introspectable","","",null,null],[10,"introspect","","",38,[[],[["error",3],["string",3],["result",4]]]],[8,"Peer","","",null,null],[10,"ping","","",39,[[],[["result",4],["error",3]]]],[10,"get_machine_id","","",39,[[],[["error",3],["string",3],["result",4]]]],[8,"ObjectManager","","",null,null],[10,"get_managed_objects","","",40,[[],[["hashmap",3],["error",3],["result",4]]]],[8,"BlockingSender","dbus::blocking","Abstraction over different connections",null,null],[10,"send_with_reply_and_block","","Sends a message over the D-Bus and blocks, waiting for a…",41,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[8,"MakeSignal","","Internal helper trait",null,null],[10,"make","","Internal helper trait",42,[[["string",3]]]],[11,"new_session","","Create a new connection to the session bus.",43,[[],[["result",4],["error",3]]]],[11,"new_system","","Create a new connection to the system-wide bus.",43,[[],[["result",4],["error",3]]]],[11,"unique_name","","Get the connection\'s unique name.",43,[[],["busname",3]]],[11,"with_proxy","","Create a convenience struct for easier calling of many…",43,[[["busname",3],["into",8],["duration",3],["into",8],["path",3]],["proxy",3]]],[11,"request_name","","Request a name on the D-Bus.",43,[[["into",8],["busname",3]],[["result",4],["requestnamereply",4],["error",3]]]],[11,"release_name","","Release a previously requested name on the D-Bus.",43,[[["into",8],["busname",3]],[["releasenamereply",4],["result",4],["error",3]]]],[11,"add_match","","Adds a new match to the connection, and sets up a callback…",43,[[["matchrule",3]],[["result",4],["token",3],["error",3]]]],[11,"add_match_no_cb","","Adds a new match to the connection, without setting up a…",43,[[],[["error",3],["result",4]]]],[11,"remove_match_no_cb","","Removes a match from the connection, without removing any…",43,[[],[["error",3],["result",4]]]],[11,"remove_match","","Removes a previously added match and callback from the…",43,[[["token",3]],[["error",3],["result",4]]]],[11,"process","","Tries to handle an incoming message if there is one. If…",43,[[["duration",3]],[["result",4],["error",3]]]],[11,"channel","","The channel for this connection",43,[[],["channel",3]]],[11,"new_session","","Create a new connection to the session bus.",44,[[],[["result",4],["error",3]]]],[11,"new_system","","Create a new connection to the system-wide bus.",44,[[],[["result",4],["error",3]]]],[11,"unique_name","","Get the connection\'s unique name.",44,[[],["busname",3]]],[11,"with_proxy","","Create a convenience struct for easier calling of many…",44,[[["busname",3],["into",8],["duration",3],["into",8],["path",3]],["proxy",3]]],[11,"request_name","","Request a name on the D-Bus.",44,[[["into",8],["busname",3]],[["result",4],["requestnamereply",4],["error",3]]]],[11,"release_name","","Release a previously requested name on the D-Bus.",44,[[["into",8],["busname",3]],[["releasenamereply",4],["result",4],["error",3]]]],[11,"add_match","","Adds a new match to the connection, and sets up a callback…",44,[[["matchrule",3]],[["result",4],["token",3],["error",3]]]],[11,"add_match_no_cb","","Adds a new match to the connection, without setting up a…",44,[[],[["error",3],["result",4]]]],[11,"remove_match_no_cb","","Removes a match from the connection, without removing any…",44,[[],[["error",3],["result",4]]]],[11,"remove_match","","Removes a previously added match and callback from the…",44,[[["token",3]],[["error",3],["result",4]]]],[11,"process","","Tries to handle an incoming message if there is one. If…",44,[[["duration",3]],[["result",4],["error",3]]]],[11,"channel","","The channel for this connection",44,[[],["channel",3]]],[11,"new_session","","Create a new connection to the session bus.",45,[[],[["result",4],["error",3]]]],[11,"new_system","","Create a new connection to the system-wide bus.",45,[[],[["result",4],["error",3]]]],[11,"unique_name","","Get the connection\'s unique name.",45,[[],["busname",3]]],[11,"with_proxy","","Create a convenience struct for easier calling of many…",45,[[["busname",3],["into",8],["duration",3],["into",8],["path",3]],["proxy",3]]],[11,"request_name","","Request a name on the D-Bus.",45,[[["into",8],["busname",3]],[["result",4],["requestnamereply",4],["error",3]]]],[11,"release_name","","Release a previously requested name on the D-Bus.",45,[[["into",8],["busname",3]],[["releasenamereply",4],["result",4],["error",3]]]],[11,"add_match","","Adds a new match to the connection, and sets up a callback…",45,[[["matchrule",3]],[["result",4],["token",3],["error",3]]]],[11,"add_match_no_cb","","Adds a new match to the connection, without setting up a…",45,[[],[["error",3],["result",4]]]],[11,"remove_match_no_cb","","Removes a match from the connection, without removing any…",45,[[],[["error",3],["result",4]]]],[11,"remove_match","","Removes a previously added match and callback from the…",45,[[["token",3]],[["error",3],["result",4]]]],[11,"process","","Tries to handle an incoming message if there is one. If…",45,[[["duration",3]],[["result",4],["error",3]]]],[11,"channel","","The channel for this connection",45,[[],["channel",3]]],[11,"new","","Creates a new proxy struct.",31,[[["busname",3],["into",8],["duration",3],["into",8],["path",3]]]],[11,"method_call","","Make a method call using typed input and output arguments,…",31,[[["into",8],["appendall",8],["into",8],["interface",3],["member",3]],[["readall",8],["error",3],["result",4]]]],[11,"match_start","","Starts matching incoming messages on this destination and…",31,[[["matchrule",3]],[["result",4],["token",3],["error",3]]]],[11,"match_stop","","Stops matching a signal added with match_start,…",31,[[["token",3]],[["error",3],["result",4]]]],[11,"match_signal","","Sets up an incoming signal match, that calls the supplied…",31,[[],[["result",4],["token",3],["error",3]]]],[0,"strings","dbus","This module contains strings with a specific format, such…",null,null],[3,"Signature","dbus::strings","A wrapper around a string that is guaranteed to be a valid…",null,null],[3,"Path","","A wrapper around a string that is guaranteed to be a valid…",null,null],[3,"Member","","A wrapper around a string that is guaranteed to be a valid…",null,null],[3,"Interface","","A wrapper around a string that is guaranteed to be a valid…",null,null],[3,"BusName","","A wrapper around a string that is guaranteed to be a valid…",null,null],[3,"ErrorName","","A wrapper around a string that is guaranteed to be a valid…",null,null],[11,"new","","Creates a new instance of this struct.",46,[[["vec",3],["into",8]],[["signature",3],["result",4],["string",3]]]],[11,"from_slice","","Creates a new instance of this struct. If you end it with…",46,[[],[["signature",3],["result",4],["string",3]]]],[11,"from_slice_unchecked","","This function creates a new instance of this struct,…",46,[[],["signature",3]]],[11,"as_cstr","","View this struct as a CStr.",46,[[],["cstr",3]]],[11,"into_static","","Makes sure this string does not contain borrows.",46,[[],["signature",3]]],[11,"into_cstring","","Converts this struct to a CString.",46,[[],["cstring",3]]],[11,"make","","Makes a D-Bus signature that corresponds to A.",46,[[],["signature",3]]],[11,"new","","Creates a new instance of this struct.",47,[[["vec",3],["into",8]],[["result",4],["string",3],["path",3]]]],[11,"from_slice","","Creates a new instance of this struct. If you end it with…",47,[[],[["result",4],["string",3],["path",3]]]],[11,"from_slice_unchecked","","This function creates a new instance of this struct,…",47,[[],["path",3]]],[11,"as_cstr","","View this struct as a CStr.",47,[[],["cstr",3]]],[11,"into_static","","Makes sure this string does not contain borrows.",47,[[],["path",3]]],[11,"into_cstring","","Converts this struct to a CString.",47,[[],["cstring",3]]],[11,"new","","Creates a new instance of this struct.",48,[[["vec",3],["into",8]],[["result",4],["string",3],["member",3]]]],[11,"from_slice","","Creates a new instance of this struct. If you end it with…",48,[[],[["result",4],["string",3],["member",3]]]],[11,"from_slice_unchecked","","This function creates a new instance of this struct,…",48,[[],["member",3]]],[11,"as_cstr","","View this struct as a CStr.",48,[[],["cstr",3]]],[11,"into_static","","Makes sure this string does not contain borrows.",48,[[],["member",3]]],[11,"into_cstring","","Converts this struct to a CString.",48,[[],["cstring",3]]],[11,"new","","Creates a new instance of this struct.",49,[[["vec",3],["into",8]],[["result",4],["string",3],["interface",3]]]],[11,"from_slice","","Creates a new instance of this struct. If you end it with…",49,[[],[["result",4],["string",3],["interface",3]]]],[11,"from_slice_unchecked","","This function creates a new instance of this struct,…",49,[[],["interface",3]]],[11,"as_cstr","","View this struct as a CStr.",49,[[],["cstr",3]]],[11,"into_static","","Makes sure this string does not contain borrows.",49,[[],["interface",3]]],[11,"into_cstring","","Converts this struct to a CString.",49,[[],["cstring",3]]],[11,"new","","Creates a new instance of this struct.",50,[[["vec",3],["into",8]],[["result",4],["busname",3],["string",3]]]],[11,"from_slice","","Creates a new instance of this struct. If you end it with…",50,[[],[["result",4],["busname",3],["string",3]]]],[11,"from_slice_unchecked","","This function creates a new instance of this struct,…",50,[[],["busname",3]]],[11,"as_cstr","","View this struct as a CStr.",50,[[],["cstr",3]]],[11,"into_static","","Makes sure this string does not contain borrows.",50,[[],["busname",3]]],[11,"into_cstring","","Converts this struct to a CString.",50,[[],["cstring",3]]],[11,"new","","Creates a new instance of this struct.",51,[[["vec",3],["into",8]],[["result",4],["errorname",3],["string",3]]]],[11,"from_slice","","Creates a new instance of this struct. If you end it with…",51,[[],[["result",4],["errorname",3],["string",3]]]],[11,"from_slice_unchecked","","This function creates a new instance of this struct,…",51,[[],["errorname",3]]],[11,"as_cstr","","View this struct as a CStr.",51,[[],["cstr",3]]],[11,"into_static","","Makes sure this string does not contain borrows.",51,[[],["errorname",3]]],[11,"into_cstring","","Converts this struct to a CString.",51,[[],["cstring",3]]],[0,"arg","dbus","Types and traits for easily getting a message\'s arguments,…",null,null],[3,"Array","dbus::arg","Represents a D-Bus Array. Maximum flexibility (wraps an…",null,null],[3,"Dict","","Append a D-Bus dict type (i e, an array of dict entries).",null,null],[3,"Variant","","A simple wrapper to specify a D-Bus variant.",null,null],[12,"0","","",52,null],[3,"OwnedFd","","An RAII wrapper around Fd to ensure that file descriptor…",null,null],[3,"IterAppend","","Helper struct for appending one or more arguments to a…",null,null],[3,"Iter","","Helper struct for retrieve one or more arguments from a…",null,null],[3,"TypeMismatchError","","Error struct to indicate a D-Bus argument type mismatch.",null,null],[4,"ArgType","","Type of Argument",null,null],[13,"Array","","Dicts are Arrays of dict entries, so Dict types will have…",53,null],[13,"Variant","","Variant",53,null],[13,"Boolean","","bool",53,null],[13,"Invalid","","Invalid arg type - this is also the ArgType returned when…",53,null],[13,"String","","String",53,null],[13,"DictEntry","","Dict entry; you\'ll usually not encounter this one as dicts…",53,null],[13,"Byte","","u8",53,null],[13,"Int16","","i16",53,null],[13,"UInt16","","u16",53,null],[13,"Int32","","i32",53,null],[13,"UInt32","","u32",53,null],[13,"Int64","","i64",53,null],[13,"UInt64","","u64",53,null],[13,"Double","","f64",53,null],[13,"UnixFd","","OwnedFd",53,null],[13,"Struct","","Use tuples or Vec<Box> to read/write structs.",53,null],[13,"ObjectPath","","Path",53,null],[13,"Signature","","Signature",53,null],[5,"cast","","Cast a RefArg as a specific type (shortcut for any +…",null,[[["refarg",8]],["option",4]]],[5,"cast_mut","","Cast a RefArg as a specific type (shortcut for any_mut +…",null,[[["refarg",8]],["option",4]]],[11,"new_refarg","","Creates a new refarg from an Iter. Mainly for internal use.",52,[[["iter",3]],["option",4]]],[11,"new","","Creates a new Dict from an iterator.",54,[[["intoiterator",8]],["dict",3]]],[11,"new","","Creates a new Array from an iterator.",55,[[["intoiterator",8]],["array",3]]],[0,"messageitem","","MessageItem - old, enum design that is used as parameters…",null,null],[3,"MessageItemArray","dbus::arg::messageitem","An array of MessageItem where every MessageItem is of the…",null,null],[3,"MessageItemDict","","An array of MessageItem where every MessageItem is of the…",null,null],[3,"Props","","Client side properties - get and set properties on a…",null,null],[3,"PropHandler","","Wrapper around Props that keeps a map of fetched properties.",null,null],[4,"ArrayError","","Errors that can happen when creating a MessageItem::Array.",null,null],[13,"EmptyArray","","The array is empty.",56,null],[13,"DifferentElementTypes","","The array is composed of different element types.",56,null],[13,"InvalidSignature","","The supplied signature is not a valid array signature",56,null],[4,"MessageItem","","MessageItem - used as parameters and return values from…",null,null],[13,"Array","","A D-Bus array requires all elements to be of the same…",57,null],[13,"Struct","","A D-Bus struct allows for values of different types.",57,null],[13,"Variant","","A D-Bus variant is a wrapper around another `MessageItem`,…",57,null],[13,"Dict","","A D-Bus dictionary. All keys and values are required to be…",57,null],[13,"ObjectPath","","A D-Bus objectpath requires its content to be a valid…",57,null],[13,"Signature","","A D-Bus signature requires its content to be a valid type…",57,null],[13,"Str","","A D-Bus String is zero terminated, so no \\\\0 s in the…",57,null],[13,"Bool","","A D-Bus boolean type.",57,null],[13,"Byte","","A D-Bus unsigned 8 bit type.",57,null],[13,"Int16","","A D-Bus signed 16 bit type.",57,null],[13,"Int32","","A D-Bus signed 32 bit type.",57,null],[13,"Int64","","A D-Bus signed 64 bit type.",57,null],[13,"UInt16","","A D-Bus unsigned 16 bit type.",57,null],[13,"UInt32","","A D-Bus unsigned 32 bit type.",57,null],[13,"UInt64","","A D-Bus unsigned 64 bit type.",57,null],[13,"Double","","A D-Bus IEEE-754 double-precision floating point type.",57,null],[13,"UnixFd","","D-Bus allows for sending file descriptors, which can be…",57,null],[11,"new","","Creates a new array where every element has the supplied…",58,[[["vec",3],["messageitem",4],["signature",3]],[["arrayerror",4],["messageitemarray",3],["result",4]]]],[11,"signature","","Signature of array (full array signature)",58,[[],["signature",3]]],[11,"into_vec","","Consumes the MessageItemArray in order to allow you to…",58,[[],[["vec",3],["messageitem",4]]]],[11,"new","","Creates a new dict where every key and value elements have…",59,[[["signature",3],["vec",3]],[["arrayerror",4],["messageitemdict",3],["result",4]]]],[11,"signature","","Signature of array (full array signature)",59,[[],["signature",3]]],[11,"into_vec","","Consumes the MessageItemDict in order to allow you to…",59,[[],["vec",3]]],[11,"signature","","Get the D-Bus Signature for this MessageItem.",57,[[],["signature",3]]],[11,"arg_type","","Get the arg type of this MessageItem.",57,[[],["argtype",4]]],[11,"from_dict","","Creates a (String, Variant) dictionary from an iterator…",57,[[["iterator",8]],[["result",4],["messageitem",4]]]],[11,"new_array","","Creates an MessageItem::Array from a list of MessageItems.",57,[[["vec",3],["messageitem",4]],[["result",4],["messageitem",4],["arrayerror",4]]]],[11,"new_dict","","Creates an MessageItem::Dict from a list of MessageItem…",57,[[["vec",3]],[["result",4],["messageitem",4],["arrayerror",4]]]],[11,"inner","","Get the inner value of a `MessageItem`",57,[[],[["messageitem",4],["result",4],["tryfrom",8]]]],[11,"peel","","Get the underlying `MessageItem` of a `MessageItem::Variant`",57,[[]]],[11,"new","","Create a new Props.",60,[[["connection",3]],["props",3]]],[11,"get","","Get a single property\'s value.",60,[[],[["error",3],["result",4],["messageitem",4]]]],[11,"set","","Set a single property\'s value.",60,[[["messageitem",4]],[["error",3],["result",4]]]],[11,"get_all","","Get a map of all the properties\' names and their values.",60,[[],[["btreemap",3],["error",3],["result",4]]]],[11,"new","","Create a new PropHandler from a Props.",61,[[["props",3]],["prophandler",3]]],[11,"get_all","","Get a map of all the properties\' names and their values.",61,[[],[["error",3],["result",4]]]],[11,"map_mut","","Get a mutable reference to the PropHandler\'s fetched…",61,[[],["btreemap",3]]],[11,"map","","Get a reference to the PropHandler\'s fetched properties.",61,[[],["btreemap",3]]],[11,"get","","Get a single property\'s value.",61,[[],[["messageitem",4],["error",3],["result",4]]]],[11,"set","","Set a single property\'s value.",61,[[["messageitem",4]],[["error",3],["result",4]]]],[8,"Arg","dbus::arg","Types that can represent a D-Bus message argument…",null,null],[18,"ARG_TYPE","","The corresponding D-Bus argument type code.",62,null],[10,"signature","","The corresponding D-Bus type signature for this type.",62,[[],["signature",3]]],[8,"FixedArray","","If a type implements this trait, it means the size and…",null,null],[8,"Get","","Types that can be retrieved from a message as arguments…",null,null],[10,"get","","Performs the get operation.",63,[[["iter",3]],["option",4]]],[8,"DictKey","","Types that can be used as keys in a dict type implement…",null,null],[8,"Append","","Types that can be appended to a message as arguments…",null,null],[11,"append","","Performs the append operation by consuming self.",64,[[["iterappend",3]]]],[10,"append_by_ref","","Performs the append operation by borrowing self.",64,[[["iterappend",3]]]],[8,"RefArg","","Object safe version of Arg + Append + Get.",null,null],[10,"arg_type","","The corresponding D-Bus argument type code.",65,[[],["argtype",4]]],[10,"signature","","The corresponding D-Bus type signature for this type.",65,[[],["signature",3]]],[10,"append","","Performs the append operation.",65,[[["iterappend",3]]]],[10,"as_any","","Transforms this argument to Any (which can be downcasted…",65,[[],["any",8]]],[10,"as_any_mut","","Transforms this argument to Any (which can be downcasted…",65,[[],["any",8]]],[11,"as_i64","","Try to read the argument as an i64.",65,[[],["option",4]]],[11,"as_u64","","Try to read the argument as an u64.",65,[[],["option",4]]],[11,"as_f64","","Try to read the argument as an f64.",65,[[],["option",4]]],[11,"as_str","","Try to read the argument as a str.",65,[[],["option",4]]],[11,"as_iter","","Try to read the argument as an iterator.",65,[[],[["option",4],["box",3]]]],[11,"as_static_inner","","Try to read the inner of an argument, as another argument,…",65,[[],[["refarg",8],["option",4]]]],[11,"box_clone","","Deep clone of the RefArg, causing the result to be \'static.",65,[[],[["refarg",8],["box",3]]]],[8,"AppendAll","","Helper trait to append many arguments to a message.",null,null],[10,"append","","Performs the append operation by borrowing self.",66,[[["iterappend",3]]]],[8,"ReadAll","","Helper trait to read all arguments from a message.",null,null],[10,"read","","Performs the read operation.",67,[[["iter",3]],[["result",4],["typemismatcherror",3]]]],[8,"ArgAll","","Helper trait to introspect many arguments.",null,null],[16,"strs","","A tuple of &static str. Used for introspection.",68,null],[10,"strs_sig","","Enumerates all arguments with their signatures…",68,[[["fnmut",8]]]],[11,"new","","Create a new OwnedFd from a RawFd.",69,[[["rawfd",6]],["ownedfd",3]]],[11,"into_fd","","Convert an OwnedFD back into a RawFd.",69,[[],["rawfd",6]]],[11,"new","","Creates a new IterAppend struct.",70,[[["message",3]],["iterappend",3]]],[11,"append","","Appends the argument.",70,[[["append",8]]]],[11,"append_variant","","Low-level function to append a variant.",70,[[["fnonce",8],["signature",3]]]],[11,"append_array","","Low-level function to append an array.",70,[[["fnonce",8],["signature",3]]]],[11,"append_struct","","Low-level function to append a struct.",70,[[["fnonce",8]]]],[11,"append_dict_entry","","Low-level function to append a dict entry.",70,[[["fnonce",8]]]],[11,"append_dict","","Low-level function to append a dict.",70,[[["fnonce",8],["signature",3]]]],[11,"new","","Creates a new struct for iterating over the arguments of a…",71,[[["message",3]],["iter",3]]],[11,"get","","Returns the current argument, if T is the argument type.…",71,[[],[["get",8],["option",4]]]],[11,"get_refarg","","Returns the current argument as a trait object.",71,[[],[["box",3],["option",4]]]],[11,"signature","","Returns the type signature for the current argument.",71,[[],["signature",3]]],[11,"arg_type","","The raw arg_type for the current item.",71,[[],["argtype",4]]],[11,"next","","Returns false if there are no more items.",71,[[]]],[11,"read","","Wrapper around `get` and `next`. Calls `get`, and then…",71,[[],[["result",4],["arg",8],["get",8],["typemismatcherror",3]]]],[11,"recurse","","If the current argument is a container of the specified…",71,[[["argtype",4]],[["option",4],["iter",3]]]],[11,"as_str","","A str corresponding to the name of a Rust type.",53,[[]]],[11,"all","","Returns a Vec of all possible argtypes.",53,[[],["vec",3]]],[11,"from_i32","","Converts an i32 to an ArgType (or an error).",53,[[],[["result",4],["argtype",4],["string",3]]]],[11,"expected_arg_type","","The ArgType we were trying to read, but failed",72,[[],["argtype",4]]],[11,"found_arg_type","","The ArgType we should have been trying to read, if we…",72,[[],["argtype",4]]],[11,"pos","","At what argument was the error found?",72,[[]]],[0,"tree","dbus","Contains functionality for dispatching methods on a D-Bus…",null,null],[3,"Argument","dbus::tree","A D-Bus Argument.",null,null],[3,"Iter","","Iterator struct, returned from iterator methods on Tree,…",null,null],[3,"MethodErr","","A D-Bus Method Error, containing an error name and a…",null,null],[3,"MethodInfo","","Contains information about the incoming method call.",null,null],[12,"msg","","Message",73,null],[12,"method","","The method to be called",73,null],[12,"iface","","Interface",73,null],[12,"path","","Object path",73,null],[12,"tree","","Tree",73,null],[3,"PropInfo","","Contains information about the incoming property get/set…",null,null],[12,"msg","","Message",74,null],[12,"method","","Get, Set or GetAll",74,null],[12,"prop","","The property to be set/get",74,null],[12,"iface","","The interface the property belongs to",74,null],[12,"path","","Object path",74,null],[12,"tree","","Tree",74,null],[3,"MTFn","","An abstract type to represent Fn functions.",null,null],[3,"MTFnMut","","An abstract type to represent FnMut functions.",null,null],[3,"MTSync","","An abstract type to represent Fn + Send + Sync functions…",null,null],[3,"Method","","A D-Bus Method.",null,null],[3,"Signal","","A D-Bus Signal.",null,null],[3,"Property","","A D-Bus Property.",null,null],[3,"Interface","","Represents a D-Bus interface.",null,null],[3,"ObjectPath","","A D-Bus Object Path.",null,null],[3,"Tree","","A collection of object paths.",null,null],[3,"TreeServer","","An iterator adapter that handles incoming method calls.",null,null],[3,"Factory","","The factory is used to create object paths, interfaces,…",null,null],[4,"Access","","The possible access characteristics a Property can have.",null,null],[13,"Read","","The Property can only be read (Get).",75,null],[13,"ReadWrite","","The Property can be read or written.",75,null],[13,"Write","","The Property can only be written (Set).",75,null],[4,"EmitsChangedSignal","","Enumerates the different signaling behaviors a Property…",null,null],[13,"True","","The Property emits a signal that includes the new value.",76,null],[13,"Invalidates","","The Property emits a signal that does not include the new…",76,null],[13,"Const","","The Property cannot be changed.",76,null],[13,"False","","The Property does not emit a signal when changed.",76,null],[11,"new","","Create a new Argument.",77,[[["string",3],["option",4],["signature",3]],["argument",3]]],[11,"name","","Descriptive name (if any).",77,[[],["option",4]]],[11,"signature","","Type signature of argument.",77,[[],["signature",3]]],[11,"invalid_arg","","Create an Invalid Args MethodErr.",78,[[],["methoderr",3]]],[11,"no_arg","","Create a MethodErr that there are not enough arguments…",78,[[],["methoderr",3]]],[11,"failed","","Create a MethodErr that the method failed in the way…",78,[[],["methoderr",3]]],[11,"no_path","","Create a MethodErr that the Object path was unknown.",78,[[],["methoderr",3]]],[11,"no_interface","","Create a MethodErr that the Interface was unknown.",78,[[],["methoderr",3]]],[11,"no_method","","Create a MethodErr that the Method was unknown.",78,[[],["methoderr",3]]],[11,"no_property","","Create a MethodErr that the Property was unknown.",78,[[],["methoderr",3]]],[11,"ro_property","","Create a MethodErr that the Property was read-only.",78,[[],["methoderr",3]]],[11,"errorname","","Error name accessor",78,[[],["errorname",3]]],[11,"description","","Description accessor",78,[[]]],[11,"to_message","","Creates an error reply from a method call message.",78,[[["message",3]],["message",3]]],[11,"to_prop_info","","MethodInfo to PropInfo conversion",73,[[["property",3],["interface",3]],["propinfo",3]]],[11,"to_method_info","","PropInfo to MethodInfo conversion.",74,[[],["methodinfo",3]]],[11,"in_arg","","Builder method that adds an \\\"in\\\" Argument to this Method.",79,[[["argument",3],["into",8]]]],[11,"inarg","","Builder method that adds an \\\"in\\\" Argument to this Method.",79,[[["into",8],["string",3]]]],[11,"in_args","","Builder method that adds multiple \\\"in\\\" Arguments to this…",79,[[["intoiterator",8]]]],[11,"out_arg","","Builder method that adds an \\\"out\\\" Argument to this Method.",79,[[["argument",3],["into",8]]]],[11,"outarg","","Builder method that adds an \\\"out\\\" Argument to this Method.",79,[[["into",8],["string",3]]]],[11,"out_args","","Builder method that adds multiple \\\"out\\\" Arguments to this…",79,[[["intoiterator",8]]]],[11,"annotate","","Builder method that adds an annotation to the method.",79,[[["into",8],["string",3]]]],[11,"deprecated","","Builder method that adds an annotation that this entity is…",79,[[]]],[11,"call","","Call the Method",79,[[["methodinfo",3]],["methodresult",6]]],[11,"get_name","","Get method name",79,[[],["member",3]]],[11,"get_data","","Get associated data",79,[[]]],[11,"arg","","Builder method that adds an Argument to the Signal.",80,[[["argument",3],["into",8]]]],[11,"sarg","","Builder method that adds an Argument to the Signal.",80,[[["into",8],["string",3]]]],[11,"args","","Builder method that adds multiple Arguments to the Signal.",80,[[["intoiterator",8]]]],[11,"annotate","","Add an annotation to this Signal.",80,[[["into",8],["string",3]]]],[11,"deprecated","","Add an annotation that this entity is deprecated.",80,[[]]],[11,"get_name","","Get signal name",80,[[],["member",3]]],[11,"get_data","","Get associated data",80,[[]]],[11,"emit","","Returns a message which emits the signal when sent.",80,[[["ifacename",3],["path",3]],["message",3]]],[11,"msg","","Returns a message which emits the signal when sent.",80,[[["ifacename",3],["path",3]],["message",3]]],[11,"emits_changed","","Builder method that allows setting the Property\'s signal…",81,[[["emitschangedsignal",4]]]],[11,"auto_emit_on_set","","Builder method that determines whether or not setting this…",81,[[]]],[11,"access","","Builder method that allows setting the Property as…",81,[[["access",4]]]],[11,"annotate","","Builder method that adds an annotation to the method.",81,[[["into",8],["string",3]]]],[11,"deprecated","","Builder method that adds an annotation that this entity is…",81,[[]]],[11,"get_name","","Get property name",81,[[]]],[11,"get_data","","Get associated data",81,[[]]],[11,"can_get","","Returns Ok if the property is gettable",81,[[],[["methoderr",3],["result",4]]]],[11,"get_as_variant","","Calls the on_get function and appends the result as a…",81,[[["propinfo",3],["iterappend",3]],[["methoderr",3],["result",4]]]],[11,"can_set","","Returns Ok if the property is settable.",81,[[["option",4],["iter",3]],[["methoderr",3],["result",4]]]],[11,"set_as_variant","","Calls the on_set function, which reads from i.",81,[[["iter",3],["propinfo",3]],[["result",4],["methoderr",3],["option",4]]]],[11,"add_propertieschanged","","Adds this property to a list of PropertiesChanged signals.",81,[[["ifacename",3],["vec",3],["fnonce",8]]]],[11,"on_get","","Sets the callback for getting a property.",81,[[],[["property",3],["mtfn",3]]]],[11,"on_set","","Sets the callback for setting a property.",81,[[],[["property",3],["mtfn",3]]]],[11,"on_get","","Sets the callback for getting a property.",81,[[],[["property",3],["mtfnmut",3]]]],[11,"on_set","","Sets the callback for setting a property.",81,[[],[["property",3],["mtfnmut",3]]]],[11,"on_get","","Sets the callback for getting a property.",81,[[],[["mtsync",3],["property",3]]]],[11,"on_set","","Sets the callback for setting a property.",81,[[],[["mtsync",3],["property",3]]]],[11,"default_get","","Adds a \\\"standard\\\" get handler.",81,[[]]],[11,"default_get_refarg","","Adds a \\\"standard\\\" get handler (for RefArgs).",81,[[]]],[11,"add_m","","Builder function that adds a method to the interface.",82,[[["arc",3],["into",8]]]],[11,"add_s","","Builder function that adds a signal to the interface.",82,[[["into",8],["arc",3]]]],[11,"add_p","","Builder function that adds a property to the interface.",82,[[["into",8],["arc",3]]]],[11,"annotate","","Builder function that adds an annotation to this interface.",82,[[["into",8],["string",3]]]],[11,"deprecated","","Builder function that adds an annotation that this entity…",82,[[]]],[11,"get_name","","Get interface name",82,[[],["ifacename",3]]],[11,"get_data","","Get associated data",82,[[]]],[11,"iter_m","","Iterates over methods implemented by this interface.",82,[[],[["iter",3],["method",3]]]],[11,"iter_s","","Iterates over signals implemented by this interface.",82,[[],[["iter",3],["signal",3]]]],[11,"iter_p","","Iterates over properties implemented by this interface.",82,[[],[["property",3],["iter",3]]]],[11,"get_name","","Get property name",83,[[],["path",3]]],[11,"get_data","","Get associated data",83,[[]]],[11,"iter","","Iterates over interfaces implemented by this object path.",83,[[],[["interface",3],["iter",3]]]],[11,"introspectable","","Adds introspection support for this object path.",83,[[]]],[11,"add","","Builder function that adds a interface to the object path.",83,[[["into",8],["arc",3]]]],[11,"default_interface","","Builder function that sets what interface should be…",83,[[["ifacename",3]]]],[11,"object_manager","","Adds ObjectManager support for this object path.",83,[[]]],[11,"add","","Builder function that adds an object path to this tree.",84,[[["arc",3],["into",8]]]],[11,"get","","Get a reference to an object path from the tree.",84,[[["path",3]],[["option",4],["arc",3]]]],[11,"iter","","Iterates over object paths in this tree.",84,[[],[["iter",3],["objectpath",3]]]],[11,"insert","","Non-builder function that adds an object path to this tree.",84,[[["arc",3],["into",8]]]],[11,"remove","","Remove a object path from the Tree. Returns the object…",84,[[["path",3]],[["arc",3],["option",4]]]],[11,"set_registered","","Registers or unregisters all object paths in the tree to a…",84,[[["connection",3]],[["error",3],["result",4]]]],[11,"run","","This method takes an `ConnectionItem` iterator (you get it…",84,[[["iterator",8],["connection",3]],[["iterator",8],["treeserver",3]]]],[11,"handle","","Handles a message.",84,[[["message",3]],[["vec",3],["option",4]]]],[11,"process_channel","","Tries to handle an incoming message from the provided…",84,[[["channel",3],["duration",3]],[["result",4],["error",3]]]],[11,"get_data","","Get associated data",84,[[]]],[11,"start_receive_sync","","Connects a SyncConnection with a Tree so that incoming…",84,[[]]],[11,"start_receive_send","","Connects a Connection with a Tree so that incoming method…",84,[[]]],[11,"start_receive","","Connects a LocalConnection with a Tree so that incoming…",84,[[]]],[11,"new_fn","","Creates a new factory for single-thread use.",85,[[],[["mtfn",3],["datatype",8],["factory",3]]]],[11,"new_fnmut","","Creates a new factory for single-thread use, where…",85,[[],[["mtfnmut",3],["datatype",8],["factory",3]]]],[11,"new_sync","","Creates a new factory for multi-thread use.",85,[[],[["factory",3],["mtsync",3],["datatype",8]]]],[11,"method","","Creates a new method for single-thread use.",85,[[],[["mtfn",3],["method",3]]]],[11,"method","","Creates a new method for single-thread use.",85,[[],[["mtfnmut",3],["method",3]]]],[11,"method","","Creates a new method for multi-thread use.",85,[[],[["mtsync",3],["method",3]]]],[11,"property","","Creates a new property.",85,[[["into",8],["string",3]],["property",3]]],[11,"signal","","Creates a new signal.",85,[[["member",3],["into",8]],["signal",3]]],[11,"interface","","Creates a new interface.",85,[[["ifacename",3],["into",8]],["interface",3]]],[11,"object_path","","Creates a new object path.",85,[[["path",3],["into",8]],["objectpath",3]]],[11,"tree","","Creates a new tree.",85,[[],["tree",3]]],[11,"method_sync","","Creates a new method - usually you\'ll use \\\"method\\\" instead.",85,[[],["method",3]]],[6,"MethodResult","","Result containing the Messages returned from the Method,…",null,null],[8,"MethodType","","A helper trait used internally to make the tree generic…",null,null],[16,"Method","","For internal use.",86,null],[16,"GetProp","","For internal use.",86,null],[16,"SetProp","","For internal use.",86,null],[10,"call_getprop","","For internal use.",86,[[["iterappend",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[10,"call_setprop","","For internal use.",86,[[["iter",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[10,"call_method","","For internal use.",86,[[["methodinfo",3]],["methodresult",6]]],[10,"make_getprop","","For internal use.",86,[[],["box",3]]],[10,"make_method","","For internal use.",86,[[],["box",3]]],[8,"DataType","","Associated data for different objects in a tree.",null,null],[16,"Tree","","Type of associated data on the Tree.",87,null],[16,"ObjectPath","","Type of associated data on every ObjectPath.",87,null],[16,"Property","","Type of associated data on every Property.",87,null],[16,"Interface","","Type of associated data on every Interface.",87,null],[16,"Method","","Type of associated data on every Method.",87,null],[16,"Signal","","Type of associated data on every Signal.",87,null],[11,"from","dbus","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_string","","",24,[[],["string",3]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","dbus::message","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","dbus::ffidisp","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","dbus::ffidisp::stdintf::org_freedesktop_dbus","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","dbus::channel","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","dbus::blocking","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","dbus::blocking::stdintf::org_freedesktop_dbus","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","dbus::strings","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"to_string","","",46,[[],["string",3]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"to_string","","",48,[[],["string",3]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"to_string","","",51,[[],["string",3]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","dbus::arg","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"into_iter","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"to_string","","",72,[[],["string",3]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","dbus::arg::messageitem","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","dbus::tree","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"into_iter","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"into_iter","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"clone","dbus::ffidisp","",4,[[],["dbusrequestnamereply",4]]],[11,"clone","","",5,[[],["dbusreleasenamereply",4]]],[11,"clone","","",6,[[],["dbusbustype",4]]],[11,"fmt","","",4,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",5,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","","",5,[[["dbusreleasenamereply",4]]]],[11,"eq","","",6,[[["dbusbustype",4]]]],[11,"eq","","",4,[[["dbusrequestnamereply",4]]]],[11,"introspect","","",8,[[],[["result",4],["string",3]]]],[11,"introspect","dbus::tree","",73,[[],[["result",4],["string",3]]]],[11,"get","dbus::ffidisp","",8,[[],[["result",4],["get",8]]]],[11,"get_all","","",8,[[],[["hashmap",3],["result",4]]]],[11,"set","","",8,[[["append",8],["arg",8]],["result",4]]],[11,"get_managed_objects","","",8,[[],[["result",4],["hashmap",3]]]],[11,"ping","","",8,[[],["result",4]]],[11,"get_machine_id","","",8,[[],[["result",4],["string",3]]]],[11,"handler_type","","",88,[[],["msghandlertype",4]]],[11,"handle_msg","","",88,[[["message",3]],[["option",4],["msghandlerresult",3]]]],[11,"handle_msg","dbus::tree","",84,[[["message",3]],[["option",4],["msghandlerresult",3]]]],[11,"handler_type","","",84,[[],["msghandlertype",4]]],[11,"send","dbus::ffidisp","",21,[[["message",3]],["result",4]]],[11,"send","dbus::channel","",30,[[["message",3]],["result",4]]],[11,"send","dbus::blocking","",43,[[["message",3]],["result",4]]],[11,"send","","",44,[[["message",3]],["result",4]]],[11,"send","","",45,[[["message",3]],["result",4]]],[11,"start_receive","","",43,[[["matchrule",3]],["token",3]]],[11,"stop_receive","","",43,[[["token",3]],["option",4]]],[11,"start_receive","","",44,[[["matchrule",3]],["token",3]]],[11,"stop_receive","","",44,[[["token",3]],["option",4]]],[11,"start_receive","","",45,[[["matchrule",3]],["token",3]]],[11,"stop_receive","","",45,[[["token",3]],["option",4]]],[11,"get","","",31,[[],[["get",8],["result",4],["error",3]]]],[11,"get_all","","",31,[[],[["hashmap",3],["error",3],["result",4]]]],[11,"set","","",31,[[["append",8],["arg",8]],[["result",4],["error",3]]]],[11,"introspect","","",31,[[],[["error",3],["string",3],["result",4]]]],[11,"ping","","",31,[[],[["result",4],["error",3]]]],[11,"get_machine_id","","",31,[[],[["error",3],["string",3],["result",4]]]],[11,"get_managed_objects","","",31,[[],[["hashmap",3],["error",3],["result",4]]]],[11,"send_with_reply_and_block","dbus::ffidisp","",21,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[11,"send_with_reply_and_block","dbus::blocking","",43,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[11,"send_with_reply_and_block","","",44,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[11,"send_with_reply_and_block","","",45,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[11,"send_with_reply_and_block","dbus::channel","",30,[[["message",3],["duration",3]],[["error",3],["result",4],["message",3]]]],[11,"signature","dbus::arg","",69,[[],["signature",3]]],[11,"signature","dbus::strings","",49,[[],["signature",3]]],[11,"signature","","",51,[[],["signature",3]]],[11,"signature","","",48,[[],["signature",3]]],[11,"signature","","",47,[[],["signature",3]]],[11,"signature","","",46,[[],["signature",3]]],[11,"signature","dbus::arg","",52,[[],["signature",3]]],[11,"signature","","",54,[[],["signature",3]]],[11,"signature","","",55,[[],["signature",3]]],[11,"append_by_ref","","",69,[[["iterappend",3]]]],[11,"append_by_ref","dbus::strings","",49,[[["iterappend",3]]]],[11,"append_by_ref","","",51,[[["iterappend",3]]]],[11,"append_by_ref","","",48,[[["iterappend",3]]]],[11,"append_by_ref","","",47,[[["iterappend",3]]]],[11,"append_by_ref","","",46,[[["iterappend",3]]]],[11,"append_by_ref","dbus::arg","",52,[[["iterappend",3]]]],[11,"append_by_ref","","",52,[[["iterappend",3]]]],[11,"append_by_ref","","",54,[[["iterappend",3]]]],[11,"append_by_ref","","",55,[[["iterappend",3]]]],[11,"append_by_ref","dbus::arg::messageitem","",58,[[["iterappend",3]]]],[11,"append_by_ref","","",59,[[["iterappend",3]]]],[11,"append_by_ref","","",57,[[["iterappend",3]]]],[11,"append_by_ref","dbus::arg","",52,[[["iterappend",3]]]],[11,"append","dbus::ffidisp::stdintf::org_freedesktop_dbus","",14,[[["iterappend",3]]]],[11,"append","","",15,[[["iterappend",3]]]],[11,"append","","",16,[[["iterappend",3]]]],[11,"append","dbus::blocking::stdintf::org_freedesktop_dbus","",32,[[["iterappend",3]]]],[11,"append","","",33,[[["iterappend",3]]]],[11,"append","","",34,[[["iterappend",3]]]],[11,"get","dbus::arg","",69,[[["iter",3]],["option",4]]],[11,"get","dbus::strings","",49,[[["iter",3]],[["interface",3],["option",4]]]],[11,"get","","",51,[[["iter",3]],[["option",4],["errorname",3]]]],[11,"get","","",48,[[["iter",3]],[["member",3],["option",4]]]],[11,"get","","",47,[[["iter",3]],[["path",3],["option",4]]]],[11,"get","","",46,[[["iter",3]],[["option",4],["signature",3]]]],[11,"get","dbus::arg","",52,[[["iter",3]],[["option",4],["variant",3]]]],[11,"get","","",52,[[["iter",3]],[["option",4],["variant",3]]]],[11,"get","","",54,[[["iter",3]],["option",4]]],[11,"get","","",55,[[["iter",3]],[["array",3],["option",4]]]],[11,"get","dbus::arg::messageitem","",57,[[["iter",3]],["option",4]]],[11,"read","dbus::ffidisp::stdintf::org_freedesktop_dbus","",14,[[["iter",3]],[["typemismatcherror",3],["result",4]]]],[11,"read","","",15,[[["iter",3]],[["typemismatcherror",3],["result",4]]]],[11,"read","","",16,[[["iter",3]],[["typemismatcherror",3],["result",4]]]],[11,"read","dbus::blocking::stdintf::org_freedesktop_dbus","",32,[[["iter",3]],[["typemismatcherror",3],["result",4]]]],[11,"read","","",33,[[["iter",3]],[["typemismatcherror",3],["result",4]]]],[11,"read","","",34,[[["iter",3]],[["typemismatcherror",3],["result",4]]]],[11,"arg_type","dbus::arg","",69,[[],["argtype",4]]],[11,"signature","","",69,[[],["signature",3]]],[11,"append","","",69,[[["iterappend",3]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"as_i64","","",69,[[],["option",4]]],[11,"as_u64","","",69,[[],["option",4]]],[11,"as_f64","","",69,[[],["option",4]]],[11,"as_str","","",69,[[],["option",4]]],[11,"box_clone","","",69,[[],[["refarg",8],["box",3]]]],[11,"arg_type","dbus::strings","",49,[[],["argtype",4]]],[11,"signature","","",49,[[],["signature",3]]],[11,"append","","",49,[[["iterappend",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"as_str","","",49,[[],["option",4]]],[11,"box_clone","","",49,[[],[["refarg",8],["box",3]]]],[11,"arg_type","","",51,[[],["argtype",4]]],[11,"signature","","",51,[[],["signature",3]]],[11,"append","","",51,[[["iterappend",3]]]],[11,"as_any","","",51,[[],["any",8]]],[11,"as_any_mut","","",51,[[],["any",8]]],[11,"as_str","","",51,[[],["option",4]]],[11,"box_clone","","",51,[[],[["refarg",8],["box",3]]]],[11,"arg_type","","",48,[[],["argtype",4]]],[11,"signature","","",48,[[],["signature",3]]],[11,"append","","",48,[[["iterappend",3]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"as_str","","",48,[[],["option",4]]],[11,"box_clone","","",48,[[],[["refarg",8],["box",3]]]],[11,"arg_type","","",47,[[],["argtype",4]]],[11,"signature","","",47,[[],["signature",3]]],[11,"append","","",47,[[["iterappend",3]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"as_str","","",47,[[],["option",4]]],[11,"box_clone","","",47,[[],[["refarg",8],["box",3]]]],[11,"arg_type","","",46,[[],["argtype",4]]],[11,"signature","","",46,[[],["signature",3]]],[11,"append","","",46,[[["iterappend",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"as_str","","",46,[[],["option",4]]],[11,"box_clone","","",46,[[],[["refarg",8],["box",3]]]],[11,"arg_type","dbus::arg","",52,[[],["argtype",4]]],[11,"signature","","",52,[[],["signature",3]]],[11,"append","","",52,[[["iterappend",3]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"as_i64","","",52,[[],["option",4]]],[11,"as_u64","","",52,[[],["option",4]]],[11,"as_f64","","",52,[[],["option",4]]],[11,"as_str","","",52,[[],["option",4]]],[11,"as_iter","","",52,[[],[["option",4],["box",3]]]],[11,"box_clone","","",52,[[],[["refarg",8],["box",3]]]],[11,"as_static_inner","","",52,[[],[["refarg",8],["option",4]]]],[11,"arg_type","","",55,[[],["argtype",4]]],[11,"signature","","",55,[[],["signature",3]]],[11,"append","","",55,[[["iterappend",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"box_clone","","",55,[[],[["refarg",8],["box",3]]]],[11,"arg_type","dbus::arg::messageitem","",57,[[],["argtype",4]]],[11,"signature","","",57,[[],["signature",3]]],[11,"append","","",57,[[["iterappend",3]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"box_clone","","",57,[[],[["box",3],["refarg",8]]]],[11,"call_getprop","dbus::tree","",90,[[["iterappend",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[11,"call_setprop","","",90,[[["iter",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[11,"call_method","","",90,[[["methodinfo",3]],["methodresult",6]]],[11,"make_getprop","","",90,[[],["box",3]]],[11,"make_method","","",90,[[],["box",3]]],[11,"call_getprop","","",91,[[["iterappend",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[11,"call_setprop","","",91,[[["iter",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[11,"call_method","","",91,[[["methodinfo",3]],["methodresult",6]]],[11,"make_getprop","","",91,[[],["box",3]]],[11,"make_method","","",91,[[],["box",3]]],[11,"call_getprop","","",92,[[["iterappend",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[11,"call_setprop","","",92,[[["iter",3],["propinfo",3]],[["methoderr",3],["result",4]]]],[11,"call_method","","",92,[[["methodinfo",3]],["methodresult",6]]],[11,"make_getprop","","",92,[[],["box",3]]],[11,"make_method","","",92,[[],["box",3]]],[11,"drop","dbus::message","",3,[[]]],[11,"drop","dbus::ffidisp","",21,[[]]],[11,"drop","dbus","",24,[[]]],[11,"drop","dbus::channel","",30,[[]]],[11,"drop","dbus::arg","",69,[[]]],[11,"as_ref","dbus::strings","",46,[[],["cstr",3]]],[11,"as_ref","","",47,[[],["cstr",3]]],[11,"as_ref","","",48,[[],["cstr",3]]],[11,"as_ref","","",49,[[],["cstr",3]]],[11,"as_ref","","",50,[[],["cstr",3]]],[11,"as_ref","","",51,[[],["cstr",3]]],[11,"from","dbus::ffidisp","",12,[[["message",3]]]],[11,"from","dbus","",24,[[["typemismatcherror",3]],["error",3]]],[11,"from","","",24,[[["methoderr",3]],["error",3]]],[11,"from","dbus::blocking","",43,[[["channel",3]],["connection",3]]],[11,"from","","",44,[[["channel",3]],["localconnection",3]]],[11,"from","","",45,[[["channel",3]],["syncconnection",3]]],[11,"from","dbus::strings","",46,[[["string",3]],["signature",3]]],[11,"from","","",46,[[["string",3]],["signature",3]]],[11,"from","","",46,[[],["signature",3]]],[11,"from","","",46,[[["cstr",3]],["signature",3]]],[11,"from","","",46,[[["cow",4]],["signature",3]]],[11,"from","","",46,[[["signature",3]],["signature",3]]],[11,"from","","",47,[[["string",3]],["path",3]]],[11,"from","","",47,[[["string",3]],["path",3]]],[11,"from","","",47,[[],["path",3]]],[11,"from","","",47,[[["cstr",3]],["path",3]]],[11,"from","","",47,[[["cow",4]],["path",3]]],[11,"from","","",47,[[["path",3]],["path",3]]],[11,"from","","",48,[[["string",3]],["member",3]]],[11,"from","","",48,[[["string",3]],["member",3]]],[11,"from","","",48,[[],["member",3]]],[11,"from","","",48,[[["cstr",3]],["member",3]]],[11,"from","","",48,[[["cow",4]],["member",3]]],[11,"from","","",48,[[["member",3]],["member",3]]],[11,"from","","",49,[[["string",3]],["interface",3]]],[11,"from","","",49,[[["string",3]],["interface",3]]],[11,"from","","",49,[[],["interface",3]]],[11,"from","","",49,[[["cstr",3]],["interface",3]]],[11,"from","","",49,[[["cow",4]],["interface",3]]],[11,"from","","",49,[[["interface",3]],["interface",3]]],[11,"from","","",50,[[["string",3]],["busname",3]]],[11,"from","","",50,[[["string",3]],["busname",3]]],[11,"from","","",50,[[],["busname",3]]],[11,"from","","",50,[[["cstr",3]],["busname",3]]],[11,"from","","",50,[[["cow",4]],["busname",3]]],[11,"from","","",50,[[["busname",3]],["busname",3]]],[11,"from","","",51,[[["string",3]],["errorname",3]]],[11,"from","","",51,[[["string",3]],["errorname",3]]],[11,"from","","",51,[[],["errorname",3]]],[11,"from","","",51,[[["cstr",3]],["errorname",3]]],[11,"from","","",51,[[["cow",4]],["errorname",3]]],[11,"from","","",51,[[["errorname",3]],["errorname",3]]],[11,"from","dbus::arg::messageitem","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[],["messageitem",4]]],[11,"from","","",57,[[["string",3]],["messageitem",4]]],[11,"from","","",57,[[["path",3]],["messageitem",4]]],[11,"from","","",57,[[["signature",3]],["messageitem",4]]],[11,"from","","",57,[[["ownedfd",3]],["messageitem",4]]],[11,"from","","",57,[[["box",3],["messageitem",4]],["messageitem",4]]],[11,"from","dbus::tree","",77,[[["signature",3]],["argument",3]]],[11,"from","","",77,[[],["argument",3]]],[11,"from","","",77,[[],["argument",3]]],[11,"from","","",78,[[["typemismatcherror",3]],["methoderr",3]]],[11,"from","","",78,[[],["methoderr",3]]],[11,"from","","",78,[[["dbuserror",3]],["methoderr",3]]],[11,"from","","",85,[[["ifacecache",3],["arc",3]]]],[11,"next","dbus::ffidisp","",7,[[],["option",4]]],[11,"next","dbus::arg","",54,[[],["option",4]]],[11,"next","","",55,[[],["option",4]]],[11,"next","","",71,[[],["option",4]]],[11,"next","dbus::tree","",89,[[],["option",4]]],[11,"next","","",93,[[],[["connectionitem",4],["option",4]]]],[11,"clone","dbus::message","",1,[[],["messagetype",4]]],[11,"clone","","",0,[[],["matchrule",3]]],[11,"clone","dbus::ffidisp","",7,[[],["connmsgs",3]]],[11,"clone","","",8,[[],["connpath",3]]],[11,"clone","","",10,[[],["watchevent",4]]],[11,"clone","","",22,[[],["watch",3]]],[11,"clone","","",11,[[],["nameflag",4]]],[11,"clone","","",13,[[],["msghandlertype",4]]],[11,"clone","dbus::channel","",27,[[],["bustype",4]]],[11,"clone","","",25,[[],["watch",3]]],[11,"clone","","",26,[[],["token",3]]],[11,"clone","dbus::blocking::stdintf::org_freedesktop_dbus","",35,[[],["requestnamereply",4]]],[11,"clone","","",36,[[],["releasenamereply",4]]],[11,"clone","dbus::blocking","",31,[[],["proxy",3]]],[11,"clone","dbus::strings","",46,[[],["signature",3]]],[11,"clone","","",47,[[],["path",3]]],[11,"clone","","",48,[[],["member",3]]],[11,"clone","","",49,[[],["interface",3]]],[11,"clone","","",50,[[],["busname",3]]],[11,"clone","","",51,[[],["errorname",3]]],[11,"clone","dbus::arg","",52,[[],["variant",3]]],[11,"clone","","",54,[[],["dict",3]]],[11,"clone","","",55,[[],["array",3]]],[11,"clone","dbus::arg::messageitem","",56,[[],["arrayerror",4]]],[11,"clone","","",58,[[],["messageitemarray",3]]],[11,"clone","","",59,[[],["messageitemdict",3]]],[11,"clone","","",57,[[],["messageitem",4]]],[11,"clone","dbus::arg","",69,[[],["ownedfd",3]]],[11,"clone","","",70,[[],["iterappend",3]]],[11,"clone","","",71,[[],["iter",3]]],[11,"clone","","",53,[[],["argtype",4]]],[11,"clone","","",72,[[],["typemismatcherror",3]]],[11,"clone","dbus::tree","",89,[[],["iter",3]]],[11,"clone","","",77,[[],["argument",3]]],[11,"clone","","",78,[[],["methoderr",3]]],[11,"clone","","",90,[[],["mtfn",3]]],[11,"clone","","",91,[[],["mtfnmut",3]]],[11,"clone","","",92,[[],["mtsync",3]]],[11,"clone","","",73,[[],["methodinfo",3]]],[11,"clone","","",74,[[],["propinfo",3]]],[11,"clone","","",76,[[],["emitschangedsignal",4]]],[11,"clone","","",75,[[],["access",4]]],[11,"clone","","",85,[[],["factory",3]]],[11,"default","dbus::message","",0,[[],["matchrule",3]]],[11,"default","dbus::ffidisp::stdintf::org_freedesktop_dbus","",14,[[],["propertiespropertieschanged",3]]],[11,"default","","",15,[[],["objectmanagerinterfacesadded",3]]],[11,"default","","",16,[[],["objectmanagerinterfacesremoved",3]]],[11,"default","dbus::ffidisp","",9,[[],["msghandlerresult",3]]],[11,"default","dbus::strings","",47,[[],["path",3]]],[11,"default","dbus::arg","",52,[[]]],[11,"default","dbus::tree","",90,[[],["mtfn",3]]],[11,"default","","",91,[[],["mtfnmut",3]]],[11,"default","","",92,[[],["mtsync",3]]],[11,"default","","",84,[[],["tree",3]]],[11,"cmp","dbus::message","",1,[[["messagetype",4]],["ordering",4]]],[11,"cmp","dbus::ffidisp","",22,[[["watch",3]],["ordering",4]]],[11,"cmp","","",11,[[["nameflag",4]],["ordering",4]]],[11,"cmp","dbus::channel","",27,[[["bustype",4]],["ordering",4]]],[11,"cmp","","",25,[[["watch",3]],["ordering",4]]],[11,"cmp","","",26,[[["token",3]],["ordering",4]]],[11,"cmp","dbus::strings","",46,[[["signature",3]],["ordering",4]]],[11,"cmp","","",47,[[["path",3]],["ordering",4]]],[11,"cmp","","",48,[[["member",3]],["ordering",4]]],[11,"cmp","","",49,[[["interface",3]],["ordering",4]]],[11,"cmp","","",50,[[["busname",3]],["ordering",4]]],[11,"cmp","","",51,[[["errorname",3]],["ordering",4]]],[11,"cmp","dbus::arg","",52,[[["variant",3]],["ordering",4]]],[11,"cmp","","",53,[[["argtype",4]],["ordering",4]]],[11,"cmp","dbus::tree","",77,[[["argument",3]],["ordering",4]]],[11,"cmp","","",78,[[["methoderr",3]],["ordering",4]]],[11,"cmp","","",76,[[["emitschangedsignal",4]],["ordering",4]]],[11,"cmp","","",75,[[["access",4]],["ordering",4]]],[11,"eq","dbus::message","",1,[[["messagetype",4]]]],[11,"eq","dbus::ffidisp","",10,[[["watchevent",4]]]],[11,"eq","","",22,[[["watch",3]]]],[11,"ne","","",22,[[["watch",3]]]],[11,"eq","","",11,[[["nameflag",4]]]],[11,"eq","dbus::channel","",27,[[["bustype",4]]]],[11,"eq","","",25,[[["watch",3]]]],[11,"ne","","",25,[[["watch",3]]]],[11,"eq","","",26,[[["token",3]]]],[11,"ne","","",26,[[["token",3]]]],[11,"eq","dbus::blocking::stdintf::org_freedesktop_dbus","",35,[[["requestnamereply",4]]]],[11,"eq","","",36,[[["releasenamereply",4]]]],[11,"eq","dbus::strings","",46,[[["signature",3]]]],[11,"ne","","",46,[[["signature",3]]]],[11,"eq","","",47,[[["path",3]]]],[11,"ne","","",47,[[["path",3]]]],[11,"eq","","",48,[[["member",3]]]],[11,"ne","","",48,[[["member",3]]]],[11,"eq","","",49,[[["interface",3]]]],[11,"ne","","",49,[[["interface",3]]]],[11,"eq","","",50,[[["busname",3]]]],[11,"ne","","",50,[[["busname",3]]]],[11,"eq","","",51,[[["errorname",3]]]],[11,"ne","","",51,[[["errorname",3]]]],[11,"eq","dbus::arg","",52,[[["variant",3]]]],[11,"ne","","",52,[[["variant",3]]]],[11,"eq","dbus::arg::messageitem","",58,[[["messageitemarray",3]]]],[11,"ne","","",58,[[["messageitemarray",3]]]],[11,"eq","","",59,[[["messageitemdict",3]]]],[11,"ne","","",59,[[["messageitemdict",3]]]],[11,"eq","","",57,[[["messageitem",4]]]],[11,"ne","","",57,[[["messageitem",4]]]],[11,"eq","dbus::arg","",69,[[["ownedfd",3]]]],[11,"ne","","",69,[[["ownedfd",3]]]],[11,"eq","","",53,[[["argtype",4]]]],[11,"eq","","",72,[[["typemismatcherror",3]]]],[11,"ne","","",72,[[["typemismatcherror",3]]]],[11,"eq","dbus::tree","",77,[[["argument",3]]]],[11,"ne","","",77,[[["argument",3]]]],[11,"eq","","",78,[[["methoderr",3]]]],[11,"ne","","",78,[[["methoderr",3]]]],[11,"eq","","",76,[[["emitschangedsignal",4]]]],[11,"eq","","",75,[[["access",4]]]],[11,"partial_cmp","dbus::message","",1,[[["messagetype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","dbus::ffidisp","",22,[[["watch",3]],[["option",4],["ordering",4]]]],[11,"lt","","",22,[[["watch",3]]]],[11,"le","","",22,[[["watch",3]]]],[11,"gt","","",22,[[["watch",3]]]],[11,"ge","","",22,[[["watch",3]]]],[11,"partial_cmp","","",11,[[["nameflag",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","dbus::channel","",27,[[["bustype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",25,[[["watch",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["watch",3]]]],[11,"le","","",25,[[["watch",3]]]],[11,"gt","","",25,[[["watch",3]]]],[11,"ge","","",25,[[["watch",3]]]],[11,"partial_cmp","","",26,[[["token",3]],[["option",4],["ordering",4]]]],[11,"lt","","",26,[[["token",3]]]],[11,"le","","",26,[[["token",3]]]],[11,"gt","","",26,[[["token",3]]]],[11,"ge","","",26,[[["token",3]]]],[11,"partial_cmp","dbus::strings","",46,[[["signature",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["signature",3]]]],[11,"le","","",46,[[["signature",3]]]],[11,"gt","","",46,[[["signature",3]]]],[11,"ge","","",46,[[["signature",3]]]],[11,"partial_cmp","","",47,[[["path",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["path",3]]]],[11,"le","","",47,[[["path",3]]]],[11,"gt","","",47,[[["path",3]]]],[11,"ge","","",47,[[["path",3]]]],[11,"partial_cmp","","",48,[[["member",3]],[["option",4],["ordering",4]]]],[11,"lt","","",48,[[["member",3]]]],[11,"le","","",48,[[["member",3]]]],[11,"gt","","",48,[[["member",3]]]],[11,"ge","","",48,[[["member",3]]]],[11,"partial_cmp","","",49,[[["interface",3]],[["option",4],["ordering",4]]]],[11,"lt","","",49,[[["interface",3]]]],[11,"le","","",49,[[["interface",3]]]],[11,"gt","","",49,[[["interface",3]]]],[11,"ge","","",49,[[["interface",3]]]],[11,"partial_cmp","","",50,[[["busname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",50,[[["busname",3]]]],[11,"le","","",50,[[["busname",3]]]],[11,"gt","","",50,[[["busname",3]]]],[11,"ge","","",50,[[["busname",3]]]],[11,"partial_cmp","","",51,[[["errorname",3]],[["option",4],["ordering",4]]]],[11,"lt","","",51,[[["errorname",3]]]],[11,"le","","",51,[[["errorname",3]]]],[11,"gt","","",51,[[["errorname",3]]]],[11,"ge","","",51,[[["errorname",3]]]],[11,"partial_cmp","dbus::arg","",52,[[["variant",3]],[["option",4],["ordering",4]]]],[11,"lt","","",52,[[["variant",3]]]],[11,"le","","",52,[[["variant",3]]]],[11,"gt","","",52,[[["variant",3]]]],[11,"ge","","",52,[[["variant",3]]]],[11,"partial_cmp","dbus::arg::messageitem","",58,[[["messageitemarray",3]],[["option",4],["ordering",4]]]],[11,"lt","","",58,[[["messageitemarray",3]]]],[11,"le","","",58,[[["messageitemarray",3]]]],[11,"gt","","",58,[[["messageitemarray",3]]]],[11,"ge","","",58,[[["messageitemarray",3]]]],[11,"partial_cmp","","",59,[[["messageitemdict",3]],[["option",4],["ordering",4]]]],[11,"lt","","",59,[[["messageitemdict",3]]]],[11,"le","","",59,[[["messageitemdict",3]]]],[11,"gt","","",59,[[["messageitemdict",3]]]],[11,"ge","","",59,[[["messageitemdict",3]]]],[11,"partial_cmp","","",57,[[["messageitem",4]],[["option",4],["ordering",4]]]],[11,"lt","","",57,[[["messageitem",4]]]],[11,"le","","",57,[[["messageitem",4]]]],[11,"gt","","",57,[[["messageitem",4]]]],[11,"ge","","",57,[[["messageitem",4]]]],[11,"partial_cmp","dbus::arg","",69,[[["ownedfd",3]],[["option",4],["ordering",4]]]],[11,"lt","","",69,[[["ownedfd",3]]]],[11,"le","","",69,[[["ownedfd",3]]]],[11,"gt","","",69,[[["ownedfd",3]]]],[11,"ge","","",69,[[["ownedfd",3]]]],[11,"partial_cmp","","",53,[[["argtype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","dbus::tree","",77,[[["argument",3]],[["option",4],["ordering",4]]]],[11,"lt","","",77,[[["argument",3]]]],[11,"le","","",77,[[["argument",3]]]],[11,"gt","","",77,[[["argument",3]]]],[11,"ge","","",77,[[["argument",3]]]],[11,"partial_cmp","","",78,[[["methoderr",3]],[["option",4],["ordering",4]]]],[11,"lt","","",78,[[["methoderr",3]]]],[11,"le","","",78,[[["methoderr",3]]]],[11,"gt","","",78,[[["methoderr",3]]]],[11,"ge","","",78,[[["methoderr",3]]]],[11,"partial_cmp","","",76,[[["emitschangedsignal",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",75,[[["access",4]],[["option",4],["ordering",4]]]],[11,"deref","dbus::strings","",46,[[]]],[11,"deref","","",47,[[]]],[11,"deref","","",48,[[]]],[11,"deref","","",49,[[]]],[11,"deref","","",50,[[]]],[11,"deref","","",51,[[]]],[11,"deref","dbus::arg::messageitem","",58,[[]]],[11,"deref","","",59,[[]]],[11,"fmt","dbus::message","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dbus::ffidisp::stdintf::org_freedesktop_dbus","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::ffidisp","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","dbus","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dbus::channel","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::blocking::stdintf::org_freedesktop_dbus","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::blocking","",31,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::strings","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::arg","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::arg::messageitem","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::arg","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",72,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::tree","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",73,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","dbus","",24,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","dbus::strings","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","dbus::arg","",72,[[["formatter",3]],["result",6]]],[11,"hash","dbus::message","",1,[[]]],[11,"hash","dbus::channel","",27,[[]]],[11,"hash","","",26,[[]]],[11,"hash","dbus::strings","",46,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","dbus::arg","",52,[[]]],[11,"hash","","",53,[[]]],[11,"description","dbus","",24,[[]]],[11,"description","dbus::arg","",72,[[]]],[11,"cause","","",72,[[],[["error",8],["option",4]]]],[11,"as_raw_fd","dbus::ffidisp","",22,[[],["rawfd",6]]],[11,"as_raw_fd","dbus::arg","",69,[[],["rawfd",6]]],[11,"from_raw_fd","","",69,[[["rawfd",6]]]],[11,"into_raw_fd","","",69,[[],["rawfd",6]]],[18,"NAME","dbus::message","D-Bus name of signal",2,null],[18,"INTERFACE","","D-Bus name of interface this signal belongs to",2,null],[11,"to_emit_message","","Returns a message that emits the signal.",2,[[["path",3]],["message",3]]],[11,"from_message","","If the message is a signal of the correct type, return its…",2,[[["message",3]],["option",4]]],[11,"match_rule","","Returns a match rule matching this signal.",2,[[["path",3],["option",4],["option",4],["busname",3]],["matchrule",3]]],[11,"match_str","","Returns a string that can be sent to…",2,[[["option",4],["option",4],["busname",3],["path",3]],["string",3]]],[18,"ARG_TYPE","dbus::arg","The corresponding D-Bus argument type code.",62,null],[11,"append","","Performs the append operation by consuming self.",64,[[["iterappend",3]]]],[11,"as_i64","","Try to read the argument as an i64.",65,[[],["option",4]]],[11,"as_u64","","Try to read the argument as an u64.",65,[[],["option",4]]],[11,"as_f64","","Try to read the argument as an f64.",65,[[],["option",4]]],[11,"as_str","","Try to read the argument as a str.",65,[[],["option",4]]],[11,"as_iter","","Try to read the argument as an iterator.",65,[[],[["option",4],["box",3]]]],[11,"as_static_inner","","Try to read the inner of an argument, as another argument,…",65,[[],[["refarg",8],["option",4]]]],[11,"box_clone","","Deep clone of the RefArg, causing the result to be \'static.",65,[[],[["refarg",8],["box",3]]]]],"p":[[3,"MatchRule"],[4,"MessageType"],[8,"SignalArgs"],[3,"Message"],[4,"RequestNameReply"],[4,"ReleaseNameReply"],[4,"BusType"],[3,"ConnMsgs"],[3,"ConnPath"],[3,"MsgHandlerResult"],[4,"WatchEvent"],[4,"NameFlag"],[4,"ConnectionItem"],[4,"MsgHandlerType"],[3,"PropertiesPropertiesChanged"],[3,"ObjectManagerInterfacesAdded"],[3,"ObjectManagerInterfacesRemoved"],[8,"Introspectable"],[8,"Properties"],[8,"ObjectManager"],[8,"Peer"],[3,"Connection"],[3,"Watch"],[8,"MsgHandler"],[3,"Error"],[3,"Watch"],[3,"Token"],[4,"BusType"],[8,"Sender"],[8,"MatchingReceiver"],[3,"Channel"],[3,"Proxy"],[3,"PropertiesPropertiesChanged"],[3,"ObjectManagerInterfacesAdded"],[3,"ObjectManagerInterfacesRemoved"],[4,"RequestNameReply"],[4,"ReleaseNameReply"],[8,"Properties"],[8,"Introspectable"],[8,"Peer"],[8,"ObjectManager"],[8,"BlockingSender"],[8,"MakeSignal"],[3,"Connection"],[3,"LocalConnection"],[3,"SyncConnection"],[3,"Signature"],[3,"Path"],[3,"Member"],[3,"Interface"],[3,"BusName"],[3,"ErrorName"],[3,"Variant"],[4,"ArgType"],[3,"Dict"],[3,"Array"],[4,"ArrayError"],[4,"MessageItem"],[3,"MessageItemArray"],[3,"MessageItemDict"],[3,"Props"],[3,"PropHandler"],[8,"Arg"],[8,"Get"],[8,"Append"],[8,"RefArg"],[8,"AppendAll"],[8,"ReadAll"],[8,"ArgAll"],[3,"OwnedFd"],[3,"IterAppend"],[3,"Iter"],[3,"TypeMismatchError"],[3,"MethodInfo"],[3,"PropInfo"],[4,"Access"],[4,"EmitsChangedSignal"],[3,"Argument"],[3,"MethodErr"],[3,"Method"],[3,"Signal"],[3,"Property"],[3,"Interface"],[3,"ObjectPath"],[3,"Tree"],[3,"Factory"],[8,"MethodType"],[8,"DataType"],[3,"MessageReply"],[3,"Iter"],[3,"MTFn"],[3,"MTFnMut"],[3,"MTSync"],[3,"TreeServer"]]},\
"drm":{"doc":"A safe interface to the Direct Rendering Manager subsystem…","i":[[4,"SystemError","drm","A general system error that can be returned by any DRM…",null,null],[13,"InvalidFileDescriptor","","A command was attempted using an invalid file descriptor.",0,null],[13,"MemoryFault","","Provided memory area is inaccessible.",0,null],[13,"InvalidArgument","","One or more arguments used are invalid.",0,null],[13,"InvalidFileType","","A command was attempted using a non-DRM device.",0,null],[13,"PermissionDenied","","Permission denied.",0,null],[13,"Unknown","","Unknown system error.",0,null],[12,"errno","drm::SystemError","Unknown nix::Errno returned by the system call.",1,null],[3,"AuthToken","drm","An authentication token, unique to the file descriptor of…",null,null],[3,"BusID","","Bus ID of a device.",null,null],[3,"Driver","","Driver version of a device.",null,null],[4,"DriverCapability","","Used to check which capabilities your graphics driver has.",null,null],[13,"DumbBuffer","","DumbBuffer support for scanout",2,null],[13,"VBlankHighCRTC","","Unknown",2,null],[13,"DumbPreferredDepth","","Preferred depth to use for dumb buffers",2,null],[13,"DumbPreferShadow","","Unknown",2,null],[13,"Prime","","PRIME handles are support",2,null],[13,"MonotonicTimestamp","","Unknown",2,null],[13,"ASyncPageFlip","","Asynchronous page flipping support",2,null],[13,"CursorWidth","","Width of cursor buffers",2,null],[13,"CursorHeight","","Height of cursor buffers",2,null],[13,"AddFB2Modifiers","","You can create framebuffers with modifiers",2,null],[13,"PageFlipTarget","","Unknown",2,null],[13,"CRTCInVBlankEvent","","Uses the CRTC\'s ID in vblank events",2,null],[13,"SyncObj","","SyncObj support",2,null],[4,"ClientCapability","","Used to enable/disable capabilities for the process.",null,null],[13,"Stereo3D","","The driver provides 3D screen control",3,null],[13,"UniversalPlanes","","The driver provides more plane types for modesetting",3,null],[13,"Atomic","","The driver provides atomic modesetting",3,null],[0,"control","","Modesetting operations that the DRM subsystem exposes.",null,null],[3,"Events","drm::control","Iterator over `Event`s of a device. Create via…",null,null],[3,"VblankEvent","","Vblank event",null,null],[12,"frame","","sequence of the frame",4,null],[12,"duration","","duration between events",4,null],[12,"crtc","","crtc that did throw the event",4,null],[3,"PageFlipEvent","","Page Flip event",null,null],[12,"frame","","sequence of the frame",5,null],[12,"duration","","duration between events",5,null],[12,"crtc","","crtc that did throw the event",5,null],[3,"ResourceHandles","","The set of ResourceHandles that a Device exposes.…",null,null],[3,"PlaneResourceHandles","","The set of plane::Handles that a Device exposes.",null,null],[3,"CrtcListFilter","","A filter that can be used with a ResourceHandles to…",null,null],[3,"Mode","","Resolution and timing information for a display mode.",null,null],[3,"PropertyValueSet","","Wrapper around a set of property IDs and their raw values.",null,null],[4,"PageFlipFlags","","Flags to alter the behaviour of a page flip",null,null],[13,"PageFlipEvent","","Request a vblank event on page flip",6,null],[13,"PageFlipAsync","","Request page flip as soon as possible, not waiting for…",6,null],[4,"PageFlipTarget","","Target to alter the sequence of page flips",null,null],[13,"Absolute","","Absolute Vblank Sequence",7,null],[13,"Relative","","Relative Vblank Sequence (to the current, when calling)",7,null],[4,"Event","","An event from a device.",null,null],[13,"Vblank","","A vblank happened",8,null],[13,"PageFlip","","A page flip happened",8,null],[13,"Unknown","","Unknown event, raw data provided",8,null],[4,"PlaneType","","",null,null],[13,"Overlay","","",9,null],[13,"Primary","","",9,null],[13,"Cursor","","",9,null],[4,"AtomicCommitFlags","","",null,null],[13,"TestOnly","","",10,null],[13,"Nonblock","","",10,null],[13,"AllowModeset","","",10,null],[13,"PageFlipEvent","","",10,null],[5,"from_u32","","",null,[[],[["resourcehandle",8],["option",4]]]],[0,"atomic","","",null,null],[3,"AtomicModeReq","drm::control::atomic","",null,null],[11,"new","","",11,[[],["atomicmodereq",3]]],[11,"add_raw_property","","",11,[[["rawresourcehandle",6],["handle",3],["rawvalue",6]]]],[11,"add_property","","",11,[[["handle",3],["value",4]]]],[0,"connector","drm::control","Connector",null,null],[3,"Handle","drm::control::connector","A handle to a connector",null,null],[3,"Info","","Information about a connector",null,null],[4,"Interface","","A physical interface type.",null,null],[13,"Unknown","","",12,null],[13,"VGA","","",12,null],[13,"DVII","","",12,null],[13,"DVID","","",12,null],[13,"DVIA","","",12,null],[13,"Composite","","",12,null],[13,"SVideo","","",12,null],[13,"LVDS","","",12,null],[13,"Component","","",12,null],[13,"NinePinDIN","","",12,null],[13,"DisplayPort","","",12,null],[13,"HDMIA","","",12,null],[13,"HDMIB","","",12,null],[13,"TV","","",12,null],[13,"EmbeddedDisplayPort","","",12,null],[13,"Virtual","","",12,null],[13,"DSI","","",12,null],[13,"DPI","","",12,null],[4,"State","","The state of a connector.",null,null],[13,"Connected","","",13,null],[13,"Disconnected","","",13,null],[13,"Unknown","","",13,null],[11,"handle","","Returns the handle to this connector.",14,[[],["handle",3]]],[11,"interface","","Returns the type of `Interface` of this connector.",14,[[],["interface",4]]],[11,"interface_id","","Returns the interface ID of this connector.",14,[[]]],[11,"state","","Returns the `State` of this connector.",14,[[],["state",4]]],[11,"size","","Returns the size of the display (in millimeters) if…",14,[[],["option",4]]],[11,"encoders","","Returns a list of encoders that can be possibly used by…",14,[[]]],[11,"modes","","",14,[[]]],[11,"current_encoder","","Returns the current encoder attached to this connector.",14,[[],[["option",4],["handle",3]]]],[0,"crtc","drm::control","CRTC",null,null],[3,"Handle","drm::control::crtc","A handle to a specific CRTC",null,null],[3,"Info","","Information about a specific CRTC",null,null],[11,"handle","","Returns the handle to this CRTC.",15,[[],["handle",3]]],[11,"position","","Returns the position of the CRTC.",15,[[]]],[11,"mode","","Returns the current mode of the CRTC.",15,[[],[["option",4],["mode",3]]]],[11,"framebuffer","","Returns the framebuffer currently attached to this CRTC.",15,[[],[["handle",3],["option",4]]]],[11,"gamma_length","","Returns the size of the gamma LUT.",15,[[]]],[0,"dumbbuffer","drm::control","DumbBuffer",null,null],[3,"DumbBuffer","drm::control::dumbbuffer","Slow, but generic `Buffer` implementation",null,null],[3,"DumbMapping","","Mapping of a dumbbuffer",null,null],[0,"encoder","drm::control","Encoder",null,null],[3,"Handle","drm::control::encoder","A handle to an encoder",null,null],[3,"Info","","Information about an encoder",null,null],[4,"Kind","","The type of encoder.",null,null],[13,"None","","",16,null],[13,"DAC","","",16,null],[13,"TMDS","","",16,null],[13,"LVDS","","",16,null],[13,"TVDAC","","",16,null],[13,"Virtual","","",16,null],[13,"DSI","","",16,null],[13,"DPMST","","",16,null],[13,"DPI","","",16,null],[11,"handle","","Returns the handle to this encoder.",17,[[],["handle",3]]],[11,"kind","","Returns the `Kind` of encoder this is.",17,[[],["kind",4]]],[11,"crtc","","Returns a handle to the CRTC this encoder is attached to.",17,[[],[["handle",3],["option",4]]]],[11,"possible_crtcs","","Returns a filter for the possible CRTCs that can use this…",17,[[],["crtclistfilter",3]]],[11,"possible_clones","","Returns a filter for the possible encoders that clones…",17,[[]]],[0,"framebuffer","drm::control","Framebuffer",null,null],[3,"Handle","drm::control::framebuffer","A handle to an framebuffer",null,null],[3,"Info","","Information about a framebuffer",null,null],[11,"handle","","Returns the handle to this framebuffer.",18,[[],["handle",3]]],[11,"size","","Returns the size of this framebuffer.",18,[[]]],[11,"pitch","","Returns the pitch of this framebuffer.",18,[[]]],[11,"bpp","","Returns the bits-per-pixel of this framebuffer.",18,[[]]],[11,"depth","","Returns the depth of this framebuffer.",18,[[]]],[0,"plane","drm::control","Plane",null,null],[3,"Handle","drm::control::plane","A handle to a plane",null,null],[3,"Info","","Information about a plane",null,null],[11,"handle","","Returns the handle to this plane.",19,[[],["handle",3]]],[11,"crtc","","Returns the CRTC this plane is attached to.",19,[[],[["handle",3],["option",4]]]],[11,"possible_crtcs","","",19,[[],["crtclistfilter",3]]],[11,"framebuffer","","Returns the framebuffer this plane is attached to.",19,[[],[["handle",3],["option",4]]]],[11,"formats","","Returns the formats this plane supports.",19,[[]]],[0,"property","drm::control","Property",null,null],[3,"Handle","drm::control::property","A handle to a property",null,null],[3,"Info","","Information about a property",null,null],[3,"EnumValue","","A single value of an `ValueType::Enum`",null,null],[3,"EnumValues","","A set of `EnumValue`s for a single property",null,null],[4,"ValueType","","A `ValueType` describes the types of value that a property…",null,null],[13,"Unknown","","A catch-all for any unknown types",20,null],[13,"Boolean","","A True or False type",20,null],[13,"UnsignedRange","","An unsigned integer that has a min and max value",20,null],[13,"SignedRange","","A signed integer that has a min and max value",20,null],[13,"Enum","","A set of values that are mutually exclusive",20,null],[13,"Bitmask","","A set of values that can be combined",20,null],[13,"Blob","","A chunk of binary data that must be acquired",20,null],[13,"Object","","A non-specific DRM object",20,null],[13,"CRTC","","A CRTC object",20,null],[13,"Connector","","A Connector object",20,null],[13,"Encoder","","An Encoder object",20,null],[13,"Framebuffer","","A Framebuffer object",20,null],[13,"Plane","","A Plane object",20,null],[13,"Property","","A Property object",20,null],[4,"Value","","The value of a property, in a typed format",null,null],[13,"Unknown","","",21,null],[13,"Boolean","","",21,null],[13,"UnsignedRange","","",21,null],[13,"SignedRange","","",21,null],[13,"Enum","","",21,null],[13,"Bitmask","","",21,null],[13,"Blob","","",21,null],[13,"Object","","",21,null],[13,"CRTC","","",21,null],[13,"Connector","","",21,null],[13,"Encoder","","",21,null],[13,"Framebuffer","","",21,null],[13,"Plane","","",21,null],[13,"Property","","",21,null],[6,"RawValue","","A raw property value that does not have a specific…",null,null],[11,"name","","Returns the name of this property.",22,[[],["cstr",3]]],[11,"value_type","","Returns the ValueType of this property.",22,[[],["valuetype",4]]],[11,"mutable","","Returns whether this property is mutable.",22,[[]]],[11,"atomic","","Returns whether this property can be atomically updated.",22,[[]]],[11,"convert_value","","Given a raw value, convert it into a specific `Value`",20,[[["rawvalue",6]],["value",4]]],[11,"value","","Returns the `RawValue` of this value",23,[[],["rawvalue",6]]],[11,"name","","Returns the name of this value",23,[[],["cstr",3]]],[11,"values","","Returns a tuple containing slices to the `RawValue`s and…",24,[[]]],[11,"get_value_from_raw_value","","",24,[[["rawvalue",6]],["enumvalue",3]]],[6,"RawResourceHandle","drm::control","",null,null],[8,"ResourceHandle","","",null,null],[18,"FFI_TYPE","","",25,null],[8,"Device","","This trait should be implemented by any object that acts…",null,null],[11,"resource_handles","","Gets the set of resource handles that this device…",26,[[],[["resourcehandles",3],["systemerror",4],["result",4]]]],[11,"plane_handles","","Gets the set of plane handles that this device currently has",26,[[],[["systemerror",4],["result",4],["planeresourcehandles",3]]]],[11,"get_connector","","Returns information about a specific connector",26,[[["handle",3]],[["info",3],["systemerror",4],["result",4]]]],[11,"get_encoder","","Returns information about a specific encoder",26,[[["handle",3]],[["info",3],["systemerror",4],["result",4]]]],[11,"get_crtc","","Returns information about a specific CRTC",26,[[["handle",3]],[["info",3],["systemerror",4],["result",4]]]],[11,"set_crtc","","Set CRTC state",26,[[["mode",3],["option",4],["handle",3],["option",4],["handle",3]],[["systemerror",4],["result",4]]]],[11,"get_framebuffer","","Returns information about a specific framebuffer",26,[[["handle",3]],[["result",4],["systemerror",4],["info",3]]]],[11,"add_framebuffer","","Add a new framebuffer",26,[[],[["systemerror",4],["result",4],["handle",3]]]],[11,"add_planar_framebuffer","","Add framebuffer (with modifiers)",26,[[],[["systemerror",4],["result",4],["handle",3]]]],[11,"dirty_framebuffer","","Mark parts of a framebuffer dirty",26,[[["handle",3]],[["systemerror",4],["result",4]]]],[11,"destroy_framebuffer","","Destroy a framebuffer",26,[[["handle",3]],[["systemerror",4],["result",4]]]],[11,"get_plane","","Returns information about a specific plane",26,[[["handle",3]],[["info",3],["systemerror",4],["result",4]]]],[11,"set_plane","","Set plane state.",26,[[["option",4],["handle",3],["handle",3],["handle",3]],[["systemerror",4],["result",4]]]],[11,"get_property","","Returns information about a specific property.",26,[[["handle",3]],[["result",4],["info",3],["systemerror",4]]]],[11,"set_property","","Sets a property for a specific resource.",26,[[["rawvalue",6],["handle",3],["resourcehandle",8]],[["systemerror",4],["result",4]]]],[11,"create_property_blob","","",26,[[["mode",3]],[["systemerror",4],["result",4],["value",4]]]],[11,"destroy_property_blob","","",26,[[],[["systemerror",4],["result",4]]]],[11,"get_modes","","Returns the set of `Mode`s that a particular connector…",26,[[["handle",3]],[["result",4],["systemerror",4],["vec",3]]]],[11,"get_properties","","Gets a list of property handles and values for this…",26,[[["resourcehandle",8]],[["propertyvalueset",3],["result",4],["systemerror",4]]]],[11,"get_gamma","","Receive the currently set gamma ramp of a crtc",26,[[["handle",3]],[["systemerror",4],["result",4]]]],[11,"set_gamma","","Set a gamma ramp for the given crtc",26,[[["handle",3]],[["systemerror",4],["result",4]]]],[11,"open_buffer","","Open a GEM buffer handle by name",26,[[["name",3]],[["handle",3],["systemerror",4],["result",4]]]],[11,"close_buffer","","Close a GEM buffer handle",26,[[["handle",3]],[["systemerror",4],["result",4]]]],[11,"create_dumb_buffer","","Create a new dumb buffer with a given size and pixel format",26,[[["pixelformat",4]],[["systemerror",4],["result",4],["dumbbuffer",3]]]],[11,"map_dumb_buffer","","Map the buffer for access",26,[[["dumbbuffer",3]],[["systemerror",4],["dumbmapping",3],["result",4]]]],[11,"destroy_dumb_buffer","","Free the memory resources of a dumb buffer",26,[[["dumbbuffer",3]],[["systemerror",4],["result",4]]]],[11,"atomic_commit","","",26,[[["atomicmodereq",3]],[["systemerror",4],["result",4]]]],[11,"page_flip","","Queue a page flip on the given crtc",26,[[["option",4],["pagefliptarget",4],["handle",3],["handle",3]],[["systemerror",4],["result",4]]]],[11,"receive_events","","Receive pending events",26,[[],[["result",4],["systemerror",4],["events",3]]]],[11,"set_cursor","","Sets a hardware-cursor on the given crtc with the image of…",26,[[["option",4],["handle",3]],[["systemerror",4],["result",4]]]],[11,"set_cursor2","","Sets a hardware-cursor on the given crtc with the image of…",26,[[["option",4],["handle",3]],[["systemerror",4],["result",4]]]],[11,"move_cursor","","Moves a set cursor on a given crtc",26,[[["handle",3]],[["systemerror",4],["result",4]]]],[11,"connectors","","Returns the set of connector::Handles",27,[[]]],[11,"encoders","","Returns the set of encoder::Handles",27,[[]]],[11,"crtcs","","Returns the set of crtc::Handles",27,[[]]],[11,"framebuffers","","Returns the set of framebuffer::Handles",27,[[]]],[11,"filter_crtcs","","",27,[[["crtclistfilter",3]],[["vec",3],["handle",3]]]],[11,"planes","","Returns the set of plane::Handles",28,[[]]],[11,"name","","Returns the name of this mode.",29,[[],["cstr",3]]],[11,"clock","","Returns the clock speed of this mode.",29,[[]]],[11,"size","","Returns the size (resolution) of the mode.",29,[[]]],[11,"hsync","","Returns the horizontal sync start, end, and total.",29,[[]]],[11,"vsync","","Returns the vertical sync start, end, and total.",29,[[]]],[11,"hskew","","Returns the horizontal skew of this mode.",29,[[]]],[11,"vscan","","Returns the vertical scan of this mode.",29,[[]]],[11,"vrefresh","","Returns the vertical refresh rate of this mode",29,[[]]],[11,"as_props_and_values","","Returns a pair representing a set of property::Handles and…",30,[[]]],[0,"buffer","drm","Memory management and buffer functionality that the DRM…",null,null],[3,"Handle","drm::buffer","A handle to a GEM buffer.",null,null],[3,"Name","","The name of a GEM buffer.",null,null],[0,"format","","Color formats using standard FourCC.",null,null],[4,"PixelFormat","drm::buffer::format","Possible pixel formats of a buffer",null,null],[13,"C8","","",31,null],[13,"R8","","",31,null],[13,"GR88","","",31,null],[13,"RGB332","","",31,null],[13,"BGR233","","",31,null],[13,"XRGB4444","","",31,null],[13,"XBGR4444","","",31,null],[13,"RGBX4444","","",31,null],[13,"BGRX4444","","",31,null],[13,"ARGB4444","","",31,null],[13,"ABGR4444","","",31,null],[13,"RGBA4444","","",31,null],[13,"BGRA4444","","",31,null],[13,"XRGB1555","","",31,null],[13,"XBGR1555","","",31,null],[13,"RGBX5551","","",31,null],[13,"BGRX5551","","",31,null],[13,"ARGB1555","","",31,null],[13,"ABGR1555","","",31,null],[13,"RGBA5551","","",31,null],[13,"BGRA5551","","",31,null],[13,"RGB565","","",31,null],[13,"BGR565","","",31,null],[13,"XRGB8888","","",31,null],[13,"XBGR8888","","",31,null],[13,"RGBX8888","","",31,null],[13,"BGRX8888","","",31,null],[13,"ARGB8888","","",31,null],[13,"ABGR8888","","",31,null],[13,"RGBA8888","","",31,null],[13,"BGRA8888","","",31,null],[13,"XRGB2101010","","",31,null],[13,"XBGR2101010","","",31,null],[13,"RGBX1010102","","",31,null],[13,"BGRX1010102","","",31,null],[13,"ARGB2101010","","",31,null],[13,"ABGR2101010","","",31,null],[13,"RGBA1010102","","",31,null],[13,"BGRA1010102","","",31,null],[13,"YUYV","","",31,null],[13,"YVYU","","",31,null],[13,"UYVY","","",31,null],[13,"VYUY","","",31,null],[13,"AYUV","","",31,null],[11,"as_raw","","Convert into the raw fourcc code",31,[[]]],[11,"from_raw","","",31,[[],[["option",4],["pixelformat",4]]]],[11,"depth","","The depth in bits per pixel.",31,[[]]],[11,"bpp","","Bytes per pixel of the used format",31,[[]]],[8,"Buffer","drm::buffer","Common functionality of all regular buffers.",null,null],[10,"size","","The width and height of the buffer.",32,[[]]],[10,"format","","The format of the buffer.",32,[[],["pixelformat",4]]],[10,"pitch","","The pitch of the buffer.",32,[[]]],[10,"handle","","The handle to the buffer.",32,[[],["handle",3]]],[8,"PlanarBuffer","","Planar buffers are buffers where each channel/plane is in…",null,null],[10,"size","","The width and height of the buffer.",33,[[]]],[10,"format","","The format of the buffer.",33,[[],["pixelformat",4]]],[10,"pitches","","The pitches of the buffer.",33,[[]]],[10,"handles","","The handles to the buffer.",33,[[]]],[10,"offsets","","The offsets of the buffer.",33,[[]]],[8,"Device","drm","This trait should be implemented by any object that acts…",null,null],[11,"acquire_master_lock","","Acquires the DRM Master lock for this process.",34,[[],[["systemerror",4],["result",4]]]],[11,"release_master_lock","","Releases the DRM Master lock for another process to use.",34,[[],[["systemerror",4],["result",4]]]],[11,"generate_auth_token","","Generates an AuthToken for this process.",34,[[],[["authtoken",3],["systemerror",4],["result",4]]]],[11,"authenticate_auth_token","","Authenticates an AuthToken from another process.",34,[[["authtoken",3]],[["systemerror",4],["result",4]]]],[11,"set_client_capability","","Requests the driver to expose or hide certain…",34,[[["clientcapability",4]],[["systemerror",4],["result",4]]]],[11,"get_bus_id","","Gets the BusID of this device.",34,[[],[["busid",3],["result",4],["systemerror",4]]]],[11,"authenticated","","Check to see if our AuthToken has been authenticated by…",34,[[],[["systemerror",4],["result",4]]]],[11,"get_driver_capability","","Gets the value of a capability.",34,[[["drivercapability",4]],[["systemerror",4],["result",4]]]],[11,"get_driver","","Possible errors: - EFAULT: Kernel could not copy fields…",34,[[],[["systemerror",4],["result",4],["driver",3]]]],[11,"name","","Name of driver",35,[[],["osstr",3]]],[11,"date","","Date driver was published",35,[[],["osstr",3]]],[11,"description","","Driver description",35,[[],["osstr",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","drm::control","",38,[[]]],[11,"into","","",38,[[]]],[11,"into_iter","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","drm::control::atomic","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","drm::control::connector","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","drm::control::crtc","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"size","drm::control::dumbbuffer","",42,[[]]],[11,"format","","",42,[[],["pixelformat",4]]],[11,"pitches","","",42,[[]]],[11,"handles","","",42,[[]]],[11,"offsets","","",42,[[]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","drm::control::encoder","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","drm::control::framebuffer","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","drm::control::plane","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","drm::control::property","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","drm::buffer","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","drm::buffer::format","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"fmt","drm","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"from","","",0,[[["errno",4]],["systemerror",4]]],[11,"from","","",0,[[["error",4]],["systemerror",4]]],[11,"name","","",0,[[],["option",4]]],[11,"cause","","",0,[[],[["fail",8],["option",4]]]],[11,"backtrace","","",0,[[],[["option",4],["backtrace",3]]]],[11,"size","drm::control::dumbbuffer","",42,[[]]],[11,"format","","",42,[[],["pixelformat",4]]],[11,"pitch","","",42,[[]]],[11,"handle","","",42,[[],["handle",3]]],[11,"drop","","",43,[[]]],[11,"as_mut","","",43,[[]]],[11,"as_ref","drm","",37,[[],["osstr",3]]],[11,"from","drm::control::connector","",40,[[["rawresourcehandle",6]]]],[11,"from","","",12,[[]]],[11,"from","","",13,[[]]],[11,"from","drm::control::crtc","",41,[[["rawresourcehandle",6]]]],[11,"from","drm::control::encoder","",44,[[["rawresourcehandle",6]]]],[11,"from","","",16,[[]]],[11,"from","drm::control::framebuffer","",45,[[["rawresourcehandle",6]]]],[11,"from","drm::control::plane","",46,[[["rawresourcehandle",6]]]],[11,"from","drm::control::property","",47,[[["rawresourcehandle",6]]]],[11,"from","drm::control","",29,[[["drm_mode_modeinfo",3]],["mode",3]]],[11,"from","drm::buffer","",48,[[["rawresourcehandle",6]]]],[11,"into","drm::control::connector","",40,[[],["rawresourcehandle",6]]],[11,"into","","",40,[[]]],[11,"into","","",12,[[]]],[11,"into","","",13,[[]]],[11,"into","drm::control::crtc","",41,[[],["rawresourcehandle",6]]],[11,"into","","",41,[[]]],[11,"into","drm::control::encoder","",44,[[],["rawresourcehandle",6]]],[11,"into","","",44,[[]]],[11,"into","","",16,[[]]],[11,"into","drm::control::framebuffer","",45,[[],["rawresourcehandle",6]]],[11,"into","","",45,[[]]],[11,"into","drm::control::plane","",46,[[],["rawresourcehandle",6]]],[11,"into","","",46,[[]]],[11,"into","drm::control::property","",47,[[],["rawresourcehandle",6]]],[11,"into","","",47,[[]]],[11,"into","","",21,[[],["rawvalue",6]]],[11,"into","drm::control","",29,[[],["drm_mode_modeinfo",3]]],[11,"into","drm::buffer","",48,[[],["rawresourcehandle",6]]],[11,"into","","",48,[[]]],[11,"into","","",49,[[]]],[11,"next","drm::control","",38,[[],[["event",4],["option",4]]]],[11,"clone","drm::control::atomic","",11,[[],["atomicmodereq",3]]],[11,"clone","drm::control::connector","",40,[[],["handle",3]]],[11,"clone","","",14,[[],["info",3]]],[11,"clone","","",12,[[],["interface",4]]],[11,"clone","","",13,[[],["state",4]]],[11,"clone","drm::control::crtc","",41,[[],["handle",3]]],[11,"clone","","",15,[[],["info",3]]],[11,"clone","drm::control::dumbbuffer","",42,[[],["dumbbuffer",3]]],[11,"clone","drm::control::encoder","",44,[[],["handle",3]]],[11,"clone","","",17,[[],["info",3]]],[11,"clone","","",16,[[],["kind",4]]],[11,"clone","drm::control::framebuffer","",45,[[],["handle",3]]],[11,"clone","","",18,[[],["info",3]]],[11,"clone","drm::control::plane","",46,[[],["handle",3]]],[11,"clone","","",19,[[],["info",3]]],[11,"clone","drm::control::property","",47,[[],["handle",3]]],[11,"clone","","",22,[[],["info",3]]],[11,"clone","","",20,[[],["valuetype",4]]],[11,"clone","","",21,[[],["value",4]]],[11,"clone","","",23,[[],["enumvalue",3]]],[11,"clone","","",24,[[],["enumvalues",3]]],[11,"clone","drm::control","",6,[[],["pageflipflags",4]]],[11,"clone","","",7,[[],["pagefliptarget",4]]],[11,"clone","","",27,[[],["resourcehandles",3]]],[11,"clone","","",28,[[],["planeresourcehandles",3]]],[11,"clone","","",39,[[],["crtclistfilter",3]]],[11,"clone","","",29,[[],["mode",3]]],[11,"clone","","",9,[[],["planetype",4]]],[11,"clone","","",30,[[],["propertyvalueset",3]]],[11,"clone","","",10,[[],["atomiccommitflags",4]]],[11,"clone","drm::buffer::format","",31,[[],["pixelformat",4]]],[11,"clone","drm::buffer","",48,[[],["handle",3]]],[11,"clone","","",49,[[],["name",3]]],[11,"clone","drm","",36,[[],["authtoken",3]]],[11,"clone","","",37,[[],["busid",3]]],[11,"clone","","",35,[[],["driver",3]]],[11,"clone","","",2,[[],["drivercapability",4]]],[11,"clone","","",3,[[],["clientcapability",4]]],[11,"cmp","drm::control","",10,[[["atomiccommitflags",4]],["ordering",4]]],[11,"eq","drm::control::connector","",40,[[["handle",3]]]],[11,"ne","","",40,[[["handle",3]]]],[11,"eq","","",14,[[["info",3]]]],[11,"ne","","",14,[[["info",3]]]],[11,"eq","","",12,[[["interface",4]]]],[11,"eq","","",13,[[["state",4]]]],[11,"eq","drm::control::crtc","",41,[[["handle",3]]]],[11,"ne","","",41,[[["handle",3]]]],[11,"eq","","",15,[[["info",3]]]],[11,"ne","","",15,[[["info",3]]]],[11,"eq","drm::control::dumbbuffer","",42,[[["dumbbuffer",3]]]],[11,"ne","","",42,[[["dumbbuffer",3]]]],[11,"eq","drm::control::encoder","",44,[[["handle",3]]]],[11,"ne","","",44,[[["handle",3]]]],[11,"eq","","",17,[[["info",3]]]],[11,"ne","","",17,[[["info",3]]]],[11,"eq","","",16,[[["kind",4]]]],[11,"eq","drm::control::framebuffer","",45,[[["handle",3]]]],[11,"ne","","",45,[[["handle",3]]]],[11,"eq","","",18,[[["info",3]]]],[11,"ne","","",18,[[["info",3]]]],[11,"eq","drm::control::plane","",46,[[["handle",3]]]],[11,"ne","","",46,[[["handle",3]]]],[11,"eq","","",19,[[["info",3]]]],[11,"ne","","",19,[[["info",3]]]],[11,"eq","drm::control::property","",47,[[["handle",3]]]],[11,"ne","","",47,[[["handle",3]]]],[11,"eq","","",22,[[["info",3]]]],[11,"ne","","",22,[[["info",3]]]],[11,"eq","","",20,[[["valuetype",4]]]],[11,"ne","","",20,[[["valuetype",4]]]],[11,"eq","","",21,[[["value",4]]]],[11,"ne","","",21,[[["value",4]]]],[11,"eq","","",23,[[["enumvalue",3]]]],[11,"ne","","",23,[[["enumvalue",3]]]],[11,"eq","","",24,[[["enumvalues",3]]]],[11,"ne","","",24,[[["enumvalues",3]]]],[11,"eq","drm::control","",6,[[["pageflipflags",4]]]],[11,"eq","","",7,[[["pagefliptarget",4]]]],[11,"eq","","",27,[[["resourcehandles",3]]]],[11,"ne","","",27,[[["resourcehandles",3]]]],[11,"eq","","",28,[[["planeresourcehandles",3]]]],[11,"ne","","",28,[[["planeresourcehandles",3]]]],[11,"eq","","",39,[[["crtclistfilter",3]]]],[11,"ne","","",39,[[["crtclistfilter",3]]]],[11,"eq","","",29,[[["mode",3]]]],[11,"ne","","",29,[[["mode",3]]]],[11,"eq","","",9,[[["planetype",4]]]],[11,"eq","","",10,[[["atomiccommitflags",4]]]],[11,"eq","drm::buffer::format","",31,[[["pixelformat",4]]]],[11,"eq","drm::buffer","",48,[[["handle",3]]]],[11,"ne","","",48,[[["handle",3]]]],[11,"eq","","",49,[[["name",3]]]],[11,"ne","","",49,[[["name",3]]]],[11,"eq","drm","",36,[[["authtoken",3]]]],[11,"ne","","",36,[[["authtoken",3]]]],[11,"eq","","",37,[[["busid",3]]]],[11,"ne","","",37,[[["busid",3]]]],[11,"eq","","",35,[[["driver",3]]]],[11,"ne","","",35,[[["driver",3]]]],[11,"eq","","",2,[[["drivercapability",4]]]],[11,"eq","","",3,[[["clientcapability",4]]]],[11,"partial_cmp","drm::control","",10,[[["atomiccommitflags",4]],[["option",4],["ordering",4]]]],[11,"fmt","drm::control::atomic","",11,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::connector","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::crtc","",41,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::dumbbuffer","",42,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::encoder","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::framebuffer","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::plane","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control::property","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","drm::control","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","drm::buffer::format","",31,[[["formatter",3]],["result",6]]],[11,"fmt","drm::buffer","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","drm","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"hash","drm::control::connector","",40,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","drm::control::crtc","",41,[[]]],[11,"hash","","",15,[[]]],[11,"hash","drm::control::dumbbuffer","",42,[[]]],[11,"hash","drm::control::encoder","",44,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",16,[[]]],[11,"hash","drm::control::framebuffer","",45,[[]]],[11,"hash","","",18,[[]]],[11,"hash","drm::control::plane","",46,[[]]],[11,"hash","","",19,[[]]],[11,"hash","drm::control::property","",47,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",24,[[]]],[11,"hash","drm::control","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",27,[[]]],[11,"hash","","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","drm::buffer::format","",31,[[]]],[11,"hash","drm::buffer","",48,[[]]],[11,"hash","","",49,[[]]],[11,"hash","drm","",36,[[]]],[11,"hash","","",37,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]]],"p":[[4,"SystemError"],[13,"Unknown"],[4,"DriverCapability"],[4,"ClientCapability"],[3,"VblankEvent"],[3,"PageFlipEvent"],[4,"PageFlipFlags"],[4,"PageFlipTarget"],[4,"Event"],[4,"PlaneType"],[4,"AtomicCommitFlags"],[3,"AtomicModeReq"],[4,"Interface"],[4,"State"],[3,"Info"],[3,"Info"],[4,"Kind"],[3,"Info"],[3,"Info"],[3,"Info"],[4,"ValueType"],[4,"Value"],[3,"Info"],[3,"EnumValue"],[3,"EnumValues"],[8,"ResourceHandle"],[8,"Device"],[3,"ResourceHandles"],[3,"PlaneResourceHandles"],[3,"Mode"],[3,"PropertyValueSet"],[4,"PixelFormat"],[8,"Buffer"],[8,"PlanarBuffer"],[8,"Device"],[3,"Driver"],[3,"AuthToken"],[3,"BusID"],[3,"Events"],[3,"CrtcListFilter"],[3,"Handle"],[3,"Handle"],[3,"DumbBuffer"],[3,"DumbMapping"],[3,"Handle"],[3,"Handle"],[3,"Handle"],[3,"Handle"],[3,"Handle"],[3,"Name"]]},\
"gbm":{"doc":"Safe `libgbm` bindings for rust","i":[[3,"BufferObject","gbm","A gbm buffer object",null,null],[3,"BufferObjectFlags","","Flags to indicate the intended use for the buffer - these…",null,null],[3,"MappedBufferObject","","A mapped buffer object",null,null],[3,"WrongDeviceError","","Thrown when the gbm device does not belong to the buffer…",null,null],[3,"FdWrapper","","Type wrapping a foreign file destructor",null,null],[3,"Device","","An open GBM device",null,null],[3,"DeviceDestroyedError","","Thrown when the underlying gbm device was already destroyed",null,null],[3,"Surface","","A gbm rendering surface",null,null],[4,"FrontBufferError","","Errors that may happen when locking the front buffer",null,null],[13,"NoFreeBuffers","","No free buffers are currently available",0,null],[13,"Unknown","","An unknown error happened",0,null],[13,"Destroyed","","Device was already released",0,null],[4,"Format","","Possible pixel formats used",null,null],[13,"C8","","",1,null],[13,"R8","","",1,null],[13,"GR88","","",1,null],[13,"RGB332","","",1,null],[13,"BGR233","","",1,null],[13,"XRGB4444","","",1,null],[13,"XBGR4444","","",1,null],[13,"RGBX4444","","",1,null],[13,"BGRX4444","","",1,null],[13,"ARGB4444","","",1,null],[13,"ABGR4444","","",1,null],[13,"RGBA4444","","",1,null],[13,"BGRA4444","","",1,null],[13,"XRGB1555","","",1,null],[13,"XBGR1555","","",1,null],[13,"RGBX5551","","",1,null],[13,"BGRX5551","","",1,null],[13,"ARGB1555","","",1,null],[13,"ABGR1555","","",1,null],[13,"RGBA5551","","",1,null],[13,"BGRA5551","","",1,null],[13,"RGB565","","",1,null],[13,"BGR565","","",1,null],[13,"XRGB8888","","",1,null],[13,"XBGR8888","","",1,null],[13,"RGBX8888","","",1,null],[13,"BGRX8888","","",1,null],[13,"ARGB8888","","",1,null],[13,"ABGR8888","","",1,null],[13,"RGBA8888","","",1,null],[13,"BGRA8888","","",1,null],[13,"XRGB2101010","","",1,null],[13,"XBGR2101010","","",1,null],[13,"RGBX1010102","","",1,null],[13,"BGRX1010102","","",1,null],[13,"ARGB2101010","","",1,null],[13,"ABGR2101010","","",1,null],[13,"RGBA1010102","","",1,null],[13,"BGRA1010102","","",1,null],[13,"YUYV","","",1,null],[13,"YVYU","","",1,null],[13,"UYVY","","",1,null],[13,"VYUY","","",1,null],[13,"AYUV","","",1,null],[11,"new_from_fd","","Open a GBM device from a given unix file descriptor.",2,[[["rawfd",6]],[["ioresult",6],["device",3]]]],[11,"new","","Open a GBM device from a given open DRM device.",2,[[],[["device",3],["ioresult",6]]]],[11,"backend_name","","Get the backend name",2,[[]]],[11,"is_format_supported","","Test if a format is supported for a given set of usage flags",2,[[["bufferobjectflags",3],["format",4]]]],[11,"create_surface","","Allocate a new surface object",2,[[["bufferobjectflags",3],["format",4]],[["ioresult",6],["surface",3]]]],[11,"create_buffer_object","","Allocate a buffer object for the given dimensions",2,[[["bufferobjectflags",3],["format",4]],[["ioresult",6],["bufferobject",3]]]],[11,"import_buffer_object_from_dma_buf","","Create a gbm buffer object from an dma buffer",2,[[["bufferobjectflags",3],["rawfd",6],["format",4]],[["ioresult",6],["bufferobject",3]]]],[18,"SCANOUT","","Buffer is going to be presented to the screen using an API…",3,null],[18,"CURSOR","","Buffer is going to be used as cursor",3,null],[18,"RENDERING","","Buffer is to be used for rendering - for example it is…",3,null],[18,"WRITE","","Buffer can be used for gbm_bo_write. This is guaranteed to…",3,null],[18,"LINEAR","","Buffer is linear, i.e. not tiled.",3,null],[11,"empty","","Returns an empty set of flags",3,[[],["bufferobjectflags",3]]],[11,"all","","Returns the set containing all flags.",3,[[],["bufferobjectflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",3,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",3,[[],[["bufferobjectflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",3,[[],["bufferobjectflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",3,[[],["bufferobjectflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",3,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",3,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",3,[[["bufferobjectflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",3,[[["bufferobjectflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",3,[[["bufferobjectflags",3]]]],[11,"remove","","Removes the specified flags in-place.",3,[[["bufferobjectflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",3,[[["bufferobjectflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",3,[[["bufferobjectflags",3]]]],[11,"stride","","Get the stride of the buffer object",4,[[]]],[11,"height","","The height of the mapped region for the buffer",4,[[]]],[11,"width","","The width of the mapped region for the buffer",4,[[]]],[11,"x","","The X (top left origin) starting position of the mapped…",4,[[]]],[11,"y","","The Y (top left origin) starting position of the mapped…",4,[[]]],[11,"buffer","","Access to the underlying image buffer",4,[[]]],[11,"buffer_mut","","Mutable access to the underlying image buffer",4,[[]]],[11,"width","","Get the width of the buffer object",5,[[],[["devicedestroyederror",3],["result",4]]]],[11,"height","","Get the height of the buffer object",5,[[],[["devicedestroyederror",3],["result",4]]]],[11,"stride","","Get the stride of the buffer object",5,[[],[["devicedestroyederror",3],["result",4]]]],[11,"format","","Get the format of the buffer object",5,[[],[["devicedestroyederror",3],["result",4],["format",4]]]],[11,"handle","","Get the handle of the buffer object",5,[[],[["devicedestroyederror",3],["result",4],["bufferobjecthandle",6]]]],[11,"map","","Map a region of a gbm buffer object for cpu access",5,[[["device",3]],[["result",4],["wrongdeviceerror",3],["ioresult",6]]]],[11,"map_mut","","Map a region of a gbm buffer object for cpu access",5,[[["device",3]],[["result",4],["wrongdeviceerror",3],["ioresult",6]]]],[11,"write","","Write data into the buffer object",5,[[],[["devicedestroyederror",3],["ioresult",6],["result",4]]]],[11,"set_userdata","","Sets the userdata of the buffer object.",5,[[],[["option",4],["devicedestroyederror",3],["result",4]]]],[11,"clear_userdata","","Clears the set userdata of the buffer object.",5,[[],[["devicedestroyederror",3],["result",4]]]],[11,"userdata","","Returns a reference to set userdata, if any.",5,[[],[["devicedestroyederror",3],["option",4],["result",4]]]],[11,"userdata_mut","","Returns a mutable reference to set userdata, if any.",5,[[],[["devicedestroyederror",3],["result",4],["option",4]]]],[11,"take_userdata","","Takes ownership of previously set userdata, if any.",5,[[],[["option",4],["devicedestroyederror",3],["result",4]]]],[11,"has_free_buffers","","Return whether or not a surface has free (non-locked)…",6,[[]]],[11,"lock_front_buffer","","Lock the surface\'s current front buffer",6,[[],[["result",4],["bufferobject",3],["frontbuffererror",4]]]],[6,"BufferObjectHandle","","Abstraction representing the handle to a buffer allocated…",null,null],[8,"AsRaw","","Trait for types that allow to optain the underlying raw…",null,null],[10,"as_raw","","Receive a raw pointer representing this type.",7,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"size","","",5,[[]]],[11,"format","","",5,[[],["pixelformat",4]]],[11,"pitches","","",5,[[]]],[11,"handles","","",5,[[]]],[11,"offsets","","",5,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"as_fail","","",8,[[],["fail",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"as_fail","","",10,[[],["fail",8]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_fail","","",0,[[],["fail",8]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"as_raw","","",2,[[]]],[11,"as_raw","","",5,[[]]],[11,"as_raw","","",6,[[]]],[11,"drop","","",4,[[]]],[11,"extend","","",3,[[["intoiterator",8]]]],[11,"clone","","",10,[[],["devicedestroyederror",3]]],[11,"clone","","",3,[[],["bufferobjectflags",3]]],[11,"clone","","",8,[[],["wrongdeviceerror",3]]],[11,"clone","","",0,[[],["frontbuffererror",4]]],[11,"clone","","",1,[[],["format",4]]],[11,"cmp","","",3,[[["bufferobjectflags",3]],["ordering",4]]],[11,"eq","","",10,[[["devicedestroyederror",3]]]],[11,"eq","","",3,[[["bufferobjectflags",3]]]],[11,"ne","","",3,[[["bufferobjectflags",3]]]],[11,"eq","","",8,[[["wrongdeviceerror",3]]]],[11,"eq","","",0,[[["frontbuffererror",4]]]],[11,"ne","","",0,[[["frontbuffererror",4]]]],[11,"eq","","",1,[[["format",4]]]],[11,"partial_cmp","","",3,[[["bufferobjectflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",3,[[["bufferobjectflags",3]]]],[11,"le","","",3,[[["bufferobjectflags",3]]]],[11,"gt","","",3,[[["bufferobjectflags",3]]]],[11,"ge","","",3,[[["bufferobjectflags",3]]]],[11,"deref","","",2,[[]]],[11,"deref","","",4,[[],["bufferobject",3]]],[11,"deref_mut","","",2,[[]]],[11,"deref_mut","","",4,[[],["bufferobject",3]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",3,[[["bufferobjectflags",3]],["bufferobjectflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",3,[[["bufferobjectflags",3]]]],[11,"not","","Returns the complement of this set of flags.",3,[[],["bufferobjectflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",3,[[["bufferobjectflags",3]],["bufferobjectflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",3,[[["bufferobjectflags",3]],["bufferobjectflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",3,[[["bufferobjectflags",3]],["bufferobjectflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",3,[[["bufferobjectflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",3,[[["bufferobjectflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",3,[[["bufferobjectflags",3]]]],[11,"hash","","",3,[[]]],[11,"hash","","",1,[[]]],[11,"from_iter","","",3,[[["intoiterator",8]],["bufferobjectflags",3]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"description","","",10,[[]]],[11,"cause","","",10,[[],[["error",8],["option",4]]]],[11,"description","","",8,[[]]],[11,"cause","","",8,[[],[["error",8],["option",4]]]],[11,"description","","",0,[[]]],[11,"cause","","",0,[[],[["error",8],["option",4]]]],[11,"as_raw_fd","","",9,[[],["rawfd",6]]],[11,"as_raw_fd","","",2,[[],["rawfd",6]]],[11,"as_raw_fd","","",5,[[],["rawfd",6]]],[11,"size","","",5,[[]]],[11,"format","","",5,[[],["drmpixelformat",4]]],[11,"pitch","","",5,[[]]],[11,"handle","","",5,[[],["handle",3]]]],"p":[[4,"FrontBufferError"],[4,"Format"],[3,"Device"],[3,"BufferObjectFlags"],[3,"MappedBufferObject"],[3,"BufferObject"],[3,"Surface"],[8,"AsRaw"],[3,"WrongDeviceError"],[3,"FdWrapper"],[3,"DeviceDestroyedError"]]},\
"image":{"doc":"This crate provides native rust implementations of image…","i":[[3,"Luma","image","Grayscale colors",null,null],[12,"0","","",0,null],[3,"LumaA","","Grayscale colors + alpha channel",null,null],[12,"0","","",1,null],[3,"Rgb","","RGB colors",null,null],[12,"0","","",2,null],[3,"Rgba","","RGB colors + alpha channel",null,null],[12,"0","","",3,null],[3,"Bgr","","BGR colors",null,null],[12,"0","","",4,null],[3,"Bgra","","BGR colors + alpha channel",null,null],[12,"0","","",5,null],[3,"Progress","","Represents the progress of an image operation.",null,null],[3,"Pixels","","Immutable pixel iterator",null,null],[3,"SubImage","","A View into another image",null,null],[3,"ImageBuffer","","Generic image buffer",null,null],[3,"Delay","","The delay of a frame relative to the previous one.",null,null],[3,"Frame","","A single animation frame",null,null],[3,"Frames","","An implementation dependent iterator, reading the frames…",null,null],[4,"ColorType","","An enumeration over supported color types and bit depths",null,null],[13,"L8","","Pixel is 8-bit luminance",6,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",6,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",6,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",6,null],[13,"L16","","Pixel is 16-bit luminance",6,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",6,null],[13,"Rgb16","","Pixel is 16-bit RGB",6,null],[13,"Rgba16","","Pixel is 16-bit RGBA",6,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",6,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",6,null],[4,"ExtendedColorType","","An enumeration of color types encountered in image formats.",null,null],[13,"L1","","Pixel is 1-bit luminance",7,null],[13,"La1","","Pixel is 1-bit luminance with an alpha channel",7,null],[13,"Rgb1","","Pixel contains 1-bit R, G and B channels",7,null],[13,"Rgba1","","Pixel is 1-bit RGB with an alpha channel",7,null],[13,"L2","","Pixel is 2-bit luminance",7,null],[13,"La2","","Pixel is 2-bit luminance with an alpha channel",7,null],[13,"Rgb2","","Pixel contains 2-bit R, G and B channels",7,null],[13,"Rgba2","","Pixel is 2-bit RGB with an alpha channel",7,null],[13,"L4","","Pixel is 4-bit luminance",7,null],[13,"La4","","Pixel is 4-bit luminance with an alpha channel",7,null],[13,"Rgb4","","Pixel contains 4-bit R, G and B channels",7,null],[13,"Rgba4","","Pixel is 4-bit RGB with an alpha channel",7,null],[13,"L8","","Pixel is 8-bit luminance",7,null],[13,"La8","","Pixel is 8-bit luminance with an alpha channel",7,null],[13,"Rgb8","","Pixel contains 8-bit R, G and B channels",7,null],[13,"Rgba8","","Pixel is 8-bit RGB with an alpha channel",7,null],[13,"L16","","Pixel is 16-bit luminance",7,null],[13,"La16","","Pixel is 16-bit luminance with an alpha channel",7,null],[13,"Rgb16","","Pixel contains 16-bit R, G and B channels",7,null],[13,"Rgba16","","Pixel is 16-bit RGB with an alpha channel",7,null],[13,"Bgr8","","Pixel contains 8-bit B, G and R channels",7,null],[13,"Bgra8","","Pixel is 8-bit BGR with an alpha channel",7,null],[13,"Unknown","","Pixel is of unknown color type with the specified bits per…",7,null],[4,"ImageFormat","","An enumeration of supported image formats. Not all formats…",null,null],[13,"Png","","An Image in PNG Format",8,null],[13,"Jpeg","","An Image in JPEG Format",8,null],[13,"Gif","","An Image in GIF Format",8,null],[13,"WebP","","An Image in WEBP Format",8,null],[13,"Pnm","","An Image in general PNM Format",8,null],[13,"Tiff","","An Image in TIFF Format",8,null],[13,"Tga","","An Image in TGA Format",8,null],[13,"Dds","","An Image in DDS Format",8,null],[13,"Bmp","","An Image in BMP Format",8,null],[13,"Ico","","An Image in ICO Format",8,null],[13,"Hdr","","An Image in Radiance HDR Format",8,null],[13,"Farbfeld","","An Image in farbfeld Format",8,null],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",null,null],[13,"Unsupported","","A value for signalling an error: An unsupported format was…",9,null],[4,"DynamicImage","","A Dynamic Image",null,null],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",10,null],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",10,null],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",10,null],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",10,null],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",10,null],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",10,null],[13,"ImageLuma16","","Each pixel in this image is 16-bit Luma",10,null],[13,"ImageLumaA16","","Each pixel in this image is 16-bit Luma with alpha",10,null],[13,"ImageRgb16","","Each pixel in this image is 16-bit Rgb",10,null],[13,"ImageRgba16","","Each pixel in this image is 16-bit Rgb with alpha",10,null],[5,"guess_format","","Guess image format from memory block",null,[[],[["imageformat",4],["imageresult",6]]]],[5,"load","","Create a new image from a Reader",null,[[["bufread",8],["seek",8],["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory","","Create a new image from a byte slice",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"load_from_memory_with_format","","Create a new image from a byte slice",null,[[["imageformat",4]],[["imageresult",6],["dynamicimage",4]]]],[5,"open","","Open the image located at the path specified. The image\'s…",null,[[],[["imageresult",6],["dynamicimage",4]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",null,[[["colortype",4]],["imageresult",6]]],[5,"save_buffer_with_format","","Saves the supplied buffer to a file at the path specified…",null,[[["colortype",4],["imageformat",4]],["imageresult",6]]],[5,"image_dimensions","","Read the dimensions of the image located at the specified…",null,[[],["imageresult",6]]],[0,"error","","Contains detailed error representation.",null,null],[3,"UnsupportedError","image::error","The implementation for an operation was not provided.",null,null],[3,"EncodingError","","An error was encountered while encoding an image.",null,null],[3,"ParameterError","","An error was encountered in inputs arguments.",null,null],[3,"DecodingError","","An error was encountered while decoding an image.",null,null],[3,"LimitError","","Completing the operation would have required more…",null,null],[4,"ImageError","","The generic error type for image operations.",null,null],[13,"Decoding","","An error was encountered while decoding.",11,null],[13,"Encoding","","An error was encountered while encoding.",11,null],[13,"Parameter","","An error was encountered in input arguments.",11,null],[13,"Limits","","Completing the operation would have required more…",11,null],[13,"Unsupported","","An operation can not be completed by the chosen abstraction.",11,null],[13,"IoError","","An error occurred while interacting with the environment.",11,null],[4,"UnsupportedErrorKind","","Details what feature is not supported.",null,null],[13,"Color","","The required color type can not be handled.",12,null],[13,"Format","","An image format is not supported.",12,null],[13,"GenericFeature","","Some feature specified by string. This is discouraged and…",12,null],[4,"ParameterErrorKind","","Details how a parameter is malformed.",null,null],[13,"DimensionMismatch","","The dimensions passed are wrong.",13,null],[13,"FailedAlready","","Repeated an operation for which error that could not be…",13,null],[13,"Generic","","A string describing the parameter. This is discouraged and…",13,null],[13,"NoMoreData","","The end of the image has been reached.",13,null],[4,"LimitErrorKind","","Indicates the limit that prevented an operation from…",null,null],[13,"DimensionError","","The resulting image exceed dimension limits in either…",14,null],[13,"InsufficientMemory","","The operation would have performed an allocation larger…",14,null],[4,"ImageFormatHint","","A best effort representation for image formats.",null,null],[13,"Exact","","The format is known exactly.",15,null],[13,"Name","","The format can be identified by a name.",15,null],[13,"PathExtension","","A common path extension for the format is known.",15,null],[13,"Unknown","","The format is not known or could not be determined.",15,null],[6,"ImageResult","","Result of an image decoding/encoding process",null,null],[11,"from_format_and_kind","","Create an `UnsupportedError` for an image with details on…",16,[[["imageformathint",4],["unsupportederrorkind",4]]]],[11,"kind","","Returns the corresponding `UnsupportedErrorKind` of the…",16,[[],["unsupportederrorkind",4]]],[11,"format_hint","","Returns the image format associated with this error.",16,[[],["imageformathint",4]]],[11,"new","","Create a `DecodingError` that stems from an arbitrary…",17,[[["imageformathint",4]]]],[11,"from_format_hint","","Create a `DecodingError` for an image format.",17,[[["imageformathint",4]]]],[11,"format_hint","","Returns the image format associated with this error.",17,[[],["imageformathint",4]]],[11,"new","","Create an `EncodingError` that stems from an arbitrary…",18,[[["imageformathint",4]]]],[11,"from_format_hint","","Create an `EncodingError` for an image format.",18,[[["imageformathint",4]]]],[11,"format_hint","","Return the image format associated with this error.",18,[[],["imageformathint",4]]],[11,"from_kind","","Construct a `ParameterError` directly from a corresponding…",19,[[["parametererrorkind",4]]]],[11,"kind","","Returns the corresponding `ParameterErrorKind` of the error.",19,[[],["parametererrorkind",4]]],[11,"from_kind","","Construct a generic `LimitError` directly from a…",20,[[["limiterrorkind",4]]]],[11,"kind","","Returns the corresponding `LimitErrorKind` of the error.",20,[[],["limiterrorkind",4]]],[0,"buffer","image","Iterators and other auxiliary structure for the…",null,null],[3,"EnumeratePixels","image::buffer","Enumerate the pixels of an image.",null,null],[3,"EnumeratePixelsMut","","Enumerate the pixels of an image.",null,null],[3,"EnumerateRows","","Enumerate the rows of an image.",null,null],[3,"EnumerateRowsMut","","Enumerate the rows of an image.",null,null],[3,"Pixels","","Iterate over pixel refs.",null,null],[3,"PixelsMut","","Iterate over mutable pixel refs.",null,null],[3,"Rows","","Iterate over rows of an image",null,null],[3,"RowsMut","","Iterate over mutable rows of an image",null,null],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",null,null],[10,"convert","","Converts `self` to a buffer of type T",21,[[]]],[0,"math","image","Mathematical helper functions and types.",null,null],[3,"Rect","image::math","A Rectangle defined by its top left corner, width and…",null,null],[12,"x","","The x coordinate of the top left corner.",22,null],[12,"y","","The y coordinate of the top left corner.",22,null],[12,"width","","The rectangle\'s width.",22,null],[12,"height","","The rectangle\'s height.",22,null],[0,"nq","","NEUQUANT Neural-Net quantization algorithm by Anthony…",null,null],[3,"NeuQuant","image::math::nq","Neural network color quantizer",null,null],[11,"new","","Creates a new neural network and trains it with the…",23,[[]]],[11,"init","","Initializes the neural network and trains it with the…",23,[[]]],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the…",23,[[]]],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",23,[[]]],[11,"lookup","","Lookup pixel values for color at `idx` in the colormap.",23,[[],["option",4]]],[0,"utils","image::math","Shared mathematical utility functions.",null,null],[5,"clamp","image::math::utils","Cut value to be inside given range",null,[[]]],[0,"imageops","image","Image Processing Functions",null,null],[4,"FilterType","image::imageops","Available Sampling Filters.",null,null],[13,"Nearest","","Nearest Neighbor",24,null],[13,"Triangle","","Linear Filter",24,null],[13,"CatmullRom","","Cubic Filter",24,null],[13,"Gaussian","","Gaussian Filter",24,null],[13,"Lanczos3","","Lanczos with window 3",24,null],[5,"flip_horizontal","","Flip an image horizontally",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"flip_horizontal_in_place","","Flip an image horizontally in place.",null,[[]]],[5,"flip_vertical","","Flip an image vertically",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"flip_vertical_in_place","","Flip an image vertically in place.",null,[[]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate180_in_place","","Rotate an image 180 degrees clockwise in place.",null,[[]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"rotate180_in","","Rotate an image 180 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate90_in","","Rotate an image 90 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"rotate270_in","","Rotate an image 270 degrees clockwise and put the result…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_horizontal_in","","Flip an image horizontally and put the result into the…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"flip_vertical_in","","Flip an image vertically and put the result into the…",null,[[["imagebuffer",3]],["imageresult",6]]],[5,"blur","","Performs a Gaussian blur on the supplied image. `sigma` is…",null,[[],[["vec",3],["imagebuffer",3]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. `kernel`…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"resize","","Resize the supplied image to the specified dimensions.…",null,[[["filtertype",4]],[["vec",3],["imagebuffer",3]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. `sigma`…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"crop","","Return a mutable view into an image",null,[[],["subimage",3]]],[5,"crop_imm","","Return an immutable view into an image",null,[[],["subimage",3]]],[5,"overlay_bounds","","Calculate the region that can be copied from top to bottom.",null,[[]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",null,[[]]],[5,"replace","","Replace the contents of an image at a given coordinate (x,…",null,[[]]],[0,"colorops","","Functions for altering and converting the color of pixelbufs",null,null],[3,"BiLevel","image::imageops::colorops","A bi-level color map",null,null],[5,"grayscale","","Convert the supplied image to grayscale",null,[[],[["luma",3],["vec",3],["imagebuffer",3]]]],[5,"invert","","Invert each pixel within the supplied image. This function…",null,[[]]],[5,"contrast","","Adjust the contrast of the supplied image. `contrast` is…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"brighten","","Brighten the supplied image. `value` is the amount to…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",null,[[],[["imagebuffer",3],["vec",3]]]],[5,"dither","","Reduces the colors of the image using the supplied…",null,[[["imagebuffer",3]]]],[5,"index_colors","","Reduces the colors using the supplied `color_map` and…",null,[[["imagebuffer",3]],[["imagebuffer",3],["vec",3],["luma",3]]]],[8,"ColorMap","","A color map",null,null],[16,"Color","","The color type on which the map operates on",25,null],[10,"index_of","","Returns the index of the closest match of `color` in the…",25,[[]]],[11,"lookup","","Looks up color by index in the color map. If `idx` is out…",25,[[],["option",4]]],[11,"has_lookup","","Determine if this implementation of ColorMap overrides the…",25,[[]]],[10,"map_color","","Maps `color` to the closest color in the color map.",25,[[]]],[0,"io","image","Input and output of images.",null,null],[3,"Reader","image::io","A multi-format image reader.",null,null],[11,"new","","Create a new image reader without a preset format.",26,[[]]],[11,"with_format","","Construct a reader with specified format.",26,[[["imageformat",4]]]],[11,"format","","Get the currently determined format.",26,[[],[["option",4],["imageformat",4]]]],[11,"set_format","","Supply the format as which to interpret the read image.",26,[[["imageformat",4]]]],[11,"clear_format","","Remove the current information on the image format.",26,[[]]],[11,"into_inner","","Unwrap the reader.",26,[[]]],[11,"open","","Open a file to read, format will be guessed from path.",26,[[],["result",6]]],[11,"with_guessed_format","","Make a format guess based on the content, replacing it on…",26,[[],["result",6]]],[11,"into_dimensions","","Read the image dimensions.",26,[[],["imageresult",6]]],[11,"decode","","Read the image (replaces `load`).",26,[[],[["imageresult",6],["dynamicimage",4]]]],[0,"flat","image","Image representations for ffi.",null,null],[3,"FlatSamples","image::flat","A flat buffer over a (multi channel) image.",null,null],[12,"samples","","Underlying linear container holding sample values.",27,null],[12,"layout","","A `repr(C)` description of the layout of buffer samples.",27,null],[12,"color_hint","","Supplementary color information.",27,null],[3,"SampleLayout","","A ffi compatible description of a sample buffer.",null,null],[12,"channels","","The number of channels in the color representation of the…",28,null],[12,"channel_stride","","Add this to an index to get to the sample in the next…",28,null],[12,"width","","The width of the represented image.",28,null],[12,"width_stride","","Add this to an index to get to the next sample in…",28,null],[12,"height","","The height of the represented image.",28,null],[12,"height_stride","","Add this to an index to get to the next sample in…",28,null],[3,"View","","A flat buffer that can be used as an image view.",null,null],[3,"ViewMut","","A mutable owning version of a flat buffer.",null,null],[4,"Error","","Denotes invalid flat sample buffers when trying to convert…",null,null],[13,"TooLarge","","The represented image was too large.",29,null],[13,"NormalFormRequired","","The represented image can not use this representation.",29,null],[13,"WrongColor","","The color format did not match the channel count.",29,null],[4,"NormalForm","","Different normal forms of buffers.",null,null],[13,"Unaliased","","No pixel aliases another.",30,null],[13,"PixelPacked","","At least pixels are packed.",30,null],[13,"ImagePacked","","All samples are packed.",30,null],[13,"RowMajorPacked","","The samples are in row-major form and all samples are…",30,null],[13,"ColumnMajorPacked","","The samples are in column-major form and all samples are…",30,null],[11,"row_major_packed","","Describe a row-major image packed in all directions.",28,[[]]],[11,"column_major_packed","","Describe a column-major image packed in all directions.",28,[[]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",28,[[]]],[11,"extents","","Get the dimensions `(channels, width, height)`.",28,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",28,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",28,[[],["option",4]]],[11,"fits","","Check if a buffer of length `len` is large enough.",28,[[]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",28,[[]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",28,[[["normalform",4]]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",28,[[]]],[11,"index","","Resolve the index of a particular sample.",28,[[],["option",4]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (channel, x, y).",28,[[],["option",4]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",28,[[]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",28,[[]]],[11,"strides_cwh","","Get the strides for indexing matrix-like `[(c, w, h)]`.",27,[[]]],[11,"extents","","Get the dimensions `(channels, width, height)`.",27,[[]]],[11,"bounds","","Tuple of bounds in the order of coordinate inputs.",27,[[]]],[11,"as_ref","","Get a reference based version.",27,[[],["flatsamples",3]]],[11,"as_mut","","Get a mutable reference based version.",27,[[],["flatsamples",3]]],[11,"to_vec","","Copy the data into an owned vector.",27,[[],[["flatsamples",3],["vec",3]]]],[11,"get_sample","","Get a reference to a single sample.",27,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a single sample.",27,[[],["option",4]]],[11,"as_view","","View this buffer as an image over some type of pixel.",27,[[],[["error",4],["result",4],["view",3]]]],[11,"as_view_with_mut_samples","","View this buffer but keep mutability at a sample level.",27,[[],[["view",3],["result",4],["error",4]]]],[11,"as_view_mut","","Interpret this buffer as a mutable image.",27,[[],[["viewmut",3],["result",4],["error",4]]]],[11,"as_slice","","View the samples as a slice.",27,[[]]],[11,"as_mut_slice","","View the samples as a slice.",27,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",27,[[],["option",4]]],[11,"image_mut_slice","","Mutable portion of the buffer that holds sample values.",27,[[],["option",4]]],[11,"try_into_buffer","","Move the data into an image buffer.",27,[[],[["imagebuffer",3],["result",4]]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",27,[[],["option",4]]],[11,"fits","","Check if a buffer of length `len` is large enough.",27,[[]]],[11,"has_aliased_samples","","If there are any samples aliasing each other.",27,[[]]],[11,"is_normal","","Check if a buffer fulfills the requirements of a normal…",27,[[["normalform",4]]]],[11,"in_bounds","","Check that the pixel and the channel index are in bounds.",27,[[]]],[11,"index","","Resolve the index of a particular sample.",27,[[],["option",4]]],[11,"index_ignoring_bounds","","Get the theoretical position of sample (x, y, channel).",27,[[],["option",4]]],[11,"in_bounds_index","","Get an index provided it is inbouds.",27,[[]]],[11,"shrink_to","","Shrink the image to the minimum of current and given…",27,[[]]],[11,"with_monocolor","","Create a monocolor image from a single pixel.",27,[[]]],[11,"into_inner","","Take out the sample buffer.",31,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the inner sample descriptor.",31,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",31,[[]]],[11,"get_sample","","Get a reference to a selected subpixel if it is in-bounds.",31,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected subpixel if it is…",31,[[],["option",4]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",31,[[]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",31,[[]]],[11,"image_mut_slice","","Return the mutable portion of the buffer that holds sample…",31,[[]]],[11,"shrink_to","","Shrink the inner image.",31,[[]]],[11,"try_upgrade","","Try to convert this into an image with mutable pixels.",31,[[],[["viewmut",3],["result",4]]]],[11,"into_inner","","Take out the sample buffer.",32,[[],["flatsamples",3]]],[11,"flat","","Get a reference on the sample buffer descriptor.",32,[[],["flatsamples",3]]],[11,"samples","","Get a reference on the inner buffer.",32,[[]]],[11,"min_length","","Get the minimum length of a buffer such that all in-bounds…",32,[[]]],[11,"get_sample","","Get a reference to a selected subpixel.",32,[[],["option",4]]],[11,"get_mut_sample","","Get a mutable reference to a selected sample.",32,[[],["option",4]]],[11,"image_slice","","Return the portion of the buffer that holds sample values.",32,[[]]],[11,"image_mut_slice","","Return the mutable buffer that holds sample values.",32,[[]]],[11,"shrink_to","","Shrink the inner image.",32,[[]]],[11,"new","image","Creates a new `Frames` from an implementation specific…",33,[[["box",3],["iterator",8]]]],[11,"collect_frames","","Steps through the iterator from the current frame until…",33,[[],[["vec",3],["imageresult",6]]]],[11,"new","","Contructs a new frame without any delay.",34,[[["rgbaimage",6]],["frame",3]]],[11,"from_parts","","Contructs a new frame",34,[[["rgbaimage",6],["delay",3]],["frame",3]]],[11,"delay","","Delay of this frame",34,[[],["delay",3]]],[11,"buffer","","Returns the image buffer",34,[[],["rgbaimage",6]]],[11,"into_buffer","","Returns the image buffer",34,[[],["rgbaimage",6]]],[11,"left","","Returns the x offset",34,[[]]],[11,"top","","Returns the y offset",34,[[]]],[11,"from_numer_denom_ms","","Create a delay from a ratio of milliseconds.",35,[[]]],[11,"from_saturating_duration","","Convert from a duration, clamped between 0 and an…",35,[[["duration",3]]]],[11,"numer_denom_ms","","The numerator and denominator of the delay in milliseconds.",35,[[]]],[11,"from_raw","","Contructs a buffer from a generic container (for example a…",36,[[],[["imagebuffer",3],["option",4]]]],[11,"into_raw","","Returns the underlying raw buffer",36,[[]]],[11,"dimensions","","The width and height of this image.",36,[[]]],[11,"width","","The width of this image.",36,[[]]],[11,"height","","The height of this image.",36,[[]]],[11,"pixels","","Returns an iterator over the pixels of this image.",36,[[],["pixels",3]]],[11,"rows","","Returns an iterator over the rows of this image.",36,[[],["rows",3]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator…",36,[[],["enumeratepixels",3]]],[11,"enumerate_rows","","Enumerates over the rows of the image. The iterator yields…",36,[[],["enumeraterows",3]]],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",36,[[]]],[11,"sample_layout","","Get the format of the buffer when viewed as a matrix of…",36,[[],["samplelayout",3]]],[11,"into_flat_samples","","Return the raw sample buffer with its stride an dimension…",36,[[],["flatsamples",3]]],[11,"as_flat_samples","","Return a view on the raw sample buffer.",36,[[],["flatsamples",3]]],[11,"as_flat_samples_mut","","Return a mutable view on the raw sample buffer.",36,[[],["flatsamples",3]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",36,[[],["pixelsmut",3]]],[11,"rows_mut","","Returns an iterator over the mutable rows of this image.",36,[[],["rowsmut",3]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator…",36,[[],["enumeratepixelsmut",3]]],[11,"enumerate_rows_mut","","Enumerates over the rows of the image. The iterator yields…",36,[[],["enumeraterowsmut",3]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",36,[[]]],[11,"put_pixel","","Puts a pixel at location `(x, y)`",36,[[]]],[11,"save","","Saves the buffer to a file at the path specified.",36,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the…",36,[[["imageformat",4]],["imageresult",6]]],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",36,[[],[["vec",3],["imagebuffer",3]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",36,[[],[["vec",3],["imagebuffer",3]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of…",36,[[],[["vec",3],["imagebuffer",3]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. Returns…",36,[[["vec",3]],[["option",4],["imagebuffer",3]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data…",36,[[],["vec",3]]],[11,"expand_palette","","Expands a color palette by re-using the existing buffer.…",36,[[["option",4]],["rgbaimage",6]]],[11,"bytes_per_pixel","","Returns the number of bytes contained in a pixel of…",6,[[]]],[11,"has_alpha","","Returns if there is an alpha channel.",6,[[]]],[11,"has_color","","Returns false if the color scheme is grayscale, true…",6,[[]]],[11,"bits_per_pixel","","Returns the number of bits contained in a pixel of…",6,[[]]],[11,"channel_count","","Returns the number of color channels that make up this pixel",6,[[]]],[11,"channel_count","","Get the number of channels for colors of this type.",7,[[]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels…",10,[[],["dynamicimage",4]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[],["dynamicimage",4]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[],["dynamicimage",4]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",10,[[],["dynamicimage",4]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma16","","Creates a dynamic image backed by a buffer of grey pixels.",10,[[],["dynamicimage",4]]],[11,"new_luma_a16","","Creates a dynamic image backed by a buffer of grey pixels…",10,[[],["dynamicimage",4]]],[11,"new_rgb16","","Creates a dynamic image backed by a buffer of RGB pixels.",10,[[],["dynamicimage",4]]],[11,"new_rgba16","","Creates a dynamic image backed by a buffer of RGBA pixels.",10,[[],["dynamicimage",4]]],[11,"from_decoder","","Decodes an encoded image into a dynamic image.",10,[[],["imageresult",6]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",10,[[],["rgbimage",6]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",10,[[],["rgbaimage",6]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",10,[[],[["vec",3],["bgr",3],["imagebuffer",3]]]],[11,"to_bgra","","Returns a copy of this image as an BGRA image.",10,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",10,[[],["grayimage",6]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",10,[[],["grayalphaimage",6]]],[11,"into_rgb","","Consume the image and returns a RGB image.",10,[[],["rgbimage",6]]],[11,"into_rgba","","Consume the image and returns a RGBA image.",10,[[],["rgbaimage",6]]],[11,"into_bgr","","Consume the image and returns a BGR image.",10,[[],[["vec",3],["bgr",3],["imagebuffer",3]]]],[11,"into_bgra","","Consume the image and returns a BGRA image.",10,[[],[["vec",3],["bgra",3],["imagebuffer",3]]]],[11,"into_luma","","Consume the image and returns a Luma image.",10,[[],["grayimage",6]]],[11,"into_luma_alpha","","Consume the image and returns a LumaA image.",10,[[],["grayalphaimage",6]]],[11,"crop","","Return a cut-out of this image delimited by the bounding…",10,[[],["dynamicimage",4]]],[11,"crop_imm","","Return a cut-out of this image delimited by the bounding…",10,[[],["dynamicimage",4]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",10,[[],[["option",4],["rgbimage",6]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",10,[[],[["option",4],["rgbimage",6]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",10,[[],[["option",4],["rgbaimage",6]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",10,[[],[["option",4],["rgbaimage",6]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",10,[[],[["option",4],["grayimage",6]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",10,[[],[["option",4],["grayimage",6]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an…",10,[[],[["grayalphaimage",6],["option",4]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with…",10,[[],[["grayalphaimage",6],["option",4]]]],[11,"as_rgb16","","Return a reference to an 16bit RGB image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_rgb16","","Return a mutable reference to an 16bit RGB image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_rgba16","","Return a reference to an 16bit RGBA image",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_mut_rgba16","","Return a mutable reference to an 16bit RGBA image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma16","","Return a reference to an 16bit Grayscale image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_luma16","","Return a mutable reference to an 16bit Grayscale image",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_luma_alpha16","","Return a reference to an 16bit Grayscale image with an…",10,[[],[["option",4],["imagebuffer",3]]]],[11,"as_mut_luma_alpha16","","Return a mutable reference to an 16bit Grayscale image…",10,[[],[["imagebuffer",3],["option",4]]]],[11,"as_flat_samples_u8","","Return a view on the raw sample buffer for 8 bit per…",10,[[],[["option",4],["flatsamples",3]]]],[11,"as_flat_samples_u16","","Return a view on the raw sample buffer for 16 bit per…",10,[[],[["option",4],["flatsamples",3]]]],[11,"to_bytes","","Return this image\'s pixels as a byte vector.",10,[[],["vec",3]]],[11,"color","","Return this image\'s color type.",10,[[],["colortype",4]]],[11,"grayscale","","Return a grayscale version of this image.",10,[[],["dynamicimage",4]]],[11,"invert","","Invert the colors of this image. This method operates…",10,[[]]],[11,"resize","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"resize_exact","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"thumbnail","","Scale this image down to fit within a specific size.…",10,[[],["dynamicimage",4]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new…",10,[[],["dynamicimage",4]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm.…",10,[[["filtertype",4]],["dynamicimage",4]]],[11,"blur","","Performs a Gaussian blur on this image. `sigma` is a…",10,[[],["dynamicimage",4]]],[11,"unsharpen","","Performs an unsharpen mask on this image. `sigma` is the…",10,[[],["dynamicimage",4]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",10,[[],["dynamicimage",4]]],[11,"adjust_contrast","","Adjust the contrast of this image. `contrast` is the…",10,[[],["dynamicimage",4]]],[11,"brighten","","Brighten the pixels of this image. `value` is the amount…",10,[[],["dynamicimage",4]]],[11,"huerotate","","Hue rotate the supplied image. `value` is the degrees to…",10,[[],["dynamicimage",4]]],[11,"flipv","","Flip this image vertically",10,[[],["dynamicimage",4]]],[11,"fliph","","Flip this image horizontally",10,[[],["dynamicimage",4]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",10,[[],["dynamicimage",4]]],[11,"write_to","","Encode this image and write it to `w`",10,[[["into",8],["imageoutputformat",4]],["imageresult",6]]],[11,"save","","Saves the buffer to a file at the path specified.",10,[[],["imageresult",6]]],[11,"save_with_format","","Saves the buffer to a file at the specified path in the…",10,[[["imageformat",4]],["imageresult",6]]],[11,"from_path","","Return the image format specified by the path\'s file…",8,[[],["imageresult",6]]],[11,"extensions_str","","Return a list of applicable extensions for this format.",8,[[]]],[11,"current","","A measure of completed decoding.",37,[[]]],[11,"total","","A measure of all necessary decoding work.",37,[[]]],[11,"remaining","","Calculate a measure for remaining decoding work.",37,[[]]],[11,"new","","Construct a new subimage",38,[[],["subimage",3]]],[11,"change_bounds","","Change the coordinates of this subimage.",38,[[]]],[11,"to_image","","Convert this subimage to an ImageBuffer",38,[[],[["imagebuffer",3],["vec",3]]]],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",null,null],[6,"GrayImage","","Sendable grayscale image buffer",null,null],[6,"RgbImage","","Sendable Rgb image buffer",null,null],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",null,null],[8,"AnimationDecoder","","AnimationDecoder trait",null,null],[10,"into_frames","","Consume the decoder producing a series of frames.",39,[[],["frames",3]]],[8,"GenericImage","","A trait for manipulating images.",null,null],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages in…",40,null],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",40,[[]]],[10,"put_pixel","","Put a pixel at location (x, y)",40,[[]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",40,[[]]],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",40,[[]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",40,[[],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to…",40,[[["rect",3]]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",40,[[]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",40,[[],["subimage",3]]],[8,"GenericImageView","","Trait to inspect an image.",null,null],[16,"Pixel","","The type of pixel.",41,null],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages in…",41,null],[10,"dimensions","","The width and height of this image.",41,[[]]],[11,"width","","The width of this image.",41,[[]]],[11,"height","","The height of this image.",41,[[]]],[10,"bounds","","The bounding rectangle of this image.",41,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",41,[[]]],[10,"get_pixel","","Returns the pixel located at (x, y)",41,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",41,[[]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",41,[[],["pixels",3]]],[10,"inner","","Returns a reference to the underlying image.",41,[[]]],[11,"view","","Returns an subimage that is an immutable view into this…",41,[[],["subimage",3]]],[8,"ImageDecoder","","The trait that all decoders implement",null,null],[16,"Reader","","The type of reader produced by `into_reader`.",42,null],[10,"dimensions","","Returns a tuple containing the width and height of the image",42,[[]]],[10,"color_type","","Returns the color type of the image data produced by this…",42,[[],["colortype",4]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",42,[[],["extendedcolortype",4]]],[10,"into_reader","","Returns a reader that can be used to obtain the bytes of…",42,[[],["imageresult",6]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",42,[[]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",42,[[]]],[11,"read_image","","Returns all the bytes in the image.",42,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",42,[[["fn",8]],["imageresult",6]]],[8,"ImageDecoderExt","","Specialized image decoding not be supported by all formats",null,null],[11,"read_rect","","Decode a rectangular section of the image; see…",43,[[],["imageresult",6]]],[10,"read_rect_with_progress","","Decode a rectangular section of the image, periodically…",43,[[["fn",8]],["imageresult",6]]],[8,"ImageEncoder","","The trait all encoders implement",null,null],[10,"write_image","","Writes all the bytes in an image to the encoder.",44,[[["colortype",4]],["imageresult",6]]],[8,"EncodableLayout","","Types which are safe to treat as an immutable byte slice…",null,null],[10,"as_bytes","","Get the bytes of this value.",45,[[]]],[8,"Primitive","","Primitive trait from old stdlib",null,null],[8,"Pixel","","A generalized pixel.",null,null],[16,"Subpixel","","The underlying subpixel type.",46,null],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",46,null],[11,"channel_count","","Returns the number of channels of this pixel type.",46,[[]]],[10,"channels","","Returns the components as a slice.",46,[[]]],[10,"channels_mut","","Returns the components as a mutable slice",46,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each…",46,null],[11,"color_model","","Returns a string that can help to interpret the meaning…",46,[[]]],[18,"COLOR_TYPE","","ColorType for this pixel format",46,null],[11,"color_type","","Returns the ColorType for this pixel format",46,[[],["colortype",4]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the…",46,[[]]],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If…",46,[[]]],[10,"from_slice","","Returns a view into a slice.",46,[[]]],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",46,[[]]],[10,"to_rgb","","Convert this pixel to RGB",46,[[],["rgb",3]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",46,[[],["rgba",3]]],[10,"to_luma","","Convert this pixel to luma",46,[[],["luma",3]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",46,[[],["lumaa",3]]],[10,"to_bgr","","Convert this pixel to BGR",46,[[],["bgr",3]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",46,[[],["bgra",3]]],[10,"map","","Apply the function `f` to each channel of this pixel.",46,[[]]],[10,"apply","","Apply the function `f` to each channel of this pixel.",46,[[]]],[10,"map_with_alpha","","Apply the function `f` to each channel except the alpha…",46,[[]]],[10,"apply_with_alpha","","Apply the function `f` to each channel except the alpha…",46,[[]]],[11,"map_without_alpha","","Apply the function `f` to each channel except the alpha…",46,[[]]],[11,"apply_without_alpha","","Apply the function `f` to each channel except the alpha…",46,[[]]],[10,"map2","","Apply the function `f` to each channel of this pixel and…",46,[[]]],[10,"apply2","","Apply the function `f` to each channel of this pixel and…",46,[[]]],[10,"invert","","Invert this pixel",46,[[]]],[10,"blend","","Blend the color of a given pixel into ourself, taking into…",46,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"into_iter","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"into_iter","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","image::error","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_string","","",16,[[],["string",3]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"to_string","","",15,[[],["string",3]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","image::buffer","",48,[[]]],[11,"into","","",48,[[]]],[11,"into_iter","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"into_iter","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"into_iter","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"into_iter","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"into_iter","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"into_iter","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"into_iter","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"into_iter","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","image::math","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","image::math::nq","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","image::imageops","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","image::imageops::colorops","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","image::io","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","image::flat","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"index_of","image::imageops::colorops","",56,[[["luma",3]]]],[11,"lookup","","",56,[[],["option",4]]],[11,"has_lookup","","Indicate NeuQuant implements `lookup`.",56,[[]]],[11,"map_color","","",56,[[["luma",3]]]],[11,"index_of","image::math::nq","",23,[[["rgba",3]]]],[11,"lookup","","",23,[[],["option",4]]],[11,"has_lookup","","Indicate NeuQuant implements `lookup`.",23,[[]]],[11,"map_color","","",23,[[["rgba",3]]]],[11,"convert","image","",36,[[],[["vec",3],["imagebuffer",3]]]],[11,"dimensions","image::flat","",31,[[]]],[11,"bounds","","",31,[[]]],[11,"in_bounds","","",31,[[]]],[11,"get_pixel","","",31,[[]]],[11,"inner","","",31,[[]]],[11,"dimensions","","",32,[[]]],[11,"bounds","","",32,[[]]],[11,"in_bounds","","",32,[[]]],[11,"get_pixel","","",32,[[]]],[11,"inner","","",32,[[]]],[11,"dimensions","image","",36,[[]]],[11,"bounds","","",36,[[]]],[11,"get_pixel","","",36,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds…",36,[[]]],[11,"inner","","",36,[[]]],[11,"dimensions","","",10,[[]]],[11,"bounds","","",10,[[]]],[11,"get_pixel","","",10,[[],["rgba",3]]],[11,"inner","","",10,[[]]],[11,"dimensions","","",38,[[]]],[11,"bounds","","",38,[[]]],[11,"get_pixel","","",38,[[]]],[11,"view","","",38,[[],["subimage",3]]],[11,"inner","","",38,[[]]],[11,"get_pixel_mut","image::flat","",32,[[]]],[11,"put_pixel","","",32,[[]]],[11,"blend_pixel","","",32,[[]]],[11,"inner_mut","","",32,[[]]],[11,"get_pixel_mut","image","",36,[[]]],[11,"put_pixel","","",36,[[]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",36,[[]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha…",36,[[]]],[11,"copy_within","","",36,[[["rect",3]]]],[11,"inner_mut","","",36,[[]]],[11,"put_pixel","","",10,[[["rgba",3]]]],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels…",10,[[["rgba",3]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",10,[[],["rgba",3]]],[11,"inner_mut","","",10,[[]]],[11,"get_pixel_mut","","",38,[[]]],[11,"put_pixel","","",38,[[]]],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel…",38,[[]]],[11,"sub_image","","",38,[[],["subimage",3]]],[11,"inner_mut","","",38,[[]]],[11,"channels","","",2,[[]]],[11,"channels_mut","","",2,[[]]],[11,"channels4","","",2,[[]]],[11,"from_channels","","",2,[[],["rgb",3]]],[11,"from_slice","","",2,[[],["rgb",3]]],[11,"from_slice_mut","","",2,[[],["rgb",3]]],[11,"to_rgb","","",2,[[],["rgb",3]]],[11,"to_bgr","","",2,[[],["bgr",3]]],[11,"to_rgba","","",2,[[],["rgba",3]]],[11,"to_bgra","","",2,[[],["bgra",3]]],[11,"to_luma","","",2,[[],["luma",3]]],[11,"to_luma_alpha","","",2,[[],["lumaa",3]]],[11,"map","","",2,[[],["rgb",3]]],[11,"apply","","",2,[[]]],[11,"map_with_alpha","","",2,[[],["rgb",3]]],[11,"apply_with_alpha","","",2,[[]]],[11,"map2","","",2,[[],["rgb",3]]],[11,"apply2","","",2,[[["rgb",3]]]],[11,"invert","","",2,[[]]],[11,"blend","","",2,[[["rgb",3]]]],[11,"channels","","",4,[[]]],[11,"channels_mut","","",4,[[]]],[11,"channels4","","",4,[[]]],[11,"from_channels","","",4,[[],["bgr",3]]],[11,"from_slice","","",4,[[],["bgr",3]]],[11,"from_slice_mut","","",4,[[],["bgr",3]]],[11,"to_rgb","","",4,[[],["rgb",3]]],[11,"to_bgr","","",4,[[],["bgr",3]]],[11,"to_rgba","","",4,[[],["rgba",3]]],[11,"to_bgra","","",4,[[],["bgra",3]]],[11,"to_luma","","",4,[[],["luma",3]]],[11,"to_luma_alpha","","",4,[[],["lumaa",3]]],[11,"map","","",4,[[],["bgr",3]]],[11,"apply","","",4,[[]]],[11,"map_with_alpha","","",4,[[],["bgr",3]]],[11,"apply_with_alpha","","",4,[[]]],[11,"map2","","",4,[[],["bgr",3]]],[11,"apply2","","",4,[[["bgr",3]]]],[11,"invert","","",4,[[]]],[11,"blend","","",4,[[["bgr",3]]]],[11,"channels","","",0,[[]]],[11,"channels_mut","","",0,[[]]],[11,"channels4","","",0,[[]]],[11,"from_channels","","",0,[[],["luma",3]]],[11,"from_slice","","",0,[[],["luma",3]]],[11,"from_slice_mut","","",0,[[],["luma",3]]],[11,"to_rgb","","",0,[[],["rgb",3]]],[11,"to_bgr","","",0,[[],["bgr",3]]],[11,"to_rgba","","",0,[[],["rgba",3]]],[11,"to_bgra","","",0,[[],["bgra",3]]],[11,"to_luma","","",0,[[],["luma",3]]],[11,"to_luma_alpha","","",0,[[],["lumaa",3]]],[11,"map","","",0,[[],["luma",3]]],[11,"apply","","",0,[[]]],[11,"map_with_alpha","","",0,[[],["luma",3]]],[11,"apply_with_alpha","","",0,[[]]],[11,"map2","","",0,[[],["luma",3]]],[11,"apply2","","",0,[[["luma",3]]]],[11,"invert","","",0,[[]]],[11,"blend","","",0,[[["luma",3]]]],[11,"channels","","",3,[[]]],[11,"channels_mut","","",3,[[]]],[11,"channels4","","",3,[[]]],[11,"from_channels","","",3,[[],["rgba",3]]],[11,"from_slice","","",3,[[],["rgba",3]]],[11,"from_slice_mut","","",3,[[],["rgba",3]]],[11,"to_rgb","","",3,[[],["rgb",3]]],[11,"to_bgr","","",3,[[],["bgr",3]]],[11,"to_rgba","","",3,[[],["rgba",3]]],[11,"to_bgra","","",3,[[],["bgra",3]]],[11,"to_luma","","",3,[[],["luma",3]]],[11,"to_luma_alpha","","",3,[[],["lumaa",3]]],[11,"map","","",3,[[],["rgba",3]]],[11,"apply","","",3,[[]]],[11,"map_with_alpha","","",3,[[],["rgba",3]]],[11,"apply_with_alpha","","",3,[[]]],[11,"map2","","",3,[[],["rgba",3]]],[11,"apply2","","",3,[[["rgba",3]]]],[11,"invert","","",3,[[]]],[11,"blend","","",3,[[["rgba",3]]]],[11,"channels","","",5,[[]]],[11,"channels_mut","","",5,[[]]],[11,"channels4","","",5,[[]]],[11,"from_channels","","",5,[[],["bgra",3]]],[11,"from_slice","","",5,[[],["bgra",3]]],[11,"from_slice_mut","","",5,[[],["bgra",3]]],[11,"to_rgb","","",5,[[],["rgb",3]]],[11,"to_bgr","","",5,[[],["bgr",3]]],[11,"to_rgba","","",5,[[],["rgba",3]]],[11,"to_bgra","","",5,[[],["bgra",3]]],[11,"to_luma","","",5,[[],["luma",3]]],[11,"to_luma_alpha","","",5,[[],["lumaa",3]]],[11,"map","","",5,[[],["bgra",3]]],[11,"apply","","",5,[[]]],[11,"map_with_alpha","","",5,[[],["bgra",3]]],[11,"apply_with_alpha","","",5,[[]]],[11,"map2","","",5,[[],["bgra",3]]],[11,"apply2","","",5,[[["bgra",3]]]],[11,"invert","","",5,[[]]],[11,"blend","","",5,[[["bgra",3]]]],[11,"channels","","",1,[[]]],[11,"channels_mut","","",1,[[]]],[11,"channels4","","",1,[[]]],[11,"from_channels","","",1,[[],["lumaa",3]]],[11,"from_slice","","",1,[[],["lumaa",3]]],[11,"from_slice_mut","","",1,[[],["lumaa",3]]],[11,"to_rgb","","",1,[[],["rgb",3]]],[11,"to_bgr","","",1,[[],["bgr",3]]],[11,"to_rgba","","",1,[[],["rgba",3]]],[11,"to_bgra","","",1,[[],["bgra",3]]],[11,"to_luma","","",1,[[],["luma",3]]],[11,"to_luma_alpha","","",1,[[],["lumaa",3]]],[11,"map","","",1,[[],["lumaa",3]]],[11,"apply","","",1,[[]]],[11,"map_with_alpha","","",1,[[],["lumaa",3]]],[11,"apply_with_alpha","","",1,[[]]],[11,"map2","","",1,[[],["lumaa",3]]],[11,"apply2","","",1,[[["lumaa",3]]]],[11,"invert","","",1,[[]]],[11,"blend","","",1,[[["lumaa",3]]]],[11,"from","image::error","",11,[[["error",3]],["imageerror",4]]],[11,"from","","",15,[[["imageformat",4]]]],[11,"from","","",15,[[["path",3]]]],[11,"from","","",16,[[["imageformathint",4]]]],[11,"from","","",11,[[["error",4]],["imageerror",4]]],[11,"from","image","",7,[[["colortype",4]]]],[11,"from","","",2,[[]]],[11,"from","","",4,[[]]],[11,"from","","",0,[[]]],[11,"from","","",3,[[]]],[11,"from","","",5,[[]]],[11,"from","","",1,[[]]],[11,"from","","",9,[[["imageformat",4]]]],[11,"next_back","image::buffer","",52,[[],["option",4]]],[11,"next_back","","",53,[[],["option",4]]],[11,"next_back","","",54,[[],[["option",4],["pixels",3]]]],[11,"next_back","","",55,[[],[["option",4],["pixelsmut",3]]]],[11,"len","","",52,[[]]],[11,"len","","",53,[[]]],[11,"len","","",54,[[]]],[11,"len","","",55,[[]]],[11,"len","","",48,[[]]],[11,"len","","",50,[[]]],[11,"len","","",49,[[]]],[11,"len","","",51,[[]]],[11,"next","image","",33,[[],[["imageresult",6],["option",4]]]],[11,"next","image::buffer","",52,[[],["option",4]]],[11,"next","","",53,[[],["option",4]]],[11,"next","","",54,[[],[["option",4],["pixels",3]]]],[11,"next","","",55,[[],[["option",4],["pixelsmut",3]]]],[11,"next","","",48,[[],["option",4]]],[11,"next","","",50,[[],["option",4]]],[11,"next","","",49,[[],["option",4]]],[11,"next","","",51,[[],["option",4]]],[11,"next","image","",47,[[],["option",4]]],[11,"clone","image::error","",12,[[],["unsupportederrorkind",4]]],[11,"clone","","",13,[[],["parametererrorkind",4]]],[11,"clone","","",14,[[],["limiterrorkind",4]]],[11,"clone","","",15,[[],["imageformathint",4]]],[11,"clone","image::math","",22,[[],["rect",3]]],[11,"clone","image::imageops::colorops","",56,[[],["bilevel",3]]],[11,"clone","image::imageops","",24,[[],["filtertype",4]]],[11,"clone","image::flat","",27,[[],["flatsamples",3]]],[11,"clone","","",28,[[],["samplelayout",3]]],[11,"clone","","",31,[[],["view",3]]],[11,"clone","","",32,[[],["viewmut",3]]],[11,"clone","","",29,[[],["error",4]]],[11,"clone","","",30,[[],["normalform",4]]],[11,"clone","image","",34,[[],["frame",3]]],[11,"clone","","",35,[[],["delay",3]]],[11,"clone","image::buffer","",52,[[],["pixels",3]]],[11,"clone","","",54,[[],["rows",3]]],[11,"clone","","",48,[[],["enumeratepixels",3]]],[11,"clone","","",50,[[],["enumeraterows",3]]],[11,"clone","image","",36,[[],["imagebuffer",3]]],[11,"clone","","",6,[[],["colortype",4]]],[11,"clone","","",7,[[],["extendedcolortype",4]]],[11,"clone","","",2,[[],["rgb",3]]],[11,"clone","","",4,[[],["bgr",3]]],[11,"clone","","",0,[[],["luma",3]]],[11,"clone","","",3,[[],["rgba",3]]],[11,"clone","","",5,[[],["bgra",3]]],[11,"clone","","",1,[[],["lumaa",3]]],[11,"clone","","",10,[[],["dynamicimage",4]]],[11,"clone","","",8,[[],["imageformat",4]]],[11,"clone","","",9,[[],["imageoutputformat",4]]],[11,"clone","","",37,[[],["progress",3]]],[11,"eq","image::error","",12,[[["unsupportederrorkind",4]]]],[11,"ne","","",12,[[["unsupportederrorkind",4]]]],[11,"eq","","",13,[[["parametererrorkind",4]]]],[11,"ne","","",13,[[["parametererrorkind",4]]]],[11,"eq","","",14,[[["limiterrorkind",4]]]],[11,"ne","","",14,[[["limiterrorkind",4]]]],[11,"eq","","",15,[[["imageformathint",4]]]],[11,"ne","","",15,[[["imageformathint",4]]]],[11,"eq","image::math","",22,[[["rect",3]]]],[11,"ne","","",22,[[["rect",3]]]],[11,"eq","image::flat","",28,[[["samplelayout",3]]]],[11,"ne","","",28,[[["samplelayout",3]]]],[11,"eq","","",29,[[["error",4]]]],[11,"ne","","",29,[[["error",4]]]],[11,"eq","","",30,[[["normalform",4]]]],[11,"eq","image","",35,[[["delay",3]]]],[11,"ne","","",35,[[["delay",3]]]],[11,"eq","","",36,[[["imagebuffer",3]]]],[11,"ne","","",36,[[["imagebuffer",3]]]],[11,"eq","","",6,[[["colortype",4]]]],[11,"ne","","",6,[[["colortype",4]]]],[11,"eq","","",7,[[["extendedcolortype",4]]]],[11,"ne","","",7,[[["extendedcolortype",4]]]],[11,"eq","","",2,[[["rgb",3]]]],[11,"ne","","",2,[[["rgb",3]]]],[11,"eq","","",4,[[["bgr",3]]]],[11,"ne","","",4,[[["bgr",3]]]],[11,"eq","","",0,[[["luma",3]]]],[11,"ne","","",0,[[["luma",3]]]],[11,"eq","","",3,[[["rgba",3]]]],[11,"ne","","",3,[[["rgba",3]]]],[11,"eq","","",5,[[["bgra",3]]]],[11,"ne","","",5,[[["bgra",3]]]],[11,"eq","","",1,[[["lumaa",3]]]],[11,"ne","","",1,[[["lumaa",3]]]],[11,"eq","","",8,[[["imageformat",4]]]],[11,"ne","","",8,[[["imageformat",4]]]],[11,"eq","","",9,[[["imageoutputformat",4]]]],[11,"ne","","",9,[[["imageoutputformat",4]]]],[11,"eq","","",37,[[["progress",3]]]],[11,"ne","","",37,[[["progress",3]]]],[11,"partial_cmp","image::flat","Compares the logical preconditions.",30,[[],[["option",4],["ordering",4]]]],[11,"partial_cmp","image","",35,[[["delay",3]],[["option",4],["ordering",4]]]],[11,"lt","","",35,[[["delay",3]]]],[11,"le","","",35,[[["delay",3]]]],[11,"gt","","",35,[[["delay",3]]]],[11,"ge","","",35,[[["delay",3]]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",36,[[]]],[11,"fmt","image::error","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","image::math","",22,[[["formatter",3]],["result",6]]],[11,"fmt","image::imageops","",24,[[["formatter",3]],["result",6]]],[11,"fmt","image::flat","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","image","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","image::error","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",16,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",19,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",18,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",17,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",20,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",15,[[["formatter",3]],[["error",3],["result",4]]]],[11,"index","image::flat","Return a reference to a single sample at specified…",27,[[]]],[11,"index","image","",36,[[]]],[11,"index","","",2,[[]]],[11,"index","","",4,[[]]],[11,"index","","",0,[[]]],[11,"index","","",3,[[]]],[11,"index","","",5,[[]]],[11,"index","","",1,[[]]],[11,"index_mut","image::flat","Return a mutable reference to a single sample at specified…",27,[[]]],[11,"index_mut","image","",36,[[]]],[11,"index_mut","","",2,[[]]],[11,"index_mut","","",4,[[]]],[11,"index_mut","","",0,[[]]],[11,"index_mut","","",3,[[]]],[11,"index_mut","","",5,[[]]],[11,"index_mut","","",1,[[]]],[11,"hash","image::error","",12,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",15,[[]]],[11,"hash","image::math","",22,[[]]],[11,"hash","image::flat","",28,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","image","",36,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",8,[[]]],[11,"source","image::error","",11,[[],[["error",8],["option",4]]]],[11,"source","","",19,[[],[["error",8],["option",4]]]],[11,"source","","",18,[[],[["error",8],["option",4]]]],[11,"source","","",17,[[],[["error",8],["option",4]]]],[11,"expand_palette","image","Expands a color palette by re-using the existing buffer.…",57,[[["option",4]],["rgbaimage",6]]],[11,"original_color_type","","Retuns the color type of the image file before decoding",42,[[],["extendedcolortype",4]]],[11,"total_bytes","","Returns the total number of bytes in the decoded image.",42,[[]]],[11,"scanline_bytes","","Returns the minimum number of bytes that can be…",42,[[]]],[11,"read_image","","Returns all the bytes in the image.",42,[[],["imageresult",6]]],[11,"read_image_with_progress","","Same as `read_image` but periodically calls the provided…",42,[[["fn",8]],["imageresult",6]]],[11,"read_rect","","Decode a rectangular section of the image; see…",43,[[],["imageresult",6]]],[11,"width","","The width of this image.",41,[[]]],[11,"height","","The height of this image.",41,[[]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside…",41,[[]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",41,[[]]],[11,"pixels","","Returns an Iterator over the pixels of this image. The…",41,[[],["pixels",3]]],[11,"view","","Returns an subimage that is an immutable view into this…",41,[[],["subimage",3]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",40,[[]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",40,[[],["imageresult",6]]],[11,"copy_within","","Copies all of the pixels from one part of this image to…",40,[[["rect",3]]]],[11,"sub_image","","Returns a mutable subimage that is a view into this image.…",40,[[],["subimage",3]]],[18,"CHANNEL_COUNT","","The number of channels of this pixel type.",46,null],[11,"channel_count","","Returns the number of channels of this pixel type.",46,[[]]],[18,"COLOR_MODEL","","A string that can help to interpret the meaning each…",46,null],[11,"color_model","","Returns a string that can help to interpret the meaning…",46,[[]]],[18,"COLOR_TYPE","","ColorType for this pixel format",46,null],[11,"color_type","","Returns the ColorType for this pixel format",46,[[],["colortype",4]]],[11,"map_without_alpha","","Apply the function `f` to each channel except the alpha…",46,[[]]],[11,"apply_without_alpha","","Apply the function `f` to each channel except the alpha…",46,[[]]]],"p":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"ColorType"],[4,"ExtendedColorType"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[4,"DynamicImage"],[4,"ImageError"],[4,"UnsupportedErrorKind"],[4,"ParameterErrorKind"],[4,"LimitErrorKind"],[4,"ImageFormatHint"],[3,"UnsupportedError"],[3,"DecodingError"],[3,"EncodingError"],[3,"ParameterError"],[3,"LimitError"],[8,"ConvertBuffer"],[3,"Rect"],[3,"NeuQuant"],[4,"FilterType"],[8,"ColorMap"],[3,"Reader"],[3,"FlatSamples"],[3,"SampleLayout"],[4,"Error"],[4,"NormalForm"],[3,"View"],[3,"ViewMut"],[3,"Frames"],[3,"Frame"],[3,"Delay"],[3,"ImageBuffer"],[3,"Progress"],[3,"SubImage"],[8,"AnimationDecoder"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"ImageDecoderExt"],[8,"ImageEncoder"],[8,"EncodableLayout"],[8,"Pixel"],[3,"Pixels"],[3,"EnumeratePixels"],[3,"EnumeratePixelsMut"],[3,"EnumerateRows"],[3,"EnumerateRowsMut"],[3,"Pixels"],[3,"PixelsMut"],[3,"Rows"],[3,"RowsMut"],[3,"BiLevel"],[6,"GrayImage"]]},\
"input":{"doc":"Libinput bindings for rust","i":[[3,"Libinput","input","Libinput context",null,null],[3,"SendEventsMode","","The send-event mode of a device defines when a device may…",null,null],[3,"Led","","Mask reflecting LEDs on a device.",null,null],[3,"DeviceGroup","","Device group",null,null],[3,"Device","","Representation of a single input device as seen by the…",null,null],[3,"Seat","","A seat has two identifiers, the physical name and the…",null,null],[4,"DeviceCapability","","Capabilities on a device.",null,null],[13,"Keyboard","","Keyboard capability",0,null],[13,"Pointer","","Pointer capability",0,null],[13,"Touch","","Touch capability",0,null],[13,"TabletTool","","TabletTool capability",0,null],[13,"TabletPad","","TabletPad capability",0,null],[13,"Gesture","","Gesture capability",0,null],[13,"Switch","","Switch capability",0,null],[4,"AccelProfile","","Pointer Acceleration Profile",null,null],[13,"Flat","","A flat acceleration profile.",1,null],[13,"Adaptive","","An adaptive acceleration profile.",1,null],[4,"ClickMethod","","The click method defines when to generate…",null,null],[13,"ButtonAreas","","Use software-button areas (see Clickfinger behavior) to…",2,null],[13,"Clickfinger","","The number of fingers decides which button press to…",2,null],[4,"ScrollMethod","","The scroll method of a device selects when to generate…",null,null],[13,"NoScroll","","Never send scroll events instead of pointer motion events.",3,null],[13,"TwoFinger","","Send scroll events when two fingers are logically down on…",3,null],[13,"Edge","","Send scroll events when a finger moves along the bottom or…",3,null],[13,"OnButtonDown","","Send scroll events when a button is down and the device…",3,null],[4,"DeviceConfigError","","Errors returned when applying configuration settings.",null,null],[13,"Unsupported","","Configuration not available on this device.",4,null],[13,"Invalid","","Invalid parameter range.",4,null],[4,"TapButtonMap","","Map 1/2/3 finger tips to buttons",null,null],[13,"LeftRightMiddle","","1/2/3 finger tap maps to left/right/middle",5,null],[13,"LeftMiddleRight","","1/2/3 finger tap maps to left/middle/right",5,null],[0,"ffi","","Unsafe c-api.",null,null],[6,"__int32_t","input::ffi","",null,null],[6,"__uint32_t","","",null,null],[6,"__uint64_t","","",null,null],[6,"va_list","","",null,null],[3,"udev","","",null,null],[3,"udev_device","","",null,null],[3,"libinput","","",null,null],[3,"libinput_device","","",null,null],[3,"libinput_device_group","","",null,null],[3,"libinput_seat","","",null,null],[3,"libinput_tablet_tool","","",null,null],[3,"libinput_event","","",null,null],[3,"libinput_event_device_notify","","",null,null],[3,"libinput_event_keyboard","","",null,null],[3,"libinput_event_pointer","","",null,null],[3,"libinput_event_touch","","",null,null],[3,"libinput_event_tablet_tool","","",null,null],[3,"libinput_event_tablet_pad","","",null,null],[17,"libinput_log_priority_LIBINPUT_LOG_PRIORITY_DEBUG","","",null,null],[17,"libinput_log_priority_LIBINPUT_LOG_PRIORITY_INFO","","",null,null],[17,"libinput_log_priority_LIBINPUT_LOG_PRIORITY_ERROR","","",null,null],[6,"libinput_log_priority","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_KEYBOARD","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_POINTER","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_TOUCH","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_TABLET_TOOL","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_TABLET_PAD","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_GESTURE","","",null,null],[17,"libinput_device_capability_LIBINPUT_DEVICE_CAP_SWITCH","","",null,null],[6,"libinput_device_capability","","",null,null],[17,"libinput_key_state_LIBINPUT_KEY_STATE_RELEASED","","",null,null],[17,"libinput_key_state_LIBINPUT_KEY_STATE_PRESSED","","",null,null],[6,"libinput_key_state","","",null,null],[17,"libinput_led_LIBINPUT_LED_NUM_LOCK","","",null,null],[17,"libinput_led_LIBINPUT_LED_CAPS_LOCK","","",null,null],[17,"libinput_led_LIBINPUT_LED_SCROLL_LOCK","","",null,null],[6,"libinput_led","","",null,null],[17,"libinput_button_state_LIBINPUT_BUTTON_STATE_RELEASED","","",null,null],[17,"libinput_button_state_LIBINPUT_BUTTON_STATE_PRESSED","","",null,null],[6,"libinput_button_state","","",null,null],[17,"libinput_pointer_axis_LIBINPUT_POINTER_AXIS_SCROLL_VERTICAL","","",null,null],[17,"libinput_pointer_axis_LIBINPUT_POINTER_AXIS_SCROLL_HORIZONTAL","","",null,null],[6,"libinput_pointer_axis","","",null,null],[17,"libinput_pointer_axis_source_LIBINPUT_POINTER_AXIS_SOURCE_WHEEL","","",null,null],[17,"libinput_pointer_axis_source_LIBINPUT_POINTER_AXIS_SOURCE_FINGER","","",null,null],[17,"libinput_pointer_axis_source_LIBINPUT_POINTER_AXIS_SOURCE_CONTINUOUS","","",null,null],[17,"libinput_pointer_axis_source_LIBINPUT_POINTER_AXIS_SOURCE_WHEEL_TILT","","",null,null],[6,"libinput_pointer_axis_source","","",null,null],[17,"libinput_tablet_pad_ring_axis_source_LIBINPUT_TABLET_PAD_RING_SOURCE_UNKNOWN","","",null,null],[17,"libinput_tablet_pad_ring_axis_source_LIBINPUT_TABLET_PAD_RING_SOURCE_FINGER","","",null,null],[6,"libinput_tablet_pad_ring_axis_source","","",null,null],[17,"libinput_tablet_pad_strip_axis_source_LIBINPUT_TABLET_PAD_STRIP_SOURCE_UNKNOWN","","",null,null],[17,"libinput_tablet_pad_strip_axis_source_LIBINPUT_TABLET_PAD_STRIP_SOURCE_FINGER","","",null,null],[6,"libinput_tablet_pad_strip_axis_source","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_PEN","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_ERASER","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_BRUSH","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_PENCIL","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_AIRBRUSH","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_MOUSE","","",null,null],[17,"libinput_tablet_tool_type_LIBINPUT_TABLET_TOOL_TYPE_LENS","","",null,null],[6,"libinput_tablet_tool_type","","",null,null],[17,"libinput_tablet_tool_proximity_state_LIBINPUT_TABLET_TOOL_PROXIMITY_STATE_OUT","","",null,null],[17,"libinput_tablet_tool_proximity_state_LIBINPUT_TABLET_TOOL_PROXIMITY_STATE_IN","","",null,null],[6,"libinput_tablet_tool_proximity_state","","",null,null],[17,"libinput_tablet_tool_tip_state_LIBINPUT_TABLET_TOOL_TIP_UP","","",null,null],[17,"libinput_tablet_tool_tip_state_LIBINPUT_TABLET_TOOL_TIP_DOWN","","",null,null],[6,"libinput_tablet_tool_tip_state","","",null,null],[3,"libinput_tablet_pad_mode_group","","",null,null],[5,"libinput_device_tablet_pad_get_num_mode_groups","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_device_tablet_pad_get_mode_group","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_get_index","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_get_num_modes","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_get_mode","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_has_button","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_has_ring","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_has_strip","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_button_is_toggle","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_ref","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_unref","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_set_user_data","","@ingroup tablet_pad_modes",null,[[]]],[5,"libinput_tablet_pad_mode_group_get_user_data","","@ingroup tablet_pad_modes",null,[[]]],[17,"libinput_switch_state_LIBINPUT_SWITCH_STATE_OFF","","",null,null],[17,"libinput_switch_state_LIBINPUT_SWITCH_STATE_ON","","",null,null],[6,"libinput_switch_state","","",null,null],[17,"libinput_switch_LIBINPUT_SWITCH_LID","","",null,null],[17,"libinput_switch_LIBINPUT_SWITCH_TABLET_MODE","","",null,null],[6,"libinput_switch","","",null,null],[3,"libinput_event_switch","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_NONE","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_DEVICE_ADDED","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_DEVICE_REMOVED","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_KEYBOARD_KEY","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_POINTER_MOTION","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_POINTER_MOTION_ABSOLUTE","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_POINTER_BUTTON","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_POINTER_AXIS","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TOUCH_DOWN","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TOUCH_UP","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TOUCH_MOTION","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TOUCH_CANCEL","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TOUCH_FRAME","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_TOOL_AXIS","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_TOOL_PROXIMITY","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_TOOL_TIP","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_TOOL_BUTTON","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_PAD_BUTTON","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_PAD_RING","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_TABLET_PAD_STRIP","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_GESTURE_SWIPE_BEGIN","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_GESTURE_SWIPE_UPDATE","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_GESTURE_SWIPE_END","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_GESTURE_PINCH_BEGIN","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_GESTURE_PINCH_UPDATE","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_GESTURE_PINCH_END","","",null,null],[17,"libinput_event_type_LIBINPUT_EVENT_SWITCH_TOGGLE","","",null,null],[6,"libinput_event_type","","",null,null],[5,"libinput_event_destroy","","@ingroup event",null,[[]]],[5,"libinput_event_get_type","","@ingroup event",null,[[]]],[5,"libinput_event_get_context","","@ingroup event",null,[[]]],[5,"libinput_event_get_device","","@ingroup event",null,[[]]],[5,"libinput_event_get_pointer_event","","@ingroup event",null,[[]]],[5,"libinput_event_get_keyboard_event","","@ingroup event",null,[[]]],[5,"libinput_event_get_touch_event","","@ingroup event",null,[[]]],[3,"libinput_event_gesture","","",null,null],[5,"libinput_event_get_gesture_event","","@ingroup event",null,[[]]],[5,"libinput_event_get_tablet_tool_event","","@ingroup event",null,[[]]],[5,"libinput_event_get_tablet_pad_event","","@ingroup event",null,[[]]],[5,"libinput_event_get_switch_event","","@ingroup event",null,[[]]],[5,"libinput_event_get_device_notify_event","","@ingroup event",null,[[]]],[5,"libinput_event_device_notify_get_base_event","","@ingroup event",null,[[]]],[5,"libinput_event_keyboard_get_time","","@ingroup event_keyboard",null,[[]]],[5,"libinput_event_keyboard_get_time_usec","","@ingroup event_keyboard",null,[[]]],[5,"libinput_event_keyboard_get_key","","@ingroup event_keyboard",null,[[]]],[5,"libinput_event_keyboard_get_key_state","","@ingroup event_keyboard",null,[[]]],[5,"libinput_event_keyboard_get_base_event","","@ingroup event_keyboard",null,[[]]],[5,"libinput_event_keyboard_get_seat_key_count","","@ingroup event_keyboard",null,[[]]],[5,"libinput_event_pointer_get_time","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_time_usec","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_dx","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_dy","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_dx_unaccelerated","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_dy_unaccelerated","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_absolute_x","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_absolute_y","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_absolute_x_transformed","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_absolute_y_transformed","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_button","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_button_state","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_seat_button_count","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_has_axis","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_axis_value","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_axis_source","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_axis_value_discrete","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_pointer_get_base_event","","@ingroup event_pointer",null,[[]]],[5,"libinput_event_touch_get_time","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_time_usec","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_slot","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_seat_slot","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_x","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_y","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_x_transformed","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_y_transformed","","@ingroup event_touch",null,[[]]],[5,"libinput_event_touch_get_base_event","","@ingroup event_touch",null,[[]]],[5,"libinput_event_gesture_get_time","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_time_usec","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_base_event","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_finger_count","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_cancelled","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_dx","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_dy","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_dx_unaccelerated","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_dy_unaccelerated","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_scale","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_gesture_get_angle_delta","","@ingroup event_gesture",null,[[]]],[5,"libinput_event_tablet_tool_get_base_event","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_x_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_y_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_pressure_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_distance_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_tilt_x_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_tilt_y_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_rotation_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_slider_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_wheel_has_changed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_x","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_y","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_dx","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_dy","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_pressure","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_distance","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_tilt_x","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_tilt_y","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_rotation","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_slider_position","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_wheel_delta","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_wheel_delta_discrete","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_x_transformed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_y_transformed","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_tool","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_proximity_state","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_tip_state","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_button","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_button_state","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_seat_button_count","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_time","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_tool_get_time_usec","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_get_type","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_get_tool_id","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_ref","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_unref","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_pressure","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_distance","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_tilt","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_rotation","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_slider","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_wheel","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_has_button","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_is_unique","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_get_serial","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_get_user_data","","@ingroup event_tablet",null,[[]]],[5,"libinput_tablet_tool_set_user_data","","@ingroup event_tablet",null,[[]]],[5,"libinput_event_tablet_pad_get_base_event","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_ring_position","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_ring_number","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_ring_source","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_strip_position","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_strip_number","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_strip_source","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_button_number","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_button_state","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_mode","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_mode_group","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_time","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_tablet_pad_get_time_usec","","@ingroup event_tablet_pad",null,[[]]],[5,"libinput_event_switch_get_switch","","@ingroup event_switch",null,[[]]],[5,"libinput_event_switch_get_switch_state","","@ingroup event_switch",null,[[]]],[5,"libinput_event_switch_get_base_event","","@ingroup event_switch",null,[[]]],[5,"libinput_event_switch_get_time","","@ingroup event_switch",null,[[]]],[5,"libinput_event_switch_get_time_usec","","@ingroup event_switch",null,[[]]],[3,"libinput_interface","","@ingroup base @struct libinput_interface",null,null],[12,"open_restricted","","Open the device at the given path with the flags provided…",6,null],[12,"close_restricted","","Close the file descriptor.",6,null],[5,"libinput_udev_create_context","","@ingroup base",null,[[]]],[5,"libinput_udev_assign_seat","","@ingroup base",null,[[]]],[5,"libinput_path_create_context","","@ingroup base",null,[[]]],[5,"libinput_path_add_device","","@ingroup base",null,[[]]],[5,"libinput_path_remove_device","","@ingroup base",null,[[]]],[5,"libinput_get_fd","","@ingroup base",null,[[]]],[5,"libinput_dispatch","","@ingroup base",null,[[]]],[5,"libinput_get_event","","@ingroup base",null,[[]]],[5,"libinput_next_event_type","","@ingroup base",null,[[]]],[5,"libinput_set_user_data","","@ingroup base",null,[[]]],[5,"libinput_get_user_data","","@ingroup base",null,[[]]],[5,"libinput_resume","","@ingroup base",null,[[]]],[5,"libinput_suspend","","@ingroup base",null,[[]]],[5,"libinput_ref","","@ingroup base",null,[[]]],[5,"libinput_unref","","@ingroup base",null,[[]]],[5,"libinput_log_set_priority","","@ingroup base",null,[[]]],[5,"libinput_log_get_priority","","@ingroup base",null,[[]]],[6,"libinput_log_handler","","@ingroup base",null,null],[5,"libinput_log_set_handler","","@ingroup base",null,[[["option",4]]]],[5,"libinput_seat_ref","","@ingroup seat",null,[[]]],[5,"libinput_seat_unref","","@ingroup seat",null,[[]]],[5,"libinput_seat_set_user_data","","@ingroup seat",null,[[]]],[5,"libinput_seat_get_user_data","","@ingroup seat",null,[[]]],[5,"libinput_seat_get_context","","@ingroup seat",null,[[]]],[5,"libinput_seat_get_physical_name","","@ingroup seat",null,[[]]],[5,"libinput_seat_get_logical_name","","@ingroup seat",null,[[]]],[5,"libinput_device_ref","","@ingroup device",null,[[]]],[5,"libinput_device_unref","","@ingroup device",null,[[]]],[5,"libinput_device_set_user_data","","@ingroup device",null,[[]]],[5,"libinput_device_get_user_data","","@ingroup device",null,[[]]],[5,"libinput_device_get_context","","@ingroup device",null,[[]]],[5,"libinput_device_get_device_group","","@ingroup device",null,[[]]],[5,"libinput_device_get_sysname","","@ingroup device",null,[[]]],[5,"libinput_device_get_name","","@ingroup device",null,[[]]],[5,"libinput_device_get_id_product","","@ingroup device",null,[[]]],[5,"libinput_device_get_id_vendor","","@ingroup device",null,[[]]],[5,"libinput_device_get_output_name","","@ingroup device",null,[[]]],[5,"libinput_device_get_seat","","@ingroup device",null,[[]]],[5,"libinput_device_set_seat_logical_name","","@ingroup device",null,[[]]],[5,"libinput_device_get_udev_device","","@ingroup device",null,[[]]],[5,"libinput_device_led_update","","@ingroup device",null,[[]]],[5,"libinput_device_has_capability","","@ingroup device",null,[[]]],[5,"libinput_device_get_size","","@ingroup device",null,[[]]],[5,"libinput_device_pointer_has_button","","@ingroup device",null,[[]]],[5,"libinput_device_keyboard_has_key","","@ingroup device",null,[[]]],[5,"libinput_device_switch_has_switch","","@ingroup device",null,[[]]],[5,"libinput_device_tablet_pad_get_num_buttons","","@ingroup device",null,[[]]],[5,"libinput_device_tablet_pad_get_num_rings","","@ingroup device",null,[[]]],[5,"libinput_device_tablet_pad_get_num_strips","","@ingroup device",null,[[]]],[5,"libinput_device_group_ref","","@ingroup device",null,[[]]],[5,"libinput_device_group_unref","","@ingroup device",null,[[]]],[5,"libinput_device_group_set_user_data","","@ingroup device",null,[[]]],[5,"libinput_device_group_get_user_data","","@ingroup device",null,[[]]],[17,"libinput_config_status_LIBINPUT_CONFIG_STATUS_SUCCESS","","",null,null],[17,"libinput_config_status_LIBINPUT_CONFIG_STATUS_UNSUPPORTED","","",null,null],[17,"libinput_config_status_LIBINPUT_CONFIG_STATUS_INVALID","","",null,null],[6,"libinput_config_status","","",null,null],[5,"libinput_config_status_to_str","","@ingroup config",null,[[]]],[17,"libinput_config_tap_state_LIBINPUT_CONFIG_TAP_DISABLED","","",null,null],[17,"libinput_config_tap_state_LIBINPUT_CONFIG_TAP_ENABLED","","",null,null],[6,"libinput_config_tap_state","","",null,null],[5,"libinput_device_config_tap_get_finger_count","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_set_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_default_enabled","","@ingroup config",null,[[]]],[17,"libinput_config_tap_button_map_LIBINPUT_CONFIG_TAP_MAP_LRM","","",null,null],[17,"libinput_config_tap_button_map_LIBINPUT_CONFIG_TAP_MAP_LMR","","",null,null],[6,"libinput_config_tap_button_map","","",null,null],[5,"libinput_device_config_tap_set_button_map","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_button_map","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_default_button_map","","@ingroup config",null,[[]]],[17,"libinput_config_drag_state_LIBINPUT_CONFIG_DRAG_DISABLED","","",null,null],[17,"libinput_config_drag_state_LIBINPUT_CONFIG_DRAG_ENABLED","","",null,null],[6,"libinput_config_drag_state","","",null,null],[5,"libinput_device_config_tap_set_drag_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_drag_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_default_drag_enabled","","@ingroup config",null,[[]]],[17,"libinput_config_drag_lock_state_LIBINPUT_CONFIG_DRAG_LOCK_DISABLED","","",null,null],[17,"libinput_config_drag_lock_state_LIBINPUT_CONFIG_DRAG_LOCK_ENABLED","","",null,null],[6,"libinput_config_drag_lock_state","","",null,null],[5,"libinput_device_config_tap_set_drag_lock_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_drag_lock_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_tap_get_default_drag_lock_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_calibration_has_matrix","","@ingroup config",null,[[]]],[5,"libinput_device_config_calibration_set_matrix","","@ingroup config",null,[[]]],[5,"libinput_device_config_calibration_get_matrix","","@ingroup config",null,[[]]],[5,"libinput_device_config_calibration_get_default_matrix","","@ingroup config",null,[[]]],[17,"libinput_config_send_events_mode_LIBINPUT_CONFIG_SEND_EVENTS_ENABLED","","",null,null],[17,"libinput_config_send_events_mode_LIBINPUT_CONFIG_SEND_EVENTS_DISABLED","","",null,null],[17,"libinput_config_send_events_mode_LIBINPUT_CONFIG_SEND_EVENTS_DISABLED_ON_EXTERNAL_MOUSE","","",null,null],[6,"libinput_config_send_events_mode","","",null,null],[5,"libinput_device_config_send_events_get_modes","","@ingroup config",null,[[]]],[5,"libinput_device_config_send_events_set_mode","","@ingroup config",null,[[]]],[5,"libinput_device_config_send_events_get_mode","","@ingroup config",null,[[]]],[5,"libinput_device_config_send_events_get_default_mode","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_is_available","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_set_speed","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_get_speed","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_get_default_speed","","@ingroup config",null,[[]]],[17,"libinput_config_accel_profile_LIBINPUT_CONFIG_ACCEL_PROFILE_NONE","","",null,null],[17,"libinput_config_accel_profile_LIBINPUT_CONFIG_ACCEL_PROFILE_FLAT","","",null,null],[17,"libinput_config_accel_profile_LIBINPUT_CONFIG_ACCEL_PROFILE_ADAPTIVE","","",null,null],[6,"libinput_config_accel_profile","","",null,null],[5,"libinput_device_config_accel_get_profiles","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_set_profile","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_get_profile","","@ingroup config",null,[[]]],[5,"libinput_device_config_accel_get_default_profile","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_has_natural_scroll","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_set_natural_scroll_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_get_natural_scroll_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_get_default_natural_scroll_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_left_handed_is_available","","@ingroup config",null,[[]]],[5,"libinput_device_config_left_handed_set","","@ingroup config",null,[[]]],[5,"libinput_device_config_left_handed_get","","@ingroup config",null,[[]]],[5,"libinput_device_config_left_handed_get_default","","@ingroup config",null,[[]]],[17,"libinput_config_click_method_LIBINPUT_CONFIG_CLICK_METHOD_NONE","","",null,null],[17,"libinput_config_click_method_LIBINPUT_CONFIG_CLICK_METHOD_BUTTON_AREAS","","",null,null],[17,"libinput_config_click_method_LIBINPUT_CONFIG_CLICK_METHOD_CLICKFINGER","","",null,null],[6,"libinput_config_click_method","","",null,null],[5,"libinput_device_config_click_get_methods","","@ingroup config",null,[[]]],[5,"libinput_device_config_click_set_method","","@ingroup config",null,[[]]],[5,"libinput_device_config_click_get_method","","@ingroup config",null,[[]]],[5,"libinput_device_config_click_get_default_method","","@ingroup config",null,[[]]],[17,"libinput_config_middle_emulation_state_LIBINPUT_CONFIG_MIDDLE_EMULATION_DISABLED","","",null,null],[17,"libinput_config_middle_emulation_state_LIBINPUT_CONFIG_MIDDLE_EMULATION_ENABLED","","",null,null],[6,"libinput_config_middle_emulation_state","","",null,null],[5,"libinput_device_config_middle_emulation_is_available","","@ingroup config",null,[[]]],[5,"libinput_device_config_middle_emulation_set_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_middle_emulation_get_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_middle_emulation_get_default_enabled","","@ingroup config",null,[[]]],[17,"libinput_config_scroll_method_LIBINPUT_CONFIG_SCROLL_NO_SCROLL","","",null,null],[17,"libinput_config_scroll_method_LIBINPUT_CONFIG_SCROLL_2FG","","",null,null],[17,"libinput_config_scroll_method_LIBINPUT_CONFIG_SCROLL_EDGE","","",null,null],[17,"libinput_config_scroll_method_LIBINPUT_CONFIG_SCROLL_ON_BUTTON_DOWN","","",null,null],[6,"libinput_config_scroll_method","","",null,null],[5,"libinput_device_config_scroll_get_methods","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_set_method","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_get_method","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_get_default_method","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_set_button","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_get_button","","@ingroup config",null,[[]]],[5,"libinput_device_config_scroll_get_default_button","","@ingroup config",null,[[]]],[17,"libinput_config_dwt_state_LIBINPUT_CONFIG_DWT_DISABLED","","",null,null],[17,"libinput_config_dwt_state_LIBINPUT_CONFIG_DWT_ENABLED","","",null,null],[6,"libinput_config_dwt_state","","",null,null],[5,"libinput_device_config_dwt_is_available","","@ingroup config",null,[[]]],[5,"libinput_device_config_dwt_set_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_dwt_get_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_dwt_get_default_enabled","","@ingroup config",null,[[]]],[5,"libinput_device_config_rotation_is_available","","@ingroup config",null,[[]]],[5,"libinput_device_config_rotation_set_angle","","@ingroup config",null,[[]]],[5,"libinput_device_config_rotation_get_angle","","@ingroup config",null,[[]]],[5,"libinput_device_config_rotation_get_default_angle","","@ingroup config",null,[[]]],[6,"__builtin_va_list","","",null,null],[3,"__va_list_tag","","",null,null],[12,"gp_offset","","",7,null],[12,"fp_offset","","",7,null],[12,"overflow_arg_area","","",7,null],[12,"reg_save_area","","",7,null],[11,"new_from_path","input","Create a new libinput context that requires the caller to…",8,[[["libinputinterface",8]],["libinput",3]]],[11,"path_add_device","","Add a device to a libinput context initialized with…",8,[[],[["option",4],["device",3]]]],[11,"path_remove_device","","Remove a device from a libinput context initialized with…",8,[[["device",3]]]],[11,"suspend","","Suspend monitoring for new devices and close existing…",8,[[]]],[11,"resume","","Resume a suspended libinput context.",8,[[],["result",4]]],[11,"dispatch","","Main event dispatchment function.",8,[[],["ioresult",6]]],[11,"fd","","libinput keeps a single file descriptor for all events.",8,[[],["rawfd",6]]],[11,"from_raw","","Create a new instance of this type from a raw pointer.",8,[[]]],[18,"ENABLED","","Send events from this device normally.",9,null],[18,"DISABLED","","Do not send events through this device.",9,null],[18,"DISABLED_ON_EXTERNAL_MOUSE","","If an external pointer device is plugged in, do not send…",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["sendeventsmode",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["sendeventsmode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[],[["option",4],["sendeventsmode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[],["sendeventsmode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[],["sendeventsmode",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["sendeventsmode",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["sendeventsmode",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["sendeventsmode",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["sendeventsmode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["sendeventsmode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["sendeventsmode",3]]]],[18,"NUMLOCK","","Num Lock Led",10,null],[18,"CAPSLOCK","","Caps Lock Led",10,null],[18,"SCROLLLOCK","","Scroll Lock Led",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["led",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["led",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[],[["led",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[],["led",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[],["led",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["led",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["led",3]]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["led",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["led",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["led",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["led",3]]]],[11,"context","","Get the libinput context from the device.",11,[[],["libinput",3]]],[11,"device_group","","Get the device group this device is assigned to.",11,[[],["devicegroup",3]]],[11,"sysname","","Get the system name of the device.",11,[[]]],[11,"name","","The descriptive device name as advertised by the kernel…",11,[[]]],[11,"output_name","","A device may be mapped to a single output, or all…",11,[[],["option",4]]],[11,"id_product","","Get the product ID for this device.",11,[[]]],[11,"id_vendor","","Get the vendor ID for this device.",11,[[]]],[11,"seat","","Get the seat associated with this input device, see Seats…",11,[[],["seat",3]]],[11,"set_seat_logical_name","","Change the logical seat associated with this device by…",11,[[],["result",4]]],[11,"led_update","","Update the LEDs on the device, if any.",11,[[["led",3]]]],[11,"has_capability","","Check if the given device has the specified capability.",11,[[["devicecapability",4]]]],[11,"size","","Get the physical size of a device in mm, where meaningful.",11,[[],["option",4]]],[11,"pointer_has_button","","Check if a `DeviceCapability::Pointer` device has a button…",11,[[],["result",4]]],[11,"keyboard_has_key","","Check if a `DeviceCapability::Keyboard` device has a key…",11,[[],["result",4]]],[11,"switch_has_switch","","Check if a `DeviceCapability::Switch` device has a switch…",11,[[["switch",4]],["result",4]]],[11,"tablet_pad_number_of_buttons","","Return the number of buttons on a device with the…",11,[[]]],[11,"tablet_pad_number_of_rings","","Return the number of rings a device with the…",11,[[]]],[11,"tablet_pad_number_of_strips","","Return the number of strips a device with the…",11,[[]]],[11,"tablet_pad_number_of_mode_groups","","Most devices only provide a single mode group, however…",11,[[]]],[11,"tablet_pad_mode_group","","Return the current mode this mode group is in.",11,[[],[["option",4],["tabletpadmodegroup",3]]]],[11,"config_accel_default_profile","","Return the default pointer acceleration profile for this…",11,[[],[["accelprofile",4],["option",4]]]],[11,"config_accel_profile","","Get the current pointer acceleration profile for this…",11,[[],[["accelprofile",4],["option",4]]]],[11,"config_accel_profiles","","Returns a bitmask of the configurable acceleration modes…",11,[[],[["accelprofile",4],["vec",3]]]],[11,"config_accel_set_profile","","Set the pointer acceleration profile of this pointer…",11,[[["accelprofile",4]],["deviceconfigresult",6]]],[11,"config_accel_default_speed","","Return the default speed setting for this device,…",11,[[]]],[11,"config_accel_speed","","Get the current pointer acceleration setting for this…",11,[[]]],[11,"config_accel_set_speed","","Set the pointer acceleration speed of this pointer device…",11,[[],["deviceconfigresult",6]]],[11,"config_accel_is_available","","Check if a device uses libinput-internal…",11,[[]]],[11,"config_calibration_default_matrix","","Return the default calibration matrix for this device.",11,[[],["option",4]]],[11,"config_calibration_matrix","","Return the current calibration matrix for this device.",11,[[],["option",4]]],[11,"config_calibration_has_matrix","","Check if the device can be calibrated via a calibration…",11,[[]]],[11,"config_calibration_set_matrix","","Apply the 3x3 transformation matrix to absolute device…",11,[[],["deviceconfigresult",6]]],[11,"config_click_default_method","","Get the default button click method for this device.",11,[[],[["option",4],["clickmethod",4]]]],[11,"config_click_method","","Get the button click method for this device.",11,[[],[["option",4],["clickmethod",4]]]],[11,"config_click_methods","","Check which button click methods a device supports.",11,[[],[["clickmethod",4],["vec",3]]]],[11,"config_click_set_method","","Set the button click method for this device.",11,[[["clickmethod",4]],["deviceconfigresult",6]]],[11,"config_dwt_default_enabled","","Check if the disable-while typing feature is enabled on…",11,[[]]],[11,"config_dwt_enabled","","Check if the disable-while typing feature is currently…",11,[[]]],[11,"config_dwt_is_available","","Check if this device supports configurable…",11,[[]]],[11,"config_dwt_set_enabled","","Enable or disable the disable-while-typing feature.",11,[[],["deviceconfigresult",6]]],[11,"config_left_handed","","Get the current left-handed configuration of the device.",11,[[]]],[11,"config_left_handed_default","","Get the default left-handed configuration of the device.",11,[[]]],[11,"config_left_handed_is_available","","Check if a device has a configuration that supports…",11,[[]]],[11,"config_left_handed_set","","Set the left-handed configuration of the device.",11,[[],["deviceconfigresult",6]]],[11,"config_middle_emulation_default_enabled","","Check if configurable middle button emulation is enabled…",11,[[]]],[11,"config_middle_emulation_enabled","","Check if configurable middle button emulation is enabled…",11,[[]]],[11,"config_middle_emulation_is_available","","Check if middle mouse button emulation configuration is…",11,[[]]],[11,"config_middle_emulation_set_enabled","","Enable or disable middle button emulation on this device.",11,[[],["deviceconfigresult",6]]],[11,"config_rotation_angle","","Get the current rotation of a device in degrees clockwise…",11,[[]]],[11,"config_rotation_default_angle","","Get the default rotation of a device in degrees clockwise…",11,[[]]],[11,"config_rotation_is_available","","Check whether a device can have a custom rotation applied.",11,[[]]],[11,"config_rotation_set_angle","","Set the rotation of a device in degrees clockwise off the…",11,[[],["deviceconfigresult",6]]],[11,"config_scroll_button","","Get the button for the `ScrollMethod::OnButtonDown` method…",11,[[]]],[11,"config_scroll_default_button","","Get the default button for the…",11,[[]]],[11,"config_scroll_default_method","","Get the default scroll method for this device.",11,[[],["scrollmethod",4]]],[11,"config_scroll_method","","Get the scroll method for this device.",11,[[],["scrollmethod",4]]],[11,"config_scroll_methods","","Check which scroll methods a device supports.",11,[[],[["scrollmethod",4],["vec",3]]]],[11,"config_scroll_set_method","","Set the scroll method for this device.",11,[[["scrollmethod",4]],["deviceconfigresult",6]]],[11,"config_scroll_default_natural_scroll_enabled","","Get the default mode for scrolling on this device.",11,[[]]],[11,"config_scroll_natural_scroll_enabled","","Get the current mode for scrolling on this device.",11,[[]]],[11,"config_scroll_has_natural_scroll","","Return non-zero if the device supports \\\"natural scrolling\\\".",11,[[]]],[11,"config_scroll_set_natural_scroll_enabled","","Enable or disable natural scrolling on the device.",11,[[],["deviceconfigresult",6]]],[11,"config_scroll_set_button","","Set the button for the `ScrollMethod::OnButtonDown` method…",11,[[],["deviceconfigresult",6]]],[11,"config_send_events_mode","","Get the send-event mode for this device.",11,[[],["sendeventsmode",3]]],[11,"config_send_events_modes","","Return the possible send-event modes for this device.",11,[[],["sendeventsmode",3]]],[11,"config_send_events_set_mode","","Set the send-event mode for this device.",11,[[["sendeventsmode",3]],["deviceconfigresult",6]]],[11,"config_tap_button_map","","Get the finger number to button number mapping for…",11,[[],[["option",4],["tapbuttonmap",4]]]],[11,"config_tap_default_button_map","","Get the default finger number to button number mapping for…",11,[[],[["option",4],["tapbuttonmap",4]]]],[11,"config_tap_default_drag_enabled","","Return whether tap-and-drag is enabled or disabled by…",11,[[]]],[11,"config_tap_default_drag_lock_enabled","","Check if drag-lock during tapping is enabled by default on…",11,[[]]],[11,"config_tap_default_enabled","","Return the default setting for whether tap-to-click is…",11,[[]]],[11,"config_tap_drag_enabled","","Return whether tap-and-drag is enabled or disabled on this…",11,[[]]],[11,"config_tap_drag_lock_enabled","","Check if drag-lock during tapping is enabled on this device.",11,[[]]],[11,"config_tap_enabled","","Check if tap-to-click is enabled on this device.",11,[[]]],[11,"config_tap_finger_count","","Check if the device supports tap-to-click and how many…",11,[[]]],[11,"config_tap_set_button_map","","Set the finger number to button number mapping for…",11,[[["tapbuttonmap",4]],["deviceconfigresult",6]]],[11,"config_tap_set_drag_enabled","","Enable or disable tap-and-drag on this device.",11,[[],["deviceconfigresult",6]]],[11,"config_tap_set_drag_lock_enabled","","Enable or disable drag-lock during tapping on this device.",11,[[],["deviceconfigresult",6]]],[11,"config_tap_set_enabled","","Enable or disable tap-to-click on this device, with a…",11,[[],["deviceconfigresult",6]]],[0,"event","","Libinput Events",null,null],[4,"Event","input::event","A libinput `Event`",null,null],[13,"Device","","A device related `Event`",12,null],[13,"Keyboard","","A keyboard related `Event`",12,null],[13,"Pointer","","A pointer related `Event`",12,null],[13,"Touch","","A touch related `Event`",12,null],[13,"Tablet","","A tablet related `Event`",12,null],[13,"TabletPad","","A tabled pad related `Event`",12,null],[13,"Gesture","","A gesture related `Event`",12,null],[13,"Switch","","A switch related `Event`",12,null],[0,"device","","Device event types",null,null],[3,"DeviceAddedEvent","input::event::device","Signals that a device has been added to the context.",null,null],[3,"DeviceRemovedEvent","","Signals that a device has been added to the context.",null,null],[4,"DeviceEvent","","A device related `Event`",null,null],[13,"Added","","Signals that a device has been added to the context.",13,null],[13,"Removed","","Signals that a device has been removed.",13,null],[8,"DeviceEventTrait","","Common functions all Device-Events implement.",null,null],[11,"into_device_event","","Convert into a general `DeviceEvent` again",14,[[],["deviceevent",4]]],[0,"gesture","input::event","Gesture event types",null,null],[3,"GestureSwipeBeginEvent","input::event::gesture","Swipe gesture began",null,null],[3,"GestureSwipeUpdateEvent","","In-progress swipe gesture updated",null,null],[3,"GestureSwipeEndEvent","","Swipe gesture ended",null,null],[3,"GesturePinchBeginEvent","","Pinch gesture began",null,null],[3,"GesturePinchUpdateEvent","","In-progress pinch gesture updated",null,null],[3,"GesturePinchEndEvent","","Pinch gesture ended",null,null],[4,"GestureEvent","","A gesture related `Event`",null,null],[13,"Swipe","","A swipe gesture `Event`",15,null],[13,"Pinch","","A pinch gesture `Event`",15,null],[4,"GestureSwipeEvent","","Events for swipe gestures",null,null],[13,"Begin","","Swipe gesture began",16,null],[13,"Update","","In-progress swipe gesture updated",16,null],[13,"End","","Swipe gesture ended",16,null],[4,"GesturePinchEvent","","Events for pinch gestures",null,null],[13,"Begin","","Pinch gesture began",17,null],[13,"Update","","In-progress pinch gesture updated",17,null],[13,"End","","Pinch gesture ended",17,null],[8,"GestureEventTrait","","Common functions all Gesture-Events implement.",null,null],[11,"time","","The event time for this event",18,[[]]],[11,"time_usec","","The event time for this event in microseconds",18,[[]]],[11,"finger_count","","Return the number of fingers used for a gesture.",18,[[]]],[11,"into_gesture_event","","Convert into a general `GestureEvent` again",18,[[],["gestureevent",4]]],[8,"GestureEventCoordinates","","Common functions for Gesture-Events having coordinates.",null,null],[11,"dx","","Return the delta between the last event and the current…",19,[[]]],[11,"dx_unaccelerated","","Return the relative delta of the unaccelerated motion…",19,[[]]],[11,"dy","","Return the delta between the last event and the current…",19,[[]]],[11,"dy_unaccelerated","","Return the relative delta of the unaccelerated motion…",19,[[]]],[8,"GestureEndEvent","","Common functions for events noting the end of a gesture",null,null],[11,"cancelled","","Return if the gesture ended normally, or if it was…",20,[[]]],[8,"GestureSwipeEventTrait","","Common functions for swipe gesture events",null,null],[11,"into_gesture_swipe_event","","Convert into a general `GestureSwipeEvent`",21,[[],["gestureswipeevent",4]]],[8,"GesturePinchEventTrait","","Common functions for pinch gesture events",null,null],[11,"scale","","Return the absolute scale of a pinch gesture, the scale is…",22,[[]]],[11,"into_gesture_pinch_event","","Convert into a general `GesturePinchEvent`",22,[[],["gesturepinchevent",4]]],[11,"angle_delta","","Return the angle delta in degrees between the last and the…",23,[[]]],[0,"keyboard","input::event","Keyboard event types",null,null],[3,"KeyboardKeyEvent","input::event::keyboard","An event related to pressing a key",null,null],[4,"KeyState","","State of a Key",null,null],[13,"Pressed","","Key is pressed",24,null],[13,"Released","","Key is released",24,null],[4,"KeyboardEvent","","A keyboard related `Event`",null,null],[13,"Key","","An event related to pressing a key",25,null],[8,"KeyboardEventTrait","","Common functions for all Keyboard-Events implement.",null,null],[11,"time","","The event time for this event",26,[[]]],[11,"time_usec","","The event time for this event in microseconds",26,[[]]],[11,"key","","The keycode that triggered this key event",26,[[]]],[11,"key_state","","The state change of the key",26,[[],["keystate",4]]],[11,"into_keyboard_event","","Convert into a general `KeyboardEvent` again",26,[[],["keyboardevent",4]]],[11,"seat_key_count","","For the key of a `KeyboardKeyEvent` event, return the…",27,[[]]],[0,"pointer","input::event","Pointer event types",null,null],[3,"PointerMotionEvent","input::event::pointer","An event related to moving a pointer",null,null],[3,"PointerMotionAbsoluteEvent","","An event related to absolute pointer movement",null,null],[3,"PointerButtonEvent","","An event related to button pressed on a pointer device",null,null],[3,"PointerAxisEvent","","An event related to moving axis on a pointer device",null,null],[4,"PointerEvent","","A pointer related `Event`",null,null],[13,"Motion","","An event related to moving a pointer",28,null],[13,"MotionAbsolute","","An event related to absolute pointer movement",28,null],[13,"Button","","An event related to button pressed on a pointer device",28,null],[13,"Axis","","An event related to moving axis on a pointer device",28,null],[4,"ButtonState","","State of a Button",null,null],[13,"Pressed","","Button is pressed",29,null],[13,"Released","","Button is released",29,null],[4,"AxisSource","","The source for a `PointerAxisEvent`.",null,null],[13,"Wheel","","The event is caused by the rotation of a wheel.",30,null],[13,"Finger","","The event is caused by the movement of one or more fingers…",30,null],[13,"Continuous","","The event is caused by the motion of some device.",30,null],[13,"WheelTilt","","The event is caused by the tilting of a mouse wheel rather…",30,null],[4,"Axis","","Axes on a device with the pointer capability that are not…",null,null],[13,"Vertical","","Vertical axis",31,null],[13,"Horizontal","","Horizontal axis",31,null],[8,"PointerEventTrait","","Common functions for all Pointer-Events implement.",null,null],[11,"time","","The event time for this event",32,[[]]],[11,"time_usec","","The event time for this event in microseconds",32,[[]]],[11,"into_pointer_event","","Convert into a general `TouchEvent` again",32,[[],["pointerevent",4]]],[11,"dx","","Return the delta between the last event and the current…",33,[[]]],[11,"dx_unaccelerated","","Return the relative delta of the unaccelerated motion…",33,[[]]],[11,"dy","","Return the delta between the last event and the current…",33,[[]]],[11,"dy_unaccelerated","","Return the relative delta of the unaccelerated motion…",33,[[]]],[11,"absolute_x","","Return the current absolute x coordinate of the pointer…",34,[[]]],[11,"absolute_y","","Return the current absolute y coordinate of the pointer…",34,[[]]],[11,"absolute_x_transformed","","Return the current absolute x coordinate of the pointer…",34,[[]]],[11,"absolute_y_transformed","","Return the current absolute y coordinate of the pointer…",34,[[]]],[11,"button","","Return the button that triggered this event.",35,[[]]],[11,"seat_button_count","","For the button returns the total number of buttons pressed…",35,[[]]],[11,"button_state","","Return the button state that triggered this event.",35,[[],["buttonstate",4]]],[11,"has_axis","","Check if the event has a valid value for the given axis.",36,[[["axis",4]]]],[11,"axis_source","","Return the source for a given axis event.",36,[[],["axissource",4]]],[11,"axis_value","","Return the axis value of the given axis.",36,[[["axis",4]]]],[11,"axis_value_discrete","","Return the axis value in discrete steps for a given axis…",36,[[["axis",4]],["option",4]]],[0,"switch","input::event","Switch event types",null,null],[3,"SwitchToggleEvent","input::event::switch","An event related a switch, that was toggled",null,null],[4,"SwitchEvent","","A switch related `Event`",null,null],[13,"Toggle","","An event related a switch, that was toggled",37,null],[4,"Switch","","Types of Switches",null,null],[13,"Lid","","The laptop lid was closed when the `SwitchState` is `On`,…",38,null],[13,"TabletMode","","This switch indicates whether the device is in normal…",38,null],[4,"SwitchState","","State of a Switch",null,null],[13,"Off","","Switch is off",39,null],[13,"On","","Switch is on",39,null],[8,"SwitchEventTrait","","Common functions all Switch-Events implement.",null,null],[11,"time","","The event time for this event",40,[[]]],[11,"time_usec","","The event time for this event in microseconds",40,[[]]],[11,"into_switch_event","","Convert into a general `SwitchEvent` again",40,[[],["switchevent",4]]],[11,"switch","","Return the switch that triggered this event.",41,[[],["switch",4]]],[11,"switch_state","","Return the switch state that triggered this event.",41,[[],["switchstate",4]]],[0,"tablet_tool","input::event","Tablet tool event types",null,null],[3,"TabletTool","input::event::tablet_tool","An object representing a tool being used by a device with…",null,null],[3,"TabletToolAxisEvent","","One or more axes have changed state on a device with the…",null,null],[3,"TabletToolProximityEvent","","Signals that a tool has come in or out of proximity of a…",null,null],[3,"TabletToolTipEvent","","Signals that a tool has come in contact with the surface…",null,null],[3,"TabletToolButtonEvent","","Signals that a tool has changed a logical button state on…",null,null],[4,"TabletToolType","","Available tool types for a device with the…",null,null],[13,"Pen","","A generic pen.",42,null],[13,"Eraser","","Eraser.",42,null],[13,"Brush","","A paintbrush-like tool.",42,null],[13,"Pencil","","Physical drawing tool, e.g. Wacom Inking Pen",42,null],[13,"Airbrush","","An airbrush-like tool.",42,null],[13,"Mouse","","A mouse bound to the tablet.",42,null],[13,"Lens","","A mouse tool with a lens.",42,null],[4,"TabletToolEvent","","An event related to a tablet tool",null,null],[13,"Axis","","One or more axes have changed state on a device with the…",43,null],[13,"Proximity","","Signals that a tool has come in or out of proximity of a…",43,null],[13,"Tip","","Signals that a tool has come in contact with the surface…",43,null],[13,"Button","","Signals that a tool has changed a logical button state on…",43,null],[4,"ProximityState","","The state of proximity for a tool on a device.",null,null],[13,"Out","","Out of proximity",44,null],[13,"In","","In proximity",44,null],[4,"TipState","","The tip contact state for a tool on a device.",null,null],[13,"Up","","Not touching the surface",45,null],[13,"Down","","Touching the surface",45,null],[11,"serial","","Return the serial number of a tool.",46,[[]]],[11,"tool_id","","Return the tool ID for a tool object.",46,[[]]],[11,"tool_type","","Return the tool type for a tool object, see…",46,[[],["tablettooltype",4]]],[11,"has_button","","Check if a tablet tool has a button with the passed-in…",46,[[]]],[11,"has_distance","","Return whether the tablet tool supports distance.",46,[[]]],[11,"has_pressure","","Return whether the tablet tool supports pressure.",46,[[]]],[11,"has_rotation","","Return whether the tablet tool supports z-rotation.v",46,[[]]],[11,"has_slider","","Return whether the tablet tool has a slider axis.",46,[[]]],[11,"has_tilt","","Return whether the tablet tool supports tilt.",46,[[]]],[11,"has_wheel","","Return whether the tablet tool has a relative wheel.",46,[[]]],[11,"is_unique","","Returns `true` if the physical tool can be uniquely…",46,[[]]],[8,"TabletToolEventTrait","","Common functions all TabletTool-Events implement.",null,null],[11,"time","","The event time for this event",47,[[]]],[11,"time_usec","","The event time for this event in microseconds",47,[[]]],[11,"distance_has_changed","","Check if the distance axis was updated in this event.",47,[[]]],[11,"distance","","Returns the current distance from the tablet\'s sensor,…",47,[[]]],[11,"dx","","Return the delta between the last event and the current…",47,[[]]],[11,"dy","","Return the delta between the last event and the current…",47,[[]]],[11,"pressure_has_changed","","Check if the pressure axis was updated in this event. For…",47,[[]]],[11,"pressure","","Returns the current pressure being applied on the tool in…",47,[[]]],[11,"rotation_has_changed","","Check if the z-rotation axis was updated in this event.",47,[[]]],[11,"rotation","","Returns the current z rotation of the tool in degrees,…",47,[[]]],[11,"slider_has_changed","","Check if the slider axis was updated in this event.",47,[[]]],[11,"slider_position","","Returns the current position of the slider on the tool,…",47,[[]]],[11,"tilt_x_has_changed","","Check if the tilt x axis was updated in this event.",47,[[]]],[11,"tilt_y_has_changed","","Check if the tilt y axis was updated in this event.",47,[[]]],[11,"tilt_x","","Returns the current tilt along the X axis of the tablet\'s…",47,[[]]],[11,"tilt_y","","Returns the current tilt along the Y axis of the tablet\'s…",47,[[]]],[11,"wheel_has_changed","","Check if the wheel axis was updated in this event.",47,[[]]],[11,"wheel_delta","","Return the delta for the wheel in degrees.",47,[[]]],[11,"wheel_delta_discrete","","Return the delta for the wheel in discrete steps (e.g.…",47,[[]]],[11,"x_has_changed","","Check if the x axis was updated in this event.",47,[[]]],[11,"y_has_changed","","Check if the y axis was updated in this event.",47,[[]]],[11,"x","","Returns the X coordinate of the tablet tool, in mm from…",47,[[]]],[11,"y","","Returns the Y coordinate of the tablet tool, in mm from…",47,[[]]],[11,"x_transformed","","Return the current absolute x coordinate of the tablet…",47,[[]]],[11,"y_transformed","","Return the current absolute y coordinate of the tablet…",47,[[]]],[11,"tool","","Returns the tool that was in use during this event.",47,[[],["tablettool",3]]],[11,"into_tablet_tool_event","","Convert into a general `TabletToolEvent` again",47,[[],["tablettoolevent",4]]],[11,"proximity_state","","Returns the new proximity state of a tool from a proximity…",48,[[],["proximitystate",4]]],[11,"tip_state","","Returns the new tip state of a tool from a tip event.",49,[[],["tipstate",4]]],[11,"button","","Return the button that triggered this event.",50,[[]]],[11,"seat_button_count","","For the button of a `TabletToolButtonEvent`, return the…",50,[[]]],[11,"button_state","","Return the button state of the event.",50,[[],["buttonstate",4]]],[0,"tablet_pad","input::event","Tablet pad event types",null,null],[3,"TabletPadModeGroup","input::event::tablet_pad","A mode on a tablet pad is a virtual grouping of…",null,null],[3,"TabletPadButtonEvent","","A button pressed on a device with the…",null,null],[3,"TabletPadRingEvent","","A status change on a tablet ring with the…",null,null],[3,"TabletPadStripEvent","","A status change on a strip on a device with the…",null,null],[4,"TabletPadEvent","","A tablet-pad related `Event`",null,null],[13,"Button","","A button pressed on a device with the…",51,null],[13,"Ring","","A status change on a tablet ring with the…",51,null],[13,"Strip","","A status change on a strip on a device with the…",51,null],[4,"RingAxisSource","","The source for a `TabletPadRingEvent` event.",null,null],[13,"Unknown","","An unknown source",52,null],[13,"Finger","","Finger source",52,null],[4,"StripAxisSource","","The source for a `TabletPadStripEvent` event.",null,null],[13,"Unknown","","An unknown source",53,null],[13,"Finger","","Finger source",53,null],[11,"button_is_toggle","","The toggle button in a mode group is the button assigned…",54,[[]]],[11,"index","","The returned number is the same index as passed to…",54,[[]]],[11,"mode","","Return the current mode this mode group is in.",54,[[]]],[11,"number_of_modes","","Query the mode group for the number of available modes.",54,[[]]],[11,"has_button","","Devices without mode switching capabilities return `true`…",54,[[]]],[11,"has_ring","","Devices without mode switching capabilities return `true`…",54,[[]]],[11,"has_strip","","Devices without mode switching capabilities return `true`…",54,[[]]],[8,"TabletPadEventTrait","","Common functions all TabletPad-Events implement.",null,null],[11,"time","","The event time for this event",55,[[]]],[11,"time_usec","","The event time for this event in microseconds",55,[[]]],[11,"mode","","Returns the mode the button, ring, or strip that triggered…",55,[[]]],[11,"mode_group","","Returns the mode group that the button, ring, or strip…",55,[[],["tabletpadmodegroup",3]]],[11,"into_tablet_pad_event","","Convert into a general `TabletPadEvent` again",55,[[],["tabletpadevent",4]]],[11,"button_number","","Return the button number that triggered this event,…",56,[[]]],[11,"button_state","","Return the button state of the event.",56,[[],["buttonstate",4]]],[11,"number","","Returns the number of the ring that has changed state,…",57,[[]]],[11,"position","","Returns the current position of the ring, in degrees…",57,[[]]],[11,"source","","Returns the source of the interaction with the ring.",57,[[],["ringaxissource",4]]],[11,"number","","Returns the number of the strip that has changed state,…",58,[[]]],[11,"position","","Returns the current position of the strip, normalized to…",58,[[]]],[11,"source","","Returns the source of the interaction with the strip.",58,[[],["stripaxissource",4]]],[0,"touch","input::event","Touch event types",null,null],[3,"TouchDownEvent","input::event::touch","An event related to resting the finger on the screen",null,null],[3,"TouchUpEvent","","An event related to lifting the finger on the screen",null,null],[3,"TouchMotionEvent","","An event related to moving a finger on the screen",null,null],[3,"TouchCancelEvent","","An event cancelling previous events on this slot",null,null],[3,"TouchFrameEvent","","Signals the end of a set of touchpoints at one device…",null,null],[4,"TouchEvent","","A touch related `Event`",null,null],[13,"Down","","An event related to resting the finger on the screen",59,null],[13,"Up","","An event related to lifting the finger on the screen",59,null],[13,"Motion","","An event related to moving a finger on the screen",59,null],[13,"Cancel","","An event cancelling previous events on this slot",59,null],[13,"Frame","","Signals the end of a set of touchpoints at one device…",59,null],[8,"TouchEventTrait","","Common functions all Touch-Events implement.",null,null],[11,"time","","The event time for this event",60,[[]]],[11,"time_usec","","The event time for this event in microseconds",60,[[]]],[11,"into_touch_event","","Convert into a general `TouchEvent` again",60,[[],["touchevent",4]]],[8,"TouchEventSlot","","Touch slot related functions all TouchEvents implement,…",null,null],[11,"seat_slot","","Get the seat slot of the touch event.",61,[[]]],[11,"slot","","Get the slot of this touch event.",61,[[],["option",4]]],[8,"TouchEventPosition","","Position related functions all TouchEvents implement, that…",null,null],[11,"x","","Return the current absolute x coordinate of the touch…",62,[[]]],[11,"y","","Return the current absolute y coordinate of the touch…",62,[[]]],[11,"x_transformed","","Return the current absolute x coordinate of the touch…",62,[[]]],[11,"y_transformed","","Return the current absolute y coordinate of the touch…",62,[[]]],[8,"EventTrait","input::event","Common functions all (Sub-)Events implement.",null,null],[11,"into_event","","Convert into a general `Event` again",63,[[],["event",4]]],[11,"device","","Return the device associated with this event.",63,[[],["device",3]]],[11,"context","input","Get the libinput context from the seat.",64,[[],["libinput",3]]],[11,"physical_name","","Return the physical name of the seat.",64,[[]]],[11,"logical_name","","Return the logical name of the seat.",64,[[]]],[6,"DeviceConfigResult","","Result returned when applying configuration settings.",null,null],[8,"AsRaw","","Trait for types that allow to optain the underlying raw…",null,null],[10,"as_raw","","Receive a raw pointer representing this type.",65,[[]]],[8,"Context","","Trait to receive the underlying context",null,null],[10,"context","","Returns the underlying libinput context",66,[[],["libinput",3]]],[8,"FromRaw","","Trait for types that allow to be initialized from a raw…",null,null],[10,"from_raw","","Create a new instance of this type from a raw pointer and…",67,[[["libinput",3]]]],[8,"LibinputInterface","","libinput does not open file descriptors to devices…",null,null],[10,"open_restricted","","Open the device at the given path with the flags provided…",68,[[["path",3]],[["result",4],["rawfd",6]]]],[10,"close_restricted","","Close the file descriptor.",68,[[["rawfd",6]]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","input::ffi","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","input::event","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","input::event::device","",87,[[]]],[11,"into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","input::event::gesture","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","input::event::keyboard","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","input::event::pointer","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","input::event::switch","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","input::event::tablet_tool","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","input::event::tablet_pad","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","input::event::touch","",95,[[]]],[11,"into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"clone","input::ffi","",79,[[],["libinput_event_keyboard",3]]],[11,"clone","","",71,[[],["udev_device",3]]],[11,"clone","","",81,[[],["libinput_event_touch",3]]],[11,"clone","","",72,[[],["libinput",3]]],[11,"clone","","",6,[[],["libinput_interface",3]]],[11,"clone","","",73,[[],["libinput_device",3]]],[11,"clone","","",80,[[],["libinput_event_pointer",3]]],[11,"clone","","",70,[[],["udev",3]]],[11,"clone","","",75,[[],["libinput_seat",3]]],[11,"clone","","",83,[[],["libinput_event_tablet_pad",3]]],[11,"clone","","",85,[[],["libinput_event_switch",3]]],[11,"clone","","",7,[[],["__va_list_tag",3]]],[11,"clone","","",74,[[],["libinput_device_group",3]]],[11,"clone","","",84,[[],["libinput_tablet_pad_mode_group",3]]],[11,"clone","","",78,[[],["libinput_event_device_notify",3]]],[11,"clone","","",86,[[],["libinput_event_gesture",3]]],[11,"clone","","",76,[[],["libinput_tablet_tool",3]]],[11,"clone","","",77,[[],["libinput_event",3]]],[11,"clone","","",82,[[],["libinput_event_tablet_tool",3]]],[11,"fmt","","",79,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",83,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",6,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",81,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",85,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",84,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",78,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",82,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",86,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",80,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_raw","input","",8,[[]]],[11,"as_raw","","",69,[[]]],[11,"as_raw","","",11,[[]]],[11,"as_raw","input::event","",12,[[]]],[11,"as_raw","input::event::device","",13,[[]]],[11,"as_raw","","",87,[[]]],[11,"as_raw","","",88,[[]]],[11,"as_raw","input::event::gesture","",15,[[]]],[11,"as_raw","","",16,[[]]],[11,"as_raw","","",17,[[]]],[11,"as_raw","","",89,[[]]],[11,"as_raw","","",90,[[]]],[11,"as_raw","","",91,[[]]],[11,"as_raw","","",92,[[]]],[11,"as_raw","","",23,[[]]],[11,"as_raw","","",93,[[]]],[11,"as_raw","input::event::keyboard","",25,[[]]],[11,"as_raw","","",27,[[]]],[11,"as_raw","input::event::pointer","",28,[[]]],[11,"as_raw","","",33,[[]]],[11,"as_raw","","",34,[[]]],[11,"as_raw","","",35,[[]]],[11,"as_raw","","",36,[[]]],[11,"as_raw","input::event::switch","",37,[[]]],[11,"as_raw","","",41,[[]]],[11,"as_raw","input::event::tablet_tool","",46,[[]]],[11,"as_raw","","",43,[[]]],[11,"as_raw","","",94,[[]]],[11,"as_raw","","",48,[[]]],[11,"as_raw","","",49,[[]]],[11,"as_raw","","",50,[[]]],[11,"as_raw","input::event::tablet_pad","",54,[[]]],[11,"as_raw","","",51,[[]]],[11,"as_raw","","",56,[[]]],[11,"as_raw","","",57,[[]]],[11,"as_raw","","",58,[[]]],[11,"as_raw","input::event::touch","",59,[[]]],[11,"as_raw","","",95,[[]]],[11,"as_raw","","",96,[[]]],[11,"as_raw","","",97,[[]]],[11,"as_raw","","",98,[[]]],[11,"as_raw","","",99,[[]]],[11,"as_raw","input","",64,[[]]],[11,"context","","",69,[[],["libinput",3]]],[11,"context","","",11,[[],["libinput",3]]],[11,"context","input::event","",12,[[],["libinput",3]]],[11,"context","input::event::device","",13,[[],["libinput",3]]],[11,"context","","",87,[[],["libinput",3]]],[11,"context","","",88,[[],["libinput",3]]],[11,"context","input::event::gesture","",15,[[],["libinput",3]]],[11,"context","","",16,[[],["libinput",3]]],[11,"context","","",17,[[],["libinput",3]]],[11,"context","","",89,[[],["libinput",3]]],[11,"context","","",90,[[],["libinput",3]]],[11,"context","","",91,[[],["libinput",3]]],[11,"context","","",92,[[],["libinput",3]]],[11,"context","","",23,[[],["libinput",3]]],[11,"context","","",93,[[],["libinput",3]]],[11,"context","input::event::keyboard","",25,[[],["libinput",3]]],[11,"context","","",27,[[],["libinput",3]]],[11,"context","input::event::pointer","",28,[[],["libinput",3]]],[11,"context","","",33,[[],["libinput",3]]],[11,"context","","",34,[[],["libinput",3]]],[11,"context","","",35,[[],["libinput",3]]],[11,"context","","",36,[[],["libinput",3]]],[11,"context","input::event::switch","",37,[[],["libinput",3]]],[11,"context","","",41,[[],["libinput",3]]],[11,"context","input::event::tablet_tool","",46,[[],["libinput",3]]],[11,"context","","",43,[[],["libinput",3]]],[11,"context","","",94,[[],["libinput",3]]],[11,"context","","",48,[[],["libinput",3]]],[11,"context","","",49,[[],["libinput",3]]],[11,"context","","",50,[[],["libinput",3]]],[11,"context","input::event::tablet_pad","",54,[[],["libinput",3]]],[11,"context","","",51,[[],["libinput",3]]],[11,"context","","",56,[[],["libinput",3]]],[11,"context","","",57,[[],["libinput",3]]],[11,"context","","",58,[[],["libinput",3]]],[11,"context","input::event::touch","",59,[[],["libinput",3]]],[11,"context","","",95,[[],["libinput",3]]],[11,"context","","",96,[[],["libinput",3]]],[11,"context","","",97,[[],["libinput",3]]],[11,"context","","",98,[[],["libinput",3]]],[11,"context","","",99,[[],["libinput",3]]],[11,"context","input","",64,[[],["libinput",3]]],[11,"from_raw","","",69,[[["libinput",3]]]],[11,"from_raw","","",11,[[["libinput",3]]]],[11,"from_raw","input::event","",12,[[["libinput",3]]]],[11,"from_raw","input::event::device","",13,[[["libinput",3]]]],[11,"from_raw","","",87,[[["libinput",3]]]],[11,"from_raw","","",88,[[["libinput",3]]]],[11,"from_raw","input::event::gesture","",15,[[["libinput",3]]]],[11,"from_raw","","",16,[[["libinput",3]]]],[11,"from_raw","","",17,[[["libinput",3]]]],[11,"from_raw","","",89,[[["libinput",3]]]],[11,"from_raw","","",90,[[["libinput",3]]]],[11,"from_raw","","",91,[[["libinput",3]]]],[11,"from_raw","","",92,[[["libinput",3]]]],[11,"from_raw","","",23,[[["libinput",3]]]],[11,"from_raw","","",93,[[["libinput",3]]]],[11,"from_raw","input::event::keyboard","",25,[[["libinput",3]]]],[11,"from_raw","","",27,[[["libinput",3]]]],[11,"from_raw","input::event::pointer","",28,[[["libinput",3]]]],[11,"from_raw","","",33,[[["libinput",3]]]],[11,"from_raw","","",34,[[["libinput",3]]]],[11,"from_raw","","",35,[[["libinput",3]]]],[11,"from_raw","","",36,[[["libinput",3]]]],[11,"from_raw","input::event::switch","",37,[[["libinput",3]]]],[11,"from_raw","","",41,[[["libinput",3]]]],[11,"from_raw","input::event::tablet_tool","",46,[[["libinput",3]]]],[11,"from_raw","","",43,[[["libinput",3]]]],[11,"from_raw","","",94,[[["libinput",3]]]],[11,"from_raw","","",48,[[["libinput",3]]]],[11,"from_raw","","",49,[[["libinput",3]]]],[11,"from_raw","","",50,[[["libinput",3]]]],[11,"from_raw","input::event::tablet_pad","",54,[[["libinput",3]]]],[11,"from_raw","","",51,[[["libinput",3]]]],[11,"from_raw","","",56,[[["libinput",3]]]],[11,"from_raw","","",57,[[["libinput",3]]]],[11,"from_raw","","",58,[[["libinput",3]]]],[11,"from_raw","input::event::touch","",59,[[["libinput",3]]]],[11,"from_raw","","",95,[[["libinput",3]]]],[11,"from_raw","","",96,[[["libinput",3]]]],[11,"from_raw","","",97,[[["libinput",3]]]],[11,"from_raw","","",98,[[["libinput",3]]]],[11,"from_raw","","",99,[[["libinput",3]]]],[11,"from_raw","input","",64,[[["libinput",3]]]],[11,"as_raw_event","input::event","",12,[[]]],[11,"drop","input","",8,[[]]],[11,"drop","","",69,[[]]],[11,"drop","","",11,[[]]],[11,"drop","input::event::device","",87,[[]]],[11,"drop","","",88,[[]]],[11,"drop","input::event::gesture","",89,[[]]],[11,"drop","","",90,[[]]],[11,"drop","","",91,[[]]],[11,"drop","","",92,[[]]],[11,"drop","","",23,[[]]],[11,"drop","","",93,[[]]],[11,"drop","input::event::keyboard","",27,[[]]],[11,"drop","input::event::pointer","",33,[[]]],[11,"drop","","",34,[[]]],[11,"drop","","",35,[[]]],[11,"drop","","",36,[[]]],[11,"drop","input::event::switch","",41,[[]]],[11,"drop","input::event::tablet_tool","",46,[[]]],[11,"drop","","",94,[[]]],[11,"drop","","",48,[[]]],[11,"drop","","",49,[[]]],[11,"drop","","",50,[[]]],[11,"drop","input::event::tablet_pad","",54,[[]]],[11,"drop","","",56,[[]]],[11,"drop","","",57,[[]]],[11,"drop","","",58,[[]]],[11,"drop","input::event::touch","",95,[[]]],[11,"drop","","",96,[[]]],[11,"drop","","",97,[[]]],[11,"drop","","",98,[[]]],[11,"drop","","",99,[[]]],[11,"drop","input","",64,[[]]],[11,"extend","","",9,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"next","","",8,[[],["option",4]]],[11,"clone","","",8,[[]]],[11,"clone","","",0,[[],["devicecapability",4]]],[11,"clone","","",1,[[],["accelprofile",4]]],[11,"clone","","",2,[[],["clickmethod",4]]],[11,"clone","","",3,[[],["scrollmethod",4]]],[11,"clone","","",4,[[],["deviceconfigerror",4]]],[11,"clone","","",9,[[],["sendeventsmode",3]]],[11,"clone","","",5,[[],["tapbuttonmap",4]]],[11,"clone","","",10,[[],["led",3]]],[11,"clone","","",69,[[]]],[11,"clone","","",11,[[]]],[11,"clone","input::event::keyboard","",24,[[],["keystate",4]]],[11,"clone","input::event::pointer","",29,[[],["buttonstate",4]]],[11,"clone","","",30,[[],["axissource",4]]],[11,"clone","","",31,[[],["axis",4]]],[11,"clone","input::event::switch","",38,[[],["switch",4]]],[11,"clone","","",39,[[],["switchstate",4]]],[11,"clone","input::event::tablet_tool","",42,[[],["tablettooltype",4]]],[11,"clone","","",46,[[]]],[11,"clone","","",44,[[],["proximitystate",4]]],[11,"clone","","",45,[[],["tipstate",4]]],[11,"clone","input::event::tablet_pad","",54,[[]]],[11,"clone","","",52,[[],["ringaxissource",4]]],[11,"clone","","",53,[[],["stripaxissource",4]]],[11,"clone","input","",64,[[]]],[11,"cmp","","",9,[[["sendeventsmode",3]],["ordering",4]]],[11,"cmp","","",10,[[["led",3]],["ordering",4]]],[11,"eq","","",8,[[]]],[11,"eq","","",0,[[["devicecapability",4]]]],[11,"eq","","",1,[[["accelprofile",4]]]],[11,"eq","","",2,[[["clickmethod",4]]]],[11,"eq","","",3,[[["scrollmethod",4]]]],[11,"eq","","",4,[[["deviceconfigerror",4]]]],[11,"eq","","",9,[[["sendeventsmode",3]]]],[11,"ne","","",9,[[["sendeventsmode",3]]]],[11,"eq","","",5,[[["tapbuttonmap",4]]]],[11,"eq","","",10,[[["led",3]]]],[11,"ne","","",10,[[["led",3]]]],[11,"eq","","",69,[[]]],[11,"eq","","",11,[[]]],[11,"eq","input::event","",12,[[["event",4]]]],[11,"ne","","",12,[[["event",4]]]],[11,"eq","input::event::device","",13,[[["deviceevent",4]]]],[11,"ne","","",13,[[["deviceevent",4]]]],[11,"eq","","",87,[[]]],[11,"eq","","",88,[[]]],[11,"eq","input::event::gesture","",15,[[["gestureevent",4]]]],[11,"ne","","",15,[[["gestureevent",4]]]],[11,"eq","","",16,[[["gestureswipeevent",4]]]],[11,"ne","","",16,[[["gestureswipeevent",4]]]],[11,"eq","","",17,[[["gesturepinchevent",4]]]],[11,"ne","","",17,[[["gesturepinchevent",4]]]],[11,"eq","","",89,[[]]],[11,"eq","","",90,[[]]],[11,"eq","","",91,[[]]],[11,"eq","","",92,[[]]],[11,"eq","","",23,[[]]],[11,"eq","","",93,[[]]],[11,"eq","input::event::keyboard","",24,[[["keystate",4]]]],[11,"eq","","",25,[[["keyboardevent",4]]]],[11,"ne","","",25,[[["keyboardevent",4]]]],[11,"eq","","",27,[[]]],[11,"eq","input::event::pointer","",28,[[["pointerevent",4]]]],[11,"ne","","",28,[[["pointerevent",4]]]],[11,"eq","","",33,[[]]],[11,"eq","","",34,[[]]],[11,"eq","","",29,[[["buttonstate",4]]]],[11,"eq","","",35,[[]]],[11,"eq","","",30,[[["axissource",4]]]],[11,"eq","","",31,[[["axis",4]]]],[11,"eq","","",36,[[]]],[11,"eq","input::event::switch","",37,[[["switchevent",4]]]],[11,"ne","","",37,[[["switchevent",4]]]],[11,"eq","","",38,[[["switch",4]]]],[11,"eq","","",39,[[["switchstate",4]]]],[11,"eq","","",41,[[]]],[11,"eq","input::event::tablet_tool","",42,[[["tablettooltype",4]]]],[11,"eq","","",46,[[]]],[11,"eq","","",43,[[["tablettoolevent",4]]]],[11,"ne","","",43,[[["tablettoolevent",4]]]],[11,"eq","","",94,[[]]],[11,"eq","","",44,[[["proximitystate",4]]]],[11,"eq","","",48,[[]]],[11,"eq","","",45,[[["tipstate",4]]]],[11,"eq","","",49,[[]]],[11,"eq","","",50,[[]]],[11,"eq","input::event::tablet_pad","",54,[[]]],[11,"eq","","",51,[[["tabletpadevent",4]]]],[11,"ne","","",51,[[["tabletpadevent",4]]]],[11,"eq","","",56,[[]]],[11,"eq","","",52,[[["ringaxissource",4]]]],[11,"eq","","",57,[[]]],[11,"eq","","",53,[[["stripaxissource",4]]]],[11,"eq","","",58,[[]]],[11,"eq","input::event::touch","",59,[[["touchevent",4]]]],[11,"ne","","",59,[[["touchevent",4]]]],[11,"eq","","",95,[[]]],[11,"eq","","",96,[[]]],[11,"eq","","",97,[[]]],[11,"eq","","",98,[[]]],[11,"eq","","",99,[[]]],[11,"eq","input","",64,[[]]],[11,"partial_cmp","","",9,[[["sendeventsmode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["sendeventsmode",3]]]],[11,"le","","",9,[[["sendeventsmode",3]]]],[11,"gt","","",9,[[["sendeventsmode",3]]]],[11,"ge","","",9,[[["sendeventsmode",3]]]],[11,"partial_cmp","","",10,[[["led",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["led",3]]]],[11,"le","","",10,[[["led",3]]]],[11,"gt","","",10,[[["led",3]]]],[11,"ge","","",10,[[["led",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","input::event","",12,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::device","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::gesture","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::keyboard","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::pointer","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::switch","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::tablet_tool","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::tablet_pad","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","input::event::touch","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","","",96,[[["formatter",3]],["result",6]]],[11,"fmt","","",97,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","input","",64,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["sendeventsmode",3]],["sendeventsmode",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["led",3]],["led",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["sendeventsmode",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["led",3]]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["sendeventsmode",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["led",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["sendeventsmode",3]],["sendeventsmode",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["led",3]],["led",3]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["sendeventsmode",3]],["sendeventsmode",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["led",3]],["led",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["sendeventsmode",3]],["sendeventsmode",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["led",3]],["led",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["sendeventsmode",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["led",3]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["sendeventsmode",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["led",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["sendeventsmode",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["led",3]]]],[11,"hash","","",8,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"hash","","",2,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",4,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",5,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",69,[[]]],[11,"hash","","",11,[[]]],[11,"hash","input::event","",12,[[]]],[11,"hash","input::event::device","",13,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",88,[[]]],[11,"hash","input::event::gesture","",15,[[]]],[11,"hash","","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",90,[[]]],[11,"hash","","",91,[[]]],[11,"hash","","",92,[[]]],[11,"hash","","",23,[[]]],[11,"hash","","",93,[[]]],[11,"hash","input::event::keyboard","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","","",27,[[]]],[11,"hash","input::event::pointer","",28,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",29,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",30,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",36,[[]]],[11,"hash","input::event::switch","",37,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",39,[[]]],[11,"hash","","",41,[[]]],[11,"hash","input::event::tablet_tool","",42,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",43,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",48,[[]]],[11,"hash","","",45,[[]]],[11,"hash","","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","input::event::tablet_pad","",54,[[]]],[11,"hash","","",51,[[]]],[11,"hash","","",56,[[]]],[11,"hash","","",52,[[]]],[11,"hash","","",57,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",58,[[]]],[11,"hash","input::event::touch","",59,[[]]],[11,"hash","","",95,[[]]],[11,"hash","","",96,[[]]],[11,"hash","","",97,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","input","",64,[[]]],[11,"from_iter","","",9,[[["intoiterator",8]],["sendeventsmode",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["led",3]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","","",8,[[],["rawfd",6]]]],"p":[[4,"DeviceCapability"],[4,"AccelProfile"],[4,"ClickMethod"],[4,"ScrollMethod"],[4,"DeviceConfigError"],[4,"TapButtonMap"],[3,"libinput_interface"],[3,"__va_list_tag"],[3,"Libinput"],[3,"SendEventsMode"],[3,"Led"],[3,"Device"],[4,"Event"],[4,"DeviceEvent"],[8,"DeviceEventTrait"],[4,"GestureEvent"],[4,"GestureSwipeEvent"],[4,"GesturePinchEvent"],[8,"GestureEventTrait"],[8,"GestureEventCoordinates"],[8,"GestureEndEvent"],[8,"GestureSwipeEventTrait"],[8,"GesturePinchEventTrait"],[3,"GesturePinchUpdateEvent"],[4,"KeyState"],[4,"KeyboardEvent"],[8,"KeyboardEventTrait"],[3,"KeyboardKeyEvent"],[4,"PointerEvent"],[4,"ButtonState"],[4,"AxisSource"],[4,"Axis"],[8,"PointerEventTrait"],[3,"PointerMotionEvent"],[3,"PointerMotionAbsoluteEvent"],[3,"PointerButtonEvent"],[3,"PointerAxisEvent"],[4,"SwitchEvent"],[4,"Switch"],[4,"SwitchState"],[8,"SwitchEventTrait"],[3,"SwitchToggleEvent"],[4,"TabletToolType"],[4,"TabletToolEvent"],[4,"ProximityState"],[4,"TipState"],[3,"TabletTool"],[8,"TabletToolEventTrait"],[3,"TabletToolProximityEvent"],[3,"TabletToolTipEvent"],[3,"TabletToolButtonEvent"],[4,"TabletPadEvent"],[4,"RingAxisSource"],[4,"StripAxisSource"],[3,"TabletPadModeGroup"],[8,"TabletPadEventTrait"],[3,"TabletPadButtonEvent"],[3,"TabletPadRingEvent"],[3,"TabletPadStripEvent"],[4,"TouchEvent"],[8,"TouchEventTrait"],[8,"TouchEventSlot"],[8,"TouchEventPosition"],[8,"EventTrait"],[3,"Seat"],[8,"AsRaw"],[8,"Context"],[8,"FromRaw"],[8,"LibinputInterface"],[3,"DeviceGroup"],[3,"udev"],[3,"udev_device"],[3,"libinput"],[3,"libinput_device"],[3,"libinput_device_group"],[3,"libinput_seat"],[3,"libinput_tablet_tool"],[3,"libinput_event"],[3,"libinput_event_device_notify"],[3,"libinput_event_keyboard"],[3,"libinput_event_pointer"],[3,"libinput_event_touch"],[3,"libinput_event_tablet_tool"],[3,"libinput_event_tablet_pad"],[3,"libinput_tablet_pad_mode_group"],[3,"libinput_event_switch"],[3,"libinput_event_gesture"],[3,"DeviceAddedEvent"],[3,"DeviceRemovedEvent"],[3,"GestureSwipeBeginEvent"],[3,"GestureSwipeUpdateEvent"],[3,"GestureSwipeEndEvent"],[3,"GesturePinchBeginEvent"],[3,"GesturePinchEndEvent"],[3,"TabletToolAxisEvent"],[3,"TouchDownEvent"],[3,"TouchUpEvent"],[3,"TouchMotionEvent"],[3,"TouchCancelEvent"],[3,"TouchFrameEvent"]]},\
"nix":{"doc":"Rust friendly bindings to the various *nix system functions.","i":[[4,"Error","nix","Nix Error Type",null,null],[13,"Sys","","",0,null],[13,"InvalidPath","","",0,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust\'s native…",0,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance…",0,null],[0,"dir","","",null,null],[3,"Dir","nix::dir","An open directory.",null,null],[3,"Iter","","",null,null],[3,"Entry","","A directory entry, similar to `std::fs::DirEntry`.",null,null],[4,"Type","","",null,null],[13,"Fifo","","",1,null],[13,"CharacterDevice","","",1,null],[13,"Directory","","",1,null],[13,"BlockDevice","","",1,null],[13,"File","","",1,null],[13,"Symlink","","",1,null],[13,"Socket","","",1,null],[11,"open","","Opens the given path as with `fcntl::open`.",2,[[["mode",3],["oflag",3]],["result",6]]],[11,"openat","","Opens the given path as with `fcntl::openat`.",2,[[["rawfd",6],["mode",3],["oflag",3]],["result",6]]],[11,"from","","Converts from a descriptor-based object, closing the…",2,[[["intorawfd",8]],["result",6]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or…",2,[[["rawfd",6]],["result",6]]],[11,"iter","","Returns an iterator of `Result<Entry>` which rewinds when…",2,[[],["iter",3]]],[11,"ino","","Returns the inode number (`d_ino`) of the underlying…",3,[[]]],[11,"file_name","","Returns the bare file name of this directory entry without…",3,[[],["cstr",3]]],[11,"file_type","","Returns the type of this directory entry, if known.",3,[[],[["type",4],["option",4]]]],[0,"errno","nix","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",4,null],[13,"EPERM","","",4,null],[13,"ENOENT","","",4,null],[13,"ESRCH","","",4,null],[13,"EINTR","","",4,null],[13,"EIO","","",4,null],[13,"ENXIO","","",4,null],[13,"E2BIG","","",4,null],[13,"ENOEXEC","","",4,null],[13,"EBADF","","",4,null],[13,"ECHILD","","",4,null],[13,"EAGAIN","","",4,null],[13,"ENOMEM","","",4,null],[13,"EACCES","","",4,null],[13,"EFAULT","","",4,null],[13,"ENOTBLK","","",4,null],[13,"EBUSY","","",4,null],[13,"EEXIST","","",4,null],[13,"EXDEV","","",4,null],[13,"ENODEV","","",4,null],[13,"ENOTDIR","","",4,null],[13,"EISDIR","","",4,null],[13,"EINVAL","","",4,null],[13,"ENFILE","","",4,null],[13,"EMFILE","","",4,null],[13,"ENOTTY","","",4,null],[13,"ETXTBSY","","",4,null],[13,"EFBIG","","",4,null],[13,"ENOSPC","","",4,null],[13,"ESPIPE","","",4,null],[13,"EROFS","","",4,null],[13,"EMLINK","","",4,null],[13,"EPIPE","","",4,null],[13,"EDOM","","",4,null],[13,"ERANGE","","",4,null],[13,"EDEADLK","","",4,null],[13,"ENAMETOOLONG","","",4,null],[13,"ENOLCK","","",4,null],[13,"ENOSYS","","",4,null],[13,"ENOTEMPTY","","",4,null],[13,"ELOOP","","",4,null],[13,"ENOMSG","","",4,null],[13,"EIDRM","","",4,null],[13,"ECHRNG","","",4,null],[13,"EL2NSYNC","","",4,null],[13,"EL3HLT","","",4,null],[13,"EL3RST","","",4,null],[13,"ELNRNG","","",4,null],[13,"EUNATCH","","",4,null],[13,"ENOCSI","","",4,null],[13,"EL2HLT","","",4,null],[13,"EBADE","","",4,null],[13,"EBADR","","",4,null],[13,"EXFULL","","",4,null],[13,"ENOANO","","",4,null],[13,"EBADRQC","","",4,null],[13,"EBADSLT","","",4,null],[13,"EBFONT","","",4,null],[13,"ENOSTR","","",4,null],[13,"ENODATA","","",4,null],[13,"ETIME","","",4,null],[13,"ENOSR","","",4,null],[13,"ENONET","","",4,null],[13,"ENOPKG","","",4,null],[13,"EREMOTE","","",4,null],[13,"ENOLINK","","",4,null],[13,"EADV","","",4,null],[13,"ESRMNT","","",4,null],[13,"ECOMM","","",4,null],[13,"EPROTO","","",4,null],[13,"EMULTIHOP","","",4,null],[13,"EDOTDOT","","",4,null],[13,"EBADMSG","","",4,null],[13,"EOVERFLOW","","",4,null],[13,"ENOTUNIQ","","",4,null],[13,"EBADFD","","",4,null],[13,"EREMCHG","","",4,null],[13,"ELIBACC","","",4,null],[13,"ELIBBAD","","",4,null],[13,"ELIBSCN","","",4,null],[13,"ELIBMAX","","",4,null],[13,"ELIBEXEC","","",4,null],[13,"EILSEQ","","",4,null],[13,"ERESTART","","",4,null],[13,"ESTRPIPE","","",4,null],[13,"EUSERS","","",4,null],[13,"ENOTSOCK","","",4,null],[13,"EDESTADDRREQ","","",4,null],[13,"EMSGSIZE","","",4,null],[13,"EPROTOTYPE","","",4,null],[13,"ENOPROTOOPT","","",4,null],[13,"EPROTONOSUPPORT","","",4,null],[13,"ESOCKTNOSUPPORT","","",4,null],[13,"EOPNOTSUPP","","",4,null],[13,"EPFNOSUPPORT","","",4,null],[13,"EAFNOSUPPORT","","",4,null],[13,"EADDRINUSE","","",4,null],[13,"EADDRNOTAVAIL","","",4,null],[13,"ENETDOWN","","",4,null],[13,"ENETUNREACH","","",4,null],[13,"ENETRESET","","",4,null],[13,"ECONNABORTED","","",4,null],[13,"ECONNRESET","","",4,null],[13,"ENOBUFS","","",4,null],[13,"EISCONN","","",4,null],[13,"ENOTCONN","","",4,null],[13,"ESHUTDOWN","","",4,null],[13,"ETOOMANYREFS","","",4,null],[13,"ETIMEDOUT","","",4,null],[13,"ECONNREFUSED","","",4,null],[13,"EHOSTDOWN","","",4,null],[13,"EHOSTUNREACH","","",4,null],[13,"EALREADY","","",4,null],[13,"EINPROGRESS","","",4,null],[13,"ESTALE","","",4,null],[13,"EUCLEAN","","",4,null],[13,"ENOTNAM","","",4,null],[13,"ENAVAIL","","",4,null],[13,"EISNAM","","",4,null],[13,"EREMOTEIO","","",4,null],[13,"EDQUOT","","",4,null],[13,"ENOMEDIUM","","",4,null],[13,"EMEDIUMTYPE","","",4,null],[13,"ECANCELED","","",4,null],[13,"ENOKEY","","",4,null],[13,"EKEYEXPIRED","","",4,null],[13,"EKEYREVOKED","","",4,null],[13,"EKEYREJECTED","","",4,null],[13,"EOWNERDEAD","","",4,null],[13,"ENOTRECOVERABLE","","",4,null],[13,"ERFKILL","","",4,null],[13,"EHWPOISON","","",4,null],[5,"from_i32","","",null,[[],["errno",4]]],[5,"errno","","Returns the platform-specific value of errno",null,[[]]],[17,"EWOULDBLOCK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"ENOTSUP","","",null,null],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and…",null,null],[10,"sentinel","","",5,[[]]],[11,"last","","",4,[[]]],[11,"desc","","",4,[[]]],[11,"from_i32","","",4,[[],["errno",4]]],[11,"clear","","",4,[[]]],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel…",4,[[["partialeq",8],["errnosentinel",8]],[["result",6],["partialeq",8],["errnosentinel",8]]]],[0,"features","nix","Feature tests for OS functionality",null,null],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",null,[[]]],[0,"fcntl","nix","",null,null],[3,"AtFlags","nix::fcntl","",null,null],[3,"OFlag","","Configuration options for opened files.",null,null],[3,"SealFlag","","Additional flags for file sealing, which allows for…",null,null],[3,"FdFlag","","Additional configuration flags for `fcntl`\'s `F_SETFD`.",null,null],[3,"SpliceFFlags","","Additional flags to `splice` and friends.",null,null],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation…",null,null],[4,"PosixFadviseAdvice","","",null,null],[13,"POSIX_FADV_NORMAL","","",6,null],[13,"POSIX_FADV_SEQUENTIAL","","",6,null],[13,"POSIX_FADV_RANDOM","","",6,null],[13,"POSIX_FADV_NOREUSE","","",6,null],[13,"POSIX_FADV_WILLNEED","","",6,null],[13,"POSIX_FADV_DONTNEED","","",6,null],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",7,null],[13,"F_DUPFD_CLOEXEC","","",7,null],[13,"F_GETFD","","",7,null],[13,"F_SETFD","","",7,null],[13,"F_GETFL","","",7,null],[13,"F_SETFL","","",7,null],[13,"F_SETLK","","",7,null],[13,"F_SETLKW","","",7,null],[13,"F_GETLK","","",7,null],[13,"F_OFD_SETLK","","",7,null],[13,"F_OFD_SETLKW","","",7,null],[13,"F_OFD_GETLK","","",7,null],[13,"F_ADD_SEALS","","",7,null],[13,"F_GET_SEALS","","",7,null],[13,"F_GETPIPE_SZ","","",7,null],[13,"F_SETPIPE_SZ","","",7,null],[4,"FlockArg","","",null,null],[13,"LockShared","","",8,null],[13,"LockExclusive","","",8,null],[13,"Unlock","","",8,null],[13,"LockSharedNonblock","","",8,null],[13,"LockExclusiveNonblock","","",8,null],[13,"UnlockNonblock","","",8,null],[5,"posix_fadvise","","",null,[[["rawfd",6],["off_t",6],["posixfadviseadvice",4]],[["c_int",6],["result",6]]]],[5,"open","","",null,[[["mode",3],["oflag",3]],[["rawfd",6],["result",6]]]],[5,"openat","","",null,[[["rawfd",6],["mode",3],["oflag",3]],[["rawfd",6],["result",6]]]],[5,"renameat","","",null,[[["rawfd",6],["option",4]],["result",6]]],[5,"readlink","","",null,[[],[["result",6],["osstring",3]]]],[5,"readlinkat","","",null,[[["rawfd",6]],[["result",6],["osstring",3]]]],[5,"fcntl","","",null,[[["rawfd",6],["fcntlarg",4]],[["c_int",6],["result",6]]]],[5,"flock","","",null,[[["flockarg",4],["rawfd",6]],["result",6]]],[5,"copy_file_range","","Copy a range of data from one file to another",null,[[["rawfd",6],["option",4],["loff_t",6]],["result",6]]],[5,"splice","","",null,[[["splicefflags",3],["rawfd",6],["option",4],["loff_t",6]],["result",6]]],[5,"tee","","",null,[[["splicefflags",3],["rawfd",6]],["result",6]]],[5,"vmsplice","","",null,[[["splicefflags",3],["rawfd",6]],["result",6]]],[5,"fallocate","","Manipulates file space.",null,[[["rawfd",6],["fallocateflags",3],["off_t",6]],[["c_int",6],["result",6]]]],[5,"posix_fallocate","","",null,[[["rawfd",6],["off_t",6]],["result",6]]],[18,"AT_REMOVEDIR","","",9,null],[18,"AT_SYMLINK_FOLLOW","","",9,null],[18,"AT_SYMLINK_NOFOLLOW","","",9,null],[18,"AT_NO_AUTOMOUNT","","",9,null],[18,"AT_EMPTY_PATH","","",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["atflags",3]]],[11,"all","","Returns the set containing all flags.",9,[[],["atflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["c_int",6]],[["atflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["c_int",6]],["atflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int",6]],["atflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["atflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["atflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["atflags",3]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["atflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["atflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["atflags",3]]]],[18,"O_ACCMODE","","Mask for the access mode of the file.",10,null],[18,"O_APPEND","","Open the file in append-only mode.",10,null],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",10,null],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",10,null],[18,"O_CREAT","","Create the file if it does not exist.",10,null],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",10,null],[18,"O_DIRECTORY","","If the specified path isn\'t a directory, fail.",10,null],[18,"O_DSYNC","","Implicitly follow each `write()` with an `fdatasync()`.",10,null],[18,"O_EXCL","","Error out if a file was not created.",10,null],[18,"O_FSYNC","","Same as `O_SYNC`.",10,null],[18,"O_LARGEFILE","","Allow files whose sizes can\'t be represented in an `off_t`…",10,null],[18,"O_NOATIME","","Do not update the file last access time during `read(2)`s.",10,null],[18,"O_NOCTTY","","Don\'t attach the device as the process\' controlling…",10,null],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",10,null],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",10,null],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",10,null],[18,"O_PATH","","Obtain a file descriptor for low-level access.",10,null],[18,"O_RDONLY","","Only allow reading.",10,null],[18,"O_RDWR","","Allow both reading and writing.",10,null],[18,"O_RSYNC","","Similar to `O_DSYNC` but applies to `read`s instead.",10,null],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",10,null],[18,"O_TMPFILE","","Create an unnamed temporary file.",10,null],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows…",10,null],[18,"O_WRONLY","","Only allow writing.",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["oflag",3]]],[11,"all","","Returns the set containing all flags.",10,[[],["oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[["c_int",6]],[["option",4],["oflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[["c_int",6]],["oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[["c_int",6]],["oflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["oflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["oflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["oflag",3]]]],[18,"F_SEAL_SEAL","","Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",11,null],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",11,null],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",11,null],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",11,null],[11,"empty","","Returns an empty set of flags",11,[[],["sealflag",3]]],[11,"all","","Returns the set containing all flags.",11,[[],["sealflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",11,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",11,[[["c_int",6]],[["option",4],["sealflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",11,[[["c_int",6]],["sealflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",11,[[["c_int",6]],["sealflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",11,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",11,[[["sealflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",11,[[["sealflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",11,[[["sealflag",3]]]],[11,"remove","","Removes the specified flags in-place.",11,[[["sealflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",11,[[["sealflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",11,[[["sealflag",3]]]],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a…",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",12,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[["c_int",6]],[["option",4],["fdflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["fdflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["fdflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["fdflag",3]]]],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",13,null],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",13,null],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",13,null],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",13,null],[11,"empty","","Returns an empty set of flags",13,[[],["splicefflags",3]]],[11,"all","","Returns the set containing all flags.",13,[[],["splicefflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",13,[[["c_uint",6]],[["splicefflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",13,[[["c_uint",6]],["splicefflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",13,[[["c_uint",6]],["splicefflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",13,[[["splicefflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",13,[[["splicefflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["splicefflags",3]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["splicefflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["splicefflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",13,[[["splicefflags",3]]]],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",14,null],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",14,null],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",14,null],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",14,null],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file…",14,null],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",14,null],[11,"empty","","Returns an empty set of flags",14,[[],["fallocateflags",3]]],[11,"all","","Returns the set containing all flags.",14,[[],["fallocateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",14,[[["c_int",6]],[["fallocateflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",14,[[["c_int",6]],["fallocateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[["c_int",6]],["fallocateflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",14,[[["fallocateflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",14,[[["fallocateflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["fallocateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["fallocateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["fallocateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",14,[[["fallocateflags",3]]]],[0,"ifaddrs","nix","Query network interface addresses",null,null],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by…",null,null],[12,"interface_name","","Name of the network interface",15,null],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",15,null],[12,"address","","Network address of this interface",15,null],[12,"netmask","","Netmask of this interface",15,null],[12,"broadcast","","Broadcast address of this interface, if applicable",15,null],[12,"destination","","Point-to-point destination address",15,null],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",null,null],[5,"getifaddrs","","Get interface addresses using libc\'s `getifaddrs`",null,[[],[["interfaceaddressiterator",3],["result",6]]]],[0,"kmod","nix","Load and unload kernel modules.",null,null],[3,"ModuleInitFlags","nix::kmod","Flags used by the `finit_module` function.",null,null],[3,"DeleteModuleFlags","","Flags used by `delete_module`.",null,null],[5,"init_module","","Loads a kernel module from a buffer.",null,[[["cstr",3]],["result",6]]],[5,"finit_module","","Loads a kernel module from a given file descriptor.",null,[[["cstr",3],["moduleinitflags",3]],["result",6]]],[5,"delete_module","","Unloads the kernel module with the given name.",null,[[["deletemoduleflags",3],["cstr",3]],["result",6]]],[18,"MODULE_INIT_IGNORE_MODVERSIONS","","Ignore symbol version hashes.",16,null],[18,"MODULE_INIT_IGNORE_VERMAGIC","","Ignore kernel version magic.",16,null],[11,"empty","","Returns an empty set of flags",16,[[],["moduleinitflags",3]]],[11,"all","","Returns the set containing all flags.",16,[[],["moduleinitflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",16,[[["c_uint",6]],[["option",4],["moduleinitflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",16,[[["c_uint",6]],["moduleinitflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",16,[[["c_uint",6]],["moduleinitflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",16,[[["moduleinitflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",16,[[["moduleinitflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["moduleinitflags",3]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["moduleinitflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["moduleinitflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",16,[[["moduleinitflags",3]]]],[18,"O_NONBLOCK","","",17,null],[18,"O_TRUNC","","",17,null],[11,"empty","","Returns an empty set of flags",17,[[],["deletemoduleflags",3]]],[11,"all","","Returns the set containing all flags.",17,[[],["deletemoduleflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",17,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",17,[[["c_int",6]],[["deletemoduleflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",17,[[["c_int",6]],["deletemoduleflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",17,[[["c_int",6]],["deletemoduleflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",17,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",17,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",17,[[["deletemoduleflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",17,[[["deletemoduleflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",17,[[["deletemoduleflags",3]]]],[11,"remove","","Removes the specified flags in-place.",17,[[["deletemoduleflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",17,[[["deletemoduleflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",17,[[["deletemoduleflags",3]]]],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[3,"MntFlags","","",null,null],[5,"mount","","",null,[[["option",4],["option",4],["msflags",3],["option",4]],["result",6]]],[5,"umount","","",null,[[],["result",6]]],[5,"umount2","","",null,[[["mntflags",3]],["result",6]]],[18,"MS_RDONLY","","Mount read-only",18,null],[18,"MS_NOSUID","","Ignore suid and sgid bits",18,null],[18,"MS_NODEV","","Disallow access to device special files",18,null],[18,"MS_NOEXEC","","Disallow program execution",18,null],[18,"MS_SYNCHRONOUS","","Writes are synced at once",18,null],[18,"MS_REMOUNT","","Alter flags of a mounted FS",18,null],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",18,null],[18,"MS_DIRSYNC","","Directory modifications are synchronous",18,null],[18,"MS_NOATIME","","Do not update access times",18,null],[18,"MS_NODIRATIME","","Do not update directory access times",18,null],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",18,null],[18,"MS_MOVE","","",18,null],[18,"MS_REC","","",18,null],[18,"MS_SILENT","","",18,null],[18,"MS_POSIXACL","","",18,null],[18,"MS_UNBINDABLE","","",18,null],[18,"MS_PRIVATE","","",18,null],[18,"MS_SLAVE","","",18,null],[18,"MS_SHARED","","",18,null],[18,"MS_RELATIME","","",18,null],[18,"MS_KERNMOUNT","","",18,null],[18,"MS_I_VERSION","","",18,null],[18,"MS_STRICTATIME","","",18,null],[18,"MS_ACTIVE","","",18,null],[18,"MS_NOUSER","","",18,null],[18,"MS_RMT_MASK","","",18,null],[18,"MS_MGC_VAL","","",18,null],[18,"MS_MGC_MSK","","",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[["c_ulong",6]],[["option",4],["msflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[["c_ulong",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[["c_ulong",6]],["msflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["msflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["msflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["msflags",3]]]],[18,"MNT_FORCE","","",19,null],[18,"MNT_DETACH","","",19,null],[18,"MNT_EXPIRE","","",19,null],[11,"empty","","Returns an empty set of flags",19,[[],["mntflags",3]]],[11,"all","","Returns the set containing all flags.",19,[[],["mntflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",19,[[["c_int",6]],[["option",4],["mntflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",19,[[["c_int",6]],["mntflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",19,[[["c_int",6]],["mntflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",19,[[["mntflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",19,[[["mntflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["mntflags",3]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["mntflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["mntflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",19,[[["mntflags",3]]]],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[3,"FdFlag","","",null,null],[3,"MqAttr","","",null,null],[5,"mq_open","","Open a message queue",null,[[["mqattr",3],["mq_oflag",3],["cstring",3],["mode",3],["option",4]],[["mqd_t",6],["result",6]]]],[5,"mq_unlink","","Remove a message queue",null,[[["cstring",3]],["result",6]]],[5,"mq_close","","Close a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_receive","","Receive a message from a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_send","","Send a message to a message queue",null,[[["mqd_t",6]],["result",6]]],[5,"mq_getattr","","Get message queue attributes",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK`…",null,[[["mqd_t",6],["mqattr",3]],[["result",6],["mqattr",3]]]],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for…",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a…",null,[[["mqd_t",6]],[["result",6],["mqattr",3]]]],[18,"O_RDONLY","","",20,null],[18,"O_WRONLY","","",20,null],[18,"O_RDWR","","",20,null],[18,"O_CREAT","","",20,null],[18,"O_EXCL","","",20,null],[18,"O_NONBLOCK","","",20,null],[18,"O_CLOEXEC","","",20,null],[11,"empty","","Returns an empty set of flags",20,[[],["mq_oflag",3]]],[11,"all","","Returns the set containing all flags.",20,[[],["mq_oflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",20,[[["c_int",6]],[["mq_oflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",20,[[["c_int",6]],["mq_oflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",20,[[["c_int",6]],["mq_oflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",20,[[["mq_oflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",20,[[["mq_oflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["mq_oflag",3]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["mq_oflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["mq_oflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",20,[[["mq_oflag",3]]]],[18,"FD_CLOEXEC","","",21,null],[11,"empty","","Returns an empty set of flags",21,[[],["fdflag",3]]],[11,"all","","Returns the set containing all flags.",21,[[],["fdflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",21,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",21,[[["c_int",6]],[["fdflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",21,[[["c_int",6]],["fdflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",21,[[["c_int",6]],["fdflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",21,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",21,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",21,[[["fdflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",21,[[["fdflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",21,[[["fdflag",3]]]],[11,"remove","","Removes the specified flags in-place.",21,[[["fdflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",21,[[["fdflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",21,[[["fdflag",3]]]],[11,"new","","",22,[[["c_long",6]],["mqattr",3]]],[11,"flags","","",22,[[],["c_long",6]]],[0,"net","nix","Functionality involving network interfaces",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[3,"InterfaceFlags","nix::net::if_","Standard interface flags, used by `getifaddrs`",null,null],[5,"if_nametoindex","","Resolve an interface into a interface number.",null,[[],[["c_uint",6],["result",6]]]],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",23,null],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",23,null],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",23,null],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",23,null],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",23,null],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see `netdevice(7)`)",23,null],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",23,null],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see…",23,null],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",23,null],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",23,null],[18,"IFF_MASTER","","Master of a load balancing bundle. (see `netdevice(7)`)",23,null],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see `netdevice(7)`)",23,null],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",23,null],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see `netdevice(7)`)",23,null],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see `netdevice(7)`)",23,null],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see…",23,null],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",23,null],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",23,null],[18,"IFF_ECHO","","Echo sent packets. Volatile.",23,null],[18,"IFF_NO_PI","","Do not provide packet information",23,null],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",23,null],[18,"IFF_TAP","","TAP device",23,null],[11,"empty","","Returns an empty set of flags",23,[[],["interfaceflags",3]]],[11,"all","","Returns the set containing all flags.",23,[[],["interfaceflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",23,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",23,[[["c_int",6]],[["interfaceflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",23,[[["c_int",6]],["interfaceflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",23,[[["c_int",6]],["interfaceflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",23,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",23,[[["interfaceflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",23,[[["interfaceflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",23,[[["interfaceflags",3]]]],[11,"remove","","Removes the specified flags in-place.",23,[[["interfaceflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",23,[[["interfaceflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",23,[[["interfaceflags",3]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",null,null],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",null,null],[3,"PollFlags","","These flags define the different events that can be…",null,null],[5,"poll","","`poll` waits for one of a set of file descriptors to…",null,[[["c_int",6]],[["c_int",6],["result",6]]]],[5,"ppoll","","`ppoll()` allows an application to safely wait until…",null,[[["sigset",3],["timespec",3]],[["c_int",6],["result",6]]]],[11,"new","","Creates a new `PollFd` specifying the events of interest…",24,[[["rawfd",6],["pollflags",3]],["pollfd",3]]],[11,"revents","","Returns the events that occured in the last call to `poll`…",24,[[],[["pollflags",3],["option",4]]]],[18,"POLLIN","","There is data to read.",25,null],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",25,null],[18,"POLLOUT","","Writing is now possible, though a write larger that the…",25,null],[18,"POLLRDNORM","","Equivalent to `POLLIN`",25,null],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",25,null],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",25,null],[18,"POLLWRBAND","","Priority data may be written.",25,null],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`;…",25,null],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in…",25,null],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in…",25,null],[11,"empty","","Returns an empty set of flags",25,[[],["pollflags",3]]],[11,"all","","Returns the set containing all flags.",25,[[],["pollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",25,[[],["c_short",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",25,[[["c_short",6]],[["option",4],["pollflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",25,[[["c_short",6]],["pollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",25,[[["c_short",6]],["pollflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",25,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",25,[[["pollflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",25,[[["pollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",25,[[["pollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",25,[[["pollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",25,[[["pollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",25,[[["pollflags",3]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",null,null],[6,"SessionId","nix::pty","",null,null],[3,"Winsize","","",null,null],[12,"ws_row","","",26,null],[12,"ws_col","","",26,null],[12,"ws_xpixel","","",26,null],[12,"ws_ypixel","","",26,null],[3,"OpenptyResult","","Representation of a master/slave pty pair",null,null],[12,"master","","The master port in a virtual pty pair",27,null],[12,"slave","","The slave port in a virtual pty pair",27,null],[3,"ForkptyResult","","Representation of a master with a forked pty",null,null],[12,"master","","The master port in a virtual pty pair",28,null],[12,"fork_result","","Metadata about forked process",28,null],[3,"PtyMaster","","Representation of the Master device in a master/slave pty…",null,null],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",null,[[["ptymaster",3]],["result",6]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",null,[[["oflag",3]],[["ptymaster",3],["result",6]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",null,[[["ptymaster",3]],[["result",6],["string",3]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",null,[[["ptymaster",3]],[["result",6],["string",3]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair…",null,[[["ptymaster",3]],["result",6]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and…",null,[[["into",8],["option",4],["into",8],["option",4]],[["result",6],["openptyresult",3]]]],[5,"forkpty","","Create a new pseudoterminal, returning the master file…",null,[[["into",8],["option",4],["into",8],["option",4]],[["forkptyresult",3],["result",6]]]],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[3,"CpuSet","","CpuSet represent a bit-mask of CPUs. CpuSets are used by…",null,null],[5,"sched_setaffinity","","`sched_setaffinity` set a thread\'s CPU affinity mask…",null,[[["pid",3],["cpuset",3]],["result",6]]],[5,"sched_getaffinity","","`sched_getaffinity` get a thread\'s CPU affinity mask…",null,[[["pid",3]],[["result",6],["cpuset",3]]]],[5,"clone","","",null,[[["c_int",6],["clonecb",6],["cloneflags",3],["option",4]],[["pid",3],["result",6]]]],[5,"unshare","","",null,[[["cloneflags",3]],["result",6]]],[5,"setns","","",null,[[["cloneflags",3],["rawfd",6]],["result",6]]],[5,"sched_yield","","Explicitly yield the processor to other threads.",null,[[],["result",6]]],[18,"CLONE_VM","","",29,null],[18,"CLONE_FS","","",29,null],[18,"CLONE_FILES","","",29,null],[18,"CLONE_SIGHAND","","",29,null],[18,"CLONE_PTRACE","","",29,null],[18,"CLONE_VFORK","","",29,null],[18,"CLONE_PARENT","","",29,null],[18,"CLONE_THREAD","","",29,null],[18,"CLONE_NEWNS","","",29,null],[18,"CLONE_SYSVSEM","","",29,null],[18,"CLONE_SETTLS","","",29,null],[18,"CLONE_PARENT_SETTID","","",29,null],[18,"CLONE_CHILD_CLEARTID","","",29,null],[18,"CLONE_DETACHED","","",29,null],[18,"CLONE_UNTRACED","","",29,null],[18,"CLONE_CHILD_SETTID","","",29,null],[18,"CLONE_NEWCGROUP","","",29,null],[18,"CLONE_NEWUTS","","",29,null],[18,"CLONE_NEWIPC","","",29,null],[18,"CLONE_NEWUSER","","",29,null],[18,"CLONE_NEWPID","","",29,null],[18,"CLONE_NEWNET","","",29,null],[18,"CLONE_IO","","",29,null],[11,"empty","","Returns an empty set of flags",29,[[],["cloneflags",3]]],[11,"all","","Returns the set containing all flags.",29,[[],["cloneflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",29,[[["c_int",6]],[["cloneflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",29,[[["c_int",6]],["cloneflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",29,[[["c_int",6]],["cloneflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",29,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",29,[[["cloneflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",29,[[["cloneflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["cloneflags",3]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["cloneflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["cloneflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",29,[[["cloneflags",3]]]],[11,"new","","Create a new and empty CpuSet.",30,[[],["cpuset",3]]],[11,"is_set","","Test to see if a CPU is in the CpuSet. `field` is the CPU…",30,[[],["result",6]]],[11,"set","","Add a CPU to CpuSet. `field` is the CPU id to add",30,[[],["result",6]]],[11,"unset","","Remove a CPU from CpuSet. `field` is the CPU id to remove",30,[[],["result",6]]],[11,"count","","Return the maximum number of CPU in CpuSet",30,[[]]],[6,"CloneCb","","",null,null],[0,"sys","nix","",null,null],[0,"aio","nix::sys","POSIX Asynchronous I/O",null,null],[3,"AioCb","nix::sys::aio","AIO Control Block.",null,null],[3,"LioCb","","LIO Control Block.",null,null],[12,"aiocbs","","A collection of [`AioCb`]s. All of these will be issued…",31,null],[4,"AioFsyncMode","","Mode for `AioCb::fsync`. Controls whether only data or…",null,null],[13,"O_SYNC","","do it like `fsync`",32,null],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",32,null],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given…",null,null],[13,"LIO_NOP","","",33,null],[13,"LIO_WRITE","","",33,null],[13,"LIO_READ","","",33,null],[4,"LioMode","","Mode for `lio_listio`",null,null],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested…",34,null],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",34,null],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",null,null],[13,"AioCanceled","","All outstanding requests were canceled",35,null],[13,"AioNotCanceled","","Some requests were not canceled. Their status should be…",35,null],[13,"AioAllDone","","All of the requests have already finished",35,null],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from…",null,null],[13,"None","","No buffer to own.",36,null],[13,"Phantom","","Keeps a reference to a slice",36,null],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",36,null],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",36,null],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file…",null,[[["rawfd",6]],[["result",6],["aiocancelstat",4]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the…",null,[[["option",4],["timespec",3]],["result",6]]],[11,"buffer","","Remove the inner `Buffer` and return it",37,[[],["buffer",4]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",37,[[],[["option",4],["box",3]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",37,[[],[["option",4],["box",3]]]],[11,"fd","","Returns the underlying file descriptor associated with the…",37,[[],["rawfd",6]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",37,[[["rawfd",6],["c_int",6],["sigevnotify",4]],["aiocb",3]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",37,[[["rawfd",6],["c_int",6],["off_t",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",37,[[["rawfd",6],["box",3],["c_int",6],["off_t",6],["borrow",8],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for…",37,[[["lioopcode",4],["rawfd",6],["c_int",6],["off_t",6],["borrowmut",8],["sigevnotify",4],["box",3]],["aiocb",3]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",37,[[["rawfd",6],["c_int",6],["off_t",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",37,[[["rawfd",6],["c_int",6],["off_t",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather…",37,[[["rawfd",6],["c_int",6],["off_t",6],["sigevnotify",4],["lioopcode",4]],["aiocb",3]]],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",37,[[["sigevnotify",4]]]],[11,"cancel","","Cancels an outstanding AIO request.",37,[[],[["result",6],["aiocancelstat",4]]]],[11,"error","","Retrieve error status of an asynchronous operation.",37,[[],["result",6]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",37,[[["aiofsyncmode",4]],["result",6]]],[11,"lio_opcode","","Returns the `aiocb`\'s `LioOpcode` field",37,[[],[["option",4],["lioopcode",4]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",37,[[]]],[11,"offset","","Returns the file offset stored in the `AioCb`",37,[[],["off_t",6]]],[11,"priority","","Returns the priority of the `AioCb`",37,[[],["c_int",6]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",37,[[],["result",6]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",37,[[],["sigevent",3]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",37,[[],["result",6]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",37,[[],["result",6]]],[11,"with_capacity","","Initialize an empty `LioCb`",31,[[],["liocb",3]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single…",31,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"listio_resubmit","","Resubmits any incomplete operations with [`lio_listio`].",31,[[["liomode",4],["sigevnotify",4]],["result",6]]],[11,"aio_return","","Collect final status for an individual `AioCb` submitted…",31,[[],["result",6]]],[11,"error","","Retrieve error status of an individual `AioCb` submitted…",31,[[],["result",6]]],[0,"epoll","nix::sys","",null,null],[3,"EpollFlags","nix::sys::epoll","",null,null],[3,"EpollCreateFlags","","",null,null],[3,"EpollEvent","","",null,null],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",38,null],[13,"EpollCtlDel","","",38,null],[13,"EpollCtlMod","","",38,null],[5,"epoll_create","","",null,[[],[["rawfd",6],["result",6]]]],[5,"epoll_create1","","",null,[[["epollcreateflags",3]],[["rawfd",6],["result",6]]]],[5,"epoll_ctl","","",null,[[["rawfd",6],["epollop",4]],["result",6]]],[5,"epoll_wait","","",null,[[["rawfd",6]],["result",6]]],[18,"EPOLLIN","","",39,null],[18,"EPOLLPRI","","",39,null],[18,"EPOLLOUT","","",39,null],[18,"EPOLLRDNORM","","",39,null],[18,"EPOLLRDBAND","","",39,null],[18,"EPOLLWRNORM","","",39,null],[18,"EPOLLWRBAND","","",39,null],[18,"EPOLLMSG","","",39,null],[18,"EPOLLERR","","",39,null],[18,"EPOLLHUP","","",39,null],[18,"EPOLLRDHUP","","",39,null],[18,"EPOLLEXCLUSIVE","","",39,null],[18,"EPOLLWAKEUP","","",39,null],[18,"EPOLLONESHOT","","",39,null],[18,"EPOLLET","","",39,null],[11,"empty","","Returns an empty set of flags",39,[[],["epollflags",3]]],[11,"all","","Returns the set containing all flags.",39,[[],["epollflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",39,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",39,[[["c_int",6]],[["epollflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",39,[[["c_int",6]],["epollflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",39,[[["c_int",6]],["epollflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",39,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",39,[[["epollflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",39,[[["epollflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",39,[[["epollflags",3]]]],[11,"remove","","Removes the specified flags in-place.",39,[[["epollflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",39,[[["epollflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",39,[[["epollflags",3]]]],[18,"EPOLL_CLOEXEC","","",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["epollcreateflags",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["epollcreateflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",40,[[["c_int",6]],[["option",4],["epollcreateflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",40,[[["c_int",6]],["epollcreateflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["c_int",6]],["epollcreateflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",40,[[["epollcreateflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",40,[[["epollcreateflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["epollcreateflags",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["epollcreateflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["epollcreateflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",40,[[["epollcreateflags",3]]]],[11,"new","","",41,[[["epollflags",3]]]],[11,"empty","","",41,[[]]],[11,"events","","",41,[[],["epollflags",3]]],[11,"data","","",41,[[]]],[0,"eventfd","nix::sys","",null,null],[3,"EfdFlags","nix::sys::eventfd","",null,null],[5,"eventfd","","",null,[[["c_uint",6],["efdflags",3]],[["rawfd",6],["result",6]]]],[18,"EFD_CLOEXEC","","",42,null],[18,"EFD_NONBLOCK","","",42,null],[18,"EFD_SEMAPHORE","","",42,null],[11,"empty","","Returns an empty set of flags",42,[[],["efdflags",3]]],[11,"all","","Returns the set containing all flags.",42,[[],["efdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",42,[[["c_int",6]],[["option",4],["efdflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",42,[[["c_int",6]],["efdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",42,[[["c_int",6]],["efdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",42,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",42,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",42,[[["efdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",42,[[["efdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["efdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["efdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["efdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",42,[[["efdflags",3]]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",null,null],[0,"memfd","","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[5,"memfd_create","","",null,[[["cstr",3],["memfdcreateflag",3]],[["rawfd",6],["result",6]]]],[18,"MFD_CLOEXEC","","",43,null],[18,"MFD_ALLOW_SEALING","","",43,null],[11,"empty","","Returns an empty set of flags",43,[[],["memfdcreateflag",3]]],[11,"all","","Returns the set containing all flags.",43,[[],["memfdcreateflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[],["c_uint",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",43,[[["c_uint",6]],[["memfdcreateflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",43,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",43,[[["c_uint",6]],["memfdcreateflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",43,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",43,[[["memfdcreateflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",43,[[["memfdcreateflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["memfdcreateflag",3]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["memfdcreateflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["memfdcreateflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",43,[[["memfdcreateflag",3]]]],[0,"mman","nix::sys","",null,null],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",null,null],[3,"MapFlags","","Additional parameters for `mmap()`.",null,null],[3,"MsFlags","","Configuration flags for `msync`.",null,null],[3,"MlockAllFlags","","Flags for `mlockall`.",null,null],[4,"MmapAdvise","","Usage information for a range of memory to allow for…",null,null],[13,"MADV_NORMAL","","No further special treatment. This is the default.",44,null],[13,"MADV_RANDOM","","Expect random page references.",44,null],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",44,null],[13,"MADV_WILLNEED","","Expect access in the near future.",44,null],[13,"MADV_DONTNEED","","Do not expect access in the near future.",44,null],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing…",44,null],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child…",44,null],[13,"MADV_DOFORK","","Undo the effect of `MADV_DONTFORK`.",44,null],[13,"MADV_HWPOISON","","Poison the given pages.",44,null],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",44,null],[13,"MADV_UNMERGEABLE","","Undo the effect of `MADV_MERGEABLE`",44,null],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original…",44,null],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the given…",44,null],[13,"MADV_NOHUGEPAGE","","Undo the effect of `MADV_HUGEPAGE`.",44,null],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",44,null],[13,"MADV_DODUMP","","Undo the effect of an earlier `MADV_DONTDUMP`.",44,null],[13,"MADV_FREE","","Specify that the application no longer needs the pages in…",44,null],[5,"mlock","","Locks all memory pages that contain part of the address…",null,[[["size_t",6]],["result",6]]],[5,"munlock","","Unlocks all memory pages that contain part of the address…",null,[[["size_t",6]],["result",6]]],[5,"mlockall","","Locks all memory pages mapped into this process\' address…",null,[[["mlockallflags",3]],["result",6]]],[5,"munlockall","","Unlocks all memory pages mapped into this process\' address…",null,[[],["result",6]]],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made…",null,[[["size_t",6],["rawfd",6],["protflags",3],["off_t",6],["mapflags",3]],["result",6]]],[5,"munmap","","",null,[[["size_t",6]],["result",6]]],[5,"madvise","","",null,[[["mmapadvise",4],["size_t",6]],["result",6]]],[5,"mprotect","","Set protection of memory mapping.",null,[[["protflags",3],["size_t",6]],["result",6]]],[5,"msync","","",null,[[["msflags",3],["size_t",6]],["result",6]]],[5,"shm_open","","",null,[[["mode",3],["oflag",3]],[["rawfd",6],["result",6]]]],[5,"shm_unlink","","",null,[[],["result",6]]],[18,"PROT_NONE","","Pages cannot be accessed.",45,null],[18,"PROT_READ","","Pages can be read.",45,null],[18,"PROT_WRITE","","Pages can be written.",45,null],[18,"PROT_EXEC","","Pages can be executed",45,null],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows…",45,null],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that…",45,null],[11,"empty","","Returns an empty set of flags",45,[[],["protflags",3]]],[11,"all","","Returns the set containing all flags.",45,[[],["protflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",45,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",45,[[["c_int",6]],[["option",4],["protflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",45,[[["c_int",6]],["protflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",45,[[["c_int",6]],["protflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",45,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",45,[[["protflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",45,[[["protflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",45,[[["protflags",3]]]],[11,"remove","","Removes the specified flags in-place.",45,[[["protflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",45,[[["protflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",45,[[["protflags",3]]]],[18,"MAP_FILE","","Compatibility flag. Ignored.",46,null],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",46,null],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive…",46,null],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in…",46,null],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",46,null],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",46,null],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address…",46,null],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping…",46,null],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",46,null],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",46,null],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as…",46,null],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",46,null],[18,"MAP_POPULATE","","Populate page tables for a mapping.",46,null],[18,"MAP_NONBLOCK","","Only meaningful when used with `MAP_POPULATE`. Don\'t…",46,null],[18,"MAP_HUGETLB","","Allocate the mapping using \\\"huge pages.\\\"",46,null],[18,"MAP_STACK","","Region grows down, like a stack.",46,null],[11,"empty","","Returns an empty set of flags",46,[[],["mapflags",3]]],[11,"all","","Returns the set containing all flags.",46,[[],["mapflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",46,[[["c_int",6]],[["mapflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",46,[[["c_int",6]],["mapflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",46,[[["c_int",6]],["mapflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",46,[[["mapflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",46,[[["mapflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["mapflags",3]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["mapflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["mapflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",46,[[["mapflags",3]]]],[18,"MS_ASYNC","","Schedule an update but return immediately.",47,null],[18,"MS_INVALIDATE","","Invalidate all cached data.",47,null],[18,"MS_SYNC","","Perform an update and wait for it to complete.",47,null],[11,"empty","","Returns an empty set of flags",47,[[],["msflags",3]]],[11,"all","","Returns the set containing all flags.",47,[[],["msflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",47,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",47,[[["c_int",6]],[["option",4],["msflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",47,[[["c_int",6]],["msflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",47,[[["c_int",6]],["msflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",47,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",47,[[["msflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",47,[[["msflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",47,[[["msflags",3]]]],[11,"remove","","Removes the specified flags in-place.",47,[[["msflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",47,[[["msflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",47,[[["msflags",3]]]],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address…",48,null],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space…",48,null],[11,"empty","","Returns an empty set of flags",48,[[],["mlockallflags",3]]],[11,"all","","Returns the set containing all flags.",48,[[],["mlockallflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",48,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",48,[[["c_int",6]],[["option",4],["mlockallflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",48,[[["c_int",6]],["mlockallflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",48,[[["c_int",6]],["mlockallflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",48,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",48,[[["mlockallflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",48,[[["mlockallflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",48,[[["mlockallflags",3]]]],[11,"remove","","Removes the specified flags in-place.",48,[[["mlockallflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",48,[[["mlockallflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",48,[[["mlockallflags",3]]]],[0,"pthread","nix::sys","",null,null],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",null,[[],["pthread",6]]],[6,"Pthread","","",null,null],[0,"ptrace","nix::sys","",null,null],[3,"Options","nix::sys::ptrace","Ptrace options used in conjunction with the…",null,null],[4,"Request","","Ptrace Request enum defining the action to be taken.",null,null],[13,"PTRACE_TRACEME","","",49,null],[13,"PTRACE_PEEKTEXT","","",49,null],[13,"PTRACE_PEEKDATA","","",49,null],[13,"PTRACE_PEEKUSER","","",49,null],[13,"PTRACE_POKETEXT","","",49,null],[13,"PTRACE_POKEDATA","","",49,null],[13,"PTRACE_POKEUSER","","",49,null],[13,"PTRACE_CONT","","",49,null],[13,"PTRACE_KILL","","",49,null],[13,"PTRACE_SINGLESTEP","","",49,null],[13,"PTRACE_GETREGS","","",49,null],[13,"PTRACE_SETREGS","","",49,null],[13,"PTRACE_GETFPREGS","","",49,null],[13,"PTRACE_SETFPREGS","","",49,null],[13,"PTRACE_ATTACH","","",49,null],[13,"PTRACE_DETACH","","",49,null],[13,"PTRACE_GETFPXREGS","","",49,null],[13,"PTRACE_SETFPXREGS","","",49,null],[13,"PTRACE_SYSCALL","","",49,null],[13,"PTRACE_SETOPTIONS","","",49,null],[13,"PTRACE_GETEVENTMSG","","",49,null],[13,"PTRACE_GETSIGINFO","","",49,null],[13,"PTRACE_SETSIGINFO","","",49,null],[13,"PTRACE_GETREGSET","","",49,null],[13,"PTRACE_SETREGSET","","",49,null],[13,"PTRACE_SEIZE","","",49,null],[13,"PTRACE_INTERRUPT","","",49,null],[13,"PTRACE_LISTEN","","",49,null],[13,"PTRACE_PEEKSIGINFO","","",49,null],[4,"Event","","Using the ptrace options the tracer can configure the…",null,null],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",50,null],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",50,null],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",50,null],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",50,null],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",50,null],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit…",50,null],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",50,null],[5,"ptrace","","Performs a ptrace request. If the request in question is…",null,[[["request",4],["pid",3],["addresstype",6]],[["result",6],["c_long",6]]]],[5,"getregs","","Get user registers, as with `ptrace(PTRACE_GETREGS, ...)`",null,[[["pid",3]],[["result",6],["user_regs_struct",3]]]],[5,"setregs","","Set user registers, as with `ptrace(PTRACE_SETREGS, ...)`",null,[[["pid",3],["user_regs_struct",3]],["result",6]]],[5,"setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",null,[[["pid",3],["options",3]],["result",6]]],[5,"getevent","","Gets a ptrace event as described by…",null,[[["pid",3]],[["result",6],["c_long",6]]]],[5,"getsiginfo","","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",null,[[["pid",3]],[["result",6],["siginfo_t",3]]]],[5,"setsiginfo","","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",null,[[["pid",3],["siginfo_t",3]],["result",6]]],[5,"traceme","","Sets the process as traceable, as with…",null,[[],["result",6]]],[5,"syscall","","Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",null,[[["pid",3],["into",8],["option",4]],["result",6]]],[5,"attach","","Attach to a running process, as with…",null,[[["pid",3]],["result",6]]],[5,"seize","","Attach to a running process, as with `ptrace(PTRACE_SEIZE,…",null,[[["pid",3],["options",3]],["result",6]]],[5,"detach","","Detaches the current running process, as with…",null,[[["pid",3],["into",8],["option",4]],["result",6]]],[5,"cont","","Restart the stopped tracee process, as with…",null,[[["pid",3],["into",8],["option",4]],["result",6]]],[5,"kill","","Issues a kill request as with `ptrace(PTRACE_KILL, ...)`",null,[[["pid",3]],["result",6]]],[5,"step","","Move the stopped tracee process forward by a single step…",null,[[["pid",3],["into",8],["option",4]],["result",6]]],[5,"read","","Reads a word from a processes memory at the given address",null,[[["pid",3],["addresstype",6]],[["result",6],["c_long",6]]]],[5,"write","","Writes a word into the processes memory at the given address",null,[[["pid",3],["addresstype",6]],["result",6]]],[18,"PTRACE_O_TRACESYSGOOD","","When delivering system call traps set a bit to allow…",51,null],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked…",51,null],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked…",51,null],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned process.",51,null],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",51,null],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",51,null],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit commences…",51,null],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered.…",51,null],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits. This is…",51,null],[11,"empty","","Returns an empty set of flags",51,[[],["options",3]]],[11,"all","","Returns the set containing all flags.",51,[[],["options",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",51,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",51,[[["c_int",6]],[["options",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",51,[[["c_int",6]],["options",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",51,[[["c_int",6]],["options",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",51,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",51,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",51,[[["options",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",51,[[["options",3]]]],[11,"insert","","Inserts the specified flags in-place.",51,[[["options",3]]]],[11,"remove","","Removes the specified flags in-place.",51,[[["options",3]]]],[11,"toggle","","Toggles the specified flags in-place.",51,[[["options",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",51,[[["options",3]]]],[6,"AddressType","","",null,null],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or…",null,null],[3,"QuotaValidFlags","nix::sys::quota","Indicates the quota fields that are valid to read from.",null,null],[3,"Dqblk","","Wrapper type for `if_dqblk`",null,null],[4,"QuotaType","","The scope of the quota.",null,null],[13,"USRQUOTA","","Specify a user quota",52,null],[13,"GRPQUOTA","","Specify a group quota",52,null],[4,"QuotaFmt","","The type of quota format to use.",null,null],[13,"QFMT_VFS_OLD","","Use the original quota format.",53,null],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",53,null],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",53,null],[5,"quotactl_on","","Turn on disk quotas for a block device.",null,[[["quotafmt",4],["quotatype",4]],["result",6]]],[5,"quotactl_off","","Disable disk quotas for a block device.",null,[[["quotatype",4]],["result",6]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",null,[[["option",4],["quotatype",4]],["result",6]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given…",null,[[["c_int",6],["quotatype",4]],[["dqblk",3],["result",6]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a…",null,[[["c_int",6],["quotatype",4],["dqblk",3],["quotavalidflags",3]],["result",6]]],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",54,null],[18,"QIF_SPACE","","The current space field.",54,null],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",54,null],[18,"QIF_INODES","","The current inodes field.",54,null],[18,"QIF_BTIME","","The disk use time limit field.",54,null],[18,"QIF_ITIME","","The file quote time limit field.",54,null],[18,"QIF_LIMITS","","All block & inode limits.",54,null],[18,"QIF_USAGE","","The space & inodes usage fields.",54,null],[18,"QIF_TIMES","","The time limit fields.",54,null],[18,"QIF_ALL","","All fields.",54,null],[11,"empty","","Returns an empty set of flags",54,[[],["quotavalidflags",3]]],[11,"all","","Returns the set containing all flags.",54,[[],["quotavalidflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",54,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",54,[[],[["option",4],["quotavalidflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",54,[[],["quotavalidflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",54,[[],["quotavalidflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",54,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",54,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",54,[[["quotavalidflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",54,[[["quotavalidflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",54,[[["quotavalidflags",3]]]],[11,"remove","","Removes the specified flags in-place.",54,[[["quotavalidflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",54,[[["quotavalidflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",54,[[["quotavalidflags",3]]]],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",55,[[],["option",4]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",55,[[]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",55,[[],["option",4]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",55,[[]]],[11,"occupied_space","","Current occupied space (bytes).",55,[[],["option",4]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",55,[[],["option",4]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",55,[[]]],[11,"inodes_soft_limit","","Preferred inode limit",55,[[],["option",4]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",55,[[]]],[11,"allocated_inodes","","Current number of allocated inodes.",55,[[],["option",4]]],[11,"block_time_limit","","Time limit for excessive disk use.",55,[[],["option",4]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",55,[[]]],[11,"inode_time_limit","","Time limit for excessive files.",55,[[],["option",4]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",55,[[]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",56,null],[13,"RB_KEXEC","","",56,null],[13,"RB_POWER_OFF","","",56,null],[13,"RB_AUTOBOOT","","",56,null],[13,"RB_SW_SUSPEND","","",56,null],[5,"reboot","","",null,[[["rebootmode",4]],[["void",4],["result",6]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,[[],["result",6]]],[0,"select","nix::sys","",null,null],[17,"FD_SETSIZE","nix::sys::select","",null,null],[3,"FdSet","","",null,null],[5,"select","","Monitors file descriptors for readiness",null,[[],[["c_int",6],["result",6]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered…",null,[[],[["c_int",6],["result",6]]]],[11,"new","","",57,[[],["fdset",3]]],[11,"insert","","",57,[[["rawfd",6]]]],[11,"remove","","",57,[[["rawfd",6]]]],[11,"contains","","",57,[[["rawfd",6]]]],[11,"clear","","",57,[[]]],[11,"highest","","Finds the highest file descriptor in the set.",57,[[],[["rawfd",6],["option",4]]]],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting…",null,[[["off_t",6],["rawfd",6],["option",4]],["result",6]]],[0,"signal","nix::sys","",null,null],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the…",null,null],[3,"SignalIterator","","",null,null],[3,"SaFlags","","",null,null],[3,"SigSet","","",null,null],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to…",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",58,null],[13,"SIGINT","","",58,null],[13,"SIGQUIT","","",58,null],[13,"SIGILL","","",58,null],[13,"SIGTRAP","","",58,null],[13,"SIGABRT","","",58,null],[13,"SIGBUS","","",58,null],[13,"SIGFPE","","",58,null],[13,"SIGKILL","","",58,null],[13,"SIGUSR1","","",58,null],[13,"SIGSEGV","","",58,null],[13,"SIGUSR2","","",58,null],[13,"SIGPIPE","","",58,null],[13,"SIGALRM","","",58,null],[13,"SIGTERM","","",58,null],[13,"SIGSTKFLT","","",58,null],[13,"SIGCHLD","","",58,null],[13,"SIGCONT","","",58,null],[13,"SIGSTOP","","",58,null],[13,"SIGTSTP","","",58,null],[13,"SIGTTIN","","",58,null],[13,"SIGTTOU","","",58,null],[13,"SIGURG","","",58,null],[13,"SIGXCPU","","",58,null],[13,"SIGXFSZ","","",58,null],[13,"SIGVTALRM","","",58,null],[13,"SIGPROF","","",58,null],[13,"SIGWINCH","","",58,null],[13,"SIGIO","","",58,null],[13,"SIGPWR","","",58,null],[13,"SIGSYS","","",58,null],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",59,null],[13,"SIG_UNBLOCK","","",59,null],[13,"SIG_SETMASK","","",59,null],[4,"SigHandler","","A signal handler.",null,null],[13,"SigDfl","","Default signal handling.",60,null],[13,"SigIgn","","Request that the signal be ignored.",60,null],[13,"Handler","","Use the given signal-catching function, which takes in the…",60,null],[13,"SigAction","","Use the given signal-catching function, which takes in the…",60,null],[4,"SigevNotify","","Used to request asynchronous notification of certain…",null,null],[13,"SigevNone","","No notification will be delivered",61,null],[13,"SigevSignal","","The signal given by `signal` will be delivered to the…",61,null],[12,"signal","nix::sys::signal::SigevNotify","",62,null],[12,"si_value","","",62,null],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID…",61,null],[12,"signal","nix::sys::signal::SigevNotify","",63,null],[12,"thread_id","","",63,null],[12,"si_value","","",63,null],[5,"sigaction","nix::sys::signal","Changes the action taken by a process on receipt of a…",null,[[["signal",4],["sigaction",3]],[["result",6],["sigaction",3]]]],[5,"signal","","Signal management (see signal(3p))",null,[[["sighandler",4],["signal",4]],[["sighandler",4],["result",6]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the…",null,[[["sigset",3],["sigmaskhow",4],["sigset",3],["option",4],["option",4]],["result",6]]],[5,"sigprocmask","","Examine and change blocked signals.",null,[[["sigset",3],["sigmaskhow",4],["sigset",3],["option",4],["option",4]],["result",6]]],[5,"kill","","",null,[[["pid",3],["into",8],["option",4]],["result",6]]],[5,"killpg","","Send a signal to a process group (see killpg(3)).",null,[[["pid",3],["into",8],["option",4]],["result",6]]],[5,"raise","","",null,[[["signal",4]],["result",6]]],[11,"new","","Note: this constructor does not allow the user to set the…",64,[[["sigevnotify",4]],["sigevent",3]]],[11,"sigevent","","",64,[[],["sigevent",3]]],[6,"type_of_thread_id","","",null,null],[17,"NSIG","","",null,null],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[11,"as_str","","Returns name of signal.",58,[[]]],[11,"iterator","","",58,[[],["signaliterator",3]]],[18,"SA_NOCLDSTOP","","",65,null],[18,"SA_NOCLDWAIT","","",65,null],[18,"SA_NODEFER","","",65,null],[18,"SA_ONSTACK","","",65,null],[18,"SA_RESETHAND","","",65,null],[18,"SA_RESTART","","",65,null],[18,"SA_SIGINFO","","",65,null],[11,"empty","","Returns an empty set of flags",65,[[],["saflags",3]]],[11,"all","","Returns the set containing all flags.",65,[[],["saflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",65,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",65,[[["c_int",6]],[["option",4],["saflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",65,[[["c_int",6]],["saflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",65,[[["c_int",6]],["saflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",65,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",65,[[["saflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",65,[[["saflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",65,[[["saflags",3]]]],[11,"remove","","Removes the specified flags in-place.",65,[[["saflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",65,[[["saflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",65,[[["saflags",3]]]],[11,"all","","",66,[[],["sigset",3]]],[11,"empty","","",66,[[],["sigset",3]]],[11,"add","","",66,[[["signal",4]]]],[11,"clear","","",66,[[]]],[11,"remove","","",66,[[["signal",4]]]],[11,"contains","","",66,[[["signal",4]]]],[11,"extend","","",66,[[["sigset",3]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the…",66,[[],[["result",6],["sigset",3]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling…",66,[[],["result",6]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling…",66,[[],["result",6]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the…",66,[[],["result",6]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns…",66,[[["sigmaskhow",4]],[["result",6],["sigset",3]]]],[11,"wait","","Suspends execution of the calling thread until one of the…",66,[[],[["result",6],["signal",4]]]],[11,"new","","Creates a new action.",67,[[["sighandler",4],["saflags",3],["sigset",3]],["sigaction",3]]],[11,"flags","","Returns the flags set on the action.",67,[[],["saflags",3]]],[11,"mask","","Returns the set of signals that are blocked during…",67,[[],["sigset",3]]],[11,"handler","","Returns the action\'s handler.",67,[[],["sighandler",4]]],[0,"signalfd","nix::sys","Interface for the `signalfd` syscall.",null,null],[3,"siginfo","nix::sys::signalfd","",null,null],[12,"ssi_signo","","",68,null],[12,"ssi_errno","","",68,null],[12,"ssi_code","","",68,null],[12,"ssi_pid","","",68,null],[12,"ssi_uid","","",68,null],[12,"ssi_fd","","",68,null],[12,"ssi_tid","","",68,null],[12,"ssi_band","","",68,null],[12,"ssi_overrun","","",68,null],[12,"ssi_trapno","","",68,null],[12,"ssi_status","","",68,null],[12,"ssi_int","","",68,null],[12,"ssi_ptr","","",68,null],[12,"ssi_utime","","",68,null],[12,"ssi_stime","","",68,null],[12,"ssi_addr","","",68,null],[12,"ssi_addr_lsb","","",68,null],[12,"ssi_syscall","","",68,null],[12,"ssi_call_addr","","",68,null],[12,"ssi_arch","","",68,null],[3,"SfdFlags","","",null,null],[3,"SignalFd","","A helper struct for creating, reading and closing a…",null,null],[5,"signalfd","","Creates a new file descriptor for reading signals.",null,[[["sigset",3],["rawfd",6],["sfdflags",3]],[["rawfd",6],["result",6]]]],[17,"SIGNALFD_NEW","","",null,null],[17,"SIGNALFD_SIGINFO_SIZE","","",null,null],[18,"SFD_NONBLOCK","","",69,null],[18,"SFD_CLOEXEC","","",69,null],[11,"empty","","Returns an empty set of flags",69,[[],["sfdflags",3]]],[11,"all","","Returns the set containing all flags.",69,[[],["sfdflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",69,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",69,[[["c_int",6]],[["sfdflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",69,[[["c_int",6]],["sfdflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",69,[[["c_int",6]],["sfdflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",69,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",69,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",69,[[["sfdflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",69,[[["sfdflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",69,[[["sfdflags",3]]]],[11,"remove","","Removes the specified flags in-place.",69,[[["sfdflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",69,[[["sfdflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",69,[[["sfdflags",3]]]],[11,"new","","",70,[[["sigset",3]],[["result",6],["signalfd",3]]]],[11,"with_flags","","",70,[[["sigset",3],["sfdflags",3]],[["result",6],["signalfd",3]]]],[11,"set_mask","","",70,[[["sigset",3]],["result",6]]],[11,"read_signal","","",70,[[],[["result",6],["option",4]]]],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"cmsghdr","nix::sys::socket","",null,null],[12,"cmsg_len","","",71,null],[12,"cmsg_level","","",71,null],[12,"cmsg_type","","",71,null],[3,"msghdr","","",null,null],[12,"msg_name","","",72,null],[12,"msg_namelen","","",72,null],[12,"msg_iov","","",72,null],[12,"msg_iovlen","","",72,null],[12,"msg_control","","",72,null],[12,"msg_controllen","","",72,null],[12,"msg_flags","","",72,null],[6,"sa_family_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",73,null],[12,"sa_data","","",73,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",74,null],[12,"sin_port","","",74,null],[12,"sin_addr","","",74,null],[12,"sin_zero","","",74,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",75,null],[12,"sin6_port","","",75,null],[12,"sin6_flowinfo","","",75,null],[12,"sin6_addr","","",75,null],[12,"sin6_scope_id","","",75,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",76,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",77,null],[12,"sun_path","","",77,null],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",null,null],[12,"0","","",78,null],[12,"1","","",78,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",79,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",80,null],[3,"LinkAddr","","Hardware Address",null,null],[12,"0","","",81,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",82,null],[3,"AlgAddr","","",null,null],[12,"0","","",83,null],[3,"VsockAddr","","",null,null],[12,"0","","",84,null],[3,"SockFlag","","Additional socket options",null,null],[3,"MsgFlags","","Flags for send/recv and their relatives",null,null],[3,"UnixCredentials","","Unix credentials of the sending process.",null,null],[3,"IpMembershipRequest","","Request for multicast socket operations",null,null],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",null,null],[3,"RecvMsg","","",null,null],[12,"bytes","","",85,null],[12,"address","","",85,null],[12,"flags","","",85,null],[3,"CmsgIterator","","",null,null],[4,"AddressFamily","","These constants specify the protocol family to be used in…",null,null],[13,"Unix","","Local communication (see `unix(7)`)",86,null],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",86,null],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",86,null],[13,"Netlink","","Kernel user interface device (see `netlink(7)`)",86,null],[13,"Packet","","Low level packet interface (see `packet(7)`)",86,null],[13,"Ax25","","Amateur radio AX.25 protocol",86,null],[13,"Ipx","","IPX - Novell protocols",86,null],[13,"AppleTalk","","AppleTalk",86,null],[13,"NetRom","","",86,null],[13,"Bridge","","",86,null],[13,"AtmPvc","","Access to raw ATM PVCs",86,null],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",86,null],[13,"Rose","","",86,null],[13,"Decnet","","",86,null],[13,"NetBeui","","",86,null],[13,"Security","","",86,null],[13,"Key","","",86,null],[13,"Ash","","",86,null],[13,"Econet","","",86,null],[13,"AtmSvc","","",86,null],[13,"Rds","","",86,null],[13,"Sna","","",86,null],[13,"Irda","","",86,null],[13,"Pppox","","",86,null],[13,"Wanpipe","","",86,null],[13,"Llc","","",86,null],[13,"Ib","","",86,null],[13,"Mpls","","",86,null],[13,"Can","","",86,null],[13,"Tipc","","",86,null],[13,"Bluetooth","","",86,null],[13,"Iucv","","",86,null],[13,"RxRpc","","",86,null],[13,"Isdn","","",86,null],[13,"Phonet","","",86,null],[13,"Ieee802154","","",86,null],[13,"Caif","","",86,null],[13,"Alg","","Interface to kernel crypto API",86,null],[13,"Nfc","","",86,null],[13,"Vsock","","",86,null],[13,"Unspec","","Unspecified address family, (see `getaddrinfo(3)`)",86,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",87,null],[13,"Unix","","",87,null],[13,"Netlink","","",87,null],[13,"Alg","","",87,null],[13,"Link","","Datalink address (MAC)",87,null],[13,"Vsock","","",87,null],[4,"InetAddr","","",null,null],[13,"V4","","",88,null],[13,"V6","","",88,null],[4,"IpAddr","","",null,null],[13,"V4","","",89,null],[13,"V6","","",89,null],[4,"SockType","","These constants are used to specify the communication…",null,null],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based…",90,null],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of…",90,null],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based…",90,null],[13,"Raw","","Provides raw network protocol access.",90,null],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee…",90,null],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the…",null,null],[13,"Tcp","","TCP protocol (ip(7))",91,null],[13,"Udp","","UDP protocol (ip(7))",91,null],[4,"ControlMessageOwned","","A type-safe wrapper around a single control message, as…",null,null],[13,"ScmRights","","Received version of…",92,null],[13,"ScmCredentials","","Received version of…",92,null],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the…",92,null],[13,"Ipv4PacketInfo","","",92,null],[13,"Ipv6PacketInfo","","",92,null],[4,"ControlMessage","","A type-safe zero-copy wrapper around a single control…",null,null],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of…",93,null],[13,"ScmCredentials","","A message of type `SCM_CREDENTIALS`, containing the pid,…",93,null],[13,"AlgSetIv","","Set IV for `AF_ALG` crypto API.",93,null],[13,"AlgSetOp","","Set crypto operation for `AF_ALG` crypto API. It may be…",93,null],[13,"AlgSetAeadAssoclen","","Set the length of associated authentication data (AAD)…",93,null],[4,"SockLevel","","The protocol level at which to get / set socket options.…",null,null],[13,"Socket","","",94,null],[13,"Tcp","","",94,null],[13,"Ip","","",94,null],[13,"Ipv6","","",94,null],[13,"Udp","","",94,null],[13,"Netlink","","",94,null],[13,"Alg","","",94,null],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",95,null],[13,"Write","","Further  transmissions will be disallowed.",95,null],[13,"Both","","Further receptions and transmissions will be disallowed.",95,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly…",null,[[["option",4],["rawfd",6],["msgflags",3],["sockaddr",4]],["result",6]]],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket,…",null,[[["rawfd",6],["option",4],["vec",3],["msgflags",3]],[["recvmsg",3],["result",6]]]],[5,"socket","","Create an endpoint for communication",null,[[["option",4],["socktype",4],["addressfamily",4],["sockflag",3],["into",8]],[["rawfd",6],["result",6]]]],[5,"socketpair","","Create a pair of connected sockets",null,[[["sockflag",3],["socktype",4],["addressfamily",4],["into",8],["option",4]],["result",6]]],[5,"listen","","Listen for connections on a socket",null,[[["rawfd",6]],["result",6]]],[5,"bind","","Bind a name to a socket",null,[[["sockaddr",4],["rawfd",6]],["result",6]]],[5,"accept","","Accept a connection on a socket",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"accept4","","Accept a connection on a socket",null,[[["rawfd",6],["sockflag",3]],[["rawfd",6],["result",6]]]],[5,"connect","","Initiate a connection on a socket",null,[[["sockaddr",4],["rawfd",6]],["result",6]]],[5,"recv","","Receive data from a connection-oriented socket. Returns…",null,[[["rawfd",6],["msgflags",3]],["result",6]]],[5,"recvfrom","","Receive data from a connectionless or connection-oriented…",null,[[["rawfd",6]],["result",6]]],[5,"sendto","","Send a message to a socket",null,[[["sockaddr",4],["rawfd",6],["msgflags",3]],["result",6]]],[5,"send","","Send data to a connection-oriented socket. Returns the…",null,[[["rawfd",6],["msgflags",3]],["result",6]]],[5,"getsockopt","","Get the current value for the requested socket option",null,[[["rawfd",6],["getsockopt",8]],["result",6]]],[5,"setsockopt","","Sets the value for the requested socket option",null,[[["rawfd",6],["setsockopt",8]],["result",6]]],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",null,[[["rawfd",6]],[["result",6],["sockaddr",4]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",null,[[["rawfd",6]],[["result",6],["sockaddr",4]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a…",null,[[["sockaddr_storage",3]],[["result",6],["sockaddr",4]]]],[5,"shutdown","","Shut down part of a full-duplex connection.",null,[[["shutdown",4],["rawfd",6]],["result",6]]],[11,"new","","",82,[[],["netlinkaddr",3]]],[11,"pid","","",82,[[]]],[11,"groups","","",82,[[]]],[11,"new","","",83,[[],["algaddr",3]]],[11,"alg_type","","",83,[[],["cstr",3]]],[11,"alg_name","","",83,[[],["cstr",3]]],[11,"family","","Always AF_PACKET",81,[[],["addressfamily",4]]],[11,"protocol","","Physical-layer protocol",81,[[]]],[11,"ifindex","","Interface number",81,[[]]],[11,"hatype","","ARP hardware type",81,[[]]],[11,"pkttype","","Packet type",81,[[]]],[11,"halen","","Length of MAC address",81,[[]]],[11,"addr","","Physical-layer address (MAC)",81,[[]]],[11,"new","","",84,[[],["vsockaddr",3]]],[11,"cid","","Context Identifier (CID)",84,[[]]],[11,"port","","Port number",84,[[]]],[11,"from_i32","","Create a new `AddressFamily` from an integer value…",86,[[],[["option",4],["addressfamily",4]]]],[11,"from_std","","",88,[[["socketaddr",4]],["inetaddr",4]]],[11,"new","","",88,[[["ipaddr",4]],["inetaddr",4]]],[11,"ip","","Gets the IP address associated with this socket address.",88,[[],["ipaddr",4]]],[11,"port","","Gets the port number associated with this socket address",88,[[]]],[11,"to_std","","",88,[[],["socketaddr",4]]],[11,"to_str","","",88,[[],["string",3]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",89,[[],["ipaddr",4]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",89,[[],["ipaddr",4]]],[11,"from_std","","",89,[[["ipaddr",4]],["ipaddr",4]]],[11,"to_std","","",89,[[],["ipaddr",4]]],[11,"new","","",79,[[],["ipv4addr",3]]],[11,"from_std","","",79,[[["ipv4addr",3]],["ipv4addr",3]]],[11,"any","","",79,[[],["ipv4addr",3]]],[11,"octets","","",79,[[]]],[11,"to_std","","",79,[[],["ipv4addr",3]]],[11,"new","","",80,[[],["ipv6addr",3]]],[11,"from_std","","",80,[[["ipv6addr",3]],["ipv6addr",3]]],[11,"segments","","Return the eight 16-bit segments that make up this address",80,[[]]],[11,"to_std","","",80,[[],["ipv6addr",3]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",78,[[],[["result",6],["unixaddr",3]]]],[11,"new_abstract","","Create a new `sockaddr_un` representing an address in the…",78,[[],[["result",6],["unixaddr",3]]]],[11,"path","","If this address represents a filesystem path, return that…",78,[[],[["path",3],["option",4]]]],[11,"as_abstract","","If this address represents an abstract socket, return its…",78,[[],["option",4]]],[11,"new_inet","","",87,[[["inetaddr",4]],["sockaddr",4]]],[11,"new_unix","","",87,[[],[["result",6],["sockaddr",4]]]],[11,"new_netlink","","",87,[[],["sockaddr",4]]],[11,"new_alg","","",87,[[],["sockaddr",4]]],[11,"new_vsock","","",87,[[],["sockaddr",4]]],[11,"family","","",87,[[],["addressfamily",4]]],[11,"to_str","","",87,[[],["string",3]]],[11,"from_libc_sockaddr","","Creates a `SockAddr` struct from libc\'s sockaddr.",87,[[],[["sockaddr",4],["option",4]]]],[11,"as_ffi_pair","","Conversion from nix\'s SockAddr type to the underlying libc…",87,[[]]],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"OriginalDst","","",null,null],[3,"ReceiveTimestamp","","",null,null],[3,"IpTransparent","","",null,null],[3,"Mark","","",null,null],[3,"PassCred","","",null,null],[3,"TcpCongestion","","",null,null],[3,"Ipv4PacketInfo","","",null,null],[3,"Ipv6RecvPacketInfo","","",null,null],[3,"AlgSetAeadAuthSize","","",null,null],[3,"AlgSetKey","","",null,null],[8,"GetSockOpt","nix::sys::socket","Represents a socket option that can be accessed or set.…",null,null],[16,"Val","","",96,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set.…",null,null],[16,"Val","","",97,null],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",98,null],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",98,null],[11,"empty","","Returns an empty set of flags",98,[[],["sockflag",3]]],[11,"all","","Returns the set containing all flags.",98,[[],["sockflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",98,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",98,[[["c_int",6]],[["option",4],["sockflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",98,[[["c_int",6]],["sockflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",98,[[["c_int",6]],["sockflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",98,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",98,[[["sockflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",98,[[["sockflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",98,[[["sockflag",3]]]],[11,"remove","","Removes the specified flags in-place.",98,[[["sockflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",98,[[["sockflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",98,[[["sockflag",3]]]],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support…",99,null],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as…",99,null],[18,"MSG_WAITALL","","Receive operation blocks until the full amount of data can…",99,null],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would…",99,null],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",99,null],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux…",99,null],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for…",99,null],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received…",99,null],[18,"MSG_CMSG_CLOEXEC","","Set the `close-on-exec` flag for the file descriptor…",99,null],[11,"empty","","Returns an empty set of flags",99,[[],["msgflags",3]]],[11,"all","","Returns the set containing all flags.",99,[[],["msgflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",99,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",99,[[["c_int",6]],[["option",4],["msgflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",99,[[["c_int",6]],["msgflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",99,[[["c_int",6]],["msgflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",99,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",99,[[["msgflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",99,[[["msgflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",99,[[["msgflags",3]]]],[11,"remove","","Removes the specified flags in-place.",99,[[["msgflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",99,[[["msgflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",99,[[["msgflags",3]]]],[11,"pid","","Returns the process identifier",100,[[],["pid_t",6]]],[11,"uid","","Returns the user identifier",100,[[],["uid_t",6]]],[11,"gid","","Returns the group identifier",100,[[],["gid_t",6]]],[11,"new","","Instantiate a new `IpMembershipRequest`",101,[[["option",4],["ipv4addr",3]]]],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",102,[[["ipv6addr",3]]]],[11,"cmsgs","","Iterate over the valid control messages pointed to by this…",85,[[],["cmsgiterator",3]]],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[6,"mode_t","","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",103,null],[12,"st_ino","","",103,null],[12,"st_nlink","","",103,null],[12,"st_mode","","",103,null],[12,"st_uid","","",103,null],[12,"st_gid","","",103,null],[12,"st_rdev","","",103,null],[12,"st_size","","",103,null],[12,"st_blksize","","",103,null],[12,"st_blocks","","",103,null],[12,"st_atime","","",103,null],[12,"st_atime_nsec","","",103,null],[12,"st_mtime","","",103,null],[12,"st_mtime_nsec","","",103,null],[12,"st_ctime","","",103,null],[12,"st_ctime_nsec","","",103,null],[5,"FileStat","","",null,[[]]],[3,"SFlag","","",null,null],[3,"Mode","","",null,null],[4,"FchmodatFlags","","Flags for `fchmodat` function.",null,null],[13,"FollowSymlink","","",104,null],[13,"NoFollowSymlink","","",104,null],[4,"UtimensatFlags","","Flags for `utimensat` function.",null,null],[13,"FollowSymlink","","",105,null],[13,"NoFollowSymlink","","",105,null],[5,"mknod","","",null,[[["dev_t",6],["mode",3],["sflag",3]],["result",6]]],[5,"major","","",null,[[["dev_t",6]]]],[5,"minor","","",null,[[["dev_t",6]]]],[5,"makedev","","",null,[[],["dev_t",6]]],[5,"umask","","",null,[[["mode",3]],["mode",3]]],[5,"stat","","",null,[[],[["result",6],["filestat",3]]]],[5,"lstat","","",null,[[],[["result",6],["filestat",3]]]],[5,"fstat","","",null,[[["rawfd",6]],[["result",6],["filestat",3]]]],[5,"fstatat","","",null,[[["atflags",3],["rawfd",6]],[["result",6],["filestat",3]]]],[5,"fchmod","","Change the file permission bits of the file specified by a…",null,[[["rawfd",6],["mode",3]],["result",6]]],[5,"fchmodat","","Change the file permission bits.",null,[[["rawfd",6],["fchmodatflags",4],["option",4],["mode",3]],["result",6]]],[5,"utimes","","Change the access and modification times of a file.",null,[[["timeval",3]],["result",6]]],[5,"lutimes","","Change the access and modification times of a file without…",null,[[["timeval",3]],["result",6]]],[5,"futimens","","Change the access and modification times of the file…",null,[[["timespec",3],["rawfd",6]],["result",6]]],[5,"utimensat","","Change the access and modification times of a file.",null,[[["rawfd",6],["utimensatflags",4],["timespec",3],["option",4]],["result",6]]],[5,"mkdirat","","",null,[[["rawfd",6],["mode",3]],["result",6]]],[18,"S_IFIFO","","",106,null],[18,"S_IFCHR","","",106,null],[18,"S_IFDIR","","",106,null],[18,"S_IFBLK","","",106,null],[18,"S_IFREG","","",106,null],[18,"S_IFLNK","","",106,null],[18,"S_IFSOCK","","",106,null],[18,"S_IFMT","","",106,null],[11,"empty","","Returns an empty set of flags",106,[[],["sflag",3]]],[11,"all","","Returns the set containing all flags.",106,[[],["sflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",106,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",106,[[["mode_t",6]],[["option",4],["sflag",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",106,[[["mode_t",6]],["sflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",106,[[["mode_t",6]],["sflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",106,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",106,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",106,[[["sflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",106,[[["sflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",106,[[["sflag",3]]]],[11,"remove","","Removes the specified flags in-place.",106,[[["sflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",106,[[["sflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",106,[[["sflag",3]]]],[18,"S_IRWXU","","",107,null],[18,"S_IRUSR","","",107,null],[18,"S_IWUSR","","",107,null],[18,"S_IXUSR","","",107,null],[18,"S_IRWXG","","",107,null],[18,"S_IRGRP","","",107,null],[18,"S_IWGRP","","",107,null],[18,"S_IXGRP","","",107,null],[18,"S_IRWXO","","",107,null],[18,"S_IROTH","","",107,null],[18,"S_IWOTH","","",107,null],[18,"S_IXOTH","","",107,null],[18,"S_ISUID","","",107,null],[18,"S_ISGID","","",107,null],[18,"S_ISVTX","","",107,null],[11,"empty","","Returns an empty set of flags",107,[[],["mode",3]]],[11,"all","","Returns the set containing all flags.",107,[[],["mode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",107,[[],["mode_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",107,[[["mode_t",6]],[["option",4],["mode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",107,[[["mode_t",6]],["mode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",107,[[["mode_t",6]],["mode",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",107,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",107,[[["mode",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",107,[[["mode",3]]]],[11,"insert","","Inserts the specified flags in-place.",107,[[["mode",3]]]],[11,"remove","","Removes the specified flags in-place.",107,[[["mode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",107,[[["mode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",107,[[["mode",3]]]],[0,"statfs","nix::sys","",null,null],[3,"Statfs","nix::sys::statfs","",null,null],[3,"FsType","","",null,null],[5,"statfs","","",null,[[],[["result",6],["statfs",3]]]],[5,"fstatfs","","",null,[[],[["result",6],["statfs",3]]]],[6,"fsid_t","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[11,"filesystem_type","","Magic code defining system type",108,[[],["fstype",3]]],[11,"optimal_transfer_size","","Optimal transfer block size",108,[[],["c_long",6]]],[11,"block_size","","Size of a block",108,[[],["c_long",6]]],[11,"maximum_name_length","","Maximum length of filenames",108,[[],["c_long",6]]],[11,"blocks","","Total data blocks in filesystem",108,[[],["c_ulong",6]]],[11,"blocks_free","","Free blocks in filesystem",108,[[],["c_ulong",6]]],[11,"blocks_available","","Free blocks available to unprivileged user",108,[[],["c_ulong",6]]],[11,"files","","Total file nodes in filesystem",108,[[],["c_ulong",6]]],[11,"files_free","","Free file nodes in filesystem",108,[[],["c_ulong",6]]],[11,"filesystem_id","","Filesystem ID",108,[[],["fsid_t",6]]],[0,"statvfs","nix::sys","Get filesystem statistics",null,null],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",null,null],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",null,null],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",null,[[],[["result",6],["statvfs",3]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",null,[[],[["result",6],["statvfs",3]]]],[18,"ST_RDONLY","","Read Only",109,null],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",109,null],[18,"ST_NODEV","","Do not interpret character or block-special devices",109,null],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",109,null],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",109,null],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",109,null],[18,"ST_WRITE","","Write on file/directory/symlink",109,null],[18,"ST_APPEND","","Append-only file",109,null],[18,"ST_IMMUTABLE","","Immutable file",109,null],[18,"ST_NOATIME","","Do not update access times on files",109,null],[18,"ST_NODIRATIME","","Do not update access times on files",109,null],[18,"ST_RELATIME","","Update access time relative to modify/change time",109,null],[11,"empty","","Returns an empty set of flags",109,[[],["fsflags",3]]],[11,"all","","Returns the set containing all flags.",109,[[],["fsflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",109,[[],["c_ulong",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",109,[[["c_ulong",6]],[["option",4],["fsflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",109,[[["c_ulong",6]],["fsflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",109,[[["c_ulong",6]],["fsflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",109,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",109,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",109,[[["fsflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",109,[[["fsflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",109,[[["fsflags",3]]]],[11,"remove","","Removes the specified flags in-place.",109,[[["fsflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",109,[[["fsflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",109,[[["fsflags",3]]]],[11,"block_size","","get the file system block size",110,[[],["c_ulong",6]]],[11,"fragment_size","","Get the fundamental file system block size",110,[[],["c_ulong",6]]],[11,"blocks","","Get the number of blocks.",110,[[],["fsblkcnt_t",6]]],[11,"blocks_free","","Get the number of free blocks in the file system",110,[[],["fsblkcnt_t",6]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",110,[[],["fsblkcnt_t",6]]],[11,"files","","Get the total number of file inodes",110,[[],["fsfilcnt_t",6]]],[11,"files_free","","Get the number of free file inodes",110,[[],["fsfilcnt_t",6]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",110,[[],["fsfilcnt_t",6]]],[11,"filesystem_id","","Get the file system id",110,[[],["c_ulong",6]]],[11,"flags","","Get the mount flags",110,[[],["fsflags",3]]],[11,"name_max","","Get the maximum filename length",110,[[],["c_ulong",6]]],[0,"sysinfo","nix::sys","",null,null],[3,"SysInfo","nix::sys::sysinfo","System info structure returned by `sysinfo`.",null,null],[5,"sysinfo","","Returns system information.",null,[[],[["sysinfo",3],["result",6]]]],[11,"load_average","","Returns the load average tuple.",111,[[]]],[11,"uptime","","Returns the time since system boot.",111,[[],["duration",3]]],[11,"process_count","","Current number of processes.",111,[[]]],[11,"swap_total","","Returns the amount of swap memory in Bytes.",111,[[]]],[11,"swap_free","","Returns the amount of unused swap memory in Bytes.",111,[[]]],[11,"ram_total","","Returns the total amount of installed RAM in Bytes.",111,[[]]],[11,"ram_unused","","Returns the amount of completely unused RAM in Bytes.",111,[[]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication…",null,null],[17,"NCCS","nix::sys::termios","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[3,"Termios","","Stores settings for the termios API",null,null],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",112,null],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",112,null],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",112,null],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",112,null],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",112,null],[3,"InputFlags","","Flags for configuring the input mode of a terminal",null,null],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",null,null],[3,"ControlFlags","","Flags for setting the control mode of a terminal",null,null],[3,"LocalFlags","","Flags for setting any local modes",null,null],[4,"BaudRate","","Baud rates supported by the system.",null,null],[13,"B0","","",113,null],[13,"B50","","",113,null],[13,"B75","","",113,null],[13,"B110","","",113,null],[13,"B134","","",113,null],[13,"B150","","",113,null],[13,"B200","","",113,null],[13,"B300","","",113,null],[13,"B600","","",113,null],[13,"B1200","","",113,null],[13,"B1800","","",113,null],[13,"B2400","","",113,null],[13,"B4800","","",113,null],[13,"B9600","","",113,null],[13,"B19200","","",113,null],[13,"B38400","","",113,null],[13,"B57600","","",113,null],[13,"B115200","","",113,null],[13,"B230400","","",113,null],[13,"B460800","","",113,null],[13,"B500000","","",113,null],[13,"B576000","","",113,null],[13,"B921600","","",113,null],[13,"B1000000","","",113,null],[13,"B1152000","","",113,null],[13,"B1500000","","",113,null],[13,"B2000000","","",113,null],[13,"B2500000","","",113,null],[13,"B3000000","","",113,null],[13,"B3500000","","",113,null],[13,"B4000000","","",113,null],[4,"SetArg","","Specify when a port configuration change should occur.",null,null],[13,"TCSANOW","","The change will occur immediately",114,null],[13,"TCSADRAIN","","The change occurs after all output has been written",114,null],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",114,null],[4,"FlushArg","","Specify a combination of the input and output buffers to…",null,null],[13,"TCIFLUSH","","Flush data that was received but not read",115,null],[13,"TCOFLUSH","","Flush data written but not transmitted",115,null],[13,"TCIOFLUSH","","Flush both received data not read and written data not…",115,null],[4,"FlowArg","","Specify how transmission flow should be altered",null,null],[13,"TCOOFF","","Suspend transmission",116,null],[13,"TCOON","","Resume transmission",116,null],[13,"TCIOFF","","Transmit a STOP character, which should disable a…",116,null],[13,"TCION","","Transmit a START character, which should re-enable a…",116,null],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special…",null,null],[13,"VDISCARD","","",117,null],[13,"VEOF","","",117,null],[13,"VEOL","","",117,null],[13,"VEOL2","","",117,null],[13,"VERASE","","",117,null],[13,"VINTR","","",117,null],[13,"VKILL","","",117,null],[13,"VLNEXT","","",117,null],[13,"VMIN","","",117,null],[13,"VQUIT","","",117,null],[13,"VREPRINT","","",117,null],[13,"VSTART","","",117,null],[13,"VSTOP","","",117,null],[13,"VSUSP","","",117,null],[13,"VSWTC","","",117,null],[13,"VTIME","","",117,null],[13,"VWERASE","","",117,null],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",null,[[["termios",3]],["baudrate",4]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",null,[[["baudrate",4],["termios",3]],["result",6]]],[5,"cfmakeraw","","Configures the port to something like the \\\"raw\\\" mode of…",null,[[["termios",3]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",null,[[["rawfd",6]],[["result",6],["termios",3]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",null,[[["rawfd",6],["setarg",4],["termios",3]],["result",6]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",null,[[["rawfd",6]],["result",6]]],[5,"tcflow","","Suspend or resume the transmission or reception of data…",null,[[["rawfd",6],["flowarg",4]],["result",6]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",null,[[["rawfd",6],["flusharg",4]],["result",6]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",null,[[["rawfd",6],["c_int",6]],["result",6]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see…",null,[[["rawfd",6]],[["pid",3],["result",6]]]],[18,"IGNBRK","","",118,null],[18,"BRKINT","","",118,null],[18,"IGNPAR","","",118,null],[18,"PARMRK","","",118,null],[18,"INPCK","","",118,null],[18,"ISTRIP","","",118,null],[18,"INLCR","","",118,null],[18,"IGNCR","","",118,null],[18,"ICRNL","","",118,null],[18,"IXON","","",118,null],[18,"IXOFF","","",118,null],[18,"IXANY","","",118,null],[18,"IMAXBEL","","",118,null],[18,"IUTF8","","",118,null],[11,"empty","","Returns an empty set of flags",118,[[],["inputflags",3]]],[11,"all","","Returns the set containing all flags.",118,[[],["inputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",118,[[["tcflag_t",6]],[["option",4],["inputflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",118,[[["tcflag_t",6]],["inputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",118,[[["tcflag_t",6]],["inputflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",118,[[["inputflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",118,[[["inputflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["inputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["inputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["inputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",118,[[["inputflags",3]]]],[18,"OPOST","","",119,null],[18,"OLCUC","","",119,null],[18,"ONLCR","","",119,null],[18,"OCRNL","","",119,null],[18,"ONOCR","","",119,null],[18,"ONLRET","","",119,null],[18,"OFILL","","",119,null],[18,"OFDEL","","",119,null],[18,"NL0","","",119,null],[18,"NL1","","",119,null],[18,"CR0","","",119,null],[18,"CR1","","",119,null],[18,"CR2","","",119,null],[18,"CR3","","",119,null],[18,"TAB0","","",119,null],[18,"TAB1","","",119,null],[18,"TAB2","","",119,null],[18,"TAB3","","",119,null],[18,"XTABS","","",119,null],[18,"BS0","","",119,null],[18,"BS1","","",119,null],[18,"VT0","","",119,null],[18,"VT1","","",119,null],[18,"FF0","","",119,null],[18,"FF1","","",119,null],[18,"NLDLY","","",119,null],[18,"CRDLY","","",119,null],[18,"TABDLY","","",119,null],[18,"BSDLY","","",119,null],[18,"VTDLY","","",119,null],[18,"FFDLY","","",119,null],[11,"empty","","Returns an empty set of flags",119,[[],["outputflags",3]]],[11,"all","","Returns the set containing all flags.",119,[[],["outputflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",119,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",119,[[["tcflag_t",6]],[["option",4],["outputflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",119,[[["tcflag_t",6]],["outputflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",119,[[["tcflag_t",6]],["outputflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",119,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",119,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",119,[[["outputflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",119,[[["outputflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",119,[[["outputflags",3]]]],[11,"remove","","Removes the specified flags in-place.",119,[[["outputflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",119,[[["outputflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",119,[[["outputflags",3]]]],[18,"CS5","","",120,null],[18,"CS6","","",120,null],[18,"CS7","","",120,null],[18,"CS8","","",120,null],[18,"CSTOPB","","",120,null],[18,"CREAD","","",120,null],[18,"PARENB","","",120,null],[18,"PARODD","","",120,null],[18,"HUPCL","","",120,null],[18,"CLOCAL","","",120,null],[18,"CRTSCTS","","",120,null],[18,"CBAUD","","",120,null],[18,"CMSPAR","","",120,null],[18,"CIBAUD","","",120,null],[18,"CBAUDEX","","",120,null],[18,"CSIZE","","",120,null],[11,"empty","","Returns an empty set of flags",120,[[],["controlflags",3]]],[11,"all","","Returns the set containing all flags.",120,[[],["controlflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",120,[[["tcflag_t",6]],[["controlflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",120,[[["tcflag_t",6]],["controlflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",120,[[["tcflag_t",6]],["controlflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",120,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",120,[[["controlflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",120,[[["controlflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["controlflags",3]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["controlflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["controlflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",120,[[["controlflags",3]]]],[18,"ECHOKE","","",121,null],[18,"ECHOE","","",121,null],[18,"ECHOK","","",121,null],[18,"ECHO","","",121,null],[18,"ECHONL","","",121,null],[18,"ECHOPRT","","",121,null],[18,"ECHOCTL","","",121,null],[18,"ISIG","","",121,null],[18,"ICANON","","",121,null],[18,"IEXTEN","","",121,null],[18,"EXTPROC","","",121,null],[18,"TOSTOP","","",121,null],[18,"FLUSHO","","",121,null],[18,"PENDIN","","",121,null],[18,"NOFLSH","","",121,null],[11,"empty","","Returns an empty set of flags",121,[[],["localflags",3]]],[11,"all","","Returns the set containing all flags.",121,[[],["localflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",121,[[],["tcflag_t",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",121,[[["tcflag_t",6]],[["localflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",121,[[["tcflag_t",6]],["localflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",121,[[["tcflag_t",6]],["localflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",121,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",121,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",121,[[["localflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",121,[[["localflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",121,[[["localflags",3]]]],[11,"remove","","Removes the specified flags in-place.",121,[[["localflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",121,[[["localflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",121,[[["localflags",3]]]],[0,"time","nix::sys","",null,null],[6,"time_t","nix::sys::time","",null,null],[6,"suseconds_t","","",null,null],[3,"TimeSpec","","",null,null],[3,"TimeVal","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",122,[[]]],[11,"hours","","",122,[[]]],[11,"minutes","","",122,[[]]],[10,"seconds","","",122,[[]]],[10,"milliseconds","","",122,[[]]],[10,"microseconds","","",122,[[]]],[10,"nanoseconds","","",122,[[]]],[11,"num_hours","","",122,[[]]],[11,"num_minutes","","",122,[[]]],[10,"num_seconds","","",122,[[]]],[10,"num_milliseconds","","",122,[[]]],[10,"num_microseconds","","",122,[[]]],[10,"num_nanoseconds","","",122,[[]]],[11,"tv_sec","","",123,[[],["time_t",6]]],[11,"tv_nsec","","",123,[[],["c_long",6]]],[11,"tv_sec","","",124,[[],["time_t",6]]],[11,"tv_usec","","",124,[[],["suseconds_t",6]]],[0,"uio","nix::sys","",null,null],[3,"RemoteIoVec","nix::sys::uio","A slice of memory in a remote process, starting at address…",null,null],[12,"base","","The starting address of this slice (`iov_base`).",125,null],[12,"len","","The number of bytes in this slice (`iov_len`).",125,null],[3,"IoVec","","",null,null],[5,"writev","","",null,[[["rawfd",6]],["result",6]]],[5,"readv","","",null,[[["rawfd",6]],["result",6]]],[5,"pwritev","","Write to `fd` at `offset` from buffers in `iov`.",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"preadv","","Read from `fd` at `offset` filling buffers in `iov`.",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"pwrite","","",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"pread","","",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"process_vm_writev","","Write data directly to another process\'s virtual memory…",null,[[["pid",3]],["result",6]]],[5,"process_vm_readv","","Read data directly from another process\'s virtual memory…",null,[[["pid",3]],["result",6]]],[11,"as_slice","","",126,[[]]],[11,"from_slice","","",126,[[],["iovec",3]]],[11,"from_mut_slice","","",126,[[],["iovec",3]]],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[5,"uname","","",null,[[],["utsname",3]]],[11,"sysname","","",127,[[]]],[11,"nodename","","",127,[[]]],[11,"release","","",127,[[]]],[11,"version","","",127,[[]]],[11,"machine","","",127,[[]]],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",null,null],[13,"Exited","","The process exited normally (as with `exit()` or returning…",128,null],[13,"Signaled","","The process was killed by the given signal. The third…",128,null],[13,"Stopped","","The process is alive, but was stopped by the given signal.…",128,null],[13,"PtraceEvent","","The traced process was stopped by a `PTRACE_EVENT_*`…",128,null],[13,"PtraceSyscall","","The traced process was stopped by execution of a system…",128,null],[13,"Continued","","The process was previously stopped but has resumed…",128,null],[13,"StillAlive","","There are currently no state changes to report in any…",128,null],[5,"waitpid","","",null,[[["option",4],["waitpidflag",3],["option",4],["into",8]],[["result",6],["waitstatus",4]]]],[5,"wait","","",null,[[],[["result",6],["waitstatus",4]]]],[18,"WNOHANG","","",129,null],[18,"WUNTRACED","","",129,null],[18,"WEXITED","","",129,null],[18,"WCONTINUED","","",129,null],[18,"WSTOPPED","","",129,null],[18,"WNOWAIT","","Don\'t reap, just poll status.",129,null],[18,"__WNOTHREAD","","Don\'t wait on children of other threads in this group",129,null],[18,"__WALL","","Wait on all children, regardless of type",129,null],[18,"__WCLONE","","",129,null],[11,"empty","","Returns an empty set of flags",129,[[],["waitpidflag",3]]],[11,"all","","Returns the set containing all flags.",129,[[],["waitpidflag",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",129,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",129,[[["c_int",6]],[["waitpidflag",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",129,[[["c_int",6]],["waitpidflag",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",129,[[["c_int",6]],["waitpidflag",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",129,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",129,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",129,[[["waitpidflag",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",129,[[["waitpidflag",3]]]],[11,"insert","","Inserts the specified flags in-place.",129,[[["waitpidflag",3]]]],[11,"remove","","Removes the specified flags in-place.",129,[[["waitpidflag",3]]]],[11,"toggle","","Toggles the specified flags in-place.",129,[[["waitpidflag",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",129,[[["waitpidflag",3]]]],[11,"pid","","Extracts the PID from the WaitStatus unless it equals…",128,[[],[["option",4],["pid",3]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait`…",128,[[["pid",3]],[["result",6],["waitstatus",4]]]],[0,"inotify","nix::sys","Monitoring API for filesystem events.",null,null],[3,"AddWatchFlags","nix::sys::inotify","Configuration options for `inotify_add_watch`.",null,null],[3,"InitFlags","","Configuration options for `inotify_init1`.",null,null],[3,"Inotify","","An inotify instance. This is also a file descriptor, you…",null,null],[3,"WatchDescriptor","","This object is returned when you create a new watch on an…",null,null],[3,"InotifyEvent","","A single inotify event.",null,null],[12,"wd","","Watch descriptor. This field corresponds to the watch…",130,null],[12,"mask","","Event mask. This field is a bitfield describing the exact…",130,null],[12,"cookie","","This cookie is a number that allows you to connect related…",130,null],[12,"name","","Filename. This field exists only if the event was…",130,null],[18,"IN_ACCESS","","",131,null],[18,"IN_MODIFY","","",131,null],[18,"IN_ATTRIB","","",131,null],[18,"IN_CLOSE_WRITE","","",131,null],[18,"IN_CLOSE_NOWRITE","","",131,null],[18,"IN_OPEN","","",131,null],[18,"IN_MOVED_FROM","","",131,null],[18,"IN_MOVED_TO","","",131,null],[18,"IN_CREATE","","",131,null],[18,"IN_DELETE","","",131,null],[18,"IN_DELETE_SELF","","",131,null],[18,"IN_MOVE_SELF","","",131,null],[18,"IN_UNMOUNT","","",131,null],[18,"IN_Q_OVERFLOW","","",131,null],[18,"IN_IGNORED","","",131,null],[18,"IN_CLOSE","","",131,null],[18,"IN_MOVE","","",131,null],[18,"IN_ONLYDIR","","",131,null],[18,"IN_DONT_FOLLOW","","",131,null],[18,"IN_ISDIR","","",131,null],[18,"IN_ONESHOT","","",131,null],[18,"IN_ALL_EVENTS","","",131,null],[11,"empty","","Returns an empty set of flags",131,[[],["addwatchflags",3]]],[11,"all","","Returns the set containing all flags.",131,[[],["addwatchflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",131,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",131,[[],[["option",4],["addwatchflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",131,[[],["addwatchflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",131,[[],["addwatchflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",131,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",131,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",131,[[["addwatchflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",131,[[["addwatchflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",131,[[["addwatchflags",3]]]],[11,"remove","","Removes the specified flags in-place.",131,[[["addwatchflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",131,[[["addwatchflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",131,[[["addwatchflags",3]]]],[18,"IN_CLOEXEC","","",132,null],[18,"IN_NONBLOCK","","",132,null],[11,"empty","","Returns an empty set of flags",132,[[],["initflags",3]]],[11,"all","","Returns the set containing all flags.",132,[[],["initflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",132,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",132,[[["c_int",6]],[["option",4],["initflags",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",132,[[["c_int",6]],["initflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",132,[[["c_int",6]],["initflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",132,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",132,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",132,[[["initflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",132,[[["initflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",132,[[["initflags",3]]]],[11,"remove","","Removes the specified flags in-place.",132,[[["initflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",132,[[["initflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",132,[[["initflags",3]]]],[11,"init","","Initialize a new inotify instance.",133,[[["initflags",3]],[["result",6],["inotify",3]]]],[11,"add_watch","","Adds a new watch on the target file or directory. ",133,[[["addwatchflags",3]],[["result",6],["watchdescriptor",3]]]],[11,"rm_watch","","Removes an existing watch using the watch descriptor…",133,[[["watchdescriptor",3]],["result",6]]],[11,"read_events","","Reads a collection of events from the inotify file…",133,[[],[["vec",3],["result",6]]]],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"get","","",134,[[],[["result",6],["ucontext",3]]]],[11,"set","","",134,[[],["result",6]]],[11,"sigmask_mut","","",134,[[],["sigset",3]]],[11,"sigmask","","",134,[[],["sigset",3]]],[0,"unistd","nix","Safe wrappers around functions found in libc \\\"unistd.h\\\"…",null,null],[3,"Uid","nix::unistd","User identifier",null,null],[3,"Gid","","Group identifier",null,null],[3,"Pid","","Process identifier",null,null],[3,"AccessFlags","","Options for access()",null,null],[3,"User","","Representation of a User, based on `libc::passwd`",null,null],[12,"name","","Username",135,null],[12,"passwd","","User password (probably encrypted)",135,null],[12,"uid","","User ID",135,null],[12,"gid","","Group ID",135,null],[12,"gecos","","User information",135,null],[12,"dir","","Home directory",135,null],[12,"shell","","Path to shell",135,null],[3,"Group","","Representation of a Group, based on `libc::group`",null,null],[12,"name","","Group name",136,null],[12,"gid","","Group ID",136,null],[12,"mem","","List of Group members",136,null],[4,"ForkResult","","Represents the successful result of calling `fork`",null,null],[13,"Parent","","",137,null],[12,"child","nix::unistd::ForkResult","",138,null],[13,"Child","nix::unistd","",137,null],[4,"FchownatFlags","","Flags for `fchownat` function.",null,null],[13,"FollowSymlink","","",139,null],[13,"NoFollowSymlink","","",139,null],[4,"Whence","","Directive that tells [`lseek`] and [`lseek64`] what the…",null,null],[13,"SeekSet","","Specify an offset relative to the start of the file.",140,null],[13,"SeekCur","","Specify an offset relative to the current file location.",140,null],[13,"SeekEnd","","Specify an offset relative to the end of the file.",140,null],[13,"SeekData","","Specify an offset relative to the next location in the…",140,null],[13,"SeekHole","","Specify an offset relative to the next hole in the file…",140,null],[4,"LinkatFlags","","Flags for `linkat` function.",null,null],[13,"SymlinkFollow","","",141,null],[13,"NoSymlinkFollow","","",141,null],[4,"UnlinkatFlags","","Flags for `unlinkat` function.",null,null],[13,"RemoveDir","","",142,null],[13,"NoRemoveDir","","",142,null],[4,"PathconfVar","","Variable names for `pathconf`",null,null],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed…",143,null],[13,"LINK_MAX","","Maximum number of links to a single file.",143,null],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",143,null],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a…",143,null],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the…",143,null],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a…",143,null],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic…",143,null],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",143,null],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for…",143,null],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the…",143,null],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",143,null],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",143,null],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",143,null],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",143,null],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process…",143,null],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an…",143,null],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a…",143,null],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed…",143,null],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed…",143,null],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed…",143,null],[4,"SysconfVar","","Variable names for `sysconf`",null,null],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call…",144,null],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations…",144,null],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its…",144,null],[13,"ARG_MAX","","Maximum length of argument to the exec functions including…",144,null],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with…",144,null],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",144,null],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc…",144,null],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",144,null],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc…",144,null],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",144,null],[13,"CLK_TCK","","",144,null],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry…",144,null],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",144,null],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within…",144,null],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the…",144,null],[13,"IOV_MAX","","Maximum number of iovec structures that one process has…",144,null],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a…",144,null],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",144,null],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per…",144,null],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",144,null],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",144,null],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a…",144,null],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the…",144,null],[13,"OPEN_MAX","","A value one greater than the maximum value that the system…",144,null],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",144,null],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",144,null],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",144,null],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",144,null],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks…",144,null],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",144,null],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",144,null],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",144,null],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",144,null],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking…",144,null],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",144,null],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",144,null],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",144,null],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",144,null],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and…",144,null],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",144,null],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",144,null],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",144,null],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",144,null],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression…",144,null],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved…",144,null],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",144,null],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects…",144,null],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",144,null],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",144,null],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",144,null],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server…",144,null],[13,"_POSIX_SS_REPL_MAX","","",144,null],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and…",144,null],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address…",144,null],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size…",144,null],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks…",144,null],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority…",144,null],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority…",144,null],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution…",144,null],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared…",144,null],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority…",144,null],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority…",144,null],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",144,null],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server…",144,null],[13,"_POSIX_THREADS","","The implementation supports threads.",144,null],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",144,null],[13,"_POSIX_TIMERS","","The implementation supports timers.",144,null],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",144,null],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",144,null],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",144,null],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",144,null],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",144,null],[13,"_POSIX_TRACE_NAME_MAX","","",144,null],[13,"_POSIX_TRACE_SYS_MAX","","",144,null],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",144,null],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",144,null],[13,"_POSIX_VERSION","","Integer value indicating version of this standard…",144,null],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation…",144,null],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation…",144,null],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation…",144,null],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation…",144,null],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",144,null],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development…",144,null],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics…",144,null],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development…",144,null],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities…",144,null],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the…",144,null],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services…",144,null],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",144,null],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart…",144,null],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request…",144,null],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request…",144,null],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request…",144,null],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development…",144,null],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities…",144,null],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and…",144,null],[13,"PAGE_SIZE","","The size of a system page in bytes.",144,null],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",144,null],[13,"PTHREAD_KEYS_MAX","","",144,null],[13,"PTHREAD_STACK_MIN","","",144,null],[13,"PTHREAD_THREADS_MAX","","",144,null],[13,"RE_DUP_MAX","","",144,null],[13,"RTSIG_MAX","","",144,null],[13,"SEM_NSEMS_MAX","","",144,null],[13,"SEM_VALUE_MAX","","",144,null],[13,"SIGQUEUE_MAX","","",144,null],[13,"STREAM_MAX","","",144,null],[13,"SYMLOOP_MAX","","",144,null],[13,"TIMER_MAX","","",144,null],[13,"TTY_NAME_MAX","","",144,null],[13,"TZNAME_MAX","","",144,null],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option…",144,null],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2…",144,null],[13,"_XOPEN_LEGACY","","",144,null],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option…",144,null],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads…",144,null],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared…",144,null],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",144,null],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",144,null],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability…",144,null],[5,"pivot_root","","",null,[[],["result",6]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",null,[[["uid",3]],["result",6]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",null,[[["gid",3]],["result",6]]],[5,"fork","","Create a new child process duplicating the parent process…",null,[[],[["forkresult",4],["result",6]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,[[],["pid",3]]],[5,"getppid","","Get the pid of this processes\' parent (see getpid(2)).",null,[[],["pid",3]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,[[["pid",3]],["result",6]]],[5,"getpgid","","",null,[[["option",4],["pid",3]],[["pid",3],["result",6]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",null,[[],[["pid",3],["result",6]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",null,[[["option",4],["pid",3]],[["pid",3],["result",6]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see…",null,[[["c_int",6]],[["pid",3],["result",6]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see…",null,[[["pid",3],["c_int",6]],["result",6]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,[[],["pid",3]]],[5,"gettid","","Get the caller\'s thread ID (see gettid(2).",null,[[],["pid",3]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"dup2","","Create a copy of the specified file descriptor using the…",null,[[["rawfd",6]],[["rawfd",6],["result",6]]]],[5,"dup3","","Create a new copy of the specified file descriptor using…",null,[[["rawfd",6],["oflag",3]],[["rawfd",6],["result",6]]]],[5,"chdir","","Change the current working directory of the calling…",null,[[],["result",6]]],[5,"fchdir","","Change the current working directory of the process to the…",null,[[["rawfd",6]],["result",6]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.…",null,[[["mode",3]],["result",6]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path…",null,[[["mode",3]],["result",6]]],[5,"mkfifoat","","Creates new fifo special file (named pipe) with path…",null,[[["rawfd",6],["option",4],["mode",3]],["result",6]]],[5,"symlinkat","","Creates a symbolic link at `path2` which points to `path1`.",null,[[["rawfd",6],["option",4]],["result",6]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",null,[[],[["pathbuf",3],["result",6]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by…",null,[[["option",4],["gid",3],["option",4],["uid",3]],["result",6]]],[5,"fchownat","","Change the ownership of the file at `path` to be owned by…",null,[[["fchownatflags",4],["rawfd",6],["option",4],["gid",3],["option",4],["option",4],["uid",3]],["result",6]]],[5,"execv","","Replace the current process image with a new one (see…",null,[[["cstr",3]],[["void",4],["result",6]]]],[5,"execve","","Replace the current process image with a new one (see…",null,[[["cstr",3]],[["void",4],["result",6]]]],[5,"execvp","","Replace the current process image with a new one and…",null,[[["cstr",3]],[["void",4],["result",6]]]],[5,"execvpe","","Replace the current process image with a new one and…",null,[[["cstr",3]],[["void",4],["result",6]]]],[5,"fexecve","","Replace the current process image with a new one (see…",null,[[["rawfd",6]],[["void",4],["result",6]]]],[5,"execveat","","Execute program relative to a directory file descriptor…",null,[[["rawfd",6],["cstr",3],["atflags",3]],[["void",4],["result",6]]]],[5,"daemon","","Daemonize this process by detaching from the controlling…",null,[[],["result",6]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",null,[[["osstr",3],["asref",8]],["result",6]]],[5,"gethostname","","Get the host name and store it in the provided buffer,…",null,[[],[["result",6],["cstr",3]]]],[5,"close","","Close a raw file descriptor",null,[[["rawfd",6]],["result",6]]],[5,"read","","Read from a raw file descriptor.",null,[[["rawfd",6]],["result",6]]],[5,"write","","Write to a raw file descriptor.",null,[[["rawfd",6]],["result",6]]],[5,"lseek","","Move the read/write file offset.",null,[[["off_t",6],["rawfd",6],["whence",4]],[["result",6],["off_t",6]]]],[5,"lseek64","","",null,[[["rawfd",6],["off64_t",6],["whence",4]],[["result",6],["off64_t",6]]]],[5,"pipe","","Create an interprocess channel.",null,[[],["result",6]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor…",null,[[["oflag",3]],["result",6]]],[5,"truncate","","Truncate a file to a specified length",null,[[["off_t",6]],["result",6]]],[5,"ftruncate","","Truncate a file to a specified length",null,[[["off_t",6],["rawfd",6]],["result",6]]],[5,"isatty","","",null,[[["rawfd",6]],["result",6]]],[5,"linkat","","Link one file to another file",null,[[["linkatflags",4],["rawfd",6],["option",4]],["result",6]]],[5,"unlink","","Remove a directory entry",null,[[],["result",6]]],[5,"unlinkat","","Remove a directory entry",null,[[["rawfd",6],["option",4],["unlinkatflags",4]],["result",6]]],[5,"chroot","","",null,[[],["result",6]]],[5,"sync","","Commit filesystem caches to disk",null,[[]]],[5,"fsync","","Synchronize changes to a file",null,[[["rawfd",6]],["result",6]]],[5,"fdatasync","","Synchronize the data of a file",null,[[["rawfd",6]],["result",6]]],[5,"getuid","","Get a real user ID",null,[[],["uid",3]]],[5,"geteuid","","Get the effective user ID",null,[[],["uid",3]]],[5,"getgid","","Get the real group ID",null,[[],["gid",3]]],[5,"getegid","","Get the effective group ID",null,[[],["gid",3]]],[5,"seteuid","","Set the effective user ID",null,[[["uid",3]],["result",6]]],[5,"setegid","","Set the effective group ID",null,[[["gid",3]],["result",6]]],[5,"setuid","","Set the user ID",null,[[["uid",3]],["result",6]]],[5,"setgid","","Set the group ID",null,[[["gid",3]],["result",6]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling…",null,[[],[["result",6],["vec",3]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling…",null,[[],["result",6]]],[5,"getgrouplist","","Calculate the supplementary group access list.",null,[[["gid",3],["cstr",3]],[["result",6],["vec",3]]]],[5,"initgroups","","Initialize the supplementary group access list.",null,[[["gid",3],["cstr",3]],["result",6]]],[5,"pause","","Suspend the thread until a signal is received.",null,[[]]],[5,"sleep","","Suspend execution for an interval of time",null,[[["c_uint",6]],["c_uint",6]]],[5,"mkstemp","","Creates a regular file which persists even after process…",null,[[],["result",6]]],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead…",null,[[["rawfd",6],["pathconfvar",4]],[["option",4],["result",6]]]],[5,"pathconf","","Get path-dependent configurable system variables (see…",null,[[["pathconfvar",4]],[["option",4],["result",6]]]],[5,"sysconf","","Get configurable system variables (see sysconf(3))",null,[[["sysconfvar",4]],[["option",4],["result",6]]]],[5,"access","","Checks the file named by `path` for accessibility…",null,[[["accessflags",3]],["result",6]]],[0,"alarm","","Alarm signal scheduling.",null,null],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",null,[[["c_uint",6]],[["option",4],["c_uint",6]]]],[5,"cancel","","Cancel an previously set alarm signal.",null,[[],[["option",4],["c_uint",6]]]],[0,"acct","nix::unistd","",null,null],[5,"enable","nix::unistd::acct","Enable process accounting",null,[[],["result",6]]],[5,"disable","","Disable process accounting",null,[[],["result",6]]],[17,"ROOT","nix::unistd","Constant for UID = 0",null,null],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",145,[[["uid_t",6]]]],[11,"current","","Returns Uid of calling process. This is practically a more…",145,[[]]],[11,"effective","","Returns effective Uid of calling process. This is…",145,[[]]],[11,"is_root","","Returns true if the `Uid` represents privileged user -…",145,[[]]],[11,"as_raw","","Get the raw `uid_t` wrapped by `self`.",145,[[],["uid_t",6]]],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",146,[[["gid_t",6]]]],[11,"current","","Returns Gid of calling process. This is practically a more…",146,[[]]],[11,"effective","","Returns effective Gid of calling process. This is…",146,[[]]],[11,"as_raw","","Get the raw `gid_t` wrapped by `self`.",146,[[],["gid_t",6]]],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",147,[[["pid_t",6]]]],[11,"this","","Returns PID of calling process",147,[[]]],[11,"parent","","Returns PID of parent of calling process",147,[[]]],[11,"as_raw","","Get the raw `pid_t` wrapped by `self`.",147,[[],["pid_t",6]]],[11,"is_child","","Return `true` if this is the child process of the `fork()`",137,[[]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",137,[[]]],[18,"F_OK","","Test for existence of file.",148,null],[18,"R_OK","","Test for read permission.",148,null],[18,"W_OK","","Test for write permission.",148,null],[18,"X_OK","","Test for execute (search) permission.",148,null],[11,"empty","","Returns an empty set of flags",148,[[],["accessflags",3]]],[11,"all","","Returns the set containing all flags.",148,[[],["accessflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",148,[[],["c_int",6]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",148,[[["c_int",6]],[["accessflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",148,[[["c_int",6]],["accessflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",148,[[["c_int",6]],["accessflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",148,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",148,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",148,[[["accessflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",148,[[["accessflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",148,[[["accessflags",3]]]],[11,"remove","","Removes the specified flags in-place.",148,[[["accessflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",148,[[["accessflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",148,[[["accessflags",3]]]],[11,"from_uid","","Get a user by UID.",135,[[["uid",3]],[["result",6],["option",4]]]],[11,"from_name","","Get a user by name.",135,[[],[["result",6],["option",4]]]],[11,"from_gid","","Get a group by GID.",136,[[["gid",3]],[["result",6],["option",4]]]],[11,"from_name","","Get a group by name.",136,[[],[["result",6],["option",4]]]],[6,"Result","nix","Nix Result Type",null,null],[8,"NixPath","","",null,null],[10,"is_empty","","",149,[[]]],[10,"len","","",149,[[]]],[10,"with_nix_path","","",149,[[],["result",6]]],[11,"as_errno","","Convert this `Error` to an `Errno`.",0,[[],[["errno",4],["option",4]]]],[11,"from_errno","","Create a nix Error from a given errno",0,[[["errno",4]],["error",4]]],[11,"last","","Get the current errno and convert it to a nix Error",0,[[],["error",4]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",0,[[],["error",4]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes…",null,null],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",null,null],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",null,null],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads…",null,null],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no…",null,null],[14,"ioctl_none_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that passes…",null,null],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data…",null,null],[14,"ioctl_read_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads…",null,null],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data…",null,null],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that writes…",null,null],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an…",null,null],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that writes…",null,null],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and…",null,null],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \\\"bad\\\" ioctl that reads…",null,null],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an…",null,null],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an…",null,null],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and…",null,null],[14,"cmsg_space","","Create a buffer large enough for storing some control…",null,null],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","nix::dir","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"into_iter","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","nix::errno","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","nix::fcntl","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","nix::ifaddrs","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",151,[[]]],[11,"into","","",151,[[]]],[11,"into_iter","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"from","nix::kmod","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","nix::mount","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","nix::mqueue","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","nix::net::if_","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","nix::poll","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","nix::pty","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"to_owned","","",152,[[]]],[11,"clone_into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"from","nix::sched","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","nix::sys::aio","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","nix::sys::epoll","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","nix::sys::eventfd","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","nix::sys::memfd","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","nix::sys::mman","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","nix::sys::ptrace","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","nix::sys::quota","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","nix::sys::reboot","",56,[[]]],[11,"into","","",56,[[]]],[11,"to_owned","","",56,[[]]],[11,"clone_into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","nix::sys::select","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","nix::sys::signal","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",153,[[]]],[11,"into","","",153,[[]]],[11,"into_iter","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_owned","","",65,[[]]],[11,"clone_into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"to_owned","","",59,[[]]],[11,"clone_into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"to_owned","","",60,[[]]],[11,"clone_into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_owned","","",61,[[]]],[11,"clone_into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","nix::sys::signalfd","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"into_iter","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","nix::sys::socket","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"to_string","","",78,[[],["string",3]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"to_string","","",79,[[],["string",3]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"to_string","","",80,[[],["string",3]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"to_string","","",81,[[],["string",3]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"to_string","","",82,[[],["string",3]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"to_string","","",83,[[],["string",3]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"to_string","","",84,[[],["string",3]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"to_owned","","",98,[[]]],[11,"clone_into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"from","","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"to_owned","","",100,[[]]],[11,"clone_into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"to_owned","","",102,[[]]],[11,"clone_into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"into_iter","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"to_string","","",87,[[],["string",3]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"to_string","","",88,[[],["string",3]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_owned","","",89,[[]]],[11,"clone_into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_owned","","",90,[[]]],[11,"clone_into","","",90,[[]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"to_owned","","",91,[[]]],[11,"clone_into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"to_owned","","",92,[[]]],[11,"clone_into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_owned","","",93,[[]]],[11,"clone_into","","",93,[[]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"to_owned","","",94,[[]]],[11,"clone_into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","nix::sys::socket::sockopt","",155,[[]]],[11,"into","","",155,[[]]],[11,"to_owned","","",155,[[]]],[11,"clone_into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"from","","",156,[[]]],[11,"into","","",156,[[]]],[11,"to_owned","","",156,[[]]],[11,"clone_into","","",156,[[]]],[11,"try_from","","",156,[[],["result",4]]],[11,"try_into","","",156,[[],["result",4]]],[11,"borrow","","",156,[[]]],[11,"borrow_mut","","",156,[[]]],[11,"type_id","","",156,[[],["typeid",3]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"to_owned","","",157,[[]]],[11,"clone_into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"to_owned","","",159,[[]]],[11,"clone_into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"from","","",160,[[]]],[11,"into","","",160,[[]]],[11,"to_owned","","",160,[[]]],[11,"clone_into","","",160,[[]]],[11,"try_from","","",160,[[],["result",4]]],[11,"try_into","","",160,[[],["result",4]]],[11,"borrow","","",160,[[]]],[11,"borrow_mut","","",160,[[]]],[11,"type_id","","",160,[[],["typeid",3]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"to_owned","","",162,[[]]],[11,"clone_into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"to_owned","","",164,[[]]],[11,"clone_into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"to_owned","","",165,[[]]],[11,"clone_into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"to_owned","","",169,[[]]],[11,"clone_into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"to_owned","","",173,[[]]],[11,"clone_into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"to_owned","","",174,[[]]],[11,"clone_into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"to_owned","","",175,[[]]],[11,"clone_into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"to_owned","","",176,[[]]],[11,"clone_into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"to_owned","","",177,[[]]],[11,"clone_into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"to_owned","","",178,[[]]],[11,"clone_into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"to_owned","","",179,[[]]],[11,"clone_into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"to_owned","","",184,[[]]],[11,"clone_into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"to_owned","","",186,[[]]],[11,"clone_into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"to_owned","","",188,[[]]],[11,"clone_into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"from","nix::sys::stat","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_owned","","",103,[[]]],[11,"clone_into","","",103,[[]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","","",107,[[]]],[11,"into","","",107,[[]]],[11,"to_owned","","",107,[[]]],[11,"clone_into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"to_owned","","",104,[[]]],[11,"clone_into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"to_owned","","",105,[[]]],[11,"clone_into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","nix::sys::statfs","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"from","nix::sys::statvfs","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","nix::sys::sysinfo","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","nix::sys::termios","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"from","","",119,[[]]],[11,"into","","",119,[[]]],[11,"to_owned","","",119,[[]]],[11,"clone_into","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"to_owned","","",115,[[]]],[11,"clone_into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"to_owned","","",117,[[]]],[11,"clone_into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","nix::sys::time","",123,[[]]],[11,"into","","",123,[[]]],[11,"to_owned","","",123,[[]]],[11,"clone_into","","",123,[[]]],[11,"to_string","","",123,[[],["string",3]]],[11,"try_from","","",123,[[],["result",4]]],[11,"try_into","","",123,[[],["result",4]]],[11,"borrow","","",123,[[]]],[11,"borrow_mut","","",123,[[]]],[11,"type_id","","",123,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"to_owned","","",124,[[]]],[11,"clone_into","","",124,[[]]],[11,"to_string","","",124,[[],["string",3]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","nix::sys::uio","",125,[[]]],[11,"into","","",125,[[]]],[11,"to_owned","","",125,[[]]],[11,"clone_into","","",125,[[]]],[11,"try_from","","",125,[[],["result",4]]],[11,"try_into","","",125,[[],["result",4]]],[11,"borrow","","",125,[[]]],[11,"borrow_mut","","",125,[[]]],[11,"type_id","","",125,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","nix::sys::utsname","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"from","nix::sys::wait","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","nix::sys::inotify","",131,[[]]],[11,"into","","",131,[[]]],[11,"to_owned","","",131,[[]]],[11,"clone_into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"to_owned","","",133,[[]]],[11,"clone_into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"to_owned","","",190,[[]]],[11,"clone_into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","nix::ucontext","",134,[[]]],[11,"into","","",134,[[]]],[11,"to_owned","","",134,[[]]],[11,"clone_into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","nix::unistd","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"to_string","","",145,[[],["string",3]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"to_string","","",146,[[],["string",3]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"to_string","","",147,[[],["string",3]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"from","","",135,[[]]],[11,"into","","",135,[[]]],[11,"to_owned","","",135,[[]]],[11,"clone_into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"from","","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"eq","nix::sys::socket","",76,[[["sockaddr_storage",3]]]],[11,"eq","nix::sys::signalfd","",68,[[["signalfd_siginfo",3]]]],[11,"ne","","",68,[[["signalfd_siginfo",3]]]],[11,"eq","nix::pty","",26,[[["winsize",3]]]],[11,"ne","","",26,[[["winsize",3]]]],[11,"eq","nix::sys::socket","",72,[[["msghdr",3]]]],[11,"ne","","",72,[[["msghdr",3]]]],[11,"eq","","",73,[[["sockaddr",3]]]],[11,"ne","","",73,[[["sockaddr",3]]]],[11,"eq","","",71,[[["cmsghdr",3]]]],[11,"ne","","",71,[[["cmsghdr",3]]]],[11,"eq","","",77,[[["sockaddr_un",3]]]],[11,"eq","","",75,[[["sockaddr_in6",3]]]],[11,"ne","","",75,[[["sockaddr_in6",3]]]],[11,"eq","","",74,[[["sockaddr_in",3]]]],[11,"ne","","",74,[[["sockaddr_in",3]]]],[11,"eq","nix::sys::stat","",103,[[["stat",3]]]],[11,"ne","","",103,[[["stat",3]]]],[11,"clone","nix::sys::socket","",77,[[],["sockaddr_un",3]]],[11,"clone","","",73,[[],["sockaddr",3]]],[11,"clone","nix::sys::stat","",103,[[],["stat",3]]],[11,"clone","nix::sys::socket","",75,[[],["sockaddr_in6",3]]],[11,"clone","nix::sys::signalfd","",68,[[],["signalfd_siginfo",3]]],[11,"clone","nix::sys::socket","",74,[[],["sockaddr_in",3]]],[11,"clone","","",72,[[],["msghdr",3]]],[11,"clone","","",76,[[],["sockaddr_storage",3]]],[11,"clone","nix::pty","",26,[[],["winsize",3]]],[11,"clone","nix::sys::socket","",71,[[],["cmsghdr",3]]],[11,"hash","","",71,[[]]],[11,"hash","","",77,[[]]],[11,"hash","nix::sys::signalfd","",68,[[]]],[11,"hash","nix::pty","",26,[[]]],[11,"hash","nix::sys::socket","",72,[[]]],[11,"hash","","",73,[[]]],[11,"hash","","",74,[[]]],[11,"hash","nix::sys::stat","",103,[[]]],[11,"hash","nix::sys::socket","",75,[[]]],[11,"hash","","",76,[[]]],[11,"fmt","","",71,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::stat","",103,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::pty","",26,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::signalfd","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","nix::sys::socket","",72,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",76,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",73,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",77,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",75,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",74,[[["formatter",3]],[["error",3],["result",4]]]],[11,"get","nix::sys::socket::sockopt","",155,[[["rawfd",6]],["result",6]]],[11,"get","","",156,[[["rawfd",6]],["result",6]]],[11,"get","","",157,[[["rawfd",6]],["result",6]]],[11,"get","","",158,[[["rawfd",6]],[["result",6],["linger",3]]]],[11,"get","","",163,[[["rawfd",6]],["result",6]]],[11,"get","","",164,[[["rawfd",6]],["result",6]]],[11,"get","","",165,[[["rawfd",6]],[["result",6],["timeval",3]]]],[11,"get","","",166,[[["rawfd",6]],[["result",6],["timeval",3]]]],[11,"get","","",167,[[["rawfd",6]],["result",6]]],[11,"get","","",168,[[["rawfd",6]],["result",6]]],[11,"get","","",169,[[["rawfd",6]],["result",6]]],[11,"get","","",170,[[["rawfd",6]],["result",6]]],[11,"get","","",171,[[["rawfd",6]],[["result",6],["unixcredentials",3]]]],[11,"get","","",172,[[["rawfd",6]],["result",6]]],[11,"get","","",173,[[["rawfd",6]],["result",6]]],[11,"get","","",174,[[["rawfd",6]],["result",6]]],[11,"get","","",177,[[["rawfd",6]],[["socktype",4],["result",6]]]],[11,"get","","",178,[[["rawfd",6]],["result",6]]],[11,"get","","",179,[[["rawfd",6]],[["sockaddr_in",3],["result",6]]]],[11,"get","","",180,[[["rawfd",6]],["result",6]]],[11,"get","","",181,[[["rawfd",6]],["result",6]]],[11,"get","","",182,[[["rawfd",6]],["result",6]]],[11,"get","","",183,[[["rawfd",6]],["result",6]]],[11,"get","","",184,[[["rawfd",6]],[["result",6],["osstring",3]]]],[11,"get","","",185,[[["rawfd",6]],["result",6]]],[11,"get","","",186,[[["rawfd",6]],["result",6]]],[11,"set","","",155,[[["rawfd",6]],["result",6]]],[11,"set","","",156,[[["rawfd",6]],["result",6]]],[11,"set","","",157,[[["rawfd",6]],["result",6]]],[11,"set","","",158,[[["linger",3],["rawfd",6]],["result",6]]],[11,"set","","",159,[[["rawfd",6],["ipmembershiprequest",3]],["result",6]]],[11,"set","","",160,[[["rawfd",6],["ipmembershiprequest",3]],["result",6]]],[11,"set","","",161,[[["rawfd",6],["ipv6membershiprequest",3]],["result",6]]],[11,"set","","",162,[[["rawfd",6],["ipv6membershiprequest",3]],["result",6]]],[11,"set","","",163,[[["rawfd",6]],["result",6]]],[11,"set","","",164,[[["rawfd",6]],["result",6]]],[11,"set","","",165,[[["timeval",3],["rawfd",6]],["result",6]]],[11,"set","","",166,[[["timeval",3],["rawfd",6]],["result",6]]],[11,"set","","",167,[[["rawfd",6]],["result",6]]],[11,"set","","",168,[[["rawfd",6]],["result",6]]],[11,"set","","",170,[[["rawfd",6]],["result",6]]],[11,"set","","",172,[[["rawfd",6]],["result",6]]],[11,"set","","",173,[[["rawfd",6]],["result",6]]],[11,"set","","",174,[[["rawfd",6]],["result",6]]],[11,"set","","",175,[[["rawfd",6]],["result",6]]],[11,"set","","",176,[[["rawfd",6]],["result",6]]],[11,"set","","",180,[[["rawfd",6]],["result",6]]],[11,"set","","",181,[[["rawfd",6]],["result",6]]],[11,"set","","",182,[[["rawfd",6]],["result",6]]],[11,"set","","",183,[[["rawfd",6]],["result",6]]],[11,"set","","",184,[[["rawfd",6],["osstring",3]],["result",6]]],[11,"set","","",185,[[["rawfd",6]],["result",6]]],[11,"set","","",186,[[["rawfd",6]],["result",6]]],[11,"set","","",187,[[["rawfd",6]],["result",6]]],[11,"set","","",188,[[["rawfd",6]],["result",6]]],[11,"seconds","nix::sys::time","",123,[[],["timespec",3]]],[11,"milliseconds","","",123,[[],["timespec",3]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",123,[[],["timespec",3]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",123,[[],["timespec",3]]],[11,"num_seconds","","",123,[[]]],[11,"num_milliseconds","","",123,[[]]],[11,"num_microseconds","","",123,[[]]],[11,"num_nanoseconds","","",123,[[]]],[11,"seconds","","",124,[[],["timeval",3]]],[11,"milliseconds","","",124,[[],["timeval",3]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",124,[[],["timeval",3]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.…",124,[[],["timeval",3]]],[11,"num_seconds","","",124,[[]]],[11,"num_milliseconds","","",124,[[]]],[11,"num_microseconds","","",124,[[]]],[11,"num_nanoseconds","","",124,[[]]],[11,"drop","nix::dir","",2,[[]]],[11,"drop","","",150,[[]]],[11,"drop","nix::ifaddrs","",151,[[]]],[11,"drop","nix::pty","",152,[[]]],[11,"drop","nix::sys::aio","If the `AioCb` has no remaining state in the kernel, just…",37,[[]]],[11,"drop","nix::sys::signalfd","",70,[[]]],[11,"as_ref","nix::sys::signal","",58,[[]]],[11,"as_ref","","",66,[[],["sigset_t",3]]],[11,"as_ref","nix::sys::time","",123,[[],["timespec",3]]],[11,"as_ref","","",124,[[],["timeval",3]]],[11,"from","nix::sys::aio","",31,[[["aiocb",3],["vec",3]],["liocb",3]]],[11,"from","nix::sys::signal","",64,[[["sigevent",3]]]],[11,"from","nix::sys::socket","",100,[[["ucred",3]]]],[11,"from","nix::sys::termios","",112,[[["termios",3]]]],[11,"from","nix::sys::time","",124,[[["timeval",3]]]],[11,"from","nix","",191,[[["pid",3]]]],[11,"from","nix::unistd","",135,[[["passwd",3]],["user",3]]],[11,"from","","",136,[[["group",3]],["group",3]]],[11,"from","nix","",0,[[["errno",4]],["error",4]]],[11,"from","","",0,[[["fromutf8error",3]],["error",4]]],[11,"into","nix::sys::socket","",100,[[],["ucred",3]]],[11,"extend","nix::fcntl","",9,[[["intoiterator",8]]]],[11,"extend","","",10,[[["intoiterator",8]]]],[11,"extend","","",11,[[["intoiterator",8]]]],[11,"extend","","",12,[[["intoiterator",8]]]],[11,"extend","","",13,[[["intoiterator",8]]]],[11,"extend","","",14,[[["intoiterator",8]]]],[11,"extend","nix::kmod","",16,[[["intoiterator",8]]]],[11,"extend","","",17,[[["intoiterator",8]]]],[11,"extend","nix::mount","",18,[[["intoiterator",8]]]],[11,"extend","","",19,[[["intoiterator",8]]]],[11,"extend","nix::mqueue","",20,[[["intoiterator",8]]]],[11,"extend","","",21,[[["intoiterator",8]]]],[11,"extend","nix::net::if_","",23,[[["intoiterator",8]]]],[11,"extend","nix::poll","",25,[[["intoiterator",8]]]],[11,"extend","nix::sched","",29,[[["intoiterator",8]]]],[11,"extend","nix::sys::epoll","",39,[[["intoiterator",8]]]],[11,"extend","","",40,[[["intoiterator",8]]]],[11,"extend","nix::sys::eventfd","",42,[[["intoiterator",8]]]],[11,"extend","nix::sys::memfd","",43,[[["intoiterator",8]]]],[11,"extend","nix::sys::mman","",45,[[["intoiterator",8]]]],[11,"extend","","",46,[[["intoiterator",8]]]],[11,"extend","","",47,[[["intoiterator",8]]]],[11,"extend","","",48,[[["intoiterator",8]]]],[11,"extend","nix::sys::ptrace","",51,[[["intoiterator",8]]]],[11,"extend","nix::sys::quota","",54,[[["intoiterator",8]]]],[11,"extend","nix::sys::signal","",65,[[["intoiterator",8]]]],[11,"extend","nix::sys::signalfd","",69,[[["intoiterator",8]]]],[11,"extend","nix::sys::socket","",98,[[["intoiterator",8]]]],[11,"extend","","",99,[[["intoiterator",8]]]],[11,"extend","nix::sys::stat","",106,[[["intoiterator",8]]]],[11,"extend","","",107,[[["intoiterator",8]]]],[11,"extend","nix::sys::statvfs","",109,[[["intoiterator",8]]]],[11,"extend","nix::sys::termios","",118,[[["intoiterator",8]]]],[11,"extend","","",119,[[["intoiterator",8]]]],[11,"extend","","",120,[[["intoiterator",8]]]],[11,"extend","","",121,[[["intoiterator",8]]]],[11,"extend","nix::sys::wait","",129,[[["intoiterator",8]]]],[11,"extend","nix::sys::inotify","",131,[[["intoiterator",8]]]],[11,"extend","","",132,[[["intoiterator",8]]]],[11,"extend","nix::unistd","",148,[[["intoiterator",8]]]],[11,"next","nix::dir","",150,[[],["option",4]]],[11,"next","nix::ifaddrs","",151,[[],["option",4]]],[11,"next","nix::sys::signal","",153,[[],[["signal",4],["option",4]]]],[11,"next","nix::sys::signalfd","",70,[[],["option",4]]],[11,"next","nix::sys::socket","",154,[[],[["controlmessageowned",4],["option",4]]]],[11,"clone","nix::dir","",2,[[],["dir",3]]],[11,"clone","","",3,[[],["entry",3]]],[11,"clone","","",1,[[],["type",4]]],[11,"clone","nix::errno","",4,[[],["errno",4]]],[11,"clone","nix::fcntl","",9,[[],["atflags",3]]],[11,"clone","","",10,[[],["oflag",3]]],[11,"clone","","",11,[[],["sealflag",3]]],[11,"clone","","",12,[[],["fdflag",3]]],[11,"clone","","",8,[[],["flockarg",4]]],[11,"clone","","",13,[[],["splicefflags",3]]],[11,"clone","","",14,[[],["fallocateflags",3]]],[11,"clone","","",6,[[],["posixfadviseadvice",4]]],[11,"clone","nix::ifaddrs","",15,[[],["interfaceaddress",3]]],[11,"clone","nix::kmod","",16,[[],["moduleinitflags",3]]],[11,"clone","","",17,[[],["deletemoduleflags",3]]],[11,"clone","nix::mount","",18,[[],["msflags",3]]],[11,"clone","","",19,[[],["mntflags",3]]],[11,"clone","nix::mqueue","",20,[[],["mq_oflag",3]]],[11,"clone","","",21,[[],["fdflag",3]]],[11,"clone","","",22,[[],["mqattr",3]]],[11,"clone","nix::net::if_","",23,[[],["interfaceflags",3]]],[11,"clone","nix::poll","",24,[[],["pollfd",3]]],[11,"clone","","",25,[[],["pollflags",3]]],[11,"clone","nix::pty","",27,[[],["openptyresult",3]]],[11,"clone","","",28,[[],["forkptyresult",3]]],[11,"clone","","",152,[[],["ptymaster",3]]],[11,"clone","nix::sched","",29,[[],["cloneflags",3]]],[11,"clone","","",30,[[],["cpuset",3]]],[11,"clone","nix::sys::aio","",32,[[],["aiofsyncmode",4]]],[11,"clone","","",33,[[],["lioopcode",4]]],[11,"clone","","",34,[[],["liomode",4]]],[11,"clone","","",35,[[],["aiocancelstat",4]]],[11,"clone","nix::sys::epoll","",39,[[],["epollflags",3]]],[11,"clone","","",38,[[],["epollop",4]]],[11,"clone","","",40,[[],["epollcreateflags",3]]],[11,"clone","","",41,[[],["epollevent",3]]],[11,"clone","nix::sys::eventfd","",42,[[],["efdflags",3]]],[11,"clone","nix::sys::memfd","",43,[[],["memfdcreateflag",3]]],[11,"clone","nix::sys::mman","",45,[[],["protflags",3]]],[11,"clone","","",46,[[],["mapflags",3]]],[11,"clone","","",44,[[],["mmapadvise",4]]],[11,"clone","","",47,[[],["msflags",3]]],[11,"clone","","",48,[[],["mlockallflags",3]]],[11,"clone","nix::sys::ptrace","",49,[[],["request",4]]],[11,"clone","","",50,[[],["event",4]]],[11,"clone","","",51,[[],["options",3]]],[11,"clone","nix::sys::quota","",52,[[],["quotatype",4]]],[11,"clone","","",53,[[],["quotafmt",4]]],[11,"clone","","",54,[[],["quotavalidflags",3]]],[11,"clone","","",55,[[],["dqblk",3]]],[11,"clone","nix::sys::reboot","",56,[[],["rebootmode",4]]],[11,"clone","nix::sys::select","",57,[[],["fdset",3]]],[11,"clone","nix::sys::signal","",58,[[],["signal",4]]],[11,"clone","","",153,[[],["signaliterator",3]]],[11,"clone","","",65,[[],["saflags",3]]],[11,"clone","","",59,[[],["sigmaskhow",4]]],[11,"clone","","",66,[[],["sigset",3]]],[11,"clone","","",60,[[],["sighandler",4]]],[11,"clone","","",67,[[],["sigaction",3]]],[11,"clone","","",61,[[],["sigevnotify",4]]],[11,"clone","","",64,[[],["sigevent",3]]],[11,"clone","nix::sys::signalfd","",69,[[],["sfdflags",3]]],[11,"clone","","",70,[[],["signalfd",3]]],[11,"clone","nix::sys::socket","",86,[[],["addressfamily",4]]],[11,"clone","","",88,[[],["inetaddr",4]]],[11,"clone","","",89,[[],["ipaddr",4]]],[11,"clone","","",79,[[],["ipv4addr",3]]],[11,"clone","","",80,[[],["ipv6addr",3]]],[11,"clone","","",78,[[],["unixaddr",3]]],[11,"clone","","",87,[[],["sockaddr",4]]],[11,"clone","","",82,[[],["netlinkaddr",3]]],[11,"clone","","",83,[[],["algaddr",3]]],[11,"clone","","",81,[[],["linkaddr",3]]],[11,"clone","","",84,[[],["vsockaddr",3]]],[11,"clone","nix::sys::socket::sockopt","",155,[[],["reuseaddr",3]]],[11,"clone","","",156,[[],["reuseport",3]]],[11,"clone","","",157,[[],["tcpnodelay",3]]],[11,"clone","","",158,[[],["linger",3]]],[11,"clone","","",159,[[],["ipaddmembership",3]]],[11,"clone","","",160,[[],["ipdropmembership",3]]],[11,"clone","","",161,[[],["ipv6addmembership",3]]],[11,"clone","","",162,[[],["ipv6dropmembership",3]]],[11,"clone","","",163,[[],["ipmulticastttl",3]]],[11,"clone","","",164,[[],["ipmulticastloop",3]]],[11,"clone","","",165,[[],["receivetimeout",3]]],[11,"clone","","",166,[[],["sendtimeout",3]]],[11,"clone","","",167,[[],["broadcast",3]]],[11,"clone","","",168,[[],["oobinline",3]]],[11,"clone","","",169,[[],["socketerror",3]]],[11,"clone","","",170,[[],["keepalive",3]]],[11,"clone","","",171,[[],["peercredentials",3]]],[11,"clone","","",172,[[],["tcpkeepidle",3]]],[11,"clone","","",173,[[],["rcvbuf",3]]],[11,"clone","","",174,[[],["sndbuf",3]]],[11,"clone","","",175,[[],["rcvbufforce",3]]],[11,"clone","","",176,[[],["sndbufforce",3]]],[11,"clone","","",177,[[],["socktype",3]]],[11,"clone","","",178,[[],["acceptconn",3]]],[11,"clone","","",179,[[],["originaldst",3]]],[11,"clone","","",180,[[],["receivetimestamp",3]]],[11,"clone","","",181,[[],["iptransparent",3]]],[11,"clone","","",182,[[],["mark",3]]],[11,"clone","","",183,[[],["passcred",3]]],[11,"clone","","",184,[[],["tcpcongestion",3]]],[11,"clone","","",185,[[],["ipv4packetinfo",3]]],[11,"clone","","",186,[[],["ipv6recvpacketinfo",3]]],[11,"clone","","",187,[[],["algsetaeadauthsize",3]]],[11,"clone","","",188,[[],["algsetkey",3]]],[11,"clone","nix::sys::socket","",90,[[],["socktype",4]]],[11,"clone","","",91,[[],["sockprotocol",4]]],[11,"clone","","",98,[[],["sockflag",3]]],[11,"clone","","",99,[[],["msgflags",3]]],[11,"clone","","",100,[[],["unixcredentials",3]]],[11,"clone","","",101,[[],["ipmembershiprequest",3]]],[11,"clone","","",102,[[],["ipv6membershiprequest",3]]],[11,"clone","","",85,[[],["recvmsg",3]]],[11,"clone","","",154,[[],["cmsgiterator",3]]],[11,"clone","","",92,[[],["controlmessageowned",4]]],[11,"clone","","",93,[[],["controlmessage",4]]],[11,"clone","","",94,[[],["socklevel",4]]],[11,"clone","","",95,[[],["shutdown",4]]],[11,"clone","nix::sys::stat","",106,[[],["sflag",3]]],[11,"clone","","",107,[[],["mode",3]]],[11,"clone","","",104,[[],["fchmodatflags",4]]],[11,"clone","","",105,[[],["utimensatflags",4]]],[11,"clone","nix::sys::statfs","",108,[[],["statfs",3]]],[11,"clone","","",189,[[],["fstype",3]]],[11,"clone","nix::sys::statvfs","",109,[[],["fsflags",3]]],[11,"clone","","",110,[[],["statvfs",3]]],[11,"clone","nix::sys::sysinfo","",111,[[],["sysinfo",3]]],[11,"clone","nix::sys::termios","",112,[[],["termios",3]]],[11,"clone","","",113,[[],["baudrate",4]]],[11,"clone","","",114,[[],["setarg",4]]],[11,"clone","","",115,[[],["flusharg",4]]],[11,"clone","","",116,[[],["flowarg",4]]],[11,"clone","","",117,[[],["specialcharacterindices",4]]],[11,"clone","","",118,[[],["inputflags",3]]],[11,"clone","","",119,[[],["outputflags",3]]],[11,"clone","","",120,[[],["controlflags",3]]],[11,"clone","","",121,[[],["localflags",3]]],[11,"clone","nix::sys::time","",123,[[],["timespec",3]]],[11,"clone","","",124,[[],["timeval",3]]],[11,"clone","nix::sys::uio","",125,[[],["remoteiovec",3]]],[11,"clone","","",126,[[],["iovec",3]]],[11,"clone","nix::sys::utsname","",127,[[],["utsname",3]]],[11,"clone","nix::sys::wait","",129,[[],["waitpidflag",3]]],[11,"clone","","",128,[[],["waitstatus",4]]],[11,"clone","nix::sys::inotify","",131,[[],["addwatchflags",3]]],[11,"clone","","",132,[[],["initflags",3]]],[11,"clone","","",133,[[],["inotify",3]]],[11,"clone","","",190,[[],["watchdescriptor",3]]],[11,"clone","nix::ucontext","",134,[[],["ucontext",3]]],[11,"clone","nix::unistd","",145,[[],["uid",3]]],[11,"clone","","",146,[[],["gid",3]]],[11,"clone","","",147,[[],["pid",3]]],[11,"clone","","",137,[[],["forkresult",4]]],[11,"clone","","",139,[[],["fchownatflags",4]]],[11,"clone","","",140,[[],["whence",4]]],[11,"clone","","",141,[[],["linkatflags",4]]],[11,"clone","","",142,[[],["unlinkatflags",4]]],[11,"clone","","",143,[[],["pathconfvar",4]]],[11,"clone","","",144,[[],["sysconfvar",4]]],[11,"clone","","",148,[[],["accessflags",3]]],[11,"clone","","",135,[[],["user",3]]],[11,"clone","","",136,[[],["group",3]]],[11,"clone","nix","",0,[[],["error",4]]],[11,"default","nix::sys::quota","",54,[[],["quotavalidflags",3]]],[11,"default","","",55,[[],["dqblk",3]]],[11,"default","nix::sys::select","",57,[[]]],[11,"default","nix::sys::socket::sockopt","",188,[[]]],[11,"default","nix::sys::statvfs","",109,[[],["fsflags",3]]],[11,"cmp","nix::fcntl","",9,[[["atflags",3]],["ordering",4]]],[11,"cmp","","",10,[[["oflag",3]],["ordering",4]]],[11,"cmp","","",11,[[["sealflag",3]],["ordering",4]]],[11,"cmp","","",12,[[["fdflag",3]],["ordering",4]]],[11,"cmp","","",13,[[["splicefflags",3]],["ordering",4]]],[11,"cmp","","",14,[[["fallocateflags",3]],["ordering",4]]],[11,"cmp","","",6,[[["posixfadviseadvice",4]],["ordering",4]]],[11,"cmp","nix::kmod","",16,[[["moduleinitflags",3]],["ordering",4]]],[11,"cmp","","",17,[[["deletemoduleflags",3]],["ordering",4]]],[11,"cmp","nix::mount","",18,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",19,[[["mntflags",3]],["ordering",4]]],[11,"cmp","nix::mqueue","",20,[[["mq_oflag",3]],["ordering",4]]],[11,"cmp","","",21,[[["fdflag",3]],["ordering",4]]],[11,"cmp","nix::net::if_","",23,[[["interfaceflags",3]],["ordering",4]]],[11,"cmp","nix::poll","",25,[[["pollflags",3]],["ordering",4]]],[11,"cmp","nix::sched","",29,[[["cloneflags",3]],["ordering",4]]],[11,"cmp","nix::sys::aio","",32,[[["aiofsyncmode",4]],["ordering",4]]],[11,"cmp","","",33,[[["lioopcode",4]],["ordering",4]]],[11,"cmp","","",34,[[["liomode",4]],["ordering",4]]],[11,"cmp","nix::sys::epoll","",39,[[["epollflags",3]],["ordering",4]]],[11,"cmp","","",40,[[["epollcreateflags",3]],["ordering",4]]],[11,"cmp","nix::sys::eventfd","",42,[[["efdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::memfd","",43,[[["memfdcreateflag",3]],["ordering",4]]],[11,"cmp","nix::sys::mman","",45,[[["protflags",3]],["ordering",4]]],[11,"cmp","","",46,[[["mapflags",3]],["ordering",4]]],[11,"cmp","","",44,[[["mmapadvise",4]],["ordering",4]]],[11,"cmp","","",47,[[["msflags",3]],["ordering",4]]],[11,"cmp","","",48,[[["mlockallflags",3]],["ordering",4]]],[11,"cmp","nix::sys::ptrace","",49,[[["request",4]],["ordering",4]]],[11,"cmp","","",50,[[["event",4]],["ordering",4]]],[11,"cmp","","",51,[[["options",3]],["ordering",4]]],[11,"cmp","nix::sys::quota","",52,[[["quotatype",4]],["ordering",4]]],[11,"cmp","","",53,[[["quotafmt",4]],["ordering",4]]],[11,"cmp","","",54,[[["quotavalidflags",3]],["ordering",4]]],[11,"cmp","nix::sys::reboot","",56,[[["rebootmode",4]],["ordering",4]]],[11,"cmp","nix::sys::signal","",58,[[["signal",4]],["ordering",4]]],[11,"cmp","","",65,[[["saflags",3]],["ordering",4]]],[11,"cmp","","",59,[[["sigmaskhow",4]],["ordering",4]]],[11,"cmp","nix::sys::signalfd","",69,[[["sfdflags",3]],["ordering",4]]],[11,"cmp","nix::sys::socket","",98,[[["sockflag",3]],["ordering",4]]],[11,"cmp","","",99,[[["msgflags",3]],["ordering",4]]],[11,"cmp","nix::sys::stat","",106,[[["sflag",3]],["ordering",4]]],[11,"cmp","","",107,[[["mode",3]],["ordering",4]]],[11,"cmp","nix::sys::statvfs","",109,[[["fsflags",3]],["ordering",4]]],[11,"cmp","nix::sys::termios","",113,[[["baudrate",4]],["ordering",4]]],[11,"cmp","","",114,[[["setarg",4]],["ordering",4]]],[11,"cmp","","",115,[[["flusharg",4]],["ordering",4]]],[11,"cmp","","",116,[[["flowarg",4]],["ordering",4]]],[11,"cmp","","",117,[[["specialcharacterindices",4]],["ordering",4]]],[11,"cmp","","",118,[[["inputflags",3]],["ordering",4]]],[11,"cmp","","",119,[[["outputflags",3]],["ordering",4]]],[11,"cmp","","",120,[[["controlflags",3]],["ordering",4]]],[11,"cmp","","",121,[[["localflags",3]],["ordering",4]]],[11,"cmp","nix::sys::time","",123,[[["timespec",3]],["ordering",4]]],[11,"cmp","","",124,[[["timeval",3]],["ordering",4]]],[11,"cmp","nix::sys::wait","",129,[[["waitpidflag",3]],["ordering",4]]],[11,"cmp","nix::sys::inotify","",131,[[["addwatchflags",3]],["ordering",4]]],[11,"cmp","","",132,[[["initflags",3]],["ordering",4]]],[11,"cmp","","",190,[[["watchdescriptor",3]],["ordering",4]]],[11,"cmp","nix::unistd","",148,[[["accessflags",3]],["ordering",4]]],[11,"eq","nix::dir","",2,[[["dir",3]]]],[11,"ne","","",2,[[["dir",3]]]],[11,"eq","","",150,[[["iter",3]]]],[11,"ne","","",150,[[["iter",3]]]],[11,"eq","","",3,[[["entry",3]]]],[11,"ne","","",3,[[["entry",3]]]],[11,"eq","","",1,[[["type",4]]]],[11,"eq","nix::errno","",4,[[["errno",4]]]],[11,"eq","nix::fcntl","",9,[[["atflags",3]]]],[11,"ne","","",9,[[["atflags",3]]]],[11,"eq","","",10,[[["oflag",3]]]],[11,"ne","","",10,[[["oflag",3]]]],[11,"eq","","",11,[[["sealflag",3]]]],[11,"ne","","",11,[[["sealflag",3]]]],[11,"eq","","",12,[[["fdflag",3]]]],[11,"ne","","",12,[[["fdflag",3]]]],[11,"eq","","",7,[[["fcntlarg",4]]]],[11,"ne","","",7,[[["fcntlarg",4]]]],[11,"eq","","",8,[[["flockarg",4]]]],[11,"eq","","",13,[[["splicefflags",3]]]],[11,"ne","","",13,[[["splicefflags",3]]]],[11,"eq","","",14,[[["fallocateflags",3]]]],[11,"ne","","",14,[[["fallocateflags",3]]]],[11,"eq","","",6,[[["posixfadviseadvice",4]]]],[11,"eq","nix::ifaddrs","",15,[[["interfaceaddress",3]]]],[11,"ne","","",15,[[["interfaceaddress",3]]]],[11,"eq","","",151,[[["interfaceaddressiterator",3]]]],[11,"ne","","",151,[[["interfaceaddressiterator",3]]]],[11,"eq","nix::kmod","",16,[[["moduleinitflags",3]]]],[11,"ne","","",16,[[["moduleinitflags",3]]]],[11,"eq","","",17,[[["deletemoduleflags",3]]]],[11,"ne","","",17,[[["deletemoduleflags",3]]]],[11,"eq","nix::mount","",18,[[["msflags",3]]]],[11,"ne","","",18,[[["msflags",3]]]],[11,"eq","","",19,[[["mntflags",3]]]],[11,"ne","","",19,[[["mntflags",3]]]],[11,"eq","nix::mqueue","",20,[[["mq_oflag",3]]]],[11,"ne","","",20,[[["mq_oflag",3]]]],[11,"eq","","",21,[[["fdflag",3]]]],[11,"ne","","",21,[[["fdflag",3]]]],[11,"eq","","",22,[[["mqattr",3]]]],[11,"ne","","",22,[[["mqattr",3]]]],[11,"eq","nix::net::if_","",23,[[["interfaceflags",3]]]],[11,"ne","","",23,[[["interfaceflags",3]]]],[11,"eq","nix::poll","",24,[[["pollfd",3]]]],[11,"ne","","",24,[[["pollfd",3]]]],[11,"eq","","",25,[[["pollflags",3]]]],[11,"ne","","",25,[[["pollflags",3]]]],[11,"eq","nix::pty","",27,[[["openptyresult",3]]]],[11,"ne","","",27,[[["openptyresult",3]]]],[11,"eq","","",152,[[["ptymaster",3]]]],[11,"ne","","",152,[[["ptymaster",3]]]],[11,"eq","nix::sched","",29,[[["cloneflags",3]]]],[11,"ne","","",29,[[["cloneflags",3]]]],[11,"eq","","",30,[[["cpuset",3]]]],[11,"ne","","",30,[[["cpuset",3]]]],[11,"eq","nix::sys::aio","",32,[[["aiofsyncmode",4]]]],[11,"eq","","",33,[[["lioopcode",4]]]],[11,"eq","","",34,[[["liomode",4]]]],[11,"eq","","",35,[[["aiocancelstat",4]]]],[11,"eq","nix::sys::epoll","",39,[[["epollflags",3]]]],[11,"ne","","",39,[[["epollflags",3]]]],[11,"eq","","",38,[[["epollop",4]]]],[11,"eq","","",40,[[["epollcreateflags",3]]]],[11,"ne","","",40,[[["epollcreateflags",3]]]],[11,"eq","","",41,[[["epollevent",3]]]],[11,"ne","","",41,[[["epollevent",3]]]],[11,"eq","nix::sys::eventfd","",42,[[["efdflags",3]]]],[11,"ne","","",42,[[["efdflags",3]]]],[11,"eq","nix::sys::memfd","",43,[[["memfdcreateflag",3]]]],[11,"ne","","",43,[[["memfdcreateflag",3]]]],[11,"eq","nix::sys::mman","",45,[[["protflags",3]]]],[11,"ne","","",45,[[["protflags",3]]]],[11,"eq","","",46,[[["mapflags",3]]]],[11,"ne","","",46,[[["mapflags",3]]]],[11,"eq","","",44,[[["mmapadvise",4]]]],[11,"eq","","",47,[[["msflags",3]]]],[11,"ne","","",47,[[["msflags",3]]]],[11,"eq","","",48,[[["mlockallflags",3]]]],[11,"ne","","",48,[[["mlockallflags",3]]]],[11,"eq","nix::sys::ptrace","",49,[[["request",4]]]],[11,"eq","","",50,[[["event",4]]]],[11,"eq","","",51,[[["options",3]]]],[11,"ne","","",51,[[["options",3]]]],[11,"eq","nix::sys::quota","",52,[[["quotatype",4]]]],[11,"eq","","",53,[[["quotafmt",4]]]],[11,"eq","","",54,[[["quotavalidflags",3]]]],[11,"ne","","",54,[[["quotavalidflags",3]]]],[11,"eq","","",55,[[["dqblk",3]]]],[11,"ne","","",55,[[["dqblk",3]]]],[11,"eq","nix::sys::reboot","",56,[[["rebootmode",4]]]],[11,"eq","nix::sys::select","",57,[[["fdset",3]]]],[11,"ne","","",57,[[["fdset",3]]]],[11,"eq","nix::sys::signal","",58,[[["signal",4]]]],[11,"eq","","",153,[[["signaliterator",3]]]],[11,"ne","","",153,[[["signaliterator",3]]]],[11,"eq","","",65,[[["saflags",3]]]],[11,"ne","","",65,[[["saflags",3]]]],[11,"eq","","",59,[[["sigmaskhow",4]]]],[11,"eq","","",66,[[["sigset",3]]]],[11,"ne","","",66,[[["sigset",3]]]],[11,"eq","","",60,[[["sighandler",4]]]],[11,"ne","","",60,[[["sighandler",4]]]],[11,"eq","","",67,[[["sigaction",3]]]],[11,"ne","","",67,[[["sigaction",3]]]],[11,"eq","","",61,[[["sigevnotify",4]]]],[11,"ne","","",61,[[["sigevnotify",4]]]],[11,"eq","","",64,[[["sigevent",3]]]],[11,"ne","","",64,[[["sigevent",3]]]],[11,"eq","nix::sys::signalfd","",69,[[["sfdflags",3]]]],[11,"ne","","",69,[[["sfdflags",3]]]],[11,"eq","","",70,[[["signalfd",3]]]],[11,"ne","","",70,[[["signalfd",3]]]],[11,"eq","nix::sys::socket","",86,[[["addressfamily",4]]]],[11,"eq","","",88,[[["inetaddr",4]]]],[11,"ne","","",88,[[["inetaddr",4]]]],[11,"eq","","",89,[[["ipaddr",4]]]],[11,"ne","","",89,[[["ipaddr",4]]]],[11,"eq","","",79,[[["ipv4addr",3]]]],[11,"ne","","",79,[[["ipv4addr",3]]]],[11,"eq","","",80,[[["ipv6addr",3]]]],[11,"ne","","",80,[[["ipv6addr",3]]]],[11,"eq","","",78,[[["unixaddr",3]]]],[11,"eq","","",87,[[["sockaddr",4]]]],[11,"ne","","",87,[[["sockaddr",4]]]],[11,"eq","","",82,[[["netlinkaddr",3]]]],[11,"ne","","",82,[[["netlinkaddr",3]]]],[11,"eq","","",83,[[]]],[11,"eq","","",81,[[["linkaddr",3]]]],[11,"ne","","",81,[[["linkaddr",3]]]],[11,"eq","","",84,[[]]],[11,"eq","nix::sys::socket::sockopt","",155,[[["reuseaddr",3]]]],[11,"eq","","",156,[[["reuseport",3]]]],[11,"eq","","",157,[[["tcpnodelay",3]]]],[11,"eq","","",158,[[["linger",3]]]],[11,"eq","","",159,[[["ipaddmembership",3]]]],[11,"eq","","",160,[[["ipdropmembership",3]]]],[11,"eq","","",161,[[["ipv6addmembership",3]]]],[11,"eq","","",162,[[["ipv6dropmembership",3]]]],[11,"eq","","",163,[[["ipmulticastttl",3]]]],[11,"eq","","",164,[[["ipmulticastloop",3]]]],[11,"eq","","",165,[[["receivetimeout",3]]]],[11,"eq","","",166,[[["sendtimeout",3]]]],[11,"eq","","",167,[[["broadcast",3]]]],[11,"eq","","",168,[[["oobinline",3]]]],[11,"eq","","",169,[[["socketerror",3]]]],[11,"eq","","",170,[[["keepalive",3]]]],[11,"eq","","",171,[[["peercredentials",3]]]],[11,"eq","","",172,[[["tcpkeepidle",3]]]],[11,"eq","","",173,[[["rcvbuf",3]]]],[11,"eq","","",174,[[["sndbuf",3]]]],[11,"eq","","",175,[[["rcvbufforce",3]]]],[11,"eq","","",176,[[["sndbufforce",3]]]],[11,"eq","","",177,[[["socktype",3]]]],[11,"eq","","",178,[[["acceptconn",3]]]],[11,"eq","","",179,[[["originaldst",3]]]],[11,"eq","","",180,[[["receivetimestamp",3]]]],[11,"eq","","",181,[[["iptransparent",3]]]],[11,"eq","","",182,[[["mark",3]]]],[11,"eq","","",183,[[["passcred",3]]]],[11,"eq","","",184,[[["tcpcongestion",3]]]],[11,"eq","","",185,[[["ipv4packetinfo",3]]]],[11,"eq","","",186,[[["ipv6recvpacketinfo",3]]]],[11,"eq","nix::sys::socket","",90,[[["socktype",4]]]],[11,"eq","","",91,[[["sockprotocol",4]]]],[11,"eq","","",98,[[["sockflag",3]]]],[11,"ne","","",98,[[["sockflag",3]]]],[11,"eq","","",99,[[["msgflags",3]]]],[11,"ne","","",99,[[["msgflags",3]]]],[11,"eq","","",100,[[["unixcredentials",3]]]],[11,"ne","","",100,[[["unixcredentials",3]]]],[11,"eq","","",101,[[["ipmembershiprequest",3]]]],[11,"ne","","",101,[[["ipmembershiprequest",3]]]],[11,"eq","","",102,[[["ipv6membershiprequest",3]]]],[11,"ne","","",102,[[["ipv6membershiprequest",3]]]],[11,"eq","","",85,[[["recvmsg",3]]]],[11,"ne","","",85,[[["recvmsg",3]]]],[11,"eq","","",154,[[["cmsgiterator",3]]]],[11,"ne","","",154,[[["cmsgiterator",3]]]],[11,"eq","","",92,[[["controlmessageowned",4]]]],[11,"ne","","",92,[[["controlmessageowned",4]]]],[11,"eq","","",93,[[["controlmessage",4]]]],[11,"ne","","",93,[[["controlmessage",4]]]],[11,"eq","","",94,[[["socklevel",4]]]],[11,"eq","","",95,[[["shutdown",4]]]],[11,"eq","nix::sys::stat","",106,[[["sflag",3]]]],[11,"ne","","",106,[[["sflag",3]]]],[11,"eq","","",107,[[["mode",3]]]],[11,"ne","","",107,[[["mode",3]]]],[11,"eq","nix::sys::statfs","",189,[[["fstype",3]]]],[11,"ne","","",189,[[["fstype",3]]]],[11,"eq","nix::sys::statvfs","",109,[[["fsflags",3]]]],[11,"ne","","",109,[[["fsflags",3]]]],[11,"eq","","",110,[[["statvfs",3]]]],[11,"ne","","",110,[[["statvfs",3]]]],[11,"eq","nix::sys::sysinfo","",111,[[["sysinfo",3]]]],[11,"ne","","",111,[[["sysinfo",3]]]],[11,"eq","nix::sys::termios","",112,[[["termios",3]]]],[11,"ne","","",112,[[["termios",3]]]],[11,"eq","","",113,[[["baudrate",4]]]],[11,"eq","","",114,[[["setarg",4]]]],[11,"eq","","",115,[[["flusharg",4]]]],[11,"eq","","",116,[[["flowarg",4]]]],[11,"eq","","",117,[[["specialcharacterindices",4]]]],[11,"eq","","",118,[[["inputflags",3]]]],[11,"ne","","",118,[[["inputflags",3]]]],[11,"eq","","",119,[[["outputflags",3]]]],[11,"ne","","",119,[[["outputflags",3]]]],[11,"eq","","",120,[[["controlflags",3]]]],[11,"ne","","",120,[[["controlflags",3]]]],[11,"eq","","",121,[[["localflags",3]]]],[11,"ne","","",121,[[["localflags",3]]]],[11,"eq","nix::sys::time","",123,[[["timespec",3]]]],[11,"ne","","",123,[[["timespec",3]]]],[11,"eq","","",124,[[["timeval",3]]]],[11,"ne","","",124,[[["timeval",3]]]],[11,"eq","nix::sys::uio","",125,[[["remoteiovec",3]]]],[11,"ne","","",125,[[["remoteiovec",3]]]],[11,"eq","","",126,[[["iovec",3]]]],[11,"ne","","",126,[[["iovec",3]]]],[11,"eq","nix::sys::utsname","",127,[[["utsname",3]]]],[11,"ne","","",127,[[["utsname",3]]]],[11,"eq","nix::sys::wait","",129,[[["waitpidflag",3]]]],[11,"ne","","",129,[[["waitpidflag",3]]]],[11,"eq","","",128,[[["waitstatus",4]]]],[11,"ne","","",128,[[["waitstatus",4]]]],[11,"eq","nix::sys::inotify","",131,[[["addwatchflags",3]]]],[11,"ne","","",131,[[["addwatchflags",3]]]],[11,"eq","","",132,[[["initflags",3]]]],[11,"ne","","",132,[[["initflags",3]]]],[11,"eq","","",190,[[["watchdescriptor",3]]]],[11,"ne","","",190,[[["watchdescriptor",3]]]],[11,"eq","nix::ucontext","",134,[[["ucontext",3]]]],[11,"ne","","",134,[[["ucontext",3]]]],[11,"eq","nix::unistd","",145,[[["uid",3]]]],[11,"ne","","",145,[[["uid",3]]]],[11,"eq","","",146,[[["gid",3]]]],[11,"ne","","",146,[[["gid",3]]]],[11,"eq","","",147,[[["pid",3]]]],[11,"ne","","",147,[[["pid",3]]]],[11,"eq","","",143,[[["pathconfvar",4]]]],[11,"eq","","",144,[[["sysconfvar",4]]]],[11,"eq","","",148,[[["accessflags",3]]]],[11,"ne","","",148,[[["accessflags",3]]]],[11,"eq","","",135,[[["user",3]]]],[11,"ne","","",135,[[["user",3]]]],[11,"eq","","",136,[[["group",3]]]],[11,"ne","","",136,[[["group",3]]]],[11,"eq","nix","",0,[[["error",4]]]],[11,"ne","","",0,[[["error",4]]]],[11,"partial_cmp","nix::fcntl","",9,[[["atflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",9,[[["atflags",3]]]],[11,"le","","",9,[[["atflags",3]]]],[11,"gt","","",9,[[["atflags",3]]]],[11,"ge","","",9,[[["atflags",3]]]],[11,"partial_cmp","","",10,[[["oflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",10,[[["oflag",3]]]],[11,"le","","",10,[[["oflag",3]]]],[11,"gt","","",10,[[["oflag",3]]]],[11,"ge","","",10,[[["oflag",3]]]],[11,"partial_cmp","","",11,[[["sealflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",11,[[["sealflag",3]]]],[11,"le","","",11,[[["sealflag",3]]]],[11,"gt","","",11,[[["sealflag",3]]]],[11,"ge","","",11,[[["sealflag",3]]]],[11,"partial_cmp","","",12,[[["fdflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["fdflag",3]]]],[11,"le","","",12,[[["fdflag",3]]]],[11,"gt","","",12,[[["fdflag",3]]]],[11,"ge","","",12,[[["fdflag",3]]]],[11,"partial_cmp","","",13,[[["splicefflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",13,[[["splicefflags",3]]]],[11,"le","","",13,[[["splicefflags",3]]]],[11,"gt","","",13,[[["splicefflags",3]]]],[11,"ge","","",13,[[["splicefflags",3]]]],[11,"partial_cmp","","",14,[[["fallocateflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",14,[[["fallocateflags",3]]]],[11,"le","","",14,[[["fallocateflags",3]]]],[11,"gt","","",14,[[["fallocateflags",3]]]],[11,"ge","","",14,[[["fallocateflags",3]]]],[11,"partial_cmp","","",6,[[["posixfadviseadvice",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::kmod","",16,[[["moduleinitflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",16,[[["moduleinitflags",3]]]],[11,"le","","",16,[[["moduleinitflags",3]]]],[11,"gt","","",16,[[["moduleinitflags",3]]]],[11,"ge","","",16,[[["moduleinitflags",3]]]],[11,"partial_cmp","","",17,[[["deletemoduleflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",17,[[["deletemoduleflags",3]]]],[11,"le","","",17,[[["deletemoduleflags",3]]]],[11,"gt","","",17,[[["deletemoduleflags",3]]]],[11,"ge","","",17,[[["deletemoduleflags",3]]]],[11,"partial_cmp","nix::mount","",18,[[["msflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["msflags",3]]]],[11,"le","","",18,[[["msflags",3]]]],[11,"gt","","",18,[[["msflags",3]]]],[11,"ge","","",18,[[["msflags",3]]]],[11,"partial_cmp","","",19,[[["mntflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["mntflags",3]]]],[11,"le","","",19,[[["mntflags",3]]]],[11,"gt","","",19,[[["mntflags",3]]]],[11,"ge","","",19,[[["mntflags",3]]]],[11,"partial_cmp","nix::mqueue","",20,[[["mq_oflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",20,[[["mq_oflag",3]]]],[11,"le","","",20,[[["mq_oflag",3]]]],[11,"gt","","",20,[[["mq_oflag",3]]]],[11,"ge","","",20,[[["mq_oflag",3]]]],[11,"partial_cmp","","",21,[[["fdflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",21,[[["fdflag",3]]]],[11,"le","","",21,[[["fdflag",3]]]],[11,"gt","","",21,[[["fdflag",3]]]],[11,"ge","","",21,[[["fdflag",3]]]],[11,"partial_cmp","nix::net::if_","",23,[[["interfaceflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",23,[[["interfaceflags",3]]]],[11,"le","","",23,[[["interfaceflags",3]]]],[11,"gt","","",23,[[["interfaceflags",3]]]],[11,"ge","","",23,[[["interfaceflags",3]]]],[11,"partial_cmp","nix::poll","",25,[[["pollflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",25,[[["pollflags",3]]]],[11,"le","","",25,[[["pollflags",3]]]],[11,"gt","","",25,[[["pollflags",3]]]],[11,"ge","","",25,[[["pollflags",3]]]],[11,"partial_cmp","nix::sched","",29,[[["cloneflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",29,[[["cloneflags",3]]]],[11,"le","","",29,[[["cloneflags",3]]]],[11,"gt","","",29,[[["cloneflags",3]]]],[11,"ge","","",29,[[["cloneflags",3]]]],[11,"partial_cmp","nix::sys::aio","",32,[[["aiofsyncmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",33,[[["lioopcode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",34,[[["liomode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::epoll","",39,[[["epollflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["epollflags",3]]]],[11,"le","","",39,[[["epollflags",3]]]],[11,"gt","","",39,[[["epollflags",3]]]],[11,"ge","","",39,[[["epollflags",3]]]],[11,"partial_cmp","","",40,[[["epollcreateflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["epollcreateflags",3]]]],[11,"le","","",40,[[["epollcreateflags",3]]]],[11,"gt","","",40,[[["epollcreateflags",3]]]],[11,"ge","","",40,[[["epollcreateflags",3]]]],[11,"partial_cmp","nix::sys::eventfd","",42,[[["efdflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",42,[[["efdflags",3]]]],[11,"le","","",42,[[["efdflags",3]]]],[11,"gt","","",42,[[["efdflags",3]]]],[11,"ge","","",42,[[["efdflags",3]]]],[11,"partial_cmp","nix::sys::memfd","",43,[[["memfdcreateflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",43,[[["memfdcreateflag",3]]]],[11,"le","","",43,[[["memfdcreateflag",3]]]],[11,"gt","","",43,[[["memfdcreateflag",3]]]],[11,"ge","","",43,[[["memfdcreateflag",3]]]],[11,"partial_cmp","nix::sys::mman","",45,[[["protflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",45,[[["protflags",3]]]],[11,"le","","",45,[[["protflags",3]]]],[11,"gt","","",45,[[["protflags",3]]]],[11,"ge","","",45,[[["protflags",3]]]],[11,"partial_cmp","","",46,[[["mapflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["mapflags",3]]]],[11,"le","","",46,[[["mapflags",3]]]],[11,"gt","","",46,[[["mapflags",3]]]],[11,"ge","","",46,[[["mapflags",3]]]],[11,"partial_cmp","","",44,[[["mmapadvise",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",47,[[["msflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",47,[[["msflags",3]]]],[11,"le","","",47,[[["msflags",3]]]],[11,"gt","","",47,[[["msflags",3]]]],[11,"ge","","",47,[[["msflags",3]]]],[11,"partial_cmp","","",48,[[["mlockallflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",48,[[["mlockallflags",3]]]],[11,"le","","",48,[[["mlockallflags",3]]]],[11,"gt","","",48,[[["mlockallflags",3]]]],[11,"ge","","",48,[[["mlockallflags",3]]]],[11,"partial_cmp","nix::sys::ptrace","",49,[[["request",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",50,[[["event",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",51,[[["options",3]],[["option",4],["ordering",4]]]],[11,"lt","","",51,[[["options",3]]]],[11,"le","","",51,[[["options",3]]]],[11,"gt","","",51,[[["options",3]]]],[11,"ge","","",51,[[["options",3]]]],[11,"partial_cmp","nix::sys::quota","",52,[[["quotatype",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",53,[[["quotafmt",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",54,[[["quotavalidflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",54,[[["quotavalidflags",3]]]],[11,"le","","",54,[[["quotavalidflags",3]]]],[11,"gt","","",54,[[["quotavalidflags",3]]]],[11,"ge","","",54,[[["quotavalidflags",3]]]],[11,"partial_cmp","nix::sys::reboot","",56,[[["rebootmode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::signal","",58,[[["signal",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",65,[[["saflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",65,[[["saflags",3]]]],[11,"le","","",65,[[["saflags",3]]]],[11,"gt","","",65,[[["saflags",3]]]],[11,"ge","","",65,[[["saflags",3]]]],[11,"partial_cmp","","",59,[[["sigmaskhow",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::signalfd","",69,[[["sfdflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",69,[[["sfdflags",3]]]],[11,"le","","",69,[[["sfdflags",3]]]],[11,"gt","","",69,[[["sfdflags",3]]]],[11,"ge","","",69,[[["sfdflags",3]]]],[11,"partial_cmp","nix::sys::socket","",98,[[["sockflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",98,[[["sockflag",3]]]],[11,"le","","",98,[[["sockflag",3]]]],[11,"gt","","",98,[[["sockflag",3]]]],[11,"ge","","",98,[[["sockflag",3]]]],[11,"partial_cmp","","",99,[[["msgflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",99,[[["msgflags",3]]]],[11,"le","","",99,[[["msgflags",3]]]],[11,"gt","","",99,[[["msgflags",3]]]],[11,"ge","","",99,[[["msgflags",3]]]],[11,"partial_cmp","nix::sys::stat","",106,[[["sflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",106,[[["sflag",3]]]],[11,"le","","",106,[[["sflag",3]]]],[11,"gt","","",106,[[["sflag",3]]]],[11,"ge","","",106,[[["sflag",3]]]],[11,"partial_cmp","","",107,[[["mode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",107,[[["mode",3]]]],[11,"le","","",107,[[["mode",3]]]],[11,"gt","","",107,[[["mode",3]]]],[11,"ge","","",107,[[["mode",3]]]],[11,"partial_cmp","nix::sys::statvfs","",109,[[["fsflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",109,[[["fsflags",3]]]],[11,"le","","",109,[[["fsflags",3]]]],[11,"gt","","",109,[[["fsflags",3]]]],[11,"ge","","",109,[[["fsflags",3]]]],[11,"partial_cmp","nix::sys::termios","",113,[[["baudrate",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",114,[[["setarg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",115,[[["flusharg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",116,[[["flowarg",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",117,[[["specialcharacterindices",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",118,[[["inputflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",118,[[["inputflags",3]]]],[11,"le","","",118,[[["inputflags",3]]]],[11,"gt","","",118,[[["inputflags",3]]]],[11,"ge","","",118,[[["inputflags",3]]]],[11,"partial_cmp","","",119,[[["outputflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",119,[[["outputflags",3]]]],[11,"le","","",119,[[["outputflags",3]]]],[11,"gt","","",119,[[["outputflags",3]]]],[11,"ge","","",119,[[["outputflags",3]]]],[11,"partial_cmp","","",120,[[["controlflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",120,[[["controlflags",3]]]],[11,"le","","",120,[[["controlflags",3]]]],[11,"gt","","",120,[[["controlflags",3]]]],[11,"ge","","",120,[[["controlflags",3]]]],[11,"partial_cmp","","",121,[[["localflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",121,[[["localflags",3]]]],[11,"le","","",121,[[["localflags",3]]]],[11,"gt","","",121,[[["localflags",3]]]],[11,"ge","","",121,[[["localflags",3]]]],[11,"partial_cmp","nix::sys::time","",123,[[["timespec",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",124,[[["timeval",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","nix::sys::wait","",129,[[["waitpidflag",3]],[["option",4],["ordering",4]]]],[11,"lt","","",129,[[["waitpidflag",3]]]],[11,"le","","",129,[[["waitpidflag",3]]]],[11,"gt","","",129,[[["waitpidflag",3]]]],[11,"ge","","",129,[[["waitpidflag",3]]]],[11,"partial_cmp","nix::sys::inotify","",131,[[["addwatchflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",131,[[["addwatchflags",3]]]],[11,"le","","",131,[[["addwatchflags",3]]]],[11,"gt","","",131,[[["addwatchflags",3]]]],[11,"ge","","",131,[[["addwatchflags",3]]]],[11,"partial_cmp","","",132,[[["initflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",132,[[["initflags",3]]]],[11,"le","","",132,[[["initflags",3]]]],[11,"gt","","",132,[[["initflags",3]]]],[11,"ge","","",132,[[["initflags",3]]]],[11,"partial_cmp","","",190,[[["watchdescriptor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",190,[[["watchdescriptor",3]]]],[11,"le","","",190,[[["watchdescriptor",3]]]],[11,"gt","","",190,[[["watchdescriptor",3]]]],[11,"ge","","",190,[[["watchdescriptor",3]]]],[11,"partial_cmp","nix::unistd","",148,[[["accessflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",148,[[["accessflags",3]]]],[11,"le","","",148,[[["accessflags",3]]]],[11,"gt","","",148,[[["accessflags",3]]]],[11,"ge","","",148,[[["accessflags",3]]]],[11,"fmt","nix::dir","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",150,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",4,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ifaddrs","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",151,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",23,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","nix::pty","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",152,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::aio","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",42,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",43,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::reboot","",56,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::select","",57,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",59,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",60,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket::sockopt","",155,[[["formatter",3]],["result",6]]],[11,"fmt","","",156,[[["formatter",3]],["result",6]]],[11,"fmt","","",157,[[["formatter",3]],["result",6]]],[11,"fmt","","",158,[[["formatter",3]],["result",6]]],[11,"fmt","","",159,[[["formatter",3]],["result",6]]],[11,"fmt","","",160,[[["formatter",3]],["result",6]]],[11,"fmt","","",161,[[["formatter",3]],["result",6]]],[11,"fmt","","",162,[[["formatter",3]],["result",6]]],[11,"fmt","","",163,[[["formatter",3]],["result",6]]],[11,"fmt","","",164,[[["formatter",3]],["result",6]]],[11,"fmt","","",165,[[["formatter",3]],["result",6]]],[11,"fmt","","",166,[[["formatter",3]],["result",6]]],[11,"fmt","","",167,[[["formatter",3]],["result",6]]],[11,"fmt","","",168,[[["formatter",3]],["result",6]]],[11,"fmt","","",169,[[["formatter",3]],["result",6]]],[11,"fmt","","",170,[[["formatter",3]],["result",6]]],[11,"fmt","","",171,[[["formatter",3]],["result",6]]],[11,"fmt","","",172,[[["formatter",3]],["result",6]]],[11,"fmt","","",173,[[["formatter",3]],["result",6]]],[11,"fmt","","",174,[[["formatter",3]],["result",6]]],[11,"fmt","","",175,[[["formatter",3]],["result",6]]],[11,"fmt","","",176,[[["formatter",3]],["result",6]]],[11,"fmt","","",177,[[["formatter",3]],["result",6]]],[11,"fmt","","",178,[[["formatter",3]],["result",6]]],[11,"fmt","","",179,[[["formatter",3]],["result",6]]],[11,"fmt","","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","","",184,[[["formatter",3]],["result",6]]],[11,"fmt","","",185,[[["formatter",3]],["result",6]]],[11,"fmt","","",186,[[["formatter",3]],["result",6]]],[11,"fmt","","",187,[[["formatter",3]],["result",6]]],[11,"fmt","","",188,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",90,[[["formatter",3]],["result",6]]],[11,"fmt","","",91,[[["formatter",3]],["result",6]]],[11,"fmt","","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","","",100,[[["formatter",3]],["result",6]]],[11,"fmt","","",101,[[["formatter",3]],["result",6]]],[11,"fmt","","",102,[[["formatter",3]],["result",6]]],[11,"fmt","","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",154,[[["formatter",3]],["result",6]]],[11,"fmt","","",92,[[["formatter",3]],["result",6]]],[11,"fmt","","",93,[[["formatter",3]],["result",6]]],[11,"fmt","","",94,[[["formatter",3]],["result",6]]],[11,"fmt","","",95,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","","",104,[[["formatter",3]],["result",6]]],[11,"fmt","","",105,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statfs","",189,[[["formatter",3]],["result",6]]],[11,"fmt","","",108,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",109,[[["formatter",3]],["result",6]]],[11,"fmt","","",110,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::sysinfo","",111,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","","",115,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",117,[[["formatter",3]],["result",6]]],[11,"fmt","","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::uio","",125,[[["formatter",3]],["result",6]]],[11,"fmt","","",126,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::utsname","",127,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",129,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",133,[[["formatter",3]],["result",6]]],[11,"fmt","","",190,[[["formatter",3]],["result",6]]],[11,"fmt","","",130,[[["formatter",3]],["result",6]]],[11,"fmt","nix::ucontext","",134,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",137,[[["formatter",3]],["result",6]]],[11,"fmt","","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",141,[[["formatter",3]],["result",6]]],[11,"fmt","","",142,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","","",135,[[["formatter",3]],["result",6]]],[11,"fmt","","",136,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",0,[[["formatter",3]],["result",6]]],[11,"fmt","nix::errno","",4,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",58,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",88,[[["formatter",3]],["result",6]]],[11,"fmt","","",89,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",87,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::time","",123,[[["formatter",3]],["result",6]]],[11,"fmt","","",124,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","nix","",0,[[["formatter",3]],["result",6]]],[11,"div","nix::sys::time","",123,[[],["timespec",3]]],[11,"div","","",124,[[],["timeval",3]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",9,[[["atflags",3]],["atflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["oflag",3]],["oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",11,[[["sealflag",3]],["sealflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["fdflag",3]],["fdflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["splicefflags",3]],["splicefflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",14,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"sub","nix::kmod","Returns the set difference of the two sets of flags.",16,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",17,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"sub","nix::mount","Returns the set difference of the two sets of flags.",18,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",19,[[["mntflags",3]],["mntflags",3]]],[11,"sub","nix::mqueue","Returns the set difference of the two sets of flags.",20,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",21,[[["fdflag",3]],["fdflag",3]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",23,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",25,[[["pollflags",3]],["pollflags",3]]],[11,"sub","nix::sched","Returns the set difference of the two sets of flags.",29,[[["cloneflags",3]],["cloneflags",3]]],[11,"sub","nix::sys::epoll","Returns the set difference of the two sets of flags.",39,[[["epollflags",3]],["epollflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",40,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"sub","nix::sys::eventfd","Returns the set difference of the two sets of flags.",42,[[["efdflags",3]],["efdflags",3]]],[11,"sub","nix::sys::memfd","Returns the set difference of the two sets of flags.",43,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",45,[[["protflags",3]],["protflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",46,[[["mapflags",3]],["mapflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",47,[[["msflags",3]],["msflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",48,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"sub","nix::sys::ptrace","Returns the set difference of the two sets of flags.",51,[[["options",3]],["options",3]]],[11,"sub","nix::sys::quota","Returns the set difference of the two sets of flags.",54,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",65,[[["saflags",3]],["saflags",3]]],[11,"sub","nix::sys::signalfd","Returns the set difference of the two sets of flags.",69,[[["sfdflags",3]],["sfdflags",3]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",98,[[["sockflag",3]],["sockflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",99,[[["msgflags",3]],["msgflags",3]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",106,[[["sflag",3]],["sflag",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",107,[[["mode",3]],["mode",3]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",109,[[["fsflags",3]],["fsflags",3]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",118,[[["inputflags",3]],["inputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",119,[[["outputflags",3]],["outputflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["controlflags",3]],["controlflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",121,[[["localflags",3]],["localflags",3]]],[11,"sub","nix::sys::time","",123,[[["timespec",3]],["timespec",3]]],[11,"sub","","",124,[[["timeval",3]],["timeval",3]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",129,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"sub","nix::sys::inotify","Returns the set difference of the two sets of flags.",131,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",132,[[["initflags",3]],["initflags",3]]],[11,"sub","nix::unistd","Returns the set difference of the two sets of flags.",148,[[["accessflags",3]],["accessflags",3]]],[11,"add","nix::sys::time","",123,[[["timespec",3]],["timespec",3]]],[11,"add","","",124,[[["timeval",3]],["timeval",3]]],[11,"mul","","",123,[[],["timespec",3]]],[11,"mul","","",124,[[],["timeval",3]]],[11,"neg","","",123,[[],["timespec",3]]],[11,"neg","","",124,[[],["timeval",3]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",9,[[["atflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",11,[[["sealflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["fdflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["splicefflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",14,[[["fallocateflags",3]]]],[11,"sub_assign","nix::kmod","Disables all flags enabled in the set.",16,[[["moduleinitflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",17,[[["deletemoduleflags",3]]]],[11,"sub_assign","nix::mount","Disables all flags enabled in the set.",18,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",19,[[["mntflags",3]]]],[11,"sub_assign","nix::mqueue","Disables all flags enabled in the set.",20,[[["mq_oflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",21,[[["fdflag",3]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",23,[[["interfaceflags",3]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",25,[[["pollflags",3]]]],[11,"sub_assign","nix::sched","Disables all flags enabled in the set.",29,[[["cloneflags",3]]]],[11,"sub_assign","nix::sys::epoll","Disables all flags enabled in the set.",39,[[["epollflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",40,[[["epollcreateflags",3]]]],[11,"sub_assign","nix::sys::eventfd","Disables all flags enabled in the set.",42,[[["efdflags",3]]]],[11,"sub_assign","nix::sys::memfd","Disables all flags enabled in the set.",43,[[["memfdcreateflag",3]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",45,[[["protflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",46,[[["mapflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",47,[[["msflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",48,[[["mlockallflags",3]]]],[11,"sub_assign","nix::sys::ptrace","Disables all flags enabled in the set.",51,[[["options",3]]]],[11,"sub_assign","nix::sys::quota","Disables all flags enabled in the set.",54,[[["quotavalidflags",3]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",65,[[["saflags",3]]]],[11,"sub_assign","nix::sys::signalfd","Disables all flags enabled in the set.",69,[[["sfdflags",3]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",98,[[["sockflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",99,[[["msgflags",3]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",106,[[["sflag",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",107,[[["mode",3]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",109,[[["fsflags",3]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",118,[[["inputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",119,[[["outputflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["controlflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",121,[[["localflags",3]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",129,[[["waitpidflag",3]]]],[11,"sub_assign","nix::sys::inotify","Disables all flags enabled in the set.",131,[[["addwatchflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",132,[[["initflags",3]]]],[11,"sub_assign","nix::unistd","Disables all flags enabled in the set.",148,[[["accessflags",3]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",9,[[],["atflags",3]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["oflag",3]]],[11,"not","","Returns the complement of this set of flags.",11,[[],["sealflag",3]]],[11,"not","","Returns the complement of this set of flags.",12,[[],["fdflag",3]]],[11,"not","","Returns the complement of this set of flags.",13,[[],["splicefflags",3]]],[11,"not","","Returns the complement of this set of flags.",14,[[],["fallocateflags",3]]],[11,"not","nix::kmod","Returns the complement of this set of flags.",16,[[],["moduleinitflags",3]]],[11,"not","","Returns the complement of this set of flags.",17,[[],["deletemoduleflags",3]]],[11,"not","nix::mount","Returns the complement of this set of flags.",18,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",19,[[],["mntflags",3]]],[11,"not","nix::mqueue","Returns the complement of this set of flags.",20,[[],["mq_oflag",3]]],[11,"not","","Returns the complement of this set of flags.",21,[[],["fdflag",3]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",23,[[],["interfaceflags",3]]],[11,"not","nix::poll","Returns the complement of this set of flags.",25,[[],["pollflags",3]]],[11,"not","nix::sched","Returns the complement of this set of flags.",29,[[],["cloneflags",3]]],[11,"not","nix::sys::epoll","Returns the complement of this set of flags.",39,[[],["epollflags",3]]],[11,"not","","Returns the complement of this set of flags.",40,[[],["epollcreateflags",3]]],[11,"not","nix::sys::eventfd","Returns the complement of this set of flags.",42,[[],["efdflags",3]]],[11,"not","nix::sys::memfd","Returns the complement of this set of flags.",43,[[],["memfdcreateflag",3]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",45,[[],["protflags",3]]],[11,"not","","Returns the complement of this set of flags.",46,[[],["mapflags",3]]],[11,"not","","Returns the complement of this set of flags.",47,[[],["msflags",3]]],[11,"not","","Returns the complement of this set of flags.",48,[[],["mlockallflags",3]]],[11,"not","nix::sys::ptrace","Returns the complement of this set of flags.",51,[[],["options",3]]],[11,"not","nix::sys::quota","Returns the complement of this set of flags.",54,[[],["quotavalidflags",3]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",65,[[],["saflags",3]]],[11,"not","nix::sys::signalfd","Returns the complement of this set of flags.",69,[[],["sfdflags",3]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",98,[[],["sockflag",3]]],[11,"not","","Returns the complement of this set of flags.",99,[[],["msgflags",3]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",106,[[],["sflag",3]]],[11,"not","","Returns the complement of this set of flags.",107,[[],["mode",3]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",109,[[],["fsflags",3]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",118,[[],["inputflags",3]]],[11,"not","","Returns the complement of this set of flags.",119,[[],["outputflags",3]]],[11,"not","","Returns the complement of this set of flags.",120,[[],["controlflags",3]]],[11,"not","","Returns the complement of this set of flags.",121,[[],["localflags",3]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",129,[[],["waitpidflag",3]]],[11,"not","nix::sys::inotify","Returns the complement of this set of flags.",131,[[],["addwatchflags",3]]],[11,"not","","Returns the complement of this set of flags.",132,[[],["initflags",3]]],[11,"not","nix::unistd","Returns the complement of this set of flags.",148,[[],["accessflags",3]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",9,[[["atflags",3]],["atflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["oflag",3]],["oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",11,[[["sealflag",3]],["sealflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",14,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitand","nix::kmod","Returns the intersection between the two sets of flags.",16,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",17,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitand","nix::mount","Returns the intersection between the two sets of flags.",18,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",19,[[["mntflags",3]],["mntflags",3]]],[11,"bitand","nix::mqueue","Returns the intersection between the two sets of flags.",20,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",21,[[["fdflag",3]],["fdflag",3]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",23,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",25,[[["pollflags",3]],["pollflags",3]]],[11,"bitand","nix::sched","Returns the intersection between the two sets of flags.",29,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitand","nix::sys::epoll","Returns the intersection between the two sets of flags.",39,[[["epollflags",3]],["epollflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",40,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitand","nix::sys::eventfd","Returns the intersection between the two sets of flags.",42,[[["efdflags",3]],["efdflags",3]]],[11,"bitand","nix::sys::memfd","Returns the intersection between the two sets of flags.",43,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",45,[[["protflags",3]],["protflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",46,[[["mapflags",3]],["mapflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",47,[[["msflags",3]],["msflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",48,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitand","nix::sys::ptrace","Returns the intersection between the two sets of flags.",51,[[["options",3]],["options",3]]],[11,"bitand","nix::sys::quota","Returns the intersection between the two sets of flags.",54,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",65,[[["saflags",3]],["saflags",3]]],[11,"bitand","nix::sys::signalfd","Returns the intersection between the two sets of flags.",69,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",98,[[["sockflag",3]],["sockflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",99,[[["msgflags",3]],["msgflags",3]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",106,[[["sflag",3]],["sflag",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",107,[[["mode",3]],["mode",3]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",109,[[["fsflags",3]],["fsflags",3]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",118,[[["inputflags",3]],["inputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",119,[[["outputflags",3]],["outputflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["controlflags",3]],["controlflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",121,[[["localflags",3]],["localflags",3]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",129,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitand","nix::sys::inotify","Returns the intersection between the two sets of flags.",131,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",132,[[["initflags",3]],["initflags",3]]],[11,"bitand","nix::unistd","Returns the intersection between the two sets of flags.",148,[[["accessflags",3]],["accessflags",3]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",9,[[["atflags",3]],["atflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["oflag",3]],["oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",11,[[["sealflag",3]],["sealflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",14,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitor","nix::kmod","Returns the union of the two sets of flags.",16,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",17,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitor","nix::mount","Returns the union of the two sets of flags.",18,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",19,[[["mntflags",3]],["mntflags",3]]],[11,"bitor","nix::mqueue","Returns the union of the two sets of flags.",20,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",21,[[["fdflag",3]],["fdflag",3]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",23,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",25,[[["pollflags",3]],["pollflags",3]]],[11,"bitor","nix::sched","Returns the union of the two sets of flags.",29,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitor","nix::sys::epoll","Returns the union of the two sets of flags.",39,[[["epollflags",3]],["epollflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",40,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitor","nix::sys::eventfd","Returns the union of the two sets of flags.",42,[[["efdflags",3]],["efdflags",3]]],[11,"bitor","nix::sys::memfd","Returns the union of the two sets of flags.",43,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",45,[[["protflags",3]],["protflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",46,[[["mapflags",3]],["mapflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",47,[[["msflags",3]],["msflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",48,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitor","nix::sys::ptrace","Returns the union of the two sets of flags.",51,[[["options",3]],["options",3]]],[11,"bitor","nix::sys::quota","Returns the union of the two sets of flags.",54,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",65,[[["saflags",3]],["saflags",3]]],[11,"bitor","nix::sys::signalfd","Returns the union of the two sets of flags.",69,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",98,[[["sockflag",3]],["sockflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",99,[[["msgflags",3]],["msgflags",3]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",106,[[["sflag",3]],["sflag",3]]],[11,"bitor","","Returns the union of the two sets of flags.",107,[[["mode",3]],["mode",3]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",109,[[["fsflags",3]],["fsflags",3]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",118,[[["inputflags",3]],["inputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",119,[[["outputflags",3]],["outputflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["controlflags",3]],["controlflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",121,[[["localflags",3]],["localflags",3]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",129,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitor","nix::sys::inotify","Returns the union of the two sets of flags.",131,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",132,[[["initflags",3]],["initflags",3]]],[11,"bitor","nix::unistd","Returns the union of the two sets of flags.",148,[[["accessflags",3]],["accessflags",3]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags…",9,[[["atflags",3]],["atflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["oflag",3]],["oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",11,[[["sealflag",3]],["sealflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",12,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",13,[[["splicefflags",3]],["splicefflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",14,[[["fallocateflags",3]],["fallocateflags",3]]],[11,"bitxor","nix::kmod","Returns the left flags, but with all the right flags…",16,[[["moduleinitflags",3]],["moduleinitflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",17,[[["deletemoduleflags",3]],["deletemoduleflags",3]]],[11,"bitxor","nix::mount","Returns the left flags, but with all the right flags…",18,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",19,[[["mntflags",3]],["mntflags",3]]],[11,"bitxor","nix::mqueue","Returns the left flags, but with all the right flags…",20,[[["mq_oflag",3]],["mq_oflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",21,[[["fdflag",3]],["fdflag",3]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags…",23,[[["interfaceflags",3]],["interfaceflags",3]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags…",25,[[["pollflags",3]],["pollflags",3]]],[11,"bitxor","nix::sched","Returns the left flags, but with all the right flags…",29,[[["cloneflags",3]],["cloneflags",3]]],[11,"bitxor","nix::sys::epoll","Returns the left flags, but with all the right flags…",39,[[["epollflags",3]],["epollflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",40,[[["epollcreateflags",3]],["epollcreateflags",3]]],[11,"bitxor","nix::sys::eventfd","Returns the left flags, but with all the right flags…",42,[[["efdflags",3]],["efdflags",3]]],[11,"bitxor","nix::sys::memfd","Returns the left flags, but with all the right flags…",43,[[["memfdcreateflag",3]],["memfdcreateflag",3]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags…",45,[[["protflags",3]],["protflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",46,[[["mapflags",3]],["mapflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",47,[[["msflags",3]],["msflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",48,[[["mlockallflags",3]],["mlockallflags",3]]],[11,"bitxor","nix::sys::ptrace","Returns the left flags, but with all the right flags…",51,[[["options",3]],["options",3]]],[11,"bitxor","nix::sys::quota","Returns the left flags, but with all the right flags…",54,[[["quotavalidflags",3]],["quotavalidflags",3]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags…",65,[[["saflags",3]],["saflags",3]]],[11,"bitxor","nix::sys::signalfd","Returns the left flags, but with all the right flags…",69,[[["sfdflags",3]],["sfdflags",3]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags…",98,[[["sockflag",3]],["sockflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",99,[[["msgflags",3]],["msgflags",3]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags…",106,[[["sflag",3]],["sflag",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",107,[[["mode",3]],["mode",3]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags…",109,[[["fsflags",3]],["fsflags",3]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags…",118,[[["inputflags",3]],["inputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",119,[[["outputflags",3]],["outputflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",120,[[["controlflags",3]],["controlflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",121,[[["localflags",3]],["localflags",3]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags…",129,[[["waitpidflag",3]],["waitpidflag",3]]],[11,"bitxor","nix::sys::inotify","Returns the left flags, but with all the right flags…",131,[[["addwatchflags",3]],["addwatchflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",132,[[["initflags",3]],["initflags",3]]],[11,"bitxor","nix::unistd","Returns the left flags, but with all the right flags…",148,[[["accessflags",3]],["accessflags",3]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",9,[[["atflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",11,[[["sealflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["fdflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["splicefflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",14,[[["fallocateflags",3]]]],[11,"bitand_assign","nix::kmod","Disables all flags disabled in the set.",16,[[["moduleinitflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",17,[[["deletemoduleflags",3]]]],[11,"bitand_assign","nix::mount","Disables all flags disabled in the set.",18,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",19,[[["mntflags",3]]]],[11,"bitand_assign","nix::mqueue","Disables all flags disabled in the set.",20,[[["mq_oflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",21,[[["fdflag",3]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",23,[[["interfaceflags",3]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",25,[[["pollflags",3]]]],[11,"bitand_assign","nix::sched","Disables all flags disabled in the set.",29,[[["cloneflags",3]]]],[11,"bitand_assign","nix::sys::epoll","Disables all flags disabled in the set.",39,[[["epollflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",40,[[["epollcreateflags",3]]]],[11,"bitand_assign","nix::sys::eventfd","Disables all flags disabled in the set.",42,[[["efdflags",3]]]],[11,"bitand_assign","nix::sys::memfd","Disables all flags disabled in the set.",43,[[["memfdcreateflag",3]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",45,[[["protflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",46,[[["mapflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",47,[[["msflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",48,[[["mlockallflags",3]]]],[11,"bitand_assign","nix::sys::ptrace","Disables all flags disabled in the set.",51,[[["options",3]]]],[11,"bitand_assign","nix::sys::quota","Disables all flags disabled in the set.",54,[[["quotavalidflags",3]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",65,[[["saflags",3]]]],[11,"bitand_assign","nix::sys::signalfd","Disables all flags disabled in the set.",69,[[["sfdflags",3]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",98,[[["sockflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",99,[[["msgflags",3]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",106,[[["sflag",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",107,[[["mode",3]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",109,[[["fsflags",3]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",118,[[["inputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",119,[[["outputflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["controlflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",121,[[["localflags",3]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",129,[[["waitpidflag",3]]]],[11,"bitand_assign","nix::sys::inotify","Disables all flags disabled in the set.",131,[[["addwatchflags",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",132,[[["initflags",3]]]],[11,"bitand_assign","nix::unistd","Disables all flags disabled in the set.",148,[[["accessflags",3]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",9,[[["atflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",11,[[["sealflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["fdflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["splicefflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",14,[[["fallocateflags",3]]]],[11,"bitor_assign","nix::kmod","Adds the set of flags.",16,[[["moduleinitflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",17,[[["deletemoduleflags",3]]]],[11,"bitor_assign","nix::mount","Adds the set of flags.",18,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",19,[[["mntflags",3]]]],[11,"bitor_assign","nix::mqueue","Adds the set of flags.",20,[[["mq_oflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",21,[[["fdflag",3]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",23,[[["interfaceflags",3]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",25,[[["pollflags",3]]]],[11,"bitor_assign","nix::sched","Adds the set of flags.",29,[[["cloneflags",3]]]],[11,"bitor_assign","nix::sys::epoll","Adds the set of flags.",39,[[["epollflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",40,[[["epollcreateflags",3]]]],[11,"bitor_assign","nix::sys::eventfd","Adds the set of flags.",42,[[["efdflags",3]]]],[11,"bitor_assign","nix::sys::memfd","Adds the set of flags.",43,[[["memfdcreateflag",3]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",45,[[["protflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",46,[[["mapflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",47,[[["msflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",48,[[["mlockallflags",3]]]],[11,"bitor_assign","nix::sys::ptrace","Adds the set of flags.",51,[[["options",3]]]],[11,"bitor_assign","nix::sys::quota","Adds the set of flags.",54,[[["quotavalidflags",3]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",65,[[["saflags",3]]]],[11,"bitor_assign","nix::sys::signalfd","Adds the set of flags.",69,[[["sfdflags",3]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",98,[[["sockflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",99,[[["msgflags",3]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",106,[[["sflag",3]]]],[11,"bitor_assign","","Adds the set of flags.",107,[[["mode",3]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",109,[[["fsflags",3]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",118,[[["inputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",119,[[["outputflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["controlflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",121,[[["localflags",3]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",129,[[["waitpidflag",3]]]],[11,"bitor_assign","nix::sys::inotify","Adds the set of flags.",131,[[["addwatchflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",132,[[["initflags",3]]]],[11,"bitor_assign","nix::unistd","Adds the set of flags.",148,[[["accessflags",3]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",9,[[["atflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",11,[[["sealflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["fdflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["splicefflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",14,[[["fallocateflags",3]]]],[11,"bitxor_assign","nix::kmod","Toggles the set of flags.",16,[[["moduleinitflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",17,[[["deletemoduleflags",3]]]],[11,"bitxor_assign","nix::mount","Toggles the set of flags.",18,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",19,[[["mntflags",3]]]],[11,"bitxor_assign","nix::mqueue","Toggles the set of flags.",20,[[["mq_oflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",21,[[["fdflag",3]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",23,[[["interfaceflags",3]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",25,[[["pollflags",3]]]],[11,"bitxor_assign","nix::sched","Toggles the set of flags.",29,[[["cloneflags",3]]]],[11,"bitxor_assign","nix::sys::epoll","Toggles the set of flags.",39,[[["epollflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",40,[[["epollcreateflags",3]]]],[11,"bitxor_assign","nix::sys::eventfd","Toggles the set of flags.",42,[[["efdflags",3]]]],[11,"bitxor_assign","nix::sys::memfd","Toggles the set of flags.",43,[[["memfdcreateflag",3]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",45,[[["protflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",46,[[["mapflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",47,[[["msflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",48,[[["mlockallflags",3]]]],[11,"bitxor_assign","nix::sys::ptrace","Toggles the set of flags.",51,[[["options",3]]]],[11,"bitxor_assign","nix::sys::quota","Toggles the set of flags.",54,[[["quotavalidflags",3]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",65,[[["saflags",3]]]],[11,"bitxor_assign","nix::sys::signalfd","Toggles the set of flags.",69,[[["sfdflags",3]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",98,[[["sockflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",99,[[["msgflags",3]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",106,[[["sflag",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",107,[[["mode",3]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",109,[[["fsflags",3]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",118,[[["inputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",119,[[["outputflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["controlflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",121,[[["localflags",3]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",129,[[["waitpidflag",3]]]],[11,"bitxor_assign","nix::sys::inotify","Toggles the set of flags.",131,[[["addwatchflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",132,[[["initflags",3]]]],[11,"bitxor_assign","nix::unistd","Toggles the set of flags.",148,[[["accessflags",3]]]],[11,"hash","nix::dir","",2,[[]]],[11,"hash","","",150,[[]]],[11,"hash","","",3,[[]]],[11,"hash","","",1,[[]]],[11,"hash","nix::fcntl","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",11,[[]]],[11,"hash","","",12,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",13,[[]]],[11,"hash","","",14,[[]]],[11,"hash","","",6,[[]]],[11,"hash","nix::ifaddrs","",15,[[]]],[11,"hash","","",151,[[]]],[11,"hash","nix::kmod","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","nix::mount","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","nix::mqueue","",20,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","nix::net::if_","",23,[[]]],[11,"hash","nix::poll","",24,[[]]],[11,"hash","","",25,[[]]],[11,"hash","nix::pty","",27,[[]]],[11,"hash","","",152,[[]]],[11,"hash","nix::sched","",29,[[]]],[11,"hash","","",30,[[]]],[11,"hash","nix::sys::aio","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",34,[[]]],[11,"hash","","",35,[[]]],[11,"hash","nix::sys::epoll","",39,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",40,[[]]],[11,"hash","","",41,[[]]],[11,"hash","nix::sys::eventfd","",42,[[]]],[11,"hash","nix::sys::memfd","",43,[[]]],[11,"hash","nix::sys::mman","",45,[[]]],[11,"hash","","",46,[[]]],[11,"hash","","",44,[[]]],[11,"hash","","",47,[[]]],[11,"hash","","",48,[[]]],[11,"hash","nix::sys::ptrace","",49,[[]]],[11,"hash","","",50,[[]]],[11,"hash","","",51,[[]]],[11,"hash","nix::sys::quota","",52,[[]]],[11,"hash","","",53,[[]]],[11,"hash","","",54,[[]]],[11,"hash","","",55,[[]]],[11,"hash","nix::sys::reboot","",56,[[]]],[11,"hash","nix::sys::select","",57,[[]]],[11,"hash","nix::sys::signal","",58,[[]]],[11,"hash","","",153,[[]]],[11,"hash","","",65,[[]]],[11,"hash","","",59,[[]]],[11,"hash","","",66,[[]]],[11,"hash","","",60,[[]]],[11,"hash","","",67,[[]]],[11,"hash","","",61,[[]]],[11,"hash","","",64,[[]]],[11,"hash","nix::sys::signalfd","",69,[[]]],[11,"hash","","",70,[[]]],[11,"hash","nix::sys::socket","",86,[[]]],[11,"hash","","",88,[[]]],[11,"hash","","",89,[[]]],[11,"hash","","",79,[[]]],[11,"hash","","",80,[[]]],[11,"hash","","",78,[[]]],[11,"hash","","",87,[[]]],[11,"hash","","",82,[[]]],[11,"hash","","",83,[[]]],[11,"hash","","",81,[[]]],[11,"hash","","",84,[[]]],[11,"hash","nix::sys::socket::sockopt","",155,[[]]],[11,"hash","","",156,[[]]],[11,"hash","","",157,[[]]],[11,"hash","","",158,[[]]],[11,"hash","","",159,[[]]],[11,"hash","","",160,[[]]],[11,"hash","","",161,[[]]],[11,"hash","","",162,[[]]],[11,"hash","","",163,[[]]],[11,"hash","","",164,[[]]],[11,"hash","","",165,[[]]],[11,"hash","","",166,[[]]],[11,"hash","","",167,[[]]],[11,"hash","","",168,[[]]],[11,"hash","","",169,[[]]],[11,"hash","","",170,[[]]],[11,"hash","","",171,[[]]],[11,"hash","","",172,[[]]],[11,"hash","","",173,[[]]],[11,"hash","","",174,[[]]],[11,"hash","","",175,[[]]],[11,"hash","","",176,[[]]],[11,"hash","","",177,[[]]],[11,"hash","","",178,[[]]],[11,"hash","","",179,[[]]],[11,"hash","","",180,[[]]],[11,"hash","","",181,[[]]],[11,"hash","","",182,[[]]],[11,"hash","","",183,[[]]],[11,"hash","","",184,[[]]],[11,"hash","","",185,[[]]],[11,"hash","","",186,[[]]],[11,"hash","nix::sys::socket","",91,[[]]],[11,"hash","","",98,[[]]],[11,"hash","","",99,[[]]],[11,"hash","","",94,[[]]],[11,"hash","","",95,[[]]],[11,"hash","nix::sys::stat","",106,[[]]],[11,"hash","","",107,[[]]],[11,"hash","nix::sys::statvfs","",109,[[]]],[11,"hash","","",110,[[]]],[11,"hash","nix::sys::sysinfo","",111,[[]]],[11,"hash","nix::sys::termios","",113,[[]]],[11,"hash","","",114,[[]]],[11,"hash","","",115,[[]]],[11,"hash","","",116,[[]]],[11,"hash","","",117,[[]]],[11,"hash","","",118,[[]]],[11,"hash","","",119,[[]]],[11,"hash","","",120,[[]]],[11,"hash","","",121,[[]]],[11,"hash","nix::sys::time","",123,[[]]],[11,"hash","","",124,[[]]],[11,"hash","nix::sys::uio","",125,[[]]],[11,"hash","","",126,[[]]],[11,"hash","nix::sys::utsname","",127,[[]]],[11,"hash","nix::sys::wait","",129,[[]]],[11,"hash","","",128,[[]]],[11,"hash","nix::sys::inotify","",131,[[]]],[11,"hash","","",132,[[]]],[11,"hash","","",190,[[]]],[11,"hash","nix::ucontext","",134,[[]]],[11,"hash","nix::unistd","",145,[[]]],[11,"hash","","",146,[[]]],[11,"hash","","",147,[[]]],[11,"hash","","",143,[[]]],[11,"hash","","",144,[[]]],[11,"hash","","",148,[[]]],[11,"from_iter","nix::fcntl","",9,[[["intoiterator",8]],["atflags",3]]],[11,"from_iter","","",10,[[["intoiterator",8]],["oflag",3]]],[11,"from_iter","","",11,[[["intoiterator",8]],["sealflag",3]]],[11,"from_iter","","",12,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","","",13,[[["intoiterator",8]],["splicefflags",3]]],[11,"from_iter","","",14,[[["intoiterator",8]],["fallocateflags",3]]],[11,"from_iter","nix::kmod","",16,[[["intoiterator",8]],["moduleinitflags",3]]],[11,"from_iter","","",17,[[["intoiterator",8]],["deletemoduleflags",3]]],[11,"from_iter","nix::mount","",18,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",19,[[["intoiterator",8]],["mntflags",3]]],[11,"from_iter","nix::mqueue","",20,[[["intoiterator",8]],["mq_oflag",3]]],[11,"from_iter","","",21,[[["intoiterator",8]],["fdflag",3]]],[11,"from_iter","nix::net::if_","",23,[[["intoiterator",8]],["interfaceflags",3]]],[11,"from_iter","nix::poll","",25,[[["intoiterator",8]],["pollflags",3]]],[11,"from_iter","nix::sched","",29,[[["intoiterator",8]],["cloneflags",3]]],[11,"from_iter","nix::sys::epoll","",39,[[["intoiterator",8]],["epollflags",3]]],[11,"from_iter","","",40,[[["intoiterator",8]],["epollcreateflags",3]]],[11,"from_iter","nix::sys::eventfd","",42,[[["intoiterator",8]],["efdflags",3]]],[11,"from_iter","nix::sys::memfd","",43,[[["intoiterator",8]],["memfdcreateflag",3]]],[11,"from_iter","nix::sys::mman","",45,[[["intoiterator",8]],["protflags",3]]],[11,"from_iter","","",46,[[["intoiterator",8]],["mapflags",3]]],[11,"from_iter","","",47,[[["intoiterator",8]],["msflags",3]]],[11,"from_iter","","",48,[[["intoiterator",8]],["mlockallflags",3]]],[11,"from_iter","nix::sys::ptrace","",51,[[["intoiterator",8]],["options",3]]],[11,"from_iter","nix::sys::quota","",54,[[["intoiterator",8]],["quotavalidflags",3]]],[11,"from_iter","nix::sys::signal","",65,[[["intoiterator",8]],["saflags",3]]],[11,"from_iter","nix::sys::signalfd","",69,[[["intoiterator",8]],["sfdflags",3]]],[11,"from_iter","nix::sys::socket","",98,[[["intoiterator",8]],["sockflag",3]]],[11,"from_iter","","",99,[[["intoiterator",8]],["msgflags",3]]],[11,"from_iter","nix::sys::stat","",106,[[["intoiterator",8]],["sflag",3]]],[11,"from_iter","","",107,[[["intoiterator",8]],["mode",3]]],[11,"from_iter","nix::sys::statvfs","",109,[[["intoiterator",8]],["fsflags",3]]],[11,"from_iter","nix::sys::termios","",118,[[["intoiterator",8]],["inputflags",3]]],[11,"from_iter","","",119,[[["intoiterator",8]],["outputflags",3]]],[11,"from_iter","","",120,[[["intoiterator",8]],["controlflags",3]]],[11,"from_iter","","",121,[[["intoiterator",8]],["localflags",3]]],[11,"from_iter","nix::sys::wait","",129,[[["intoiterator",8]],["waitpidflag",3]]],[11,"from_iter","nix::sys::inotify","",131,[[["intoiterator",8]],["addwatchflags",3]]],[11,"from_iter","","",132,[[["intoiterator",8]],["initflags",3]]],[11,"from_iter","nix::unistd","",148,[[["intoiterator",8]],["accessflags",3]]],[11,"try_from","nix::sys::signal","",58,[[["c_int",6]],[["result",6],["signal",4]]]],[11,"try_from","nix::sys::termios","",113,[[["speed_t",6]],[["baudrate",4],["result",6]]]],[11,"from_str","nix::sys::signal","",58,[[],[["result",6],["signal",4]]]],[11,"fmt","nix::fcntl","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",23,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",25,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",29,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",42,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",43,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",65,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",69,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",148,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",23,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",25,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",29,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",42,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",43,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",65,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",69,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",148,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",23,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",25,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",29,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",42,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",43,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",65,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",69,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",148,[[["formatter",3]],["result",6]]],[11,"fmt","nix::fcntl","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","nix::kmod","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mount","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","nix::mqueue","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","nix::net::if_","",23,[[["formatter",3]],["result",6]]],[11,"fmt","nix::poll","",25,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sched","",29,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::epoll","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::eventfd","",42,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::memfd","",43,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::mman","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::ptrace","",51,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::quota","",54,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signal","",65,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::signalfd","",69,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::socket","",98,[[["formatter",3]],["result",6]]],[11,"fmt","","",99,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::stat","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",107,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::statvfs","",109,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::termios","",118,[[["formatter",3]],["result",6]]],[11,"fmt","","",119,[[["formatter",3]],["result",6]]],[11,"fmt","","",120,[[["formatter",3]],["result",6]]],[11,"fmt","","",121,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::wait","",129,[[["formatter",3]],["result",6]]],[11,"fmt","nix::sys::inotify","",131,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","nix::unistd","",148,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","nix::dir","",2,[[],["rawfd",6]]],[11,"as_raw_fd","nix::pty","",152,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::signalfd","",70,[[],["rawfd",6]]],[11,"as_raw_fd","nix::sys::inotify","",133,[[],["rawfd",6]]],[11,"from_raw_fd","","",133,[[["rawfd",6]]]],[11,"into_raw_fd","nix::pty","",152,[[],["rawfd",6]]]],"p":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"PosixFadviseAdvice"],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"ModuleInitFlags"],[3,"DeleteModuleFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[3,"CloneFlags"],[3,"CpuSet"],[3,"LioCb"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[4,"Event"],[3,"Options"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[13,"SigevSignal"],[13,"SigevThreadId"],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"AlgAddr"],[3,"VsockAddr"],[3,"RecvMsg"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"SockProtocol"],[4,"ControlMessageOwned"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"FileStat"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"SFlag"],[3,"Mode"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"SysInfo"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"InotifyEvent"],[3,"AddWatchFlags"],[3,"InitFlags"],[3,"Inotify"],[3,"UContext"],[3,"User"],[3,"Group"],[4,"ForkResult"],[13,"Parent"],[4,"FchownatFlags"],[4,"Whence"],[4,"LinkatFlags"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[3,"AccessFlags"],[8,"NixPath"],[3,"Iter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"SignalIterator"],[3,"CmsgIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[3,"PassCred"],[3,"TcpCongestion"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"AlgSetAeadAuthSize"],[3,"AlgSetKey"],[3,"FsType"],[3,"WatchDescriptor"],[6,"SessionId"]]},\
"slog":{"doc":"Slog -  Structured, extensible, composable logging for Rust","i":[[3,"Logger","slog","Logging handle used to execute logging statements",null,null],[3,"Discard","","`Drain` discarding everything",null,null],[3,"Filter","","`Drain` filtering records",null,null],[12,"0","","",0,null],[12,"1","","",0,null],[3,"LevelFilter","","`Drain` filtering records by `Record` logging level",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[3,"MapError","","`Drain` mapping error returned by another `Drain`",null,null],[3,"Duplicate","","`Drain` duplicating records into two other `Drain`s",null,null],[12,"0","","",2,null],[12,"1","","",2,null],[3,"Fuse","","`Drain` panicking on error",null,null],[12,"0","","",3,null],[3,"IgnoreResult","","`Drain` ignoring result",null,null],[3,"RecordStatic","","Information that can be static in the given record thus…",null,null],[3,"Record","","One logging record",null,null],[3,"FnValue","","Explicit lazy-closure `Value`",null,null],[12,"0","","",4,null],[3,"PushFnValueSerializer","","Handle passed to `PushFnValue` closure",null,null],[3,"PushFnValue","","Lazy `Value` that writes to Serializer",null,null],[12,"0","","",5,null],[3,"SingleKV","","Single pair `Key` and `Value`",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[3,"OwnedKV","","Owned KV",null,null],[3,"BorrowedKV","","Borrowed `KV`",null,null],[3,"OwnedKVList","","Chain of `SyncMultiSerialize`-s of a `Logger` and its…",null,null],[4,"MutexDrainError","","Error returned by `Mutex<D : Drain>`",null,null],[13,"Mutex","","Error acquiring mutex",7,null],[13,"Drain","","Error returned by drain",7,null],[4,"Level","","Logging level associated with a logging `Record`",null,null],[13,"Critical","","Critical",8,null],[13,"Error","","Error",8,null],[13,"Warning","","Warning",8,null],[13,"Info","","Info",8,null],[13,"Debug","","Debug",8,null],[13,"Trace","","Trace",8,null],[4,"FilterLevel","","Logging filtering level",null,null],[13,"Off","","Log nothing",9,null],[13,"Critical","","Log critical level only",9,null],[13,"Error","","Log only error level and above",9,null],[13,"Warning","","Log only warning level and above",9,null],[13,"Info","","Log only info level and above",9,null],[13,"Debug","","Log only debug level and above",9,null],[13,"Trace","","Log everything",9,null],[4,"Error","","Serialization Error",null,null],[13,"Io","","`io::Error` (not available in ![no_std] mode)",10,null],[13,"Fmt","","`fmt::Error`",10,null],[13,"Other","","Other error",10,null],[0,"ser","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"Key","","Key type",null,null],[6,"PushFnSerializer","","Old name of `PushFnValueSerializer`",null,null],[6,"Result","","Serialization `Result`",null,null],[6,"Serialize","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"PushLazy","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"ValueSerializer","","Compatibility name to ease upgrading from `slog v1`",null,null],[6,"OwnedKeyValueList","","Compatibility name to ease upgrading from `slog v1`",null,null],[7,"LOG_LEVEL_NAMES","","Official capitalized logging (and logging filtering) level…",null,null],[7,"LOG_LEVEL_SHORT_NAMES","","Official capitalized logging (and logging filtering) short…",null,null],[8,"Drain","","Logging drain",null,null],[16,"Ok","","Type returned by this drain",11,null],[16,"Err","","Type of potential errors that can be returned by this…",11,null],[10,"log","","Handle one logging statement (`Record`)",11,[[["ownedkvlist",3],["record",3]],["result",4]]],[11,"is_enabled","","Avoid: Check if messages at the specified log level are…",11,[[["level",4]]]],[11,"is_critical_enabled","","Avoid: See `is_enabled`",11,[[]]],[11,"is_error_enabled","","Avoid: See `is_enabled`",11,[[]]],[11,"is_warning_enabled","","Avoid: See `is_enabled`",11,[[]]],[11,"is_info_enabled","","Avoid: See `is_enabled`",11,[[]]],[11,"is_debug_enabled","","Avoid: See `is_enabled`",11,[[]]],[11,"is_trace_enabled","","Avoid: See `is_enabled`",11,[[]]],[11,"map","","Pass `Drain` through a closure, eg. to wrap into another…",11,[[]]],[11,"filter","","Filter logging records passed to `Drain`",11,[[],["filter",3]]],[11,"filter_level","","Filter logging records passed to `Drain` (by level)",11,[[["level",4]],["levelfilter",3]]],[11,"map_err","","Map logging errors returned by this drain",11,[[],["maperror",3]]],[11,"ignore_res","","Ignore results returned by this drain",11,[[],["ignoreresult",3]]],[11,"fuse","","Make `Self` panic when returning any errors",11,[[],["fuse",3]]],[8,"SendSyncUnwindSafe","","`Send + Sync + UnwindSafe` bound",null,null],[8,"SendSyncUnwindSafeDrain","","`Drain + Send + Sync + UnwindSafe` bound",null,null],[8,"SendSyncRefUnwindSafeDrain","","`Drain + Send + Sync + RefUnwindSafe` bound",null,null],[8,"MapErrFn","","Function that can be used in `MapErr` drain",null,null],[8,"FilterFn","","Function that can be used in `Filter` drain",null,null],[8,"SendRefUnwindSafeDrain","","`Drain + Send + RefUnwindSafe` bound",null,null],[8,"Serializer","","Serializer",null,null],[11,"emit_usize","","Emit `usize`",12,[[["key",6]],["result",6]]],[11,"emit_isize","","Emit `isize`",12,[[["key",6]],["result",6]]],[11,"emit_bool","","Emit `bool`",12,[[["key",6]],["result",6]]],[11,"emit_char","","Emit `char`",12,[[["key",6]],["result",6]]],[11,"emit_u8","","Emit `u8`",12,[[["key",6]],["result",6]]],[11,"emit_i8","","Emit `i8`",12,[[["key",6]],["result",6]]],[11,"emit_u16","","Emit `u16`",12,[[["key",6]],["result",6]]],[11,"emit_i16","","Emit `i16`",12,[[["key",6]],["result",6]]],[11,"emit_u32","","Emit `u32`",12,[[["key",6]],["result",6]]],[11,"emit_i32","","Emit `i32`",12,[[["key",6]],["result",6]]],[11,"emit_f32","","Emit `f32`",12,[[["key",6]],["result",6]]],[11,"emit_u64","","Emit `u64`",12,[[["key",6]],["result",6]]],[11,"emit_i64","","Emit `i64`",12,[[["key",6]],["result",6]]],[11,"emit_f64","","Emit `f64`",12,[[["key",6]],["result",6]]],[11,"emit_u128","","Emit `u128`",12,[[["key",6]],["result",6]]],[11,"emit_i128","","Emit `i128`",12,[[["key",6]],["result",6]]],[11,"emit_str","","Emit `&str`",12,[[["key",6]],["result",6]]],[11,"emit_unit","","Emit `()`",12,[[["key",6]],["result",6]]],[11,"emit_none","","Emit `None`",12,[[["key",6]],["result",6]]],[10,"emit_arguments","","Emit `fmt::Arguments`",12,[[["key",6],["arguments",3]],["result",6]]],[8,"Value","","Value that can be serialized",null,null],[10,"serialize","","Serialize self into `Serializer`",13,[[["serializer",8],["record",3],["key",6]],["result",6]]],[8,"KV","","Key-value pair(s) for log events",null,null],[10,"serialize","","Serialize self into `Serializer`",14,[[["serializer",8],["record",3]],["result",6]]],[8,"SendSyncRefUnwindSafeKV","","This type is used to enforce `KV`s stored in `Logger`s are…",null,null],[11,"root","","Build a root `Logger`",15,[[["ownedkv",3]],["logger",3]]],[11,"root_typed","","Build a root `Logger` that retains `drain` type",15,[[["ownedkv",3]],["logger",3]]],[11,"new","","Build a child logger",15,[[["ownedkv",3]],["logger",3]]],[11,"log","","Log one logging `Record`",15,[[["record",3]]]],[11,"list","","Get list of key-value pairs assigned to this `Logger`",15,[[],["ownedkvlist",3]]],[11,"into_erased","","Convert to default, \\\"erased\\\" type:…",15,[[],[["arc",3],["logger",3]]]],[11,"to_erased","","Create a copy with \\\"erased\\\" type",15,[[],[["arc",3],["logger",3]]]],[11,"new","","Create `Filter` wrapping given `drain`",0,[[]]],[11,"new","","Create `LevelFilter`",1,[[["level",4]]]],[11,"new","","Create `Filter` wrapping given `drain`",16,[[]]],[11,"new","","Create `Duplicate`",2,[[]]],[11,"new","","Create `Fuse` wrapping given `drain`",3,[[]]],[11,"new","","Create `IgnoreResult` wrapping `drain`",17,[[]]],[11,"as_short_str","","Convert to `str` from `LOG_LEVEL_SHORT_NAMES`",8,[[]]],[11,"as_str","","Convert to `str` from `LOG_LEVEL_NAMES`",8,[[]]],[11,"as_usize","","Cast `Level` to ordering integer",8,[[]]],[11,"from_usize","","Get a `Level` from an `usize`",8,[[],[["option",4],["level",4]]]],[11,"as_short_str","","Convert to `str` from `LOG_LEVEL_SHORT_NAMES`",9,[[]]],[11,"as_str","","Convert to `str` from `LOG_LEVEL_NAMES`",9,[[]]],[11,"as_usize","","Convert to `usize` value",9,[[]]],[11,"from_usize","","Get a `FilterLevel` from an `usize`",9,[[],[["option",4],["filterlevel",4]]]],[11,"max","","Maximum logging level (log everything)",9,[[]]],[11,"min","","Minimum logging level (log nothing)",9,[[]]],[11,"accepts","","Check if message with given level should be logged",9,[[["level",4]]]],[11,"is_at_least","","Returns true if `self` is at least `level` logging level",8,[[]]],[11,"new","","Create a new `Record`",18,[[["arguments",3],["recordstatic",3],["borrowedkv",3]]]],[11,"msg","","Get a log record message",18,[[],["arguments",3]]],[11,"level","","Get record logging level",18,[[],["level",4]]],[11,"line","","Get line number",18,[[]]],[11,"location","","Get line number",18,[[],["recordlocation",3]]],[11,"column","","Get error column",18,[[]]],[11,"file","","Get file path",18,[[]]],[11,"tag","","Get tag",18,[[]]],[11,"module","","Get module",18,[[]]],[11,"function","","Get function (placeholder)",18,[[]]],[11,"kv","","Get key-value pairs",18,[[],["borrowedkv",3]]],[11,"serialize","","Emit a value",19,[[["value",8]],["result",6]]],[11,"emit","","Emit a value",19,[[["value",8]],["result",6]]],[14,"o","","Macro for building group of key-value pairs: `OwnedKV`",null,null],[14,"slog_o","","Macro for building group of key-value pairs (alias)",null,null],[14,"b","","Macro for building group of key-value pairs in `BorrowedKV`",null,null],[14,"slog_b","","Alias of `b`",null,null],[14,"kv","","Macro for build `KV` implementing type",null,null],[14,"slog_kv","","Alias of `kv`",null,null],[14,"record_static","","Create `RecordStatic` at the given code location",null,null],[14,"slog_record_static","","Create `RecordStatic` at the given code location (alias)",null,null],[14,"record","","Create `Record` at the given code location",null,null],[14,"slog_record","","Create `Record` at the given code location (alias)",null,null],[14,"log","","Log message a logging record",null,null],[14,"slog_log","","Log message a logging record (alias)",null,null],[14,"crit","","Log critical level record",null,null],[14,"slog_crit","","Log critical level record (alias)",null,null],[14,"error","","Log error level record",null,null],[14,"slog_error","","Log error level record",null,null],[14,"warn","","Log warning level record",null,null],[14,"slog_warn","","Log warning level record (alias)",null,null],[14,"info","","Log info level record",null,null],[14,"slog_info","","Log info level record (alias)",null,null],[14,"debug","","Log debug level record",null,null],[14,"slog_debug","","Log debug level record (alias)",null,null],[14,"trace","","Log trace level record",null,null],[14,"slog_trace","","Log trace level record (alias)",null,null],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_string","","",10,[[],["string",3]]],[11,"log","","",15,[[["ownedkvlist",3],["record",3]],["result",4]]],[11,"is_enabled","","",15,[[["level",4]]]],[11,"log","","",20,[[["ownedkvlist",3],["record",3]],[["result",4],["never",6]]]],[11,"is_enabled","","",20,[[["level",4]]]],[11,"log","","",0,[[["ownedkvlist",3],["record",3]],["result",4]]],[11,"is_enabled","","",0,[[["level",4]]]],[11,"log","","",1,[[["ownedkvlist",3],["record",3]],["result",4]]],[11,"is_enabled","","",1,[[["level",4]]]],[11,"log","","",16,[[["ownedkvlist",3],["record",3]],["result",4]]],[11,"is_enabled","","",16,[[["level",4]]]],[11,"log","","",2,[[["ownedkvlist",3],["record",3]],["result",4]]],[11,"is_enabled","","",2,[[["level",4]]]],[11,"log","","",3,[[["ownedkvlist",3],["record",3]],[["never",6],["result",4]]]],[11,"is_enabled","","",3,[[["level",4]]]],[11,"log","","",17,[[["ownedkvlist",3],["record",3]],[["result",4],["never",6]]]],[11,"is_enabled","","",17,[[["level",4]]]],[11,"serialize","","",4,[[["serializer",8],["record",3],["key",6]],["result",6]]],[11,"serialize","","",5,[[["serializer",8],["record",3],["key",6]],["result",6]]],[11,"serialize","","",6,[[["serializer",8],["record",3]],["result",6]]],[11,"serialize","","",22,[[["serializer",8],["record",3]],["result",6]]],[11,"serialize","","",23,[[["serializer",8],["record",3]],["result",6]]],[11,"serialize","","",24,[[["serializer",8],["record",3]],["result",6]]],[11,"from","","",7,[[["poisonerror",3],["mutexguard",3]],["mutexdrainerror",4]]],[11,"from","","",6,[[],["singlekv",3]]],[11,"from","","",24,[[["ownedkv",3]]]],[11,"from","","",10,[[["error",3]],["error",4]]],[11,"from","","",10,[[["error",3]],["error",4]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"eq","","",8,[[["level",4]]]],[11,"eq","","",9,[[["filterlevel",4]]]],[11,"cmp","","",8,[[["level",4]],["ordering",4]]],[11,"cmp","","",9,[[["filterlevel",4]],["ordering",4]]],[11,"partial_cmp","","",8,[[["level",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",9,[[["filterlevel",4]],[["ordering",4],["option",4]]]],[11,"drop","","",19,[[]]],[11,"from_str","","",8,[[],[["result",4],["level",4]]]],[11,"from_str","","",9,[[],[["result",4],["filterlevel",4]]]],[11,"clone","","",15,[[],["logger",3]]],[11,"clone","","",20,[[],["discard",3]]],[11,"clone","","",0,[[],["filter",3]]],[11,"clone","","",1,[[],["levelfilter",3]]],[11,"clone","","",2,[[],["duplicate",3]]],[11,"clone","","",3,[[],["fuse",3]]],[11,"clone","","",17,[[],["ignoreresult",3]]],[11,"clone","","",7,[[],["mutexdrainerror",4]]],[11,"clone","","",8,[[],["level",4]]],[11,"clone","","",9,[[],["filterlevel",4]]],[11,"clone","","",24,[[],["ownedkvlist",3]]],[11,"description","","",7,[[]]],[11,"cause","","",7,[[],[["error",8],["option",4]]]],[11,"description","","",10,[[]]],[11,"cause","","",10,[[],[["error",8],["option",4]]]]],"p":[[3,"Filter"],[3,"LevelFilter"],[3,"Duplicate"],[3,"Fuse"],[3,"FnValue"],[3,"PushFnValue"],[3,"SingleKV"],[4,"MutexDrainError"],[4,"Level"],[4,"FilterLevel"],[4,"Error"],[8,"Drain"],[8,"Serializer"],[8,"Value"],[8,"KV"],[3,"Logger"],[3,"MapError"],[3,"IgnoreResult"],[3,"Record"],[3,"PushFnValueSerializer"],[3,"Discard"],[3,"RecordStatic"],[3,"OwnedKV"],[3,"BorrowedKV"],[3,"OwnedKVList"]]},\
"smithay":{"doc":"Smithay: the Wayland compositor smithy","i":[[0,"backend","smithay","Backend (rendering/input) creation helpers",null,null],[0,"graphics","smithay::backend","Common traits for various ways to renderer on a given…",null,null],[3,"PixelFormat","smithay::backend::graphics","Describes the pixel format of a framebuffer",null,null],[12,"hardware_accelerated","","is the format hardware accelerated",0,null],[12,"color_bits","","number of bits used for colors",0,null],[12,"alpha_bits","","number of bits used for alpha channel",0,null],[12,"depth_bits","","number of bits used for depth channel",0,null],[12,"stencil_bits","","number of bits used for stencil buffer",0,null],[12,"stereoscopy","","is stereoscopy enabled",0,null],[12,"multisampling","","number of samples used for multisampling if enabled",0,null],[12,"srgb","","is srgb enabled",0,null],[4,"SwapBuffersError","","Error that can happen when swapping buffers.",null,null],[13,"AlreadySwapped","","The buffers have already been swapped.",1,null],[13,"ContextLost","","The corresponding context has been lost and needs to be…",1,null],[13,"TemporaryFailure","","A temporary condition caused to rendering to fail.",1,null],[0,"gl","","OpenGL rendering types",null,null],[3,"Gles2","smithay::backend::graphics::gl","",null,null],[12,"ActiveShaderProgram","","",2,null],[12,"ActiveTexture","","",2,null],[12,"AttachShader","","",2,null],[12,"BeginQuery","","",2,null],[12,"BeginTransformFeedback","","",2,null],[12,"BindAttribLocation","","",2,null],[12,"BindBuffer","","",2,null],[12,"BindBufferBase","","",2,null],[12,"BindBufferRange","","",2,null],[12,"BindFramebuffer","","",2,null],[12,"BindImageTexture","","",2,null],[12,"BindProgramPipeline","","",2,null],[12,"BindRenderbuffer","","",2,null],[12,"BindSampler","","",2,null],[12,"BindTexture","","",2,null],[12,"BindTransformFeedback","","",2,null],[12,"BindVertexArray","","",2,null],[12,"BindVertexBuffer","","",2,null],[12,"BlendBarrier","","",2,null],[12,"BlendColor","","",2,null],[12,"BlendEquation","","",2,null],[12,"BlendEquationSeparate","","",2,null],[12,"BlendEquationSeparatei","","",2,null],[12,"BlendEquationi","","",2,null],[12,"BlendFunc","","",2,null],[12,"BlendFuncSeparate","","",2,null],[12,"BlendFuncSeparatei","","",2,null],[12,"BlendFunci","","",2,null],[12,"BlitFramebuffer","","",2,null],[12,"BufferData","","",2,null],[12,"BufferSubData","","",2,null],[12,"CheckFramebufferStatus","","",2,null],[12,"Clear","","",2,null],[12,"ClearBufferfi","","",2,null],[12,"ClearBufferfv","","",2,null],[12,"ClearBufferiv","","",2,null],[12,"ClearBufferuiv","","",2,null],[12,"ClearColor","","",2,null],[12,"ClearDepthf","","",2,null],[12,"ClearStencil","","",2,null],[12,"ClientWaitSync","","",2,null],[12,"ColorMask","","",2,null],[12,"ColorMaski","","",2,null],[12,"CompileShader","","",2,null],[12,"CompressedTexImage2D","","",2,null],[12,"CompressedTexImage3D","","",2,null],[12,"CompressedTexSubImage2D","","",2,null],[12,"CompressedTexSubImage3D","","",2,null],[12,"CopyBufferSubData","","",2,null],[12,"CopyImageSubData","","",2,null],[12,"CopyTexImage2D","","",2,null],[12,"CopyTexSubImage2D","","",2,null],[12,"CopyTexSubImage3D","","",2,null],[12,"CreateProgram","","",2,null],[12,"CreateShader","","",2,null],[12,"CreateShaderProgramv","","",2,null],[12,"CullFace","","",2,null],[12,"DebugMessageCallback","","",2,null],[12,"DebugMessageControl","","",2,null],[12,"DebugMessageInsert","","",2,null],[12,"DeleteBuffers","","",2,null],[12,"DeleteFramebuffers","","",2,null],[12,"DeleteProgram","","",2,null],[12,"DeleteProgramPipelines","","",2,null],[12,"DeleteQueries","","",2,null],[12,"DeleteRenderbuffers","","",2,null],[12,"DeleteSamplers","","",2,null],[12,"DeleteShader","","",2,null],[12,"DeleteSync","","",2,null],[12,"DeleteTextures","","",2,null],[12,"DeleteTransformFeedbacks","","",2,null],[12,"DeleteVertexArrays","","",2,null],[12,"DepthFunc","","",2,null],[12,"DepthMask","","",2,null],[12,"DepthRangef","","",2,null],[12,"DetachShader","","",2,null],[12,"Disable","","",2,null],[12,"DisableVertexAttribArray","","",2,null],[12,"Disablei","","",2,null],[12,"DispatchCompute","","",2,null],[12,"DispatchComputeIndirect","","",2,null],[12,"DrawArrays","","",2,null],[12,"DrawArraysIndirect","","",2,null],[12,"DrawArraysInstanced","","",2,null],[12,"DrawBuffers","","",2,null],[12,"DrawElements","","",2,null],[12,"DrawElementsBaseVertex","","",2,null],[12,"DrawElementsIndirect","","",2,null],[12,"DrawElementsInstanced","","",2,null],[12,"DrawElementsInstancedBaseVertex","","",2,null],[12,"DrawRangeElements","","",2,null],[12,"DrawRangeElementsBaseVertex","","",2,null],[12,"EGLImageTargetRenderbufferStorageOES","","",2,null],[12,"EGLImageTargetTexture2DOES","","",2,null],[12,"Enable","","",2,null],[12,"EnableVertexAttribArray","","",2,null],[12,"Enablei","","",2,null],[12,"EndQuery","","",2,null],[12,"EndTransformFeedback","","",2,null],[12,"FenceSync","","",2,null],[12,"Finish","","",2,null],[12,"Flush","","",2,null],[12,"FlushMappedBufferRange","","",2,null],[12,"FramebufferParameteri","","",2,null],[12,"FramebufferRenderbuffer","","",2,null],[12,"FramebufferTexture","","",2,null],[12,"FramebufferTexture2D","","",2,null],[12,"FramebufferTextureLayer","","",2,null],[12,"FrontFace","","",2,null],[12,"GenBuffers","","",2,null],[12,"GenFramebuffers","","",2,null],[12,"GenProgramPipelines","","",2,null],[12,"GenQueries","","",2,null],[12,"GenRenderbuffers","","",2,null],[12,"GenSamplers","","",2,null],[12,"GenTextures","","",2,null],[12,"GenTransformFeedbacks","","",2,null],[12,"GenVertexArrays","","",2,null],[12,"GenerateMipmap","","",2,null],[12,"GetActiveAttrib","","",2,null],[12,"GetActiveUniform","","",2,null],[12,"GetActiveUniformBlockName","","",2,null],[12,"GetActiveUniformBlockiv","","",2,null],[12,"GetActiveUniformsiv","","",2,null],[12,"GetAttachedShaders","","",2,null],[12,"GetAttribLocation","","",2,null],[12,"GetBooleani_v","","",2,null],[12,"GetBooleanv","","",2,null],[12,"GetBufferParameteri64v","","",2,null],[12,"GetBufferParameteriv","","",2,null],[12,"GetBufferPointerv","","",2,null],[12,"GetDebugMessageLog","","",2,null],[12,"GetError","","",2,null],[12,"GetFloatv","","",2,null],[12,"GetFragDataLocation","","",2,null],[12,"GetFramebufferAttachmentParameteriv","","",2,null],[12,"GetFramebufferParameteriv","","",2,null],[12,"GetGraphicsResetStatus","","",2,null],[12,"GetInteger64i_v","","",2,null],[12,"GetInteger64v","","",2,null],[12,"GetIntegeri_v","","",2,null],[12,"GetIntegerv","","",2,null],[12,"GetInternalformativ","","",2,null],[12,"GetMultisamplefv","","",2,null],[12,"GetObjectLabel","","",2,null],[12,"GetObjectPtrLabel","","",2,null],[12,"GetPointerv","","",2,null],[12,"GetProgramBinary","","",2,null],[12,"GetProgramInfoLog","","",2,null],[12,"GetProgramInterfaceiv","","",2,null],[12,"GetProgramPipelineInfoLog","","",2,null],[12,"GetProgramPipelineiv","","",2,null],[12,"GetProgramResourceIndex","","",2,null],[12,"GetProgramResourceLocation","","",2,null],[12,"GetProgramResourceName","","",2,null],[12,"GetProgramResourceiv","","",2,null],[12,"GetProgramiv","","",2,null],[12,"GetQueryObjectuiv","","",2,null],[12,"GetQueryiv","","",2,null],[12,"GetRenderbufferParameteriv","","",2,null],[12,"GetSamplerParameterIiv","","",2,null],[12,"GetSamplerParameterIuiv","","",2,null],[12,"GetSamplerParameterfv","","",2,null],[12,"GetSamplerParameteriv","","",2,null],[12,"GetShaderInfoLog","","",2,null],[12,"GetShaderPrecisionFormat","","",2,null],[12,"GetShaderSource","","",2,null],[12,"GetShaderiv","","",2,null],[12,"GetString","","",2,null],[12,"GetStringi","","",2,null],[12,"GetSynciv","","",2,null],[12,"GetTexLevelParameterfv","","",2,null],[12,"GetTexLevelParameteriv","","",2,null],[12,"GetTexParameterIiv","","",2,null],[12,"GetTexParameterIuiv","","",2,null],[12,"GetTexParameterfv","","",2,null],[12,"GetTexParameteriv","","",2,null],[12,"GetTransformFeedbackVarying","","",2,null],[12,"GetUniformBlockIndex","","",2,null],[12,"GetUniformIndices","","",2,null],[12,"GetUniformLocation","","",2,null],[12,"GetUniformfv","","",2,null],[12,"GetUniformiv","","",2,null],[12,"GetUniformuiv","","",2,null],[12,"GetVertexAttribIiv","","",2,null],[12,"GetVertexAttribIuiv","","",2,null],[12,"GetVertexAttribPointerv","","",2,null],[12,"GetVertexAttribfv","","",2,null],[12,"GetVertexAttribiv","","",2,null],[12,"GetnUniformfv","","",2,null],[12,"GetnUniformiv","","",2,null],[12,"GetnUniformuiv","","",2,null],[12,"Hint","","",2,null],[12,"InvalidateFramebuffer","","",2,null],[12,"InvalidateSubFramebuffer","","",2,null],[12,"IsBuffer","","",2,null],[12,"IsEnabled","","",2,null],[12,"IsEnabledi","","",2,null],[12,"IsFramebuffer","","",2,null],[12,"IsProgram","","",2,null],[12,"IsProgramPipeline","","",2,null],[12,"IsQuery","","",2,null],[12,"IsRenderbuffer","","",2,null],[12,"IsSampler","","",2,null],[12,"IsShader","","",2,null],[12,"IsSync","","",2,null],[12,"IsTexture","","",2,null],[12,"IsTransformFeedback","","",2,null],[12,"IsVertexArray","","",2,null],[12,"LineWidth","","",2,null],[12,"LinkProgram","","",2,null],[12,"MapBufferRange","","",2,null],[12,"MemoryBarrier","","",2,null],[12,"MemoryBarrierByRegion","","",2,null],[12,"MinSampleShading","","",2,null],[12,"ObjectLabel","","",2,null],[12,"ObjectPtrLabel","","",2,null],[12,"PatchParameteri","","",2,null],[12,"PauseTransformFeedback","","",2,null],[12,"PixelStorei","","",2,null],[12,"PolygonOffset","","",2,null],[12,"PopDebugGroup","","",2,null],[12,"PrimitiveBoundingBox","","",2,null],[12,"ProgramBinary","","",2,null],[12,"ProgramParameteri","","",2,null],[12,"ProgramUniform1f","","",2,null],[12,"ProgramUniform1fv","","",2,null],[12,"ProgramUniform1i","","",2,null],[12,"ProgramUniform1iv","","",2,null],[12,"ProgramUniform1ui","","",2,null],[12,"ProgramUniform1uiv","","",2,null],[12,"ProgramUniform2f","","",2,null],[12,"ProgramUniform2fv","","",2,null],[12,"ProgramUniform2i","","",2,null],[12,"ProgramUniform2iv","","",2,null],[12,"ProgramUniform2ui","","",2,null],[12,"ProgramUniform2uiv","","",2,null],[12,"ProgramUniform3f","","",2,null],[12,"ProgramUniform3fv","","",2,null],[12,"ProgramUniform3i","","",2,null],[12,"ProgramUniform3iv","","",2,null],[12,"ProgramUniform3ui","","",2,null],[12,"ProgramUniform3uiv","","",2,null],[12,"ProgramUniform4f","","",2,null],[12,"ProgramUniform4fv","","",2,null],[12,"ProgramUniform4i","","",2,null],[12,"ProgramUniform4iv","","",2,null],[12,"ProgramUniform4ui","","",2,null],[12,"ProgramUniform4uiv","","",2,null],[12,"ProgramUniformMatrix2fv","","",2,null],[12,"ProgramUniformMatrix2x3fv","","",2,null],[12,"ProgramUniformMatrix2x4fv","","",2,null],[12,"ProgramUniformMatrix3fv","","",2,null],[12,"ProgramUniformMatrix3x2fv","","",2,null],[12,"ProgramUniformMatrix3x4fv","","",2,null],[12,"ProgramUniformMatrix4fv","","",2,null],[12,"ProgramUniformMatrix4x2fv","","",2,null],[12,"ProgramUniformMatrix4x3fv","","",2,null],[12,"PushDebugGroup","","",2,null],[12,"ReadBuffer","","",2,null],[12,"ReadPixels","","",2,null],[12,"ReadnPixels","","",2,null],[12,"ReleaseShaderCompiler","","",2,null],[12,"RenderbufferStorage","","",2,null],[12,"RenderbufferStorageMultisample","","",2,null],[12,"ResumeTransformFeedback","","",2,null],[12,"SampleCoverage","","",2,null],[12,"SampleMaski","","",2,null],[12,"SamplerParameterIiv","","",2,null],[12,"SamplerParameterIuiv","","",2,null],[12,"SamplerParameterf","","",2,null],[12,"SamplerParameterfv","","",2,null],[12,"SamplerParameteri","","",2,null],[12,"SamplerParameteriv","","",2,null],[12,"Scissor","","",2,null],[12,"ShaderBinary","","",2,null],[12,"ShaderSource","","",2,null],[12,"StencilFunc","","",2,null],[12,"StencilFuncSeparate","","",2,null],[12,"StencilMask","","",2,null],[12,"StencilMaskSeparate","","",2,null],[12,"StencilOp","","",2,null],[12,"StencilOpSeparate","","",2,null],[12,"TexBuffer","","",2,null],[12,"TexBufferRange","","",2,null],[12,"TexImage2D","","",2,null],[12,"TexImage3D","","",2,null],[12,"TexParameterIiv","","",2,null],[12,"TexParameterIuiv","","",2,null],[12,"TexParameterf","","",2,null],[12,"TexParameterfv","","",2,null],[12,"TexParameteri","","",2,null],[12,"TexParameteriv","","",2,null],[12,"TexStorage2D","","",2,null],[12,"TexStorage2DMultisample","","",2,null],[12,"TexStorage3D","","",2,null],[12,"TexStorage3DMultisample","","",2,null],[12,"TexSubImage2D","","",2,null],[12,"TexSubImage3D","","",2,null],[12,"TransformFeedbackVaryings","","",2,null],[12,"Uniform1f","","",2,null],[12,"Uniform1fv","","",2,null],[12,"Uniform1i","","",2,null],[12,"Uniform1iv","","",2,null],[12,"Uniform1ui","","",2,null],[12,"Uniform1uiv","","",2,null],[12,"Uniform2f","","",2,null],[12,"Uniform2fv","","",2,null],[12,"Uniform2i","","",2,null],[12,"Uniform2iv","","",2,null],[12,"Uniform2ui","","",2,null],[12,"Uniform2uiv","","",2,null],[12,"Uniform3f","","",2,null],[12,"Uniform3fv","","",2,null],[12,"Uniform3i","","",2,null],[12,"Uniform3iv","","",2,null],[12,"Uniform3ui","","",2,null],[12,"Uniform3uiv","","",2,null],[12,"Uniform4f","","",2,null],[12,"Uniform4fv","","",2,null],[12,"Uniform4i","","",2,null],[12,"Uniform4iv","","",2,null],[12,"Uniform4ui","","",2,null],[12,"Uniform4uiv","","",2,null],[12,"UniformBlockBinding","","",2,null],[12,"UniformMatrix2fv","","",2,null],[12,"UniformMatrix2x3fv","","",2,null],[12,"UniformMatrix2x4fv","","",2,null],[12,"UniformMatrix3fv","","",2,null],[12,"UniformMatrix3x2fv","","",2,null],[12,"UniformMatrix3x4fv","","",2,null],[12,"UniformMatrix4fv","","",2,null],[12,"UniformMatrix4x2fv","","",2,null],[12,"UniformMatrix4x3fv","","",2,null],[12,"UnmapBuffer","","",2,null],[12,"UseProgram","","",2,null],[12,"UseProgramStages","","",2,null],[12,"ValidateProgram","","",2,null],[12,"ValidateProgramPipeline","","",2,null],[12,"VertexAttrib1f","","",2,null],[12,"VertexAttrib1fv","","",2,null],[12,"VertexAttrib2f","","",2,null],[12,"VertexAttrib2fv","","",2,null],[12,"VertexAttrib3f","","",2,null],[12,"VertexAttrib3fv","","",2,null],[12,"VertexAttrib4f","","",2,null],[12,"VertexAttrib4fv","","",2,null],[12,"VertexAttribBinding","","",2,null],[12,"VertexAttribDivisor","","",2,null],[12,"VertexAttribFormat","","",2,null],[12,"VertexAttribI4i","","",2,null],[12,"VertexAttribI4iv","","",2,null],[12,"VertexAttribI4ui","","",2,null],[12,"VertexAttribI4uiv","","",2,null],[12,"VertexAttribIFormat","","",2,null],[12,"VertexAttribIPointer","","",2,null],[12,"VertexAttribPointer","","",2,null],[12,"VertexBindingDivisor","","",2,null],[12,"Viewport","","",2,null],[12,"WaitSync","","",2,null],[5,"load_raw_gl","","Loads a Raw GLES Interface for a given [`GLGraphicsBackend`]",null,[[],["gles2",3]]],[11,"load_with","","Load each OpenGL symbol using a custom load function. This…",2,[[],["gles2",3]]],[11,"ActiveShaderProgram","","",2,[[["c_uint",6]]]],[11,"ActiveTexture","","",2,[[["c_uint",6]]]],[11,"AttachShader","","",2,[[["c_uint",6]]]],[11,"BeginQuery","","",2,[[["c_uint",6]]]],[11,"BeginTransformFeedback","","",2,[[["c_uint",6]]]],[11,"BindAttribLocation","","",2,[[["c_uint",6]]]],[11,"BindBuffer","","",2,[[["c_uint",6]]]],[11,"BindBufferBase","","",2,[[["c_uint",6]]]],[11,"BindBufferRange","","",2,[[["c_uint",6]]]],[11,"BindFramebuffer","","",2,[[["c_uint",6]]]],[11,"BindImageTexture","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"BindProgramPipeline","","",2,[[["c_uint",6]]]],[11,"BindRenderbuffer","","",2,[[["c_uint",6]]]],[11,"BindSampler","","",2,[[["c_uint",6]]]],[11,"BindTexture","","",2,[[["c_uint",6]]]],[11,"BindTransformFeedback","","",2,[[["c_uint",6]]]],[11,"BindVertexArray","","",2,[[["c_uint",6]]]],[11,"BindVertexBuffer","","",2,[[["c_uint",6],["c_int",6]]]],[11,"BlendBarrier","","",2,[[]]],[11,"BlendColor","","",2,[[["c_float",6]]]],[11,"BlendEquation","","",2,[[["c_uint",6]]]],[11,"BlendEquationSeparate","","",2,[[["c_uint",6]]]],[11,"BlendEquationSeparatei","","",2,[[["c_uint",6]]]],[11,"BlendEquationi","","",2,[[["c_uint",6]]]],[11,"BlendFunc","","",2,[[["c_uint",6]]]],[11,"BlendFuncSeparate","","",2,[[["c_uint",6]]]],[11,"BlendFuncSeparatei","","",2,[[["c_uint",6]]]],[11,"BlendFunci","","",2,[[["c_uint",6]]]],[11,"BlitFramebuffer","","",2,[[["c_int",6],["c_uint",6]]]],[11,"BufferData","","",2,[[["c_uint",6]]]],[11,"BufferSubData","","",2,[[["c_uint",6]]]],[11,"CheckFramebufferStatus","","",2,[[["c_uint",6]],["c_uint",6]]],[11,"Clear","","",2,[[["c_uint",6]]]],[11,"ClearBufferfi","","",2,[[["c_uint",6],["c_float",6],["c_int",6]]]],[11,"ClearBufferfv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ClearBufferiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ClearBufferuiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ClearColor","","",2,[[["c_float",6]]]],[11,"ClearDepthf","","",2,[[["c_float",6]]]],[11,"ClearStencil","","",2,[[["c_int",6]]]],[11,"ClientWaitSync","","",2,[[["c_uint",6]],["c_uint",6]]],[11,"ColorMask","","",2,[[["c_uchar",6]]]],[11,"ColorMaski","","",2,[[["c_uint",6],["c_uchar",6]]]],[11,"CompileShader","","",2,[[["c_uint",6]]]],[11,"CompressedTexImage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CompressedTexImage3D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CompressedTexSubImage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CompressedTexSubImage3D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CopyBufferSubData","","",2,[[["c_uint",6]]]],[11,"CopyImageSubData","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CopyTexImage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CopyTexSubImage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CopyTexSubImage3D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"CreateProgram","","",2,[[],["c_uint",6]]],[11,"CreateShader","","",2,[[["c_uint",6]],["c_uint",6]]],[11,"CreateShaderProgramv","","",2,[[["c_uint",6],["c_int",6]],["c_uint",6]]],[11,"CullFace","","",2,[[["c_uint",6]]]],[11,"DebugMessageCallback","","",2,[[["option",4]]]],[11,"DebugMessageControl","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"DebugMessageInsert","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DeleteBuffers","","",2,[[["c_int",6]]]],[11,"DeleteFramebuffers","","",2,[[["c_int",6]]]],[11,"DeleteProgram","","",2,[[["c_uint",6]]]],[11,"DeleteProgramPipelines","","",2,[[["c_int",6]]]],[11,"DeleteQueries","","",2,[[["c_int",6]]]],[11,"DeleteRenderbuffers","","",2,[[["c_int",6]]]],[11,"DeleteSamplers","","",2,[[["c_int",6]]]],[11,"DeleteShader","","",2,[[["c_uint",6]]]],[11,"DeleteSync","","",2,[[]]],[11,"DeleteTextures","","",2,[[["c_int",6]]]],[11,"DeleteTransformFeedbacks","","",2,[[["c_int",6]]]],[11,"DeleteVertexArrays","","",2,[[["c_int",6]]]],[11,"DepthFunc","","",2,[[["c_uint",6]]]],[11,"DepthMask","","",2,[[["c_uchar",6]]]],[11,"DepthRangef","","",2,[[["c_float",6]]]],[11,"DetachShader","","",2,[[["c_uint",6]]]],[11,"Disable","","",2,[[["c_uint",6]]]],[11,"DisableVertexAttribArray","","",2,[[["c_uint",6]]]],[11,"Disablei","","",2,[[["c_uint",6]]]],[11,"DispatchCompute","","",2,[[["c_uint",6]]]],[11,"DispatchComputeIndirect","","",2,[[]]],[11,"DrawArrays","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawArraysIndirect","","",2,[[["c_uint",6]]]],[11,"DrawArraysInstanced","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawBuffers","","",2,[[["c_int",6]]]],[11,"DrawElements","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawElementsBaseVertex","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawElementsIndirect","","",2,[[["c_uint",6]]]],[11,"DrawElementsInstanced","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawElementsInstancedBaseVertex","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawRangeElements","","",2,[[["c_uint",6],["c_int",6]]]],[11,"DrawRangeElementsBaseVertex","","",2,[[["c_uint",6],["c_int",6]]]],[11,"EGLImageTargetRenderbufferStorageOES","","",2,[[["c_uint",6]]]],[11,"EGLImageTargetTexture2DOES","","",2,[[["c_uint",6]]]],[11,"Enable","","",2,[[["c_uint",6]]]],[11,"EnableVertexAttribArray","","",2,[[["c_uint",6]]]],[11,"Enablei","","",2,[[["c_uint",6]]]],[11,"EndQuery","","",2,[[["c_uint",6]]]],[11,"EndTransformFeedback","","",2,[[]]],[11,"FenceSync","","",2,[[["c_uint",6]]]],[11,"Finish","","",2,[[]]],[11,"Flush","","",2,[[]]],[11,"FlushMappedBufferRange","","",2,[[["c_uint",6]]]],[11,"FramebufferParameteri","","",2,[[["c_uint",6],["c_int",6]]]],[11,"FramebufferRenderbuffer","","",2,[[["c_uint",6]]]],[11,"FramebufferTexture","","",2,[[["c_uint",6],["c_int",6]]]],[11,"FramebufferTexture2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"FramebufferTextureLayer","","",2,[[["c_uint",6],["c_int",6]]]],[11,"FrontFace","","",2,[[["c_uint",6]]]],[11,"GenBuffers","","",2,[[["c_int",6]]]],[11,"GenFramebuffers","","",2,[[["c_int",6]]]],[11,"GenProgramPipelines","","",2,[[["c_int",6]]]],[11,"GenQueries","","",2,[[["c_int",6]]]],[11,"GenRenderbuffers","","",2,[[["c_int",6]]]],[11,"GenSamplers","","",2,[[["c_int",6]]]],[11,"GenTextures","","",2,[[["c_int",6]]]],[11,"GenTransformFeedbacks","","",2,[[["c_int",6]]]],[11,"GenVertexArrays","","",2,[[["c_int",6]]]],[11,"GenerateMipmap","","",2,[[["c_uint",6]]]],[11,"GetActiveAttrib","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetActiveUniform","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetActiveUniformBlockName","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetActiveUniformBlockiv","","",2,[[["c_uint",6]]]],[11,"GetActiveUniformsiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetAttachedShaders","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetAttribLocation","","",2,[[["c_uint",6]],["c_int",6]]],[11,"GetBooleani_v","","",2,[[["c_uint",6]]]],[11,"GetBooleanv","","",2,[[["c_uint",6]]]],[11,"GetBufferParameteri64v","","",2,[[["c_uint",6]]]],[11,"GetBufferParameteriv","","",2,[[["c_uint",6]]]],[11,"GetBufferPointerv","","",2,[[["c_uint",6]]]],[11,"GetDebugMessageLog","","",2,[[["c_uint",6],["c_int",6]],["c_uint",6]]],[11,"GetError","","",2,[[],["c_uint",6]]],[11,"GetFloatv","","",2,[[["c_uint",6]]]],[11,"GetFragDataLocation","","",2,[[["c_uint",6]],["c_int",6]]],[11,"GetFramebufferAttachmentParameteriv","","",2,[[["c_uint",6]]]],[11,"GetFramebufferParameteriv","","",2,[[["c_uint",6]]]],[11,"GetGraphicsResetStatus","","",2,[[],["c_uint",6]]],[11,"GetInteger64i_v","","",2,[[["c_uint",6]]]],[11,"GetInteger64v","","",2,[[["c_uint",6]]]],[11,"GetIntegeri_v","","",2,[[["c_uint",6]]]],[11,"GetIntegerv","","",2,[[["c_uint",6]]]],[11,"GetInternalformativ","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetMultisamplefv","","",2,[[["c_uint",6]]]],[11,"GetObjectLabel","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetObjectPtrLabel","","",2,[[["c_int",6]]]],[11,"GetPointerv","","",2,[[["c_uint",6]]]],[11,"GetProgramBinary","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetProgramInfoLog","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetProgramInterfaceiv","","",2,[[["c_uint",6]]]],[11,"GetProgramPipelineInfoLog","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetProgramPipelineiv","","",2,[[["c_uint",6]]]],[11,"GetProgramResourceIndex","","",2,[[["c_uint",6]],["c_uint",6]]],[11,"GetProgramResourceLocation","","",2,[[["c_uint",6]],["c_int",6]]],[11,"GetProgramResourceName","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetProgramResourceiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetProgramiv","","",2,[[["c_uint",6]]]],[11,"GetQueryObjectuiv","","",2,[[["c_uint",6]]]],[11,"GetQueryiv","","",2,[[["c_uint",6]]]],[11,"GetRenderbufferParameteriv","","",2,[[["c_uint",6]]]],[11,"GetSamplerParameterIiv","","",2,[[["c_uint",6]]]],[11,"GetSamplerParameterIuiv","","",2,[[["c_uint",6]]]],[11,"GetSamplerParameterfv","","",2,[[["c_uint",6]]]],[11,"GetSamplerParameteriv","","",2,[[["c_uint",6]]]],[11,"GetShaderInfoLog","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetShaderPrecisionFormat","","",2,[[["c_uint",6]]]],[11,"GetShaderSource","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetShaderiv","","",2,[[["c_uint",6]]]],[11,"GetString","","",2,[[["c_uint",6]]]],[11,"GetStringi","","",2,[[["c_uint",6]]]],[11,"GetSynciv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetTexLevelParameterfv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetTexLevelParameteriv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetTexParameterIiv","","",2,[[["c_uint",6]]]],[11,"GetTexParameterIuiv","","",2,[[["c_uint",6]]]],[11,"GetTexParameterfv","","",2,[[["c_uint",6]]]],[11,"GetTexParameteriv","","",2,[[["c_uint",6]]]],[11,"GetTransformFeedbackVarying","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetUniformBlockIndex","","",2,[[["c_uint",6]],["c_uint",6]]],[11,"GetUniformIndices","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetUniformLocation","","",2,[[["c_uint",6]],["c_int",6]]],[11,"GetUniformfv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetUniformiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetUniformuiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetVertexAttribIiv","","",2,[[["c_uint",6]]]],[11,"GetVertexAttribIuiv","","",2,[[["c_uint",6]]]],[11,"GetVertexAttribPointerv","","",2,[[["c_uint",6]]]],[11,"GetVertexAttribfv","","",2,[[["c_uint",6]]]],[11,"GetVertexAttribiv","","",2,[[["c_uint",6]]]],[11,"GetnUniformfv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetnUniformiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"GetnUniformuiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"Hint","","",2,[[["c_uint",6]]]],[11,"InvalidateFramebuffer","","",2,[[["c_uint",6],["c_int",6]]]],[11,"InvalidateSubFramebuffer","","",2,[[["c_uint",6],["c_int",6]]]],[11,"IsBuffer","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsEnabled","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsEnabledi","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsFramebuffer","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsProgram","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsProgramPipeline","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsQuery","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsRenderbuffer","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsSampler","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsShader","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsSync","","",2,[[],["c_uchar",6]]],[11,"IsTexture","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsTransformFeedback","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"IsVertexArray","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"LineWidth","","",2,[[["c_float",6]]]],[11,"LinkProgram","","",2,[[["c_uint",6]]]],[11,"MapBufferRange","","",2,[[["c_uint",6]]]],[11,"MemoryBarrier","","",2,[[["c_uint",6]]]],[11,"MemoryBarrierByRegion","","",2,[[["c_uint",6]]]],[11,"MinSampleShading","","",2,[[["c_float",6]]]],[11,"ObjectLabel","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ObjectPtrLabel","","",2,[[["c_int",6]]]],[11,"PatchParameteri","","",2,[[["c_uint",6],["c_int",6]]]],[11,"PauseTransformFeedback","","",2,[[]]],[11,"PixelStorei","","",2,[[["c_uint",6],["c_int",6]]]],[11,"PolygonOffset","","",2,[[["c_float",6]]]],[11,"PopDebugGroup","","",2,[[]]],[11,"PrimitiveBoundingBox","","",2,[[["c_float",6]]]],[11,"ProgramBinary","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramParameteri","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform1f","","",2,[[["c_float",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniform1fv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform1i","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform1iv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform1ui","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform1uiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform2f","","",2,[[["c_uint",6],["c_float",6],["c_int",6]]]],[11,"ProgramUniform2fv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform2i","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform2iv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform2ui","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform2uiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform3f","","",2,[[["c_uint",6],["c_float",6],["c_int",6]]]],[11,"ProgramUniform3fv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform3i","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform3iv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform3ui","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform3uiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform4f","","",2,[[["c_uint",6],["c_float",6],["c_int",6]]]],[11,"ProgramUniform4fv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform4i","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform4iv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform4ui","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniform4uiv","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix2fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix2x3fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix2x4fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix3fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix3x2fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix3x4fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix4fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix4x2fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"ProgramUniformMatrix4x3fv","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"PushDebugGroup","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ReadBuffer","","",2,[[["c_uint",6]]]],[11,"ReadPixels","","",2,[[["c_int",6],["c_uint",6]]]],[11,"ReadnPixels","","",2,[[["c_int",6],["c_uint",6]]]],[11,"ReleaseShaderCompiler","","",2,[[]]],[11,"RenderbufferStorage","","",2,[[["c_uint",6],["c_int",6]]]],[11,"RenderbufferStorageMultisample","","",2,[[["c_uint",6],["c_int",6]]]],[11,"ResumeTransformFeedback","","",2,[[]]],[11,"SampleCoverage","","",2,[[["c_uchar",6],["c_float",6]]]],[11,"SampleMaski","","",2,[[["c_uint",6]]]],[11,"SamplerParameterIiv","","",2,[[["c_uint",6]]]],[11,"SamplerParameterIuiv","","",2,[[["c_uint",6]]]],[11,"SamplerParameterf","","",2,[[["c_uint",6],["c_float",6]]]],[11,"SamplerParameterfv","","",2,[[["c_uint",6]]]],[11,"SamplerParameteri","","",2,[[["c_uint",6],["c_int",6]]]],[11,"SamplerParameteriv","","",2,[[["c_uint",6]]]],[11,"Scissor","","",2,[[["c_int",6]]]],[11,"ShaderBinary","","",2,[[["c_int",6],["c_uint",6]]]],[11,"ShaderSource","","",2,[[["c_uint",6],["c_int",6]]]],[11,"StencilFunc","","",2,[[["c_uint",6],["c_int",6]]]],[11,"StencilFuncSeparate","","",2,[[["c_uint",6],["c_int",6]]]],[11,"StencilMask","","",2,[[["c_uint",6]]]],[11,"StencilMaskSeparate","","",2,[[["c_uint",6]]]],[11,"StencilOp","","",2,[[["c_uint",6]]]],[11,"StencilOpSeparate","","",2,[[["c_uint",6]]]],[11,"TexBuffer","","",2,[[["c_uint",6]]]],[11,"TexBufferRange","","",2,[[["c_uint",6]]]],[11,"TexImage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TexImage3D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TexParameterIiv","","",2,[[["c_uint",6]]]],[11,"TexParameterIuiv","","",2,[[["c_uint",6]]]],[11,"TexParameterf","","",2,[[["c_uint",6],["c_float",6]]]],[11,"TexParameterfv","","",2,[[["c_uint",6]]]],[11,"TexParameteri","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TexParameteriv","","",2,[[["c_uint",6]]]],[11,"TexStorage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TexStorage2DMultisample","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"TexStorage3D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TexStorage3DMultisample","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"TexSubImage2D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TexSubImage3D","","",2,[[["c_uint",6],["c_int",6]]]],[11,"TransformFeedbackVaryings","","",2,[[["c_uint",6],["c_int",6]]]],[11,"Uniform1f","","",2,[[["c_int",6],["c_float",6]]]],[11,"Uniform1fv","","",2,[[["c_int",6]]]],[11,"Uniform1i","","",2,[[["c_int",6]]]],[11,"Uniform1iv","","",2,[[["c_int",6]]]],[11,"Uniform1ui","","",2,[[["c_int",6],["c_uint",6]]]],[11,"Uniform1uiv","","",2,[[["c_int",6]]]],[11,"Uniform2f","","",2,[[["c_int",6],["c_float",6]]]],[11,"Uniform2fv","","",2,[[["c_int",6]]]],[11,"Uniform2i","","",2,[[["c_int",6]]]],[11,"Uniform2iv","","",2,[[["c_int",6]]]],[11,"Uniform2ui","","",2,[[["c_int",6],["c_uint",6]]]],[11,"Uniform2uiv","","",2,[[["c_int",6]]]],[11,"Uniform3f","","",2,[[["c_int",6],["c_float",6]]]],[11,"Uniform3fv","","",2,[[["c_int",6]]]],[11,"Uniform3i","","",2,[[["c_int",6]]]],[11,"Uniform3iv","","",2,[[["c_int",6]]]],[11,"Uniform3ui","","",2,[[["c_int",6],["c_uint",6]]]],[11,"Uniform3uiv","","",2,[[["c_int",6]]]],[11,"Uniform4f","","",2,[[["c_int",6],["c_float",6]]]],[11,"Uniform4fv","","",2,[[["c_int",6]]]],[11,"Uniform4i","","",2,[[["c_int",6]]]],[11,"Uniform4iv","","",2,[[["c_int",6]]]],[11,"Uniform4ui","","",2,[[["c_int",6],["c_uint",6]]]],[11,"Uniform4uiv","","",2,[[["c_int",6]]]],[11,"UniformBlockBinding","","",2,[[["c_uint",6]]]],[11,"UniformMatrix2fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix2x3fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix2x4fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix3fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix3x2fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix3x4fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix4fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix4x2fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UniformMatrix4x3fv","","",2,[[["c_int",6],["c_uchar",6]]]],[11,"UnmapBuffer","","",2,[[["c_uint",6]],["c_uchar",6]]],[11,"UseProgram","","",2,[[["c_uint",6]]]],[11,"UseProgramStages","","",2,[[["c_uint",6]]]],[11,"ValidateProgram","","",2,[[["c_uint",6]]]],[11,"ValidateProgramPipeline","","",2,[[["c_uint",6]]]],[11,"VertexAttrib1f","","",2,[[["c_uint",6],["c_float",6]]]],[11,"VertexAttrib1fv","","",2,[[["c_uint",6]]]],[11,"VertexAttrib2f","","",2,[[["c_uint",6],["c_float",6]]]],[11,"VertexAttrib2fv","","",2,[[["c_uint",6]]]],[11,"VertexAttrib3f","","",2,[[["c_uint",6],["c_float",6]]]],[11,"VertexAttrib3fv","","",2,[[["c_uint",6]]]],[11,"VertexAttrib4f","","",2,[[["c_uint",6],["c_float",6]]]],[11,"VertexAttrib4fv","","",2,[[["c_uint",6]]]],[11,"VertexAttribBinding","","",2,[[["c_uint",6]]]],[11,"VertexAttribDivisor","","",2,[[["c_uint",6]]]],[11,"VertexAttribFormat","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"VertexAttribI4i","","",2,[[["c_uint",6],["c_int",6]]]],[11,"VertexAttribI4iv","","",2,[[["c_uint",6]]]],[11,"VertexAttribI4ui","","",2,[[["c_uint",6]]]],[11,"VertexAttribI4uiv","","",2,[[["c_uint",6]]]],[11,"VertexAttribIFormat","","",2,[[["c_uint",6],["c_int",6]]]],[11,"VertexAttribIPointer","","",2,[[["c_uint",6],["c_int",6]]]],[11,"VertexAttribPointer","","",2,[[["c_uchar",6],["c_uint",6],["c_int",6]]]],[11,"VertexBindingDivisor","","",2,[[["c_uint",6]]]],[11,"Viewport","","",2,[[["c_int",6]]]],[11,"WaitSync","","",2,[[["c_uint",6]]]],[8,"GLGraphicsBackend","","Trait that describes objects that have an OpenGL context…",null,null],[10,"swap_buffers","","Swaps buffers at the end of a frame.",3,[[],[["swapbufferserror",4],["result",4]]]],[10,"get_proc_address","","Returns the address of an OpenGL function.",3,[[]]],[10,"get_framebuffer_dimensions","","Returns the dimensions of the window, or screen, etc in…",3,[[]]],[10,"is_current","","Returns true if the OpenGL context is the current one in…",3,[[]]],[10,"make_current","","Makes the OpenGL context the current context in the…",3,[[],[["swapbufferserror",4],["result",4]]]],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the…",3,[[],["pixelformat",3]]],[0,"glium","smithay::backend::graphics","Glium compatibility module",null,null],[3,"GliumGraphicsBackend","smithay::backend::graphics::glium","Wrapper to expose `Glium` compatibility",null,null],[3,"Frame","","Implementation of `glium::Surface`, targeting the default…",null,null],[11,"draw","","Start drawing on the backbuffer.",4,[[],["frame",3]]],[11,"borrow","","Borrow the underlying backend.",4,[[],["ref",3]]],[11,"borrow_mut","","Borrow the underlying backend mutably.",4,[[],["refmut",3]]],[11,"finish","","Stop drawing, swap the buffers, and consume the Frame.",5,[[],[["swapbufferserror",4],["result",4]]]],[11,"set_finish","","Stop drawing, swap the buffers.",5,[[],[["swapbufferserror",4],["result",4]]]],[8,"CursorBackend","smithay::backend::graphics","Functions to render cursors on graphics backend…",null,null],[16,"CursorFormat","","Format representing the image drawn for the cursor.",6,null],[16,"Error","","Error the underlying backend throws if operations fail",6,null],[10,"set_cursor_position","","Sets the cursor position and therefore updates the drawn…",6,[[],["result",4]]],[10,"set_cursor_representation","","Set the cursor drawn on the [`CursorBackend`].",6,[[],["result",4]]],[10,"clear_cursor_representation","","Clear the current cursor image drawn on the…",6,[[],["result",4]]],[0,"input","smithay::backend","Common traits for input backends to receive input from.",null,null],[3,"Seat","smithay::backend::input","A seat describes a group of input devices and at least one…",null,null],[3,"SeatCapabilities","","Describes capabilities a [`Seat`] has.",null,null],[12,"pointer","","[`Seat`] has a pointer",7,null],[12,"keyboard","","[`Seat`] has a keyboard",7,null],[12,"touch","","[`Seat`] has a touchscreen",7,null],[3,"TouchSlot","","Slot of a different touch event.",null,null],[4,"UnusedEvent","","Used to mark events never emitted by an [`InputBackend`]…",null,null],[4,"KeyState","","State of key on a keyboard. Either pressed or released",null,null],[13,"Released","","Key is released",8,null],[13,"Pressed","","Key is pressed",8,null],[4,"MouseButton","","A particular mouse button",null,null],[13,"Left","","Left mouse button",9,null],[13,"Middle","","Middle mouse button",9,null],[13,"Right","","Right mouse button",9,null],[13,"Other","","Other mouse button with index",9,null],[4,"MouseButtonState","","State of a button on a mouse. Either pressed or released",null,null],[13,"Released","","Button is released",10,null],[13,"Pressed","","Button is pressed",10,null],[4,"Axis","","Axis when scrolling",null,null],[13,"Vertical","","Vertical axis",11,null],[13,"Horizontal","","Horizontal axis",11,null],[4,"AxisSource","","Source of an axis when scrolling",null,null],[13,"Finger","","Finger. Mostly used for trackpads.",12,null],[13,"Continuous","","Continuous scrolling device. Almost identical to `Finger`",12,null],[13,"Wheel","","Scroll wheel.",12,null],[13,"WheelTilt","","Scrolling through tilting the scroll wheel.",12,null],[4,"InputEvent","","Different events that can be generated by an input backend",null,null],[13,"NewSeat","","A new seat has been created",13,null],[13,"SeatChanged","","A seat has changed",13,null],[13,"SeatRemoved","","A seat has been removed",13,null],[13,"Keyboard","","A keyboard event occured",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",14,null],[12,"event","","The keyboard event",14,null],[13,"PointerMotion","smithay::backend::input","A relative pointer motion occured",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",15,null],[12,"event","","The pointer motion event",15,null],[13,"PointerMotionAbsolute","smithay::backend::input","An absolute pointer motion occures",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",16,null],[12,"event","","The absolute pointer motion event",16,null],[13,"PointerButton","smithay::backend::input","A pointer button was pressed or released",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",17,null],[12,"event","","The pointer button event",17,null],[13,"PointerAxis","smithay::backend::input","A pointer axis was actionned",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",18,null],[12,"event","","The pointer axis event",18,null],[13,"TouchDown","smithay::backend::input","A new touchpoint appeared",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",19,null],[12,"event","","The touch down event",19,null],[13,"TouchMotion","smithay::backend::input","A touchpoint moved",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",20,null],[12,"event","","The touch motion event",20,null],[13,"TouchUp","smithay::backend::input","A touchpoint was removed",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",21,null],[12,"event","","The touch up event",21,null],[13,"TouchCancel","smithay::backend::input","A touch sequence was cancelled",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",22,null],[12,"event","","The touch cancel event",22,null],[13,"TouchFrame","smithay::backend::input","A touch frame was emmited",13,null],[12,"seat","smithay::backend::input::InputEvent","Seat that generated the event",23,null],[12,"event","","The touch frame event",23,null],[13,"Special","smithay::backend::input","Special event specific of this backend",13,null],[8,"Event","","Trait for generic functions every input event does provide",null,null],[10,"time","","Returns an upward counting variable useful for event…",24,[[]]],[8,"KeyboardKeyEvent","","Trait for keyboard event",null,null],[10,"key_code","","Code of the pressed key. See `linux/input-event-codes.h`",25,[[]]],[10,"state","","State of the key",25,[[],["keystate",4]]],[10,"count","","Total number of keys pressed on all devices on the…",25,[[]]],[8,"PointerButtonEvent","","Common methods pointer event generated by pressed buttons…",null,null],[10,"button","","Pressed button of the event",26,[[],["mousebutton",4]]],[10,"state","","State of the button",26,[[],["mousebuttonstate",4]]],[8,"PointerAxisEvent","","Trait for pointer events generated by scrolling on an axis.",null,null],[10,"amount","","Amount of scrolling in pixels on the given [`Axis`].",27,[[["axis",4]],["option",4]]],[10,"amount_discrete","","Amount of scrolling in discrete steps on the given [`Axis`].",27,[[["axis",4]],["option",4]]],[10,"source","","Source of the scroll event.",27,[[],["axissource",4]]],[8,"PointerMotionEvent","","Trait for pointer events generated by relative device…",null,null],[11,"delta","","Delta between the last and new pointer device position…",28,[[]]],[10,"delta_x","","Delta on the x axis between the last and new pointer…",28,[[]]],[10,"delta_y","","Delta on the y axis between the last and new pointer…",28,[[]]],[8,"PointerMotionAbsoluteEvent","","Trait for pointer events generated by absolute device…",null,null],[11,"position","","Device position in it\'s original coordinate space.",29,[[]]],[10,"x","","Device x position in it\'s original coordinate space.",29,[[]]],[10,"y","","Device y position in it\'s original coordinate space.",29,[[]]],[11,"position_transformed","","Device position converted to the targets coordinate space.…",29,[[]]],[10,"x_transformed","","Device x position converted to the targets coordinate…",29,[[]]],[10,"y_transformed","","Device y position converted to the targets coordinate…",29,[[]]],[8,"TouchDownEvent","","Trait for touch events starting at a given position.",null,null],[10,"slot","","[`TouchSlot`], if the device has multi-touch capabilities",30,[[],[["option",4],["touchslot",3]]]],[11,"position","","Touch position in the device\'s native coordinate space",30,[[]]],[11,"position_transformed","","Touch position converted into the target coordinate space.…",30,[[]]],[10,"x","","Touch event\'s x-coordinate in the device\'s native…",30,[[]]],[10,"y","","Touch event\'s x-coordinate in the device\'s native…",30,[[]]],[10,"x_transformed","","Touch event\'s x position converted to the targets…",30,[[]]],[10,"y_transformed","","Touch event\'s y position converted to the targets…",30,[[]]],[8,"TouchMotionEvent","","Trait for touch events regarding movement on the screen",null,null],[10,"slot","","[`TouchSlot`], if the device has multi-touch capabilities",31,[[],[["option",4],["touchslot",3]]]],[11,"position","","Touch position in the device\'s native coordinate space",31,[[]]],[11,"position_transformed","","Touch position converted into the target coordinate space.…",31,[[]]],[10,"x","","Touch event\'s x-coordinate in the device\'s native…",31,[[]]],[10,"y","","Touch event\'s x-coordinate in the device\'s native…",31,[[]]],[10,"x_transformed","","Touch event\'s x position converted to the targets…",31,[[]]],[10,"y_transformed","","Touch event\'s y position converted to the targets…",31,[[]]],[8,"TouchUpEvent","","Trait for touch events finishing.",null,null],[10,"slot","","[`TouchSlot`], if the device has multi-touch capabilities",32,[[],[["option",4],["touchslot",3]]]],[8,"TouchCancelEvent","","Trait for touch events cancelling the chain",null,null],[10,"slot","","[`TouchSlot`], if the device has multi-touch capabilities",33,[[],[["option",4],["touchslot",3]]]],[8,"TouchFrameEvent","","Trait for touch frame events",null,null],[8,"InputBackend","","Trait that describes objects providing a source of input…",null,null],[16,"EventError","","Type representing errors that may be returned when…",34,null],[16,"KeyboardKeyEvent","","Type representing keyboard events",34,null],[16,"PointerAxisEvent","","Type representing axis events on pointer devices",34,null],[16,"PointerButtonEvent","","Type representing button events on pointer devices",34,null],[16,"PointerMotionEvent","","Type representing motion events of pointer devices",34,null],[16,"PointerMotionAbsoluteEvent","","Type representing motion events of pointer devices",34,null],[16,"TouchDownEvent","","Type representing touch events starting",34,null],[16,"TouchUpEvent","","Type representing touch events ending",34,null],[16,"TouchMotionEvent","","Type representing touch events from moving",34,null],[16,"TouchCancelEvent","","Type representing cancelling of touch events",34,null],[16,"TouchFrameEvent","","Type representing touch frame events",34,null],[16,"SpecialEvent","","Special events that are custom to this backend",34,null],[16,"InputConfig","","Backend-specific type allowing you to configure it",34,null],[10,"seats","","Get the list of currently known Seats",34,[[],[["vec",3],["seat",3]]]],[10,"input_config","","Access the input configuration interface",34,[[]]],[10,"dispatch_new_events","","Processes new events of the underlying backend and drives…",34,[[],["result",4]]],[11,"capabilities","","Get the currently capabilities of this [`Seat`]",35,[[],["seatcapabilities",3]]],[11,"name","","Get the name of this [`Seat`]",35,[[]]],[0,"drm","smithay::backend","This module provides Traits reprensentating open devices…",null,null],[5,"device_bind","smithay::backend::drm","Bind a `Device` to an `EventLoop`,",null,[[["loophandle",3],["device",8]],[["source",3],["inserterror",3],["result",4]]]],[0,"atomic","","`RawDevice` and `RawSurface` implementations using the…",null,null],[3,"AtomicDrmSurface","smithay::backend::drm::atomic","Open raw crtc utilizing atomic mode-setting",null,null],[3,"AtomicDrmDevice","","Open raw drm device utilizing atomic mode-setting",null,null],[0,"session","","Support to register an open `AtomicDrmDevice` to an open…",null,null],[3,"AtomicDrmDeviceObserver","smithay::backend::drm::atomic::session","`SessionObserver` linked to the `AtomicDrmDevice` it was…",null,null],[11,"new","smithay::backend::drm::atomic","Create a new [`AtomicDrmDevice`] from an open drm node",36,[[],[["error",4],["result",4]]]],[0,"common","smithay::backend::drm","Module for common/shared types of the various `Device` and…",null,null],[4,"Error","smithay::backend::drm::common","Errors thrown by the `LegacyDrmDevice`, `AtomicDrmDevice`…",null,null],[13,"DrmMasterFailed","","Unable to acquire DRM master",37,null],[13,"Access","","The `DrmDevice` encountered an access error",37,null],[12,"errmsg","smithay::backend::drm::common::Error","Error message associated to the access error",38,null],[12,"dev","","Device on which the error was generated",38,null],[12,"source","","Underlying device error",38,null],[13,"UnableToGetDeviceId","smithay::backend::drm::common","Unable to determine device id of drm device",37,null],[13,"DeviceInactive","","Device is currently paused",37,null],[13,"ModeNotSuitable","","Mode is not compatible with all given connectors",37,null],[13,"CrtcAlreadyInUse","","The given crtc is already in use by another backend",37,null],[13,"SurfaceWithoutConnectors","","This operation would result in a surface without connectors.",37,null],[13,"NoSuitableEncoder","","No encoder was found for a given connector on the set crtc",37,null],[12,"connector","smithay::backend::drm::common::Error","Connector",39,null],[12,"crtc","","CRTC",39,null],[13,"NoSuitablePlanes","smithay::backend::drm::common","No matching primary and cursor plane could be found for…",37,null],[12,"crtc","smithay::backend::drm::common::Error","CRTC",40,null],[12,"dev","","Device on which the error was generated",40,null],[13,"UnknownProperty","smithay::backend::drm::common","The DrmDevice is missing a required property",37,null],[12,"handle","smithay::backend::drm::common::Error","Property handle",41,null],[12,"name","","Property name",41,null],[13,"TestFailed","smithay::backend::drm::common","Atomic Test failed for new properties",37,null],[0,"fallback","","Types to make fallback device initialization easier",null,null],[4,"FallbackDevice","smithay::backend::drm::common::fallback","`Device` Wrapper to assist fallback in case initialization…",null,null],[13,"Preference","","Variant for successful initialization of the preferred…",42,null],[13,"Fallback","","Variant for the fallback device",42,null],[4,"FallbackSurface","","`Surface` Wrapper to assist fallback in case…",null,null],[13,"Preference","","Variant for successful initialization of the preferred…",43,null],[13,"Fallback","","Variant for the fallback device",43,null],[4,"EitherError","","Enum uniting two kinds of possible errors.",null,null],[13,"Either","","Either this error",44,null],[13,"Or","","Or this error",44,null],[11,"new","","Try to initialize an `AtomicDrmDevice` and fall back to a…",42,[[],[["error",4],["result",4]]]],[11,"new","","Try to initialize a `GbmDevice` or a `EglStreamDevice`…",42,[[],[["eithererror",4],["result",4]]]],[11,"new_egl","","Try to create a new [`EglDevice`] from a…",42,[[["fallbackdevice",4]],[["fallbackdevice",4],["eithererror",4],["result",4]]]],[11,"new_egl_with_defaults","","Try to create a new [`EglDevice`] from a…",42,[[["glattributes",3],["fallbackdevice",4],["pixelformatrequirements",3]],[["fallbackdevice",4],["eithererror",4],["result",4]]]],[0,"egl","smithay::backend::drm","`Device` and `Surface` implementations using egl contexts…",null,null],[3,"EglSurface","smithay::backend::drm::egl","Egl surface for rendering",null,null],[3,"EglDevice","","Representation of an egl device to create egl rendering…",null,null],[4,"Error","","Errors for the DRM/EGL module",null,null],[13,"EGL","","EGL Error",45,null],[13,"RawEGL","","EGL Error",45,null],[13,"Underlying","","Underlying backend error",45,null],[0,"session","","Support to register an `EglDevice` to an open `Session`.",null,null],[3,"EglDeviceObserver","smithay::backend::drm::egl::session","`SessionObserver` linked to the `EglDevice` it was created…",null,null],[11,"new","smithay::backend::drm::egl","Try to create a new [`EglDevice`] from an open device.",46,[[],[["result",4],["error",4]]]],[11,"new_with_defaults","","Try to create a new [`EglDevice`] from an open device with…",46,[[["glattributes",3],["pixelformatrequirements",3]],[["result",4],["error",4]]]],[0,"eglstream","smithay::backend::drm","`Device` and `Surface` implementations using the proposed…",null,null],[3,"EglStreamSurface","smithay::backend::drm::eglstream","egl stream surface for rendering",null,null],[3,"EglStreamDevice","","Representation of an open egl stream device to create egl…",null,null],[4,"Error","","Errors thrown by the `EglStreamDevice` and…",null,null],[13,"InitFailed","","`eglInitialize` returned an error",47,null],[13,"FailedToEnumerateDevices","","Failed to enumerate EGL_EXT_drm_device",47,null],[13,"DeviceIsNoEGLStreamDevice","","Device is not compatible with EGL_EXT_drm_device extension",47,null],[13,"DeviceNoOutputLayer","","Device has not suitable output layer",47,null],[13,"DeviceStreamCreationFailed","","Device was unable to create an EGLStream",47,null],[13,"Underlying","","Underlying backend  error",47,null],[13,"BufferCreationFailed","","Buffer creation failed",47,null],[13,"BufferWriteFailed","","Buffer write failed",47,null],[13,"StreamFlipFailed","","Stream flip failed",47,null],[11,"needs_recreation","","Check if underlying gbm resources need to be recreated.",48,[[]]],[0,"egl","","Egl `NativeDisplay` and `NativeSurface` support for…",null,null],[3,"EglStreamDeviceBackend","smithay::backend::drm::eglstream::egl","Egl Device backend type",null,null],[0,"session","smithay::backend::drm::eglstream","Support to register a `EglStreamDevice` to an open…",null,null],[3,"EglStreamDeviceObserver","smithay::backend::drm::eglstream::session","`SessionObserver` linked to the `EglStreamDevice` it was…",null,null],[11,"new","smithay::backend::drm::eglstream","Try to create a new [`EglStreamDevice`] from an open device.",49,[[],[["result",4],["error",4]]]],[0,"gbm","smithay::backend::drm","`Device` and `Surface` implementations using gbm buffers…",null,null],[3,"GbmSurface","smithay::backend::drm::gbm","Gbm surface for rendering",null,null],[3,"GbmDevice","","Representation of an open gbm device to create rendering…",null,null],[4,"Error","","Errors thrown by the `GbmDevice` and `GbmSurface`.",null,null],[13,"InitFailed","","Creation of GBM device failed",50,null],[13,"SurfaceCreationFailed","","Creation of GBM surface failed",50,null],[13,"BufferCreationFailed","","Creation of GBM buffer object failed",50,null],[13,"BufferWriteFailed","","Writing to GBM buffer failed",50,null],[13,"FramebufferCreationFailed","","Creation of drm framebuffer failed",50,null],[13,"FrontBufferLockFailed","","Lock of GBM surface front buffer failed",50,null],[13,"FrontBuffersExhausted","","No additional buffers are available",50,null],[13,"InvalidInternalState","","Internal state was modified",50,null],[13,"DeviceDestroyed","","The GBM device was destroyed",50,null],[13,"Underlying","","Underlying backend error",50,null],[11,"page_flip","","Flips the underlying buffers.",51,[[],["result",4]]],[11,"recreate","","Recreate underlying gbm resources.",51,[[],["result",4]]],[11,"needs_recreation","","Check if underlying gbm resources need to be recreated.",51,[[]]],[0,"egl","","Egl `NativeDisplay` and `NativeSurface` support for…",null,null],[3,"Gbm","smithay::backend::drm::gbm::egl","Egl Gbm backend type",null,null],[0,"session","smithay::backend::drm::gbm","Support to register a `GbmDevice` to an open `Session`.",null,null],[11,"new","","Create a new [`GbmDevice`] from an open drm node",52,[[],[["result",4],["error",4]]]],[0,"legacy","smithay::backend::drm","`RawDevice` and `RawSurface` implementations using the…",null,null],[3,"LegacyDrmSurface","smithay::backend::drm::legacy","Open raw crtc utilizing legacy mode-setting",null,null],[3,"LegacyDrmDevice","","Open raw drm device utilizing legacy mode-setting",null,null],[0,"session","","Support to register an open `LegacyDrmDevice` to an open…",null,null],[11,"new","","Create a new [`LegacyDrmDevice`] from an open drm node.",53,[[],[["error",4],["result",4]]]],[6,"DrmSource","smithay::backend::drm","calloop source associated with a Device",null,null],[8,"DeviceHandler","","Trait to receive events of a bound [`Device`]",null,null],[16,"Device","","The [`Device`] type this handler can handle",54,null],[10,"vblank","","A vblank blank event on the provided crtc has happend",54,[[["handle",3]]]],[10,"error","","An error happend while processing events",54,[[]]],[8,"Device","","An open drm device",null,null],[16,"Surface","","Associated [`Surface`] of this [`Device`] type",55,null],[10,"device_id","","Returns the id of this device node.",55,[[],["dev_t",6]]],[10,"set_handler","","Assigns a [`DeviceHandler`] called during event processing.",55,[[]]],[10,"clear_handler","","Clear a set `DeviceHandler`, if any",55,[[]]],[10,"create_surface","","Creates a new rendering surface.",55,[[["handle",3],["mode",3]],["result",4]]],[10,"process_events","","Processes any open events of the underlying file descriptor.",55,[[]]],[10,"resource_handles","","Attempts to acquire a copy of the [`Device`]\'s…",55,[[],[["result",4],["resourcehandles",3]]]],[10,"get_connector_info","","Retrieve the information for a connector",55,[[["handle",3]],[["info",3],["result",4],["drmerror",4]]]],[10,"get_crtc_info","","Retrieve the information for a crtc",55,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[10,"get_encoder_info","","Retrieve the information for an encoder",55,[[["handle",3]],[["info",3],["drmerror",4],["result",4]]]],[10,"get_framebuffer_info","","Retrieve the information for a framebuffer",55,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[10,"get_plane_info","","Retrieve the information for a plane",55,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[8,"RawDevice","","Marker trait for [`Device`]s able to provide [`RawSurface`]s",null,null],[16,"Surface","","Associated [`RawSurface`] of this [`RawDevice`] type",56,null],[8,"Surface","","An open crtc that can be used for rendering",null,null],[16,"Connectors","","Type repesenting a collection of `connector`s returned by…",57,null],[16,"Error","","Error type returned by methods of this trait",57,null],[10,"crtc","","Returns the underlying `crtc` of this surface",57,[[],["handle",3]]],[10,"current_connectors","","Currently used `connector`s of this `Surface`",57,[[]]],[10,"pending_connectors","","Returns the pending `connector`s used after the next…",57,[[]]],[10,"add_connector","","Tries to add a new `connector` to be used after the next…",57,[[["handle",3]],["result",4]]],[10,"remove_connector","","Tries to mark a `connector` for removal on the next commit.",57,[[["handle",3]],["result",4]]],[10,"set_connectors","","Tries to replace the current connector set with the newly…",57,[[],["result",4]]],[10,"current_mode","","Returns the currently active `Mode` of the underlying `crtc`",57,[[],["mode",3]]],[10,"pending_mode","","Returns the currently pending `Mode` to be used after the…",57,[[],["mode",3]]],[10,"use_mode","","Tries to set a new `Mode` to be used after the next commit.",57,[[["mode",3]],["result",4]]],[8,"RawSurface","","An open bare crtc without any rendering abstractions",null,null],[10,"commit_pending","","Returns true whenever any state changes are pending to be…",58,[[]]],[10,"commit","","Commit the pending state rendering a given framebuffer.",58,[[["handle",3]],["result",4]]],[10,"page_flip","","Page-flip the underlying `crtc` to a new given…",58,[[["handle",3]],["result",4]]],[8,"DevPath","","Trait representing open devices that may return a `Path`",null,null],[10,"dev_path","","Returns the path of the open device if possible",59,[[],[["pathbuf",3],["option",4]]]],[0,"egl","smithay::backend","Common traits and types for egl rendering",null,null],[3,"EglExtensionNotSupportedError","smithay::backend::egl","Error that can happen on optional EGL features",null,null],[3,"MakeCurrentError","","Error that can happen when making a context (and surface)…",null,null],[3,"EGLImages","","Images of the EGL-based [`WlBuffer`].",null,null],[12,"width","","Width in pixels",60,null],[12,"height","","Height in pixels",60,null],[12,"y_inverted","","If the y-axis is inverted or not",60,null],[12,"format","","Format of these images",60,null],[4,"Error","","EGL errors",null,null],[13,"OpenGlVersionNotSupported","","The requested OpenGL version is not supported",61,null],[13,"OpenGlesNotSupported","","The EGL implementation does not support creating OpenGL ES…",61,null],[13,"NoAvailablePixelFormat","","No available pixel format matched the criteria",61,null],[13,"NonMatchingBackend","","Backend does not match the context type",61,null],[13,"DisplayCreationError","","Display creation failed",61,null],[13,"DisplayNotSupported","","Unable to obtain a valid EGL Display",61,null],[13,"InitFailed","","`eglInitialize` returned an error",61,null],[13,"ConfigFailed","","Failed to configure the EGL context",61,null],[13,"CreationFailed","","Context creation failed as one or more requirements could…",61,null],[13,"EglExtensionNotSupported","","The required EGL extension is not supported by the…",61,null],[13,"OtherEGLDisplayAlreadyBound","","Only one EGLDisplay may be bound to a given `WlDisplay` at…",61,null],[13,"NoEGLDisplayBound","","No EGLDisplay is currently bound to this `WlDisplay`",61,null],[13,"PlaneIndexOutOfBounds","","Index of plane is out of bounds for `EGLImages`",61,null],[13,"EGLImageCreationFailed","","Failed to create `EGLImages` from the buffer",61,null],[4,"EGLError","","Raw EGL error",null,null],[13,"NotInitialized","","EGL is not initialized, or could not be initialized, for…",62,null],[13,"BadAccess","","EGL cannot access a requested resource (for example a…",62,null],[13,"BadAlloc","","EGL failed to allocate resources for the requested…",62,null],[13,"BadAttribute","","An unrecognized attribute or attribute value was passed in…",62,null],[13,"BadContext","","An EGLContext argument does not name a valid EGL rendering…",62,null],[13,"BadConfig","","An EGLConfig argument does not name a valid EGL frame…",62,null],[13,"BadCurrentSurface","","The current surface of the calling thread is a window,…",62,null],[13,"BadDisplay","","An EGLDisplay argument does not name a valid EGL display…",62,null],[13,"BadSurface","","An EGLSurface argument does not name a valid surface…",62,null],[13,"BadMatch","","Arguments are inconsistent (for example, a valid context…",62,null],[13,"BadParameter","","One or more argument values are invalid.",62,null],[13,"BadNativePixmap","","A NativePixmapType argument does not refer to a valid…",62,null],[13,"BadNativeWindow","","A NativeWindowType argument does not refer to a valid…",62,null],[13,"ResourceBusy","","The EGL operation failed due to temporary unavailability…",62,null],[13,"ContextLost","","A power management event has occurred. The application…",62,null],[13,"Unknown","","An unknown error",62,null],[4,"BufferAccessError","","Error that can occur when accessing an EGL buffer",null,null],[13,"ContextLost","","The corresponding Context is not alive anymore",63,null],[13,"NotManaged","","This buffer is not managed by the EGL buffer",63,null],[13,"EGLImageCreationFailed","","Failed to create `EGLImages` from the buffer",63,null],[13,"EglExtensionNotSupported","","The required EGL extension is not supported by the…",63,null],[4,"SurfaceCreationError","","Error that can occur when creating a surface.",null,null],[13,"NativeSurfaceCreationFailed","","Native Surface creation failed",64,null],[13,"EGLSurfaceCreationFailed","","EGL surface creation failed",64,null],[4,"SwapBuffersError","","Error that can happen when swapping buffers.",null,null],[13,"Underlying","","Error of the underlying native surface",65,null],[13,"EGLSwapBuffers","","EGL error during `eglSwapBuffers`",65,null],[13,"EGLCreateWindowSurface","","EGL error during `eglCreateWindowSurface`",65,null],[4,"TextureCreationError","","Error that might happen when binding an `EGLImage` to a GL…",null,null],[13,"PlaneIndexOutOfBounds","","The given plane index is out of bounds",66,null],[13,"ContextLost","","The OpenGL context has been lost and needs to be recreated.",66,null],[13,"GLExtensionNotSupported","","Required OpenGL Extension for texture creation is missing",66,null],[13,"TextureBindingFailed","","Failed to bind the `EGLImage` to the given texture",66,null],[4,"Format","","Texture format types",null,null],[13,"RGB","","RGB format",67,null],[13,"RGBA","","RGB + alpha channel format",67,null],[13,"External","","External format",67,null],[13,"Y_UV","","2-plane Y and UV format",67,null],[13,"Y_U_V","","3-plane Y, U and V format",67,null],[13,"Y_XUXV","","2-plane Y and XUXV format",67,null],[5,"get_proc_address","","Returns the address of an OpenGL function.",null,[[]]],[0,"context","","EGL context related structs",null,null],[3,"EGLContext","smithay::backend::egl::context","EGL context for rendering",null,null],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",null,null],[12,"version","","Describes the OpenGL API and version that are being…",68,null],[12,"profile","","OpenGL profile to use",68,null],[12,"debug","","Whether to enable the debug flag of the context.",68,null],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling…",68,null],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",null,null],[12,"hardware_accelerated","","If `true`, only hardware-accelerated formats will be…",69,null],[12,"color_bits","","Minimum number of bits for the color buffer, excluding…",69,null],[12,"float_color_buffer","","If `true`, the color buffer must be in a floating point…",69,null],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer.…",69,null],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means…",69,null],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means…",69,null],[12,"double_buffer","","If `true`, only double-buffered formats will be…",69,null],[12,"multisampling","","Contains the minimum number of samples per pixel in the…",69,null],[12,"stereoscopy","","If `true`, only stereoscopic formats will be considered.…",69,null],[4,"GlProfile","","Describes the requested OpenGL context profiles.",null,null],[13,"Compatibility","","Include all the immediate more functions and definitions.",70,null],[13,"Core","","Include all the future-compatible functions and definitions.",70,null],[11,"make_current_with_surface","","Makes the OpenGL context the current context in the…",71,[[["eglsurface",3]],[["makecurrenterror",3],["result",4]]]],[11,"make_current","","Makes the OpenGL context the current context in the…",71,[[],[["makecurrenterror",3],["result",4]]]],[11,"is_current","","Returns true if the OpenGL context is the current one in…",71,[[]]],[11,"get_config_id","","Returns the egl config for this context",71,[[],["eglconfig",6]]],[11,"get_pixel_format","","Returns the pixel format of the main framebuffer of the…",71,[[],["pixelformat",3]]],[11,"unbind","","Unbinds this context from the current thread, if set.",71,[[],[["makecurrenterror",3],["result",4]]]],[11,"create_attributes","","Append the  requirements to the given attribute list",69,[[["vec",3],["logger",3]],["result",4]]],[0,"ffi","smithay::backend::egl","",null,null],[5,"make_sure_egl_is_loaded","smithay::backend::egl::ffi","",null,[[]]],[0,"egl","","",null,null],[3,"LIB","smithay::backend::egl::ffi::egl","",null,null],[3,"FnPtr","","",null,null],[5,"BindAPI","","",null,[[["eglenum",6]],["eglboolean",6]]],[5,"BindTexImage","","",null,[[["eglsurface",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"ChooseConfig","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncKHR",null,[[["eglint",6],["egldisplay",6],["eglsync",6],["egltime",6]],["eglint",6]]],[5,"CopyBuffers","","",null,[[["eglsurface",6],["eglnativepixmaptype",6],["egldisplay",6]],["eglboolean",6]]],[5,"CreateContext","","",null,[[["eglconfig",6],["eglcontext",6],["egldisplay",6]],["eglcontext",6]]],[5,"CreateImage","","",null,[[["eglenum",6],["egldisplay",6],["eglclientbuffer",6],["eglcontext",6]],["eglimage",6]]],[5,"CreateImageKHR","","",null,[[["eglenum",6],["egldisplay",6],["eglclientbuffer",6],["eglcontext",6]],["eglimagekhr",6]]],[5,"CreatePbufferFromClientBuffer","","",null,[[["eglconfig",6],["egldisplay",6],["eglclientbuffer",6],["eglenum",6]],["eglsurface",6]]],[5,"CreatePbufferSurface","","",null,[[["eglconfig",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreatePixmapSurface","","",null,[[["eglconfig",6],["eglnativepixmaptype",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreatePlatformPixmapSurface","","",null,[[["eglconfig",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreatePlatformPixmapSurfaceEXT","","",null,[[["eglconfig",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreatePlatformWindowSurface","","",null,[[["eglconfig",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreatePlatformWindowSurfaceEXT","","",null,[[["eglconfig",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreateStreamKHR","","",null,[[["egldisplay",6]],["eglstreamkhr",6]]],[5,"CreateStreamProducerSurfaceKHR","","",null,[[["eglconfig",6],["eglstreamkhr",6],["egldisplay",6]],["eglsurface",6]]],[5,"CreateSync","","Fallbacks: CreateSync64KHR",null,[[["eglenum",6],["egldisplay",6]],["eglsync",6]]],[5,"CreateWindowSurface","","",null,[[["eglconfig",6],["eglnativewindowtype",6],["egldisplay",6]],["eglsurface",6]]],[5,"DestroyContext","","",null,[[["eglcontext",6],["egldisplay",6]],["eglboolean",6]]],[5,"DestroyImage","","Fallbacks: DestroyImageKHR",null,[[["eglimage",6],["egldisplay",6]],["eglboolean",6]]],[5,"DestroyImageKHR","","",null,[[["eglimagekhr",6],["egldisplay",6]],["eglboolean",6]]],[5,"DestroyStreamKHR","","",null,[[["eglstreamkhr",6],["egldisplay",6]],["eglboolean",6]]],[5,"DestroySurface","","",null,[[["eglsurface",6],["egldisplay",6]],["eglboolean",6]]],[5,"DestroySync","","Fallbacks: DestroySyncKHR",null,[[["eglsync",6],["egldisplay",6]],["eglboolean",6]]],[5,"GetConfigAttrib","","",null,[[["eglconfig",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"GetConfigs","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"GetCurrentContext","","",null,[[],["eglcontext",6]]],[5,"GetCurrentDisplay","","",null,[[],["egldisplay",6]]],[5,"GetCurrentSurface","","",null,[[["eglint",6]],["eglsurface",6]]],[5,"GetDisplay","","",null,[[["eglnativedisplaytype",6]],["egldisplay",6]]],[5,"GetError","","",null,[[],["eglint",6]]],[5,"GetOutputLayersEXT","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"GetOutputPortsEXT","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"GetPlatformDisplay","","",null,[[["eglenum",6]],["egldisplay",6]]],[5,"GetPlatformDisplayEXT","","",null,[[["eglenum",6]],["egldisplay",6]]],[5,"GetProcAddress","","",null,[[],["__eglmustcasttoproperfunctionpointertype",6]]],[5,"GetSyncAttrib","","",null,[[["eglsync",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"Initialize","","",null,[[["egldisplay",6]],["eglboolean",6]]],[5,"MakeCurrent","","",null,[[["eglsurface",6],["eglcontext",6],["egldisplay",6]],["eglboolean",6]]],[5,"OutputLayerAttribEXT","","",null,[[["eglint",6],["egldisplay",6],["eglattrib",6],["egloutputlayerext",6]],["eglboolean",6]]],[5,"OutputPortAttribEXT","","",null,[[["eglint",6],["egloutputportext",6],["egldisplay",6],["eglattrib",6]],["eglboolean",6]]],[5,"QueryAPI","","",null,[[],["eglenum",6]]],[5,"QueryContext","","",null,[[["eglcontext",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryDeviceAttribEXT","","",null,[[["eglint",6],["egldeviceext",6]],["eglboolean",6]]],[5,"QueryDeviceStringEXT","","",null,[[["eglint",6],["egldeviceext",6]]]],[5,"QueryDevicesEXT","","",null,[[["eglint",6]],["eglboolean",6]]],[5,"QueryDisplayAttribEXT","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryOutputLayerAttribEXT","","",null,[[["egloutputlayerext",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryOutputLayerStringEXT","","",null,[[["egloutputlayerext",6],["eglint",6],["egldisplay",6]]]],[5,"QueryOutputPortAttribEXT","","",null,[[["eglint",6],["egloutputportext",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryOutputPortStringEXT","","",null,[[["eglint",6],["egloutputportext",6],["egldisplay",6]]]],[5,"QueryStreamKHR","","",null,[[["eglstreamkhr",6],["eglenum",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryStreamTimeKHR","","",null,[[["eglstreamkhr",6],["eglenum",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryStreamu64KHR","","",null,[[["eglstreamkhr",6],["eglenum",6],["egldisplay",6]],["eglboolean",6]]],[5,"QueryString","","",null,[[["eglint",6],["egldisplay",6]]]],[5,"QuerySurface","","",null,[[["eglsurface",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"ReleaseTexImage","","",null,[[["eglsurface",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"ReleaseThread","","",null,[[],["eglboolean",6]]],[5,"StreamAttribKHR","","",null,[[["eglenum",6],["eglint",6],["egldisplay",6],["eglstreamkhr",6]],["eglboolean",6]]],[5,"StreamConsumerOutputEXT","","",null,[[["eglstreamkhr",6],["egloutputlayerext",6],["egldisplay",6]],["eglboolean",6]]],[5,"SurfaceAttrib","","",null,[[["eglint",6],["eglsurface",6],["egldisplay",6]],["eglboolean",6]]],[5,"SwapBuffers","","",null,[[["eglsurface",6],["egldisplay",6]],["eglboolean",6]]],[5,"SwapInterval","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"Terminate","","",null,[[["egldisplay",6]],["eglboolean",6]]],[5,"WaitClient","","",null,[[],["eglboolean",6]]],[5,"WaitGL","","",null,[[],["eglboolean",6]]],[5,"WaitNative","","",null,[[["eglint",6]],["eglboolean",6]]],[5,"WaitSync","","",null,[[["eglsync",6],["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"load_with","","Load each OpenGL symbol using a custom load function. This…",null,[[]]],[5,"BindWaylandDisplayWL","","",null,[[["egldisplay",6]],["eglboolean",6]]],[5,"UnbindWaylandDisplayWL","","",null,[[["egldisplay",6]],["eglboolean",6]]],[5,"QueryWaylandBufferWL","","",null,[[["eglint",6],["egldisplay",6]],["eglboolean",6]]],[5,"StreamConsumerAcquireAttribNV","","",null,[[["eglstreamkhr",6],["egldisplay",6]],["eglboolean",6]]],[0,"types","","",null,null],[3,"EGLClientPixmapHI","smithay::backend::egl::ffi::egl::types","",null,null],[4,"__eglMustCastToProperFunctionPointerType_fn","","",null,null],[6,"khronos_utime_nanoseconds_t","","",null,null],[6,"khronos_uint64_t","","",null,null],[6,"khronos_ssize_t","","",null,null],[6,"EGLNativeDisplayType","","",null,null],[6,"EGLNativePixmapType","","",null,null],[6,"EGLNativeWindowType","","",null,null],[6,"EGLint","","",null,null],[6,"NativeDisplayType","","",null,null],[6,"NativePixmapType","","",null,null],[6,"NativeWindowType","","",null,null],[6,"Bool","","",null,null],[6,"EGLBoolean","","",null,null],[6,"EGLenum","","",null,null],[6,"EGLAttribKHR","","",null,null],[6,"EGLAttrib","","",null,null],[6,"EGLConfig","","",null,null],[6,"EGLContext","","",null,null],[6,"EGLDeviceEXT","","",null,null],[6,"EGLDisplay","","",null,null],[6,"EGLSurface","","",null,null],[6,"EGLClientBuffer","","",null,null],[6,"__eglMustCastToProperFunctionPointerType","","",null,null],[6,"EGLImageKHR","","",null,null],[6,"EGLImage","","",null,null],[6,"EGLOutputLayerEXT","","",null,null],[6,"EGLOutputPortEXT","","",null,null],[6,"EGLSyncKHR","","",null,null],[6,"EGLSync","","",null,null],[6,"EGLTimeKHR","","",null,null],[6,"EGLTime","","",null,null],[6,"EGLSyncNV","","",null,null],[6,"EGLTimeNV","","",null,null],[6,"EGLuint64NV","","",null,null],[6,"EGLStreamKHR","","",null,null],[6,"EGLuint64KHR","","",null,null],[6,"EGLNativeFileDescriptorKHR","","",null,null],[6,"EGLsizeiANDROID","","",null,null],[6,"EGLSetBlobFuncANDROID","","",null,null],[6,"EGLGetBlobFuncANDROID","","",null,null],[0,"BindAPI","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::BindAPI","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"BindTexImage","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::BindTexImage","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"ChooseConfig","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::ChooseConfig","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"ClientWaitSync","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::ClientWaitSync","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CopyBuffers","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CopyBuffers","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateContext","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateContext","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateImage","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateImage","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateImageKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateImageKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePbufferFromClientBuffer","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePbufferFromClientBuffer","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePbufferSurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePbufferSurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePixmapSurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePixmapSurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePlatformPixmapSurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePlatformPixmapSurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePlatformPixmapSurfaceEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePlatformPixmapSurfaceEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePlatformWindowSurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePlatformWindowSurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreatePlatformWindowSurfaceEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreatePlatformWindowSurfaceEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateStreamKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateStreamKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateStreamProducerSurfaceKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateStreamProducerSurfaceKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateSync","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateSync","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"CreateWindowSurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::CreateWindowSurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"DestroyContext","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::DestroyContext","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"DestroyImage","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::DestroyImage","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"DestroyImageKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::DestroyImageKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"DestroyStreamKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::DestroyStreamKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"DestroySurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::DestroySurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"DestroySync","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::DestroySync","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetConfigAttrib","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetConfigAttrib","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetConfigs","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetConfigs","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetCurrentContext","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetCurrentContext","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetCurrentDisplay","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetCurrentDisplay","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetCurrentSurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetCurrentSurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetDisplay","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetDisplay","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetError","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetError","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetOutputLayersEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetOutputLayersEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetOutputPortsEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetOutputPortsEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetPlatformDisplay","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetPlatformDisplay","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetPlatformDisplayEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetPlatformDisplayEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetProcAddress","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetProcAddress","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"GetSyncAttrib","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::GetSyncAttrib","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"Initialize","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::Initialize","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"MakeCurrent","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::MakeCurrent","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"OutputLayerAttribEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::OutputLayerAttribEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"OutputPortAttribEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::OutputPortAttribEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryAPI","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryAPI","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryContext","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryContext","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryDeviceAttribEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryDeviceAttribEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryDeviceStringEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryDeviceStringEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryDevicesEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryDevicesEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryDisplayAttribEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryDisplayAttribEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryOutputLayerAttribEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryOutputLayerAttribEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryOutputLayerStringEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryOutputLayerStringEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryOutputPortAttribEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryOutputPortAttribEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryOutputPortStringEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryOutputPortStringEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryStreamKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryStreamKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryStreamTimeKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryStreamTimeKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryStreamu64KHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryStreamu64KHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryString","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryString","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QuerySurface","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QuerySurface","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"ReleaseTexImage","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::ReleaseTexImage","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"ReleaseThread","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::ReleaseThread","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"StreamAttribKHR","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::StreamAttribKHR","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"StreamConsumerOutputEXT","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::StreamConsumerOutputEXT","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"SurfaceAttrib","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::SurfaceAttrib","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"SwapBuffers","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::SwapBuffers","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"SwapInterval","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::SwapInterval","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"Terminate","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::Terminate","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"WaitClient","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::WaitClient","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"WaitGL","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::WaitGL","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"WaitNative","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::WaitNative","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"WaitSync","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::WaitSync","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"BindWaylandDisplayWL","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::BindWaylandDisplayWL","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"UnbindWaylandDisplayWL","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::UnbindWaylandDisplayWL","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"QueryWaylandBufferWL","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::QueryWaylandBufferWL","",null,[[]]],[5,"load_with","","",null,[[]]],[0,"StreamConsumerAcquireAttribNV","smithay::backend::egl::ffi::egl","",null,null],[5,"is_loaded","smithay::backend::egl::ffi::egl::StreamConsumerAcquireAttribNV","",null,[[]]],[5,"load_with","","",null,[[]]],[7,"LOAD","smithay::backend::egl::ffi::egl","",null,null],[17,"ALPHA_FORMAT","","",null,null],[17,"ALPHA_FORMAT_NONPRE","","",null,null],[17,"ALPHA_FORMAT_PRE","","",null,null],[17,"ALPHA_MASK_SIZE","","",null,null],[17,"ALPHA_SIZE","","",null,null],[17,"BACK_BUFFER","","",null,null],[17,"BAD_ACCESS","","",null,null],[17,"BAD_ALLOC","","",null,null],[17,"BAD_ATTRIBUTE","","",null,null],[17,"BAD_CONFIG","","",null,null],[17,"BAD_CONTEXT","","",null,null],[17,"BAD_CURRENT_SURFACE","","",null,null],[17,"BAD_DEVICE_EXT","","",null,null],[17,"BAD_DISPLAY","","",null,null],[17,"BAD_MATCH","","",null,null],[17,"BAD_NATIVE_PIXMAP","","",null,null],[17,"BAD_NATIVE_WINDOW","","",null,null],[17,"BAD_OUTPUT_LAYER_EXT","","",null,null],[17,"BAD_OUTPUT_PORT_EXT","","",null,null],[17,"BAD_PARAMETER","","",null,null],[17,"BAD_STATE_KHR","","",null,null],[17,"BAD_STREAM_KHR","","",null,null],[17,"BAD_SURFACE","","",null,null],[17,"BIND_TO_TEXTURE_RGB","","",null,null],[17,"BIND_TO_TEXTURE_RGBA","","",null,null],[17,"BLUE_SIZE","","",null,null],[17,"BUFFER_DESTROYED","","",null,null],[17,"BUFFER_PRESERVED","","",null,null],[17,"BUFFER_SIZE","","",null,null],[17,"CLIENT_APIS","","",null,null],[17,"CL_EVENT_HANDLE","","",null,null],[17,"COLORSPACE","","",null,null],[17,"COLORSPACE_LINEAR","","",null,null],[17,"COLORSPACE_sRGB","","",null,null],[17,"COLOR_BUFFER_TYPE","","",null,null],[17,"CONDITION_SATISFIED","","",null,null],[17,"CONFIG_CAVEAT","","",null,null],[17,"CONFIG_ID","","",null,null],[17,"CONFORMANT","","",null,null],[17,"CONSUMER_FRAME_KHR","","",null,null],[17,"CONSUMER_LATENCY_USEC_KHR","","",null,null],[17,"CONTEXT_CLIENT_TYPE","","",null,null],[17,"CONTEXT_CLIENT_VERSION","","",null,null],[17,"CONTEXT_FLAGS_KHR","","",null,null],[17,"CONTEXT_LOST","","",null,null],[17,"CONTEXT_MAJOR_VERSION","","",null,null],[17,"CONTEXT_MAJOR_VERSION_KHR","","",null,null],[17,"CONTEXT_MINOR_VERSION","","",null,null],[17,"CONTEXT_MINOR_VERSION_KHR","","",null,null],[17,"CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT","","",null,null],[17,"CONTEXT_OPENGL_COMPATIBILITY_PROFILE_BIT_KHR","","",null,null],[17,"CONTEXT_OPENGL_CORE_PROFILE_BIT","","",null,null],[17,"CONTEXT_OPENGL_CORE_PROFILE_BIT_KHR","","",null,null],[17,"CONTEXT_OPENGL_DEBUG","","",null,null],[17,"CONTEXT_OPENGL_DEBUG_BIT_KHR","","",null,null],[17,"CONTEXT_OPENGL_FORWARD_COMPATIBLE","","",null,null],[17,"CONTEXT_OPENGL_FORWARD_COMPATIBLE_BIT_KHR","","",null,null],[17,"CONTEXT_OPENGL_NO_ERROR_KHR","","",null,null],[17,"CONTEXT_OPENGL_PROFILE_MASK","","",null,null],[17,"CONTEXT_OPENGL_PROFILE_MASK_KHR","","",null,null],[17,"CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY","","",null,null],[17,"CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_EXT","","",null,null],[17,"CONTEXT_OPENGL_RESET_NOTIFICATION_STRATEGY_KHR","","",null,null],[17,"CONTEXT_OPENGL_ROBUST_ACCESS","","",null,null],[17,"CONTEXT_OPENGL_ROBUST_ACCESS_BIT_KHR","","",null,null],[17,"CONTEXT_OPENGL_ROBUST_ACCESS_EXT","","",null,null],[17,"CORE_NATIVE_ENGINE","","",null,null],[17,"DEFAULT_DISPLAY","","",null,null],[17,"DEPTH_SIZE","","",null,null],[17,"DEVICE_EXT","","",null,null],[17,"DISPLAY_SCALING","","",null,null],[17,"DONT_CARE","","",null,null],[17,"DRAW","","",null,null],[17,"DRM_CONNECTOR_EXT","","",null,null],[17,"DRM_CRTC_EXT","","",null,null],[17,"DRM_DEVICE_FILE_EXT","","",null,null],[17,"DRM_MASTER_FD_EXT","","",null,null],[17,"DRM_PLANE_EXT","","",null,null],[17,"EXTENSIONS","","",null,null],[17,"FALSE","","",null,null],[17,"FOREVER","","",null,null],[17,"GL_COLORSPACE","","",null,null],[17,"GL_COLORSPACE_LINEAR","","",null,null],[17,"GL_COLORSPACE_SRGB","","",null,null],[17,"GL_RENDERBUFFER","","",null,null],[17,"GL_TEXTURE_2D","","",null,null],[17,"GL_TEXTURE_3D","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_NEGATIVE_X","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_NEGATIVE_Y","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_NEGATIVE_Z","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_POSITIVE_X","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_POSITIVE_Y","","",null,null],[17,"GL_TEXTURE_CUBE_MAP_POSITIVE_Z","","",null,null],[17,"GL_TEXTURE_LEVEL","","",null,null],[17,"GL_TEXTURE_ZOFFSET","","",null,null],[17,"GREEN_SIZE","","",null,null],[17,"HEIGHT","","",null,null],[17,"HORIZONTAL_RESOLUTION","","",null,null],[17,"IMAGE_PRESERVED","","",null,null],[17,"IMAGE_PRESERVED_KHR","","",null,null],[17,"LARGEST_PBUFFER","","",null,null],[17,"LEVEL","","",null,null],[17,"LOSE_CONTEXT_ON_RESET","","",null,null],[17,"LOSE_CONTEXT_ON_RESET_EXT","","",null,null],[17,"LOSE_CONTEXT_ON_RESET_KHR","","",null,null],[17,"LUMINANCE_BUFFER","","",null,null],[17,"LUMINANCE_SIZE","","",null,null],[17,"MATCH_NATIVE_PIXMAP","","",null,null],[17,"MAX_PBUFFER_HEIGHT","","",null,null],[17,"MAX_PBUFFER_PIXELS","","",null,null],[17,"MAX_PBUFFER_WIDTH","","",null,null],[17,"MAX_SWAP_INTERVAL","","",null,null],[17,"MIN_SWAP_INTERVAL","","",null,null],[17,"MIPMAP_LEVEL","","",null,null],[17,"MIPMAP_TEXTURE","","",null,null],[17,"MULTISAMPLE_RESOLVE","","",null,null],[17,"MULTISAMPLE_RESOLVE_BOX","","",null,null],[17,"MULTISAMPLE_RESOLVE_BOX_BIT","","",null,null],[17,"MULTISAMPLE_RESOLVE_DEFAULT","","",null,null],[17,"NATIVE_RENDERABLE","","",null,null],[17,"NATIVE_VISUAL_ID","","",null,null],[17,"NATIVE_VISUAL_TYPE","","",null,null],[17,"NONE","","",null,null],[17,"NON_CONFORMANT_CONFIG","","",null,null],[17,"NOT_INITIALIZED","","",null,null],[17,"NO_CONTEXT","","",null,null],[17,"NO_DEVICE_EXT","","",null,null],[17,"NO_DISPLAY","","",null,null],[17,"NO_IMAGE","","",null,null],[17,"NO_IMAGE_KHR","","",null,null],[17,"NO_OUTPUT_LAYER_EXT","","",null,null],[17,"NO_OUTPUT_PORT_EXT","","",null,null],[17,"NO_RESET_NOTIFICATION","","",null,null],[17,"NO_RESET_NOTIFICATION_EXT","","",null,null],[17,"NO_RESET_NOTIFICATION_KHR","","",null,null],[17,"NO_STREAM_KHR","","",null,null],[17,"NO_SURFACE","","",null,null],[17,"NO_SYNC","","",null,null],[17,"NO_TEXTURE","","",null,null],[17,"OPENGL_API","","",null,null],[17,"OPENGL_BIT","","",null,null],[17,"OPENGL_ES2_BIT","","",null,null],[17,"OPENGL_ES3_BIT","","",null,null],[17,"OPENGL_ES3_BIT_KHR","","",null,null],[17,"OPENGL_ES_API","","",null,null],[17,"OPENGL_ES_BIT","","",null,null],[17,"OPENVG_API","","",null,null],[17,"OPENVG_BIT","","",null,null],[17,"OPENVG_IMAGE","","",null,null],[17,"PBUFFER_BIT","","",null,null],[17,"PIXEL_ASPECT_RATIO","","",null,null],[17,"PIXMAP_BIT","","",null,null],[17,"PLATFORM_ANDROID_KHR","","",null,null],[17,"PLATFORM_DEVICE_EXT","","",null,null],[17,"PLATFORM_GBM_KHR","","",null,null],[17,"PLATFORM_GBM_MESA","","",null,null],[17,"PLATFORM_WAYLAND_EXT","","",null,null],[17,"PLATFORM_WAYLAND_KHR","","",null,null],[17,"PLATFORM_X11_EXT","","",null,null],[17,"PLATFORM_X11_KHR","","",null,null],[17,"PLATFORM_X11_SCREEN_EXT","","",null,null],[17,"PLATFORM_X11_SCREEN_KHR","","",null,null],[17,"PRODUCER_FRAME_KHR","","",null,null],[17,"READ","","",null,null],[17,"RED_SIZE","","",null,null],[17,"RENDERABLE_TYPE","","",null,null],[17,"RENDER_BUFFER","","",null,null],[17,"RGB_BUFFER","","",null,null],[17,"SAMPLES","","",null,null],[17,"SAMPLE_BUFFERS","","",null,null],[17,"SIGNALED","","",null,null],[17,"SINGLE_BUFFER","","",null,null],[17,"SLOW_CONFIG","","",null,null],[17,"STENCIL_SIZE","","",null,null],[17,"STREAM_BIT_KHR","","",null,null],[17,"STREAM_FIFO_LENGTH_KHR","","",null,null],[17,"STREAM_STATE_CONNECTING_KHR","","",null,null],[17,"STREAM_STATE_CREATED_KHR","","",null,null],[17,"STREAM_STATE_DISCONNECTED_KHR","","",null,null],[17,"STREAM_STATE_EMPTY_KHR","","",null,null],[17,"STREAM_STATE_KHR","","",null,null],[17,"STREAM_STATE_NEW_FRAME_AVAILABLE_KHR","","",null,null],[17,"STREAM_STATE_OLD_FRAME_AVAILABLE_KHR","","",null,null],[17,"STREAM_TIME_CONSUMER_KHR","","",null,null],[17,"STREAM_TIME_NOW_KHR","","",null,null],[17,"STREAM_TIME_PRODUCER_KHR","","",null,null],[17,"SUCCESS","","",null,null],[17,"SURFACE_TYPE","","",null,null],[17,"SWAP_BEHAVIOR","","",null,null],[17,"SWAP_BEHAVIOR_PRESERVED_BIT","","",null,null],[17,"SWAP_INTERVAL_EXT","","",null,null],[17,"SYNC_CL_EVENT","","",null,null],[17,"SYNC_CL_EVENT_COMPLETE","","",null,null],[17,"SYNC_CONDITION","","",null,null],[17,"SYNC_FENCE","","",null,null],[17,"SYNC_FLUSH_COMMANDS_BIT","","",null,null],[17,"SYNC_PRIOR_COMMANDS_COMPLETE","","",null,null],[17,"SYNC_STATUS","","",null,null],[17,"SYNC_TYPE","","",null,null],[17,"TEXTURE_2D","","",null,null],[17,"TEXTURE_FORMAT","","",null,null],[17,"TEXTURE_RGB","","",null,null],[17,"TEXTURE_RGBA","","",null,null],[17,"TEXTURE_TARGET","","",null,null],[17,"TIMEOUT_EXPIRED","","",null,null],[17,"TRANSPARENT_BLUE_VALUE","","",null,null],[17,"TRANSPARENT_GREEN_VALUE","","",null,null],[17,"TRANSPARENT_RED_VALUE","","",null,null],[17,"TRANSPARENT_RGB","","",null,null],[17,"TRANSPARENT_TYPE","","",null,null],[17,"TRUE","","",null,null],[17,"UNKNOWN","","",null,null],[17,"UNSIGNALED","","",null,null],[17,"VENDOR","","",null,null],[17,"VERSION","","",null,null],[17,"VERTICAL_RESOLUTION","","",null,null],[17,"VG_ALPHA_FORMAT","","",null,null],[17,"VG_ALPHA_FORMAT_NONPRE","","",null,null],[17,"VG_ALPHA_FORMAT_PRE","","",null,null],[17,"VG_ALPHA_FORMAT_PRE_BIT","","",null,null],[17,"VG_COLORSPACE","","",null,null],[17,"VG_COLORSPACE_LINEAR","","",null,null],[17,"VG_COLORSPACE_LINEAR_BIT","","",null,null],[17,"VG_COLORSPACE_sRGB","","",null,null],[17,"WIDTH","","",null,null],[17,"WINDOW_BIT","","",null,null],[17,"WAYLAND_BUFFER_WL","","",null,null],[17,"WAYLAND_PLANE_WL","","",null,null],[17,"TEXTURE_Y_U_V_WL","","",null,null],[17,"TEXTURE_Y_UV_WL","","",null,null],[17,"TEXTURE_Y_XUXV_WL","","",null,null],[17,"TEXTURE_EXTERNAL_WL","","",null,null],[17,"EGL_TEXTURE_FORMAT","","",null,null],[17,"WAYLAND_Y_INVERTED_WL","","",null,null],[17,"CONSUMER_AUTO_ACQUIRE_EXT","","nVidia support needs some implemented but only proposed…",null,null],[17,"DRM_FLIP_EVENT_DATA_NV","","",null,null],[17,"CONSUMER_ACQUIRE_TIMEOUT_USEC_KHR","","",null,null],[17,"RESOURCE_BUSY_EXT","","",null,null],[11,"new","","Creates a `FnPtr` from a load attempt.",72,[[],["fnptr",3]]],[6,"khronos_utime_nanoseconds_t","smithay::backend::egl::ffi","",null,null],[6,"khronos_uint64_t","","",null,null],[6,"khronos_ssize_t","","",null,null],[6,"EGLint","","",null,null],[6,"EGLNativeDisplayType","","",null,null],[6,"EGLNativePixmapType","","",null,null],[6,"EGLNativeWindowType","","",null,null],[6,"NativeDisplayType","","",null,null],[6,"NativePixmapType","","",null,null],[6,"NativeWindowType","","",null,null],[0,"display","smithay::backend::egl","Type safe native types for safe egl initialisation",null,null],[3,"EGLDisplayHandle","smithay::backend::egl::display","Wrapper around `ffi::EGLDisplay` to ensure display is only…",null,null],[12,"handle","","ffi EGLDisplay ptr",73,null],[3,"EGLDisplay","","[`EGLDisplay`] represents an initialised EGL environment",null,null],[3,"EGLBufferReader","","Type to receive [`EGLImages`] for EGL-based [`WlBuffer`]s.",null,null],[11,"new","","Create a new [`EGLDisplay`] from a given `NativeDisplay`",74,[[],[["error",4],["egldisplay",3],["result",4]]]],[11,"choose_config","","Finds a compatible [`EGLConfig`] for a given set of…",74,[[["glattributes",3],["pixelformatrequirements",3]],[["result",4],["error",4]]]],[11,"create_context","","Create a new `EGLContext`",74,[[["glattributes",3],["pixelformatrequirements",3]],[["error",4],["result",4],["eglcontext",3]]]],[11,"create_surface","","Creates a surface for rendering",74,[[["pixelformat",3],["option",4],["eglconfig",6]],[["surfacecreationerror",4],["result",4],["eglsurface",3]]]],[11,"get_egl_version","","Returns the runtime egl version of this display",74,[[]]],[11,"get_extensions","","Returns the supported extensions of this display",74,[[],[["vec",3],["string",3]]]],[11,"borrow","","Borrow the underlying native display.",74,[[],["ref",3]]],[11,"borrow_mut","","Borrow the underlying native display mutably.",74,[[],["refmut",3]]],[11,"egl_buffer_contents","","Try to receive [`EGLImages`] from a given [`WlBuffer`].",75,[[["wlbuffer",3]],[["result",4],["eglimages",3],["bufferaccesserror",4]]]],[11,"egl_buffer_dimensions","","Try to receive the dimensions of a given [`WlBuffer`].",75,[[["wlbuffer",3]],["option",4]]],[0,"native","smithay::backend::egl","Type safe native types for safe context/surface creation",null,null],[3,"XlibWindow","smithay::backend::egl::native","Typed Xlib window for the `X11` backend",null,null],[4,"Wayland","","Wayland backend type",null,null],[4,"X11","","X11 backend type",null,null],[8,"Backend","","Trait for typed backend variants (X11/Wayland/GBM)",null,null],[16,"Surface","","Surface type created by this backend",76,null],[16,"Error","","Error type thrown by the surface creation in case of…",76,null],[10,"get_display","","Return an `EGLDisplay` based on this backend",76,[[["nativedisplaytype",6],["fn",8],["logger",3]],[["eglerror",4],["result",4],["egldisplay",6]]]],[8,"NativeDisplay","","Trait for types returning Surfaces which can be used to…",null,null],[16,"Arguments","","Arguments used to surface creation.",77,null],[10,"is_backend","","Because one type might implement multiple [`Backend`]s…",77,[[]]],[10,"ptr","","Return a raw pointer EGL will accept for context creation.",77,[[],[["result",4],["nativedisplaytype",6],["error",4]]]],[11,"attributes","","Return attributes that might be used by `B::get_display`",77,[[],[["vec",3],["eglint",6]]]],[11,"surface_type","","Type of surfaces created",77,[[],["eglint",6]]],[10,"create_surface","","Create a surface",77,[[],["result",4]]],[8,"NativeSurface","","Trait for types returning valid surface pointers for…",null,null],[16,"Error","","Error type thrown by the surface creation in case of…",78,null],[10,"create","","Create an EGLSurface from the internal native type.",78,[[["arc",3],["eglconfig",6]],[["surfacecreationerror",4],["result",4]]]],[11,"needs_recreation","","Will be called to check if any internal resources will…",78,[[]]],[11,"swap_buffers","","Adds additional semantics when calling…",78,[[["arc",3],["eglsurface",6]],[["result",4],["swapbufferserror",4]]]],[0,"surface","smithay::backend::egl","EGL surface related structs",null,null],[3,"EGLSurface","smithay::backend::egl::surface","EGL surface of a given EGL context for rendering",null,null],[11,"swap_buffers","","Swaps buffers at the end of a frame.",79,[[],[["result",4],["swapbufferserror",4]]]],[11,"is_current","","Returns true if the OpenGL surface is the current one in…",79,[[]]],[11,"get_config_id","","Returns the egl config for this context",79,[[],["eglconfig",6]]],[11,"get_pixel_format","","Returns the pixel format of the main framebuffer of the…",79,[[],["pixelformat",3]]],[8,"EGLGraphicsBackend","smithay::backend::egl","Trait any backend type may implement that allows binding a…",null,null],[10,"bind_wl_display","","Binds this EGL context to the given Wayland display.",80,[[["display",3]],[["result",4],["error",4],["eglbufferreader",3]]]],[11,"num_planes","","Amount of planes this format uses",67,[[]]],[11,"num_planes","","Amount of planes of these `EGLImages`",60,[[]]],[11,"bind_to_texture","","Bind plane to an OpenGL texture id",60,[[["glgraphicsbackend",8],["c_uint",6]],[["result",4],["texturecreationerror",4]]]],[0,"libinput","smithay::backend","Implementation of input backend trait for types provided…",null,null],[3,"LibinputInputBackend","smithay::backend::libinput","Libinput based [`InputBackend`].",null,null],[3,"LibinputConfig","","Configuration handle for libinput",null,null],[3,"LibinputSessionInterface","","Wrapper for types implementing the [`Session`] trait to…",null,null],[4,"LibinputEvent","","Special events generated by Libinput",null,null],[13,"NewDevice","","A new device was plugged in",81,null],[13,"RemovedDevice","","A device was plugged out",81,null],[11,"new","","Initialize a new [`LibinputInputBackend`] from a given…",82,[[["libinput",3]]]],[11,"devices","","Access the list of current devices",83,[[]]],[0,"session","smithay::backend","Abstraction of different session APIs.",null,null],[4,"Signal","smithay::backend::session","Signals that can be generated by a session",null,null],[13,"PauseSession","","The whole session has been paused",84,null],[13,"PauseDevice","","A given device has been paused",84,null],[12,"major","smithay::backend::session::Signal","Major number identifying the device",85,null],[12,"minor","","Minor number identifying the device",85,null],[13,"ActivateSession","smithay::backend::session","The whole session has been activated",84,null],[13,"ActivateDevice","","A given device has been activated",84,null],[12,"major","smithay::backend::session::Signal","Major number identifying the device",86,null],[12,"minor","","Minor number identifying the device",86,null],[12,"new_fd","","New file descriptor for accessing the device",86,null],[0,"auto","smithay::backend::session","Implementation of the [`Session`] trait through various…",null,null],[4,"AutoSession","smithay::backend::session::auto","[`Session`] using the best available interface",null,null],[13,"Logind","","Logind session",87,null],[13,"Direct","","Direct / tty session",87,null],[4,"AutoSessionNotifier","","[`SessionNotifier`] using the best available interface",null,null],[13,"Logind","","Logind session notifier",88,null],[13,"Direct","","Direct / tty session notifier",88,null],[4,"Error","","Errors related to auto sessions",null,null],[13,"Logind","","Logind session error",89,null],[13,"Direct","","Direct session error",89,null],[13,"Nix","","Nix error",89,null],[11,"new","","Tries to create a new session via the best available…",87,[[],["option",4]]],[11,"signaler","","Get a handle to the Signaler of this session.",88,[[],[["sessionsignal",4],["signaler",3]]]],[0,"direct","smithay::backend::session","Implementation of the `Session` trait through the legacy…",null,null],[3,"DirectSession","smithay::backend::session::direct","[`Session`] via the virtual terminal direct kernel interface",null,null],[3,"DirectSessionNotifier","","[`SessionNotifier`] via the virtual terminal direct kernel…",null,null],[3,"Id","","Ids of registered [`SessionObserver`]s of the…",null,null],[4,"Error","","Errors related to direct/tty sessions",null,null],[13,"FailedToOpenTTY","","Failed to open TTY",90,null],[13,"NotRunningFromTTY","","Not running from a TTY",90,null],[13,"TTYAlreadyInGraphicsMode","","TTY is already in KB_GRAPHICS mode",90,null],[13,"FailedToActivateTTY","","Failed to activate open tty",90,null],[13,"FailedToWaitForTTY","","Failed to wait for tty to become active",90,null],[13,"FailedToSaveTTYState","","Failed to save old tty state",90,null],[13,"FailedToSetTTYKbMode","","Failed to set tty kb mode",90,null],[13,"FailedToSetTTYMode","","Failed to set tty mode",90,null],[13,"FailedToTakeControlOfTTY","","Failed to set tty in process mode",90,null],[11,"new","","Tries to create a new session via the legacy virtual…",91,[[["option",4],["path",3]],[["error",4],["result",4]]]],[11,"vt","","Get the number of the virtual terminal used by this session",91,[[]]],[11,"signaler","","Get a handle to the Signaler of this session.",92,[[],[["sessionsignal",4],["signaler",3]]]],[0,"logind","smithay::backend::session","Implementation of the `Session` trait through the logind…",null,null],[3,"LogindSession","smithay::backend::session::logind","[`Session`] via the logind dbus interface",null,null],[3,"LogindSessionNotifier","","[`SessionNotifier`] via the logind dbus interface",null,null],[4,"Error","","Errors related to logind sessions",null,null],[13,"FailedDbusConnection","","Failed to connect to dbus system socket",93,null],[13,"FailedToGetSession","","Failed to get session from logind",93,null],[13,"FailedToGetSeat","","Failed to get seat from logind",93,null],[13,"FailedToGetVT","","Failed to get vt from logind",93,null],[13,"FailedToSendDbusCall","","Failed call to a dbus method",93,null],[12,"bus","smithay::backend::session::logind::Error","Name of the service",94,null],[12,"path","","Object path",94,null],[12,"interface","","Interface",94,null],[12,"member","","Method called",94,null],[12,"source","","DBus error",94,null],[13,"DbusCallFailed","smithay::backend::session::logind","DBus method call failed",93,null],[12,"bus","smithay::backend::session::logind::Error","Name of the service",95,null],[12,"path","","Object path",95,null],[12,"interface","","Interface",95,null],[12,"member","","Method called",95,null],[12,"source","","DBus error",95,null],[13,"UnexpectedMethodReturn","smithay::backend::session::logind","Dbus method return had unexpected format",93,null],[13,"DbusMatchFailed","","Failed to setup dbus match rule",93,null],[13,"FailedToStatDevice","","Failed to stat device",93,null],[13,"SessionLost","","Session is already closed,",93,null],[8,"Session","smithay::backend::session","General session interface.",null,null],[16,"Error","","Error type of the implementation",96,null],[10,"open","","Opens a device at the given `path` with the given flags.",96,[[["oflag",3],["path",3]],[["rawfd",6],["result",4]]]],[10,"close","","Close a previously opened file descriptor",96,[[["rawfd",6]],["result",4]]],[10,"change_vt","","Change the currently active virtual terminal",96,[[],["result",4]]],[10,"is_active","","Check if this session is currently active",96,[[]]],[10,"seat","","Which seat this session is on",96,[[],["string",3]]],[8,"AsErrno","","Allows errors to be described by an error number",null,null],[10,"as_errno","","Returns the error number representing this error if any",97,[[],["option",4]]],[0,"udev","smithay::backend","Provides `udev` related functionality for automated device…",null,null],[3,"UdevBackend","smithay::backend::udev","Backend to monitor available drm devices.",null,null],[4,"UdevEvent","","Events generated by the [`UdevBackend`], notifying you of…",null,null],[13,"Added","","A new device has been detected",98,null],[12,"device_id","smithay::backend::udev::UdevEvent","ID of the new device",99,null],[12,"path","","Path of the new device",99,null],[13,"Changed","smithay::backend::udev","A device has changed",98,null],[12,"device_id","smithay::backend::udev::UdevEvent","ID of the changed device",100,null],[13,"Removed","smithay::backend::udev","A device has been removed",98,null],[12,"device_id","smithay::backend::udev::UdevEvent","ID of the removed device",101,null],[5,"primary_gpu","smithay::backend::udev","Returns the path of the primary GPU device if any",null,[[["asref",8]],[["option",4],["ioresult",6]]]],[5,"all_gpus","","Returns the paths of all available GPU devices",null,[[["asref",8]],[["vec",3],["ioresult",6]]]],[5,"driver","","Returns the loaded driver for a device named by it\'s…",null,[[["dev_t",6]],[["option",4],["ioresult",6]]]],[11,"new","","Creates a new [`UdevBackend`]",102,[[["asref",8]],[["ioresult",6],["udevbackend",3]]]],[11,"device_list","","Get a list of DRM devices currently known to the backend",102,[[]]],[0,"winit","smithay::backend","Implementation of backend traits for types provided by…",null,null],[3,"WinitGraphicsBackend","smithay::backend::winit","Window with an active EGL Context created by `winit`.…",null,null],[3,"WinitInputBackend","","Abstracted event loop of a [`WinitWindow`] implementing…",null,null],[3,"WinitKeyboardInputEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitMouseMovedEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitMouseWheelEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitMouseInputEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitTouchStartedEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitTouchMovedEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitTouchEndedEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitTouchCancelledEvent","","Winit-Backend internal event wrapping `winit`\'s types into…",null,null],[3,"WinitInputConfig","","Input config for Winit",null,null],[4,"Error","","Errors thrown by the `winit` backends",null,null],[13,"InitFailed","","Failed to initialize a window",103,null],[13,"NotSupported","","Context creation is not supported on the current window…",103,null],[13,"EGL","","EGL error",103,null],[13,"SurfaceCreationError","","Surface Creation failed",103,null],[4,"WinitEvent","","Specific events generated by Winit",null,null],[13,"Resized","","The window has been resized",104,null],[12,"size","smithay::backend::winit::WinitEvent","The new physical size (in pixels)",105,null],[12,"scale_factor","","The new scale factor",105,null],[13,"Focus","smithay::backend::winit","The focus state of the window changed",104,null],[13,"Refresh","","A redraw was requested",104,null],[4,"WinitInputError","","Errors that may happen when driving the event loop of…",null,null],[13,"WindowClosed","","The underlying [`WinitWindow`] was closed. No further…",106,null],[5,"init","","Create a new [`WinitGraphicsBackend`], which implements…",null,[[],[["result",4],["error",4]]]],[5,"init_from_builder","","Create a new [`WinitGraphicsBackend`], which implements…",null,[[["windowbuilder",3]],[["result",4],["error",4]]]],[5,"init_from_builder_with_gl_attr","","Create a new [`WinitGraphicsBackend`], which implements…",null,[[["glattributes",3],["windowbuilder",3]],[["result",4],["error",4]]]],[11,"winit_window","","Get a reference to the internally used [`WinitWindow`]",107,[[],[["winitwindow",3],["ref",3]]]],[0,"utils","smithay","Various utilities functions and types",null,null],[3,"Rectangle","smithay::utils","A rectangle defined by its top-left corner and dimensions",null,null],[12,"x","","horizontal position of the top-left corner of the…",108,null],[12,"y","","vertical position of the top-left corner of the rectangle,…",108,null],[12,"width","","width of the rectangle",108,null],[12,"height","","height of the rectangle",108,null],[11,"contains","","Checks whether given point is inside a rectangle",108,[[]]],[11,"overlaps","","Checks whether a given rectangle overlaps with this one",108,[[["rectangle",3]]]],[0,"wayland","smithay","Protocol-related utilities",null,null],[3,"SerialCounter","smithay::wayland","A counter for generating serials, for use in the client…",null,null],[0,"compositor","","Utilities for handling surfaces, subsurfaces and regions",null,null],[3,"SurfaceAttributes","smithay::wayland::compositor","Data associated with a surface, aggregated by the handlers",null,null],[12,"buffer","","Buffer defining the contents of the surface",109,null],[12,"buffer_scale","","Scale of the contents of the buffer, for higher-resolution…",109,null],[12,"buffer_transform","","Transform under which interpret the contents of the buffer",109,null],[12,"opaque_region","","Region of the surface that is guaranteed to be opaque",109,null],[12,"input_region","","Region of the surface that is sensitive to user input",109,null],[12,"damage","","Damage rectangle",109,null],[12,"frame_callback","","The frame callback associated with this surface for the…",109,null],[12,"user_data","","User-controlled data",109,null],[3,"SubsurfaceRole","","Attributes defining the behaviour of a sub-surface…",null,null],[12,"location","","Location of the top-left corner of this sub-surface…",110,null],[12,"sync","","Sync status of this sub-surface",110,null],[3,"RegionAttributes","","Description of the contents of a region",null,null],[12,"rects","","List of rectangle part of this region",111,null],[3,"CompositorToken","","A Compositor global token",null,null],[4,"TraversalAction","","Possible actions to do after handling a node diring tree…",null,null],[13,"DoChildren","","Traverse its children as well, providing them the data T",112,null],[13,"SkipChildren","","Skip its children",112,null],[13,"Break","","Stop traversal completely",112,null],[4,"Damage","","Description of which part of a surface should be…",null,null],[13,"Full","","The whole surface must be considered damaged (this is the…",113,null],[13,"Surface","","A rectangle containing the damaged zone, in surface…",113,null],[13,"Buffer","","A rectangle containing the damaged zone, in buffer…",113,null],[4,"BufferAssignment","","New buffer assignation for a surface",null,null],[13,"Removed","","The surface no longer has a buffer attached to it",114,null],[13,"NewBuffer","","A new buffer has been attached",114,null],[12,"buffer","smithay::wayland::compositor::BufferAssignment","The buffer object",115,null],[12,"delta","","location of the new buffer relative to the previous one",115,null],[4,"RectangleKind","smithay::wayland::compositor","Kind of a rectangle part of a region",null,null],[13,"Add","","This rectangle should be added to the region",116,null],[13,"Subtract","","The intersection of this rectangle with the region should…",116,null],[4,"SurfaceEvent","","User-handled events for surfaces",null,null],[13,"Commit","","The double-buffered state has been validated by the client",117,null],[5,"compositor_init","","Create new `wl_compositor` and `wl_subcompositor` globals.",null,[[["display",3]]]],[0,"roles","","Tools for handling surface roles",null,null],[3,"WrongRole","smithay::wayland::compositor::roles","An error type signifying that the surface does not have…",null,null],[8,"RoleType","","A trait representing a type that can manage surface roles",null,null],[10,"has_role","","Check if the associated surface has a role",118,[[]]],[8,"Role","","A trait representing the capability of a [`RoleType`] to…",null,null],[11,"set","","Set the role for the associated surface with default…",119,[[],["result",4]]],[10,"set_with","","Set the role for the associated surface with given data",119,[[],["result",4]]],[10,"has","","Check if the associated surface has this role",119,[[]]],[10,"data","","Access the data associated with this role if its the…",119,[[],[["result",4],["wrongrole",3]]]],[10,"data_mut","","Mutably access the data associated with this role if its…",119,[[],[["wrongrole",3],["result",4]]]],[10,"unset","","Remove this role from the associated surface",119,[[],[["result",4],["wrongrole",3]]]],[11,"contains","smithay::wayland::compositor","Checks whether given point is inside the region.",111,[[]]],[11,"with_surface_data","","Access the data of a surface",120,[[["wlsurface",3]]]],[11,"with_surface_tree_upward","","Access the data of a surface tree from bottom to top",120,[[["wlsurface",3]]]],[11,"with_surface_tree_downward","","Access the data of a surface tree from top to bottom",120,[[["wlsurface",3]]]],[11,"get_parent","","Retrieve the parent of this surface",120,[[["wlsurface",3]],[["option",4],["wlsurface",3]]]],[11,"get_children","","Retrieve the children of this surface",120,[[["wlsurface",3]],[["vec",3],["wlsurface",3]]]],[11,"has_a_role","","Check whether this surface as a role or not",120,[[["wlsurface",3]]]],[11,"has_role","","Check whether this surface as a specific role",120,[[["wlsurface",3]]]],[11,"give_role","","Register that this surface has given role with default data",120,[[["wlsurface",3]],["result",4]]],[11,"give_role_with","","Register that this surface has given role with given data",120,[[["wlsurface",3]],["result",4]]],[11,"with_role_data","","Access the role data of a surface",120,[[["wlsurface",3]],[["wrongrole",3],["result",4]]]],[11,"remove_role","","Register that this surface does not have a role any longer…",120,[[["wlsurface",3]],[["result",4],["wrongrole",3]]]],[11,"get_region_attributes","","Retrieve the metadata associated with a `wl_region`",120,[[["wlregion",3]],["regionattributes",3]]],[0,"data_device","smithay::wayland","Utilities for manipulating the data devices",null,null],[3,"SourceMetadata","smithay::wayland::data_device","The metadata describing a data source",null,null],[12,"mime_types","","The MIME types supported by this source",121,null],[12,"dnd_action","","The Drag\'n\'Drop actions supported by this source",121,null],[3,"DnDIconRole","","The role applied to surfaces used as DnD icons",null,null],[4,"ServerDndEvent","","Event generated by the interactions of clients with a…",null,null],[13,"Action","","The client chose an action",122,null],[13,"Dropped","","The DnD resource was dropped by the user",122,null],[13,"Cancelled","","The Dnd was cancelled",122,null],[13,"Send","","The client requested for data to be sent",122,null],[12,"mime_type","smithay::wayland::data_device::ServerDndEvent","The requested mime type",123,null],[12,"fd","","The FD to write into",123,null],[13,"Finished","smithay::wayland::data_device","The client has finished interacting with the resource",122,null],[4,"DataDeviceEvent","","Events that are generated by interactions of the clients…",null,null],[13,"NewSelection","","A client has set the selection",124,null],[13,"DnDStarted","","A client started a drag\'n\'drop as response to a user…",124,null],[12,"source","smithay::wayland::data_device::DataDeviceEvent","The data source provided by the client",125,null],[12,"icon","","The icon the client requested to be used to be associated…",125,null],[13,"DnDDropped","smithay::wayland::data_device","The drag\'n\'drop action was finished by the user releasing…",124,null],[13,"SendSelection","","A client requested to read the server-set selection",124,null],[12,"mime_type","smithay::wayland::data_device::DataDeviceEvent","the requested mime type",126,null],[12,"fd","","the fd to write into",126,null],[5,"with_source_metadata","smithay::wayland::data_device","Access the metadata of a data source",null,[[["wldatasource",3],["fnonce",8]],["result",4]]],[5,"init_data_device","","Initialize the data device global",null,[[["compositortoken",3],["display",3]],[["global",3],["wldatadevicemanager",3]]]],[5,"set_data_device_focus","","Set the data device focus to a certain client for a given…",null,[[["option",4],["client",3],["seat",3]]]],[5,"set_data_device_selection","","Set a compositor-provided selection for this seat",null,[[["vec",3],["string",3],["seat",3]]]],[5,"start_dnd","","Start a drag\'n\'drop from a ressource controlled by the…",null,[[["sourcemetadata",3],["grabstartdata",3],["seat",3]]]],[5,"default_action_chooser","","A simple action chooser for DnD negociation",null,[[["dndaction",3]],["dndaction",3]]],[0,"dmabuf","smithay::wayland","Linux DMABUF protocol",null,null],[4,"Flags","smithay::wayland::dmabuf","",null,null],[13,"YInvert","","contents are y-inverted",127,null],[13,"Interlaced","","content is interlaced",127,null],[13,"BottomFirst","","bottom field first",127,null],[3,"Format","","Representation of a Dmabuf format, as advertized to the…",null,null],[12,"format","","The format identifier.",128,null],[12,"modifier","","The supported dmabuf layout modifier.",128,null],[12,"plane_count","","Number of planes used by this format",128,null],[3,"Plane","","A plane send by the client",null,null],[12,"fd","","The file descriptor",129,null],[12,"plane_idx","","The plane index",129,null],[12,"offset","","Offset from the start of the Fd",129,null],[12,"stride","","Stride for this plane",129,null],[12,"modifier","","Modifier for this plane",129,null],[3,"BufferFlags","","Possible flags for a DMA buffer",null,null],[3,"BufferInfo","","The complete information provided by the client to create…",null,null],[12,"planes","","The submitted planes",130,null],[12,"width","","The width of this buffer",130,null],[12,"height","","The height of this buffer",130,null],[12,"format","","The format in use",130,null],[12,"flags","","The flags applied to it",130,null],[5,"init_dmabuf_global","","Initialize a dmabuf global.",null,[[["format",3],["display",3],["vec",3]],[["global",3],["zwplinuxdmabufv1",3]]]],[8,"DmabufHandler","","Handler trait for dmabuf validation",null,null],[16,"BufferData","","The data of a successfully imported dmabuf.",131,null],[10,"validate_dmabuf","","Validate a dmabuf",131,[[["bufferinfo",3]],["result",4]]],[11,"create_buffer","","Create a buffer from validated buffer data.",131,[[["main",3],["wlbuffer",3]],["wlbuffer",3]]],[18,"Y_INVERT","","The buffer content is Y-inverted",132,null],[18,"INTERLACED","","The buffer content is interlaced",132,null],[18,"BOTTOM_FIRST","","The buffer content if interlaced is bottom-field first",132,null],[11,"empty","","Returns an empty set of flags",132,[[],["bufferflags",3]]],[11,"all","","Returns the set containing all flags.",132,[[],["bufferflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",132,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",132,[[],[["bufferflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",132,[[],["bufferflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",132,[[],["bufferflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",132,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",132,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",132,[[["bufferflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",132,[[["bufferflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",132,[[["bufferflags",3]]]],[11,"remove","","Removes the specified flags in-place.",132,[[["bufferflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",132,[[["bufferflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",132,[[["bufferflags",3]]]],[0,"explicit_synchronization","smithay::wayland","Explicit buffer synchronization per wayland surface",null,null],[3,"ExplicitBufferRelease","smithay::wayland::explicit_synchronization","An object to signal end of use of a buffer",null,null],[3,"ExplicitSyncState","","An explicit synchronization state",null,null],[12,"acquire","","An acquire `dma_fence` object, that you should wait on…",133,null],[12,"release","","A buffer release object, that you should use to signal the…",133,null],[4,"ExplicitSyncError","","Possible errors you can send to an ill-behaving clients",null,null],[13,"InvalidFence","","An invalid file descriptor was sent by the client for an…",134,null],[13,"UnsupportedBuffer","","The client requested synchronization for a buffer type…",134,null],[13,"NoBuffer","","The client requested synchronization while not having…",134,null],[5,"get_explicit_synchronization_state","","Retrieve the explicit synchronization state commited by…",null,[[["surfaceattributes",3]],[["result",4],["explicitsyncstate",3]]]],[5,"send_explicit_synchronization_error","","Send a synchronization error to a client",null,[[["explicitsyncerror",4],["surfaceattributes",3]]]],[5,"init_explicit_synchronization_global","","Initialize the explicit synchronization global",null,[[["compositortoken",3],["display",3]],[["zwplinuxexplicitsynchronizationv1",3],["global",3]]]],[11,"immediate_release","","Immediately release the buffer",135,[[]]],[11,"send_release_fence","","Send a release fence to the client",135,[[["rawfd",6]]]],[0,"output","smithay::wayland","Output advertising capabilities",null,null],[3,"Mode","smithay::wayland::output","An output mode",null,null],[12,"width","","The width in pixels",136,null],[12,"height","","The height in pixels",136,null],[12,"refresh","","The refresh rate in millihertz",136,null],[3,"PhysicalProperties","","The physical properties of an output",null,null],[12,"width","","The width in millimeters",137,null],[12,"height","","The height in millimeters",137,null],[12,"subpixel","","The subpixel geometry",137,null],[12,"make","","Textual representation of the make",137,null],[12,"model","","Textual representation of the model",137,null],[3,"Output","","An output as seen by the clients",null,null],[11,"new","","Create a new output global with given name and physical…",138,[[["string",3],["display",3],["physicalproperties",3]]]],[11,"set_preferred","","Sets the preferred mode of this output",138,[[["mode",3]]]],[11,"add_mode","","Adds a mode to the list of known modes to this output",138,[[["mode",3]]]],[11,"delete_mode","","Removes a mode from the list of known modes",138,[[["mode",3]]]],[11,"change_current_state","","Change the current state of this output",138,[[["mode",3],["option",4],["option",4],["transform",4],["option",4]]]],[11,"owns","","Check is given `wl_output` instance is managed by this…",138,[[["wloutput",3]]]],[0,"seat","smithay::wayland","Seat global utilities",null,null],[0,"keysyms","smithay::wayland::seat","",null,null],[17,"KEY_NoSymbol","smithay::wayland::seat::keysyms","",null,null],[17,"KEY_VoidSymbol","","",null,null],[17,"KEY_BackSpace","","",null,null],[17,"KEY_Tab","","",null,null],[17,"KEY_Linefeed","","",null,null],[17,"KEY_Clear","","",null,null],[17,"KEY_Return","","",null,null],[17,"KEY_Pause","","",null,null],[17,"KEY_Scroll_Lock","","",null,null],[17,"KEY_Sys_Req","","",null,null],[17,"KEY_Escape","","",null,null],[17,"KEY_Delete","","",null,null],[17,"KEY_Multi_key","","",null,null],[17,"KEY_Codeinput","","",null,null],[17,"KEY_SingleCandidate","","",null,null],[17,"KEY_MultipleCandidate","","",null,null],[17,"KEY_PreviousCandidate","","",null,null],[17,"KEY_Kanji","","",null,null],[17,"KEY_Muhenkan","","",null,null],[17,"KEY_Henkan_Mode","","",null,null],[17,"KEY_Henkan","","",null,null],[17,"KEY_Romaji","","",null,null],[17,"KEY_Hiragana","","",null,null],[17,"KEY_Katakana","","",null,null],[17,"KEY_Hiragana_Katakana","","",null,null],[17,"KEY_Zenkaku","","",null,null],[17,"KEY_Hankaku","","",null,null],[17,"KEY_Zenkaku_Hankaku","","",null,null],[17,"KEY_Touroku","","",null,null],[17,"KEY_Massyo","","",null,null],[17,"KEY_Kana_Lock","","",null,null],[17,"KEY_Kana_Shift","","",null,null],[17,"KEY_Eisu_Shift","","",null,null],[17,"KEY_Eisu_toggle","","",null,null],[17,"KEY_Kanji_Bangou","","",null,null],[17,"KEY_Zen_Koho","","",null,null],[17,"KEY_Mae_Koho","","",null,null],[17,"KEY_Home","","",null,null],[17,"KEY_Left","","",null,null],[17,"KEY_Up","","",null,null],[17,"KEY_Right","","",null,null],[17,"KEY_Down","","",null,null],[17,"KEY_Prior","","",null,null],[17,"KEY_Page_Up","","",null,null],[17,"KEY_Next","","",null,null],[17,"KEY_Page_Down","","",null,null],[17,"KEY_End","","",null,null],[17,"KEY_Begin","","",null,null],[17,"KEY_Select","","",null,null],[17,"KEY_Print","","",null,null],[17,"KEY_Execute","","",null,null],[17,"KEY_Insert","","",null,null],[17,"KEY_Undo","","",null,null],[17,"KEY_Redo","","",null,null],[17,"KEY_Menu","","",null,null],[17,"KEY_Find","","",null,null],[17,"KEY_Cancel","","",null,null],[17,"KEY_Help","","",null,null],[17,"KEY_Break","","",null,null],[17,"KEY_Mode_switch","","",null,null],[17,"KEY_script_switch","","",null,null],[17,"KEY_Num_Lock","","",null,null],[17,"KEY_KP_Space","","",null,null],[17,"KEY_KP_Tab","","",null,null],[17,"KEY_KP_Enter","","",null,null],[17,"KEY_KP_F1","","",null,null],[17,"KEY_KP_F2","","",null,null],[17,"KEY_KP_F3","","",null,null],[17,"KEY_KP_F4","","",null,null],[17,"KEY_KP_Home","","",null,null],[17,"KEY_KP_Left","","",null,null],[17,"KEY_KP_Up","","",null,null],[17,"KEY_KP_Right","","",null,null],[17,"KEY_KP_Down","","",null,null],[17,"KEY_KP_Prior","","",null,null],[17,"KEY_KP_Page_Up","","",null,null],[17,"KEY_KP_Next","","",null,null],[17,"KEY_KP_Page_Down","","",null,null],[17,"KEY_KP_End","","",null,null],[17,"KEY_KP_Begin","","",null,null],[17,"KEY_KP_Insert","","",null,null],[17,"KEY_KP_Delete","","",null,null],[17,"KEY_KP_Equal","","",null,null],[17,"KEY_KP_Multiply","","",null,null],[17,"KEY_KP_Add","","",null,null],[17,"KEY_KP_Separator","","",null,null],[17,"KEY_KP_Subtract","","",null,null],[17,"KEY_KP_Decimal","","",null,null],[17,"KEY_KP_Divide","","",null,null],[17,"KEY_KP_0","","",null,null],[17,"KEY_KP_1","","",null,null],[17,"KEY_KP_2","","",null,null],[17,"KEY_KP_3","","",null,null],[17,"KEY_KP_4","","",null,null],[17,"KEY_KP_5","","",null,null],[17,"KEY_KP_6","","",null,null],[17,"KEY_KP_7","","",null,null],[17,"KEY_KP_8","","",null,null],[17,"KEY_KP_9","","",null,null],[17,"KEY_F1","","",null,null],[17,"KEY_F2","","",null,null],[17,"KEY_F3","","",null,null],[17,"KEY_F4","","",null,null],[17,"KEY_F5","","",null,null],[17,"KEY_F6","","",null,null],[17,"KEY_F7","","",null,null],[17,"KEY_F8","","",null,null],[17,"KEY_F9","","",null,null],[17,"KEY_F10","","",null,null],[17,"KEY_F11","","",null,null],[17,"KEY_L1","","",null,null],[17,"KEY_F12","","",null,null],[17,"KEY_L2","","",null,null],[17,"KEY_F13","","",null,null],[17,"KEY_L3","","",null,null],[17,"KEY_F14","","",null,null],[17,"KEY_L4","","",null,null],[17,"KEY_F15","","",null,null],[17,"KEY_L5","","",null,null],[17,"KEY_F16","","",null,null],[17,"KEY_L6","","",null,null],[17,"KEY_F17","","",null,null],[17,"KEY_L7","","",null,null],[17,"KEY_F18","","",null,null],[17,"KEY_L8","","",null,null],[17,"KEY_F19","","",null,null],[17,"KEY_L9","","",null,null],[17,"KEY_F20","","",null,null],[17,"KEY_L10","","",null,null],[17,"KEY_F21","","",null,null],[17,"KEY_R1","","",null,null],[17,"KEY_F22","","",null,null],[17,"KEY_R2","","",null,null],[17,"KEY_F23","","",null,null],[17,"KEY_R3","","",null,null],[17,"KEY_F24","","",null,null],[17,"KEY_R4","","",null,null],[17,"KEY_F25","","",null,null],[17,"KEY_R5","","",null,null],[17,"KEY_F26","","",null,null],[17,"KEY_R6","","",null,null],[17,"KEY_F27","","",null,null],[17,"KEY_R7","","",null,null],[17,"KEY_F28","","",null,null],[17,"KEY_R8","","",null,null],[17,"KEY_F29","","",null,null],[17,"KEY_R9","","",null,null],[17,"KEY_F30","","",null,null],[17,"KEY_R10","","",null,null],[17,"KEY_F31","","",null,null],[17,"KEY_R11","","",null,null],[17,"KEY_F32","","",null,null],[17,"KEY_R12","","",null,null],[17,"KEY_F33","","",null,null],[17,"KEY_R13","","",null,null],[17,"KEY_F34","","",null,null],[17,"KEY_R14","","",null,null],[17,"KEY_F35","","",null,null],[17,"KEY_R15","","",null,null],[17,"KEY_Shift_L","","",null,null],[17,"KEY_Shift_R","","",null,null],[17,"KEY_Control_L","","",null,null],[17,"KEY_Control_R","","",null,null],[17,"KEY_Caps_Lock","","",null,null],[17,"KEY_Shift_Lock","","",null,null],[17,"KEY_Meta_L","","",null,null],[17,"KEY_Meta_R","","",null,null],[17,"KEY_Alt_L","","",null,null],[17,"KEY_Alt_R","","",null,null],[17,"KEY_Super_L","","",null,null],[17,"KEY_Super_R","","",null,null],[17,"KEY_Hyper_L","","",null,null],[17,"KEY_Hyper_R","","",null,null],[17,"KEY_ISO_Lock","","",null,null],[17,"KEY_ISO_Level2_Latch","","",null,null],[17,"KEY_ISO_Level3_Shift","","",null,null],[17,"KEY_ISO_Level3_Latch","","",null,null],[17,"KEY_ISO_Level3_Lock","","",null,null],[17,"KEY_ISO_Level5_Shift","","",null,null],[17,"KEY_ISO_Level5_Latch","","",null,null],[17,"KEY_ISO_Level5_Lock","","",null,null],[17,"KEY_ISO_Group_Shift","","",null,null],[17,"KEY_ISO_Group_Latch","","",null,null],[17,"KEY_ISO_Group_Lock","","",null,null],[17,"KEY_ISO_Next_Group","","",null,null],[17,"KEY_ISO_Next_Group_Lock","","",null,null],[17,"KEY_ISO_Prev_Group","","",null,null],[17,"KEY_ISO_Prev_Group_Lock","","",null,null],[17,"KEY_ISO_First_Group","","",null,null],[17,"KEY_ISO_First_Group_Lock","","",null,null],[17,"KEY_ISO_Last_Group","","",null,null],[17,"KEY_ISO_Last_Group_Lock","","",null,null],[17,"KEY_ISO_Left_Tab","","",null,null],[17,"KEY_ISO_Move_Line_Up","","",null,null],[17,"KEY_ISO_Move_Line_Down","","",null,null],[17,"KEY_ISO_Partial_Line_Up","","",null,null],[17,"KEY_ISO_Partial_Line_Down","","",null,null],[17,"KEY_ISO_Partial_Space_Left","","",null,null],[17,"KEY_ISO_Partial_Space_Right","","",null,null],[17,"KEY_ISO_Set_Margin_Left","","",null,null],[17,"KEY_ISO_Set_Margin_Right","","",null,null],[17,"KEY_ISO_Release_Margin_Left","","",null,null],[17,"KEY_ISO_Release_Margin_Right","","",null,null],[17,"KEY_ISO_Release_Both_Margins","","",null,null],[17,"KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"KEY_ISO_Continuous_Underline","","",null,null],[17,"KEY_ISO_Discontinuous_Underline","","",null,null],[17,"KEY_ISO_Emphasize","","",null,null],[17,"KEY_ISO_Center_Object","","",null,null],[17,"KEY_ISO_Enter","","",null,null],[17,"KEY_dead_grave","","",null,null],[17,"KEY_dead_acute","","",null,null],[17,"KEY_dead_circumflex","","",null,null],[17,"KEY_dead_tilde","","",null,null],[17,"KEY_dead_perispomeni","","",null,null],[17,"KEY_dead_macron","","",null,null],[17,"KEY_dead_breve","","",null,null],[17,"KEY_dead_abovedot","","",null,null],[17,"KEY_dead_diaeresis","","",null,null],[17,"KEY_dead_abovering","","",null,null],[17,"KEY_dead_doubleacute","","",null,null],[17,"KEY_dead_caron","","",null,null],[17,"KEY_dead_cedilla","","",null,null],[17,"KEY_dead_ogonek","","",null,null],[17,"KEY_dead_iota","","",null,null],[17,"KEY_dead_voiced_sound","","",null,null],[17,"KEY_dead_semivoiced_sound","","",null,null],[17,"KEY_dead_belowdot","","",null,null],[17,"KEY_dead_hook","","",null,null],[17,"KEY_dead_horn","","",null,null],[17,"KEY_dead_stroke","","",null,null],[17,"KEY_dead_abovecomma","","",null,null],[17,"KEY_dead_psili","","",null,null],[17,"KEY_dead_abovereversedcomma","","",null,null],[17,"KEY_dead_dasia","","",null,null],[17,"KEY_dead_doublegrave","","",null,null],[17,"KEY_dead_belowring","","",null,null],[17,"KEY_dead_belowmacron","","",null,null],[17,"KEY_dead_belowcircumflex","","",null,null],[17,"KEY_dead_belowtilde","","",null,null],[17,"KEY_dead_belowbreve","","",null,null],[17,"KEY_dead_belowdiaeresis","","",null,null],[17,"KEY_dead_invertedbreve","","",null,null],[17,"KEY_dead_belowcomma","","",null,null],[17,"KEY_dead_currency","","",null,null],[17,"KEY_dead_lowline","","",null,null],[17,"KEY_dead_aboveverticalline","","",null,null],[17,"KEY_dead_belowverticalline","","",null,null],[17,"KEY_dead_longsolidusoverlay","","",null,null],[17,"KEY_dead_a","","",null,null],[17,"KEY_dead_A","","",null,null],[17,"KEY_dead_e","","",null,null],[17,"KEY_dead_E","","",null,null],[17,"KEY_dead_i","","",null,null],[17,"KEY_dead_I","","",null,null],[17,"KEY_dead_o","","",null,null],[17,"KEY_dead_O","","",null,null],[17,"KEY_dead_u","","",null,null],[17,"KEY_dead_U","","",null,null],[17,"KEY_dead_small_schwa","","",null,null],[17,"KEY_dead_capital_schwa","","",null,null],[17,"KEY_dead_greek","","",null,null],[17,"KEY_First_Virtual_Screen","","",null,null],[17,"KEY_Prev_Virtual_Screen","","",null,null],[17,"KEY_Next_Virtual_Screen","","",null,null],[17,"KEY_Last_Virtual_Screen","","",null,null],[17,"KEY_Terminate_Server","","",null,null],[17,"KEY_AccessX_Enable","","",null,null],[17,"KEY_AccessX_Feedback_Enable","","",null,null],[17,"KEY_RepeatKeys_Enable","","",null,null],[17,"KEY_SlowKeys_Enable","","",null,null],[17,"KEY_BounceKeys_Enable","","",null,null],[17,"KEY_StickyKeys_Enable","","",null,null],[17,"KEY_MouseKeys_Enable","","",null,null],[17,"KEY_MouseKeys_Accel_Enable","","",null,null],[17,"KEY_Overlay1_Enable","","",null,null],[17,"KEY_Overlay2_Enable","","",null,null],[17,"KEY_AudibleBell_Enable","","",null,null],[17,"KEY_Pointer_Left","","",null,null],[17,"KEY_Pointer_Right","","",null,null],[17,"KEY_Pointer_Up","","",null,null],[17,"KEY_Pointer_Down","","",null,null],[17,"KEY_Pointer_UpLeft","","",null,null],[17,"KEY_Pointer_UpRight","","",null,null],[17,"KEY_Pointer_DownLeft","","",null,null],[17,"KEY_Pointer_DownRight","","",null,null],[17,"KEY_Pointer_Button_Dflt","","",null,null],[17,"KEY_Pointer_Button1","","",null,null],[17,"KEY_Pointer_Button2","","",null,null],[17,"KEY_Pointer_Button3","","",null,null],[17,"KEY_Pointer_Button4","","",null,null],[17,"KEY_Pointer_Button5","","",null,null],[17,"KEY_Pointer_DblClick_Dflt","","",null,null],[17,"KEY_Pointer_DblClick1","","",null,null],[17,"KEY_Pointer_DblClick2","","",null,null],[17,"KEY_Pointer_DblClick3","","",null,null],[17,"KEY_Pointer_DblClick4","","",null,null],[17,"KEY_Pointer_DblClick5","","",null,null],[17,"KEY_Pointer_Drag_Dflt","","",null,null],[17,"KEY_Pointer_Drag1","","",null,null],[17,"KEY_Pointer_Drag2","","",null,null],[17,"KEY_Pointer_Drag3","","",null,null],[17,"KEY_Pointer_Drag4","","",null,null],[17,"KEY_Pointer_Drag5","","",null,null],[17,"KEY_Pointer_EnableKeys","","",null,null],[17,"KEY_Pointer_Accelerate","","",null,null],[17,"KEY_Pointer_DfltBtnNext","","",null,null],[17,"KEY_Pointer_DfltBtnPrev","","",null,null],[17,"KEY_ch","","",null,null],[17,"KEY_Ch","","",null,null],[17,"KEY_CH","","",null,null],[17,"KEY_c_h","","",null,null],[17,"KEY_C_h","","",null,null],[17,"KEY_C_H","","",null,null],[17,"KEY_3270_Duplicate","","",null,null],[17,"KEY_3270_FieldMark","","",null,null],[17,"KEY_3270_Right2","","",null,null],[17,"KEY_3270_Left2","","",null,null],[17,"KEY_3270_BackTab","","",null,null],[17,"KEY_3270_EraseEOF","","",null,null],[17,"KEY_3270_EraseInput","","",null,null],[17,"KEY_3270_Reset","","",null,null],[17,"KEY_3270_Quit","","",null,null],[17,"KEY_3270_PA1","","",null,null],[17,"KEY_3270_PA2","","",null,null],[17,"KEY_3270_PA3","","",null,null],[17,"KEY_3270_Test","","",null,null],[17,"KEY_3270_Attn","","",null,null],[17,"KEY_3270_CursorBlink","","",null,null],[17,"KEY_3270_AltCursor","","",null,null],[17,"KEY_3270_KeyClick","","",null,null],[17,"KEY_3270_Jump","","",null,null],[17,"KEY_3270_Ident","","",null,null],[17,"KEY_3270_Rule","","",null,null],[17,"KEY_3270_Copy","","",null,null],[17,"KEY_3270_Play","","",null,null],[17,"KEY_3270_Setup","","",null,null],[17,"KEY_3270_Record","","",null,null],[17,"KEY_3270_ChangeScreen","","",null,null],[17,"KEY_3270_DeleteWord","","",null,null],[17,"KEY_3270_ExSelect","","",null,null],[17,"KEY_3270_CursorSelect","","",null,null],[17,"KEY_3270_PrintScreen","","",null,null],[17,"KEY_3270_Enter","","",null,null],[17,"KEY_space","","",null,null],[17,"KEY_exclam","","",null,null],[17,"KEY_quotedbl","","",null,null],[17,"KEY_numbersign","","",null,null],[17,"KEY_dollar","","",null,null],[17,"KEY_percent","","",null,null],[17,"KEY_ampersand","","",null,null],[17,"KEY_apostrophe","","",null,null],[17,"KEY_quoteright","","",null,null],[17,"KEY_parenleft","","",null,null],[17,"KEY_parenright","","",null,null],[17,"KEY_asterisk","","",null,null],[17,"KEY_plus","","",null,null],[17,"KEY_comma","","",null,null],[17,"KEY_minus","","",null,null],[17,"KEY_period","","",null,null],[17,"KEY_slash","","",null,null],[17,"KEY_0","","",null,null],[17,"KEY_1","","",null,null],[17,"KEY_2","","",null,null],[17,"KEY_3","","",null,null],[17,"KEY_4","","",null,null],[17,"KEY_5","","",null,null],[17,"KEY_6","","",null,null],[17,"KEY_7","","",null,null],[17,"KEY_8","","",null,null],[17,"KEY_9","","",null,null],[17,"KEY_colon","","",null,null],[17,"KEY_semicolon","","",null,null],[17,"KEY_less","","",null,null],[17,"KEY_equal","","",null,null],[17,"KEY_greater","","",null,null],[17,"KEY_question","","",null,null],[17,"KEY_at","","",null,null],[17,"KEY_A","","",null,null],[17,"KEY_B","","",null,null],[17,"KEY_C","","",null,null],[17,"KEY_D","","",null,null],[17,"KEY_E","","",null,null],[17,"KEY_F","","",null,null],[17,"KEY_G","","",null,null],[17,"KEY_H","","",null,null],[17,"KEY_I","","",null,null],[17,"KEY_J","","",null,null],[17,"KEY_K","","",null,null],[17,"KEY_L","","",null,null],[17,"KEY_M","","",null,null],[17,"KEY_N","","",null,null],[17,"KEY_O","","",null,null],[17,"KEY_P","","",null,null],[17,"KEY_Q","","",null,null],[17,"KEY_R","","",null,null],[17,"KEY_S","","",null,null],[17,"KEY_T","","",null,null],[17,"KEY_U","","",null,null],[17,"KEY_V","","",null,null],[17,"KEY_W","","",null,null],[17,"KEY_X","","",null,null],[17,"KEY_Y","","",null,null],[17,"KEY_Z","","",null,null],[17,"KEY_bracketleft","","",null,null],[17,"KEY_backslash","","",null,null],[17,"KEY_bracketright","","",null,null],[17,"KEY_asciicircum","","",null,null],[17,"KEY_underscore","","",null,null],[17,"KEY_grave","","",null,null],[17,"KEY_quoteleft","","",null,null],[17,"KEY_a","","",null,null],[17,"KEY_b","","",null,null],[17,"KEY_c","","",null,null],[17,"KEY_d","","",null,null],[17,"KEY_e","","",null,null],[17,"KEY_f","","",null,null],[17,"KEY_g","","",null,null],[17,"KEY_h","","",null,null],[17,"KEY_i","","",null,null],[17,"KEY_j","","",null,null],[17,"KEY_k","","",null,null],[17,"KEY_l","","",null,null],[17,"KEY_m","","",null,null],[17,"KEY_n","","",null,null],[17,"KEY_o","","",null,null],[17,"KEY_p","","",null,null],[17,"KEY_q","","",null,null],[17,"KEY_r","","",null,null],[17,"KEY_s","","",null,null],[17,"KEY_t","","",null,null],[17,"KEY_u","","",null,null],[17,"KEY_v","","",null,null],[17,"KEY_w","","",null,null],[17,"KEY_x","","",null,null],[17,"KEY_y","","",null,null],[17,"KEY_z","","",null,null],[17,"KEY_braceleft","","",null,null],[17,"KEY_bar","","",null,null],[17,"KEY_braceright","","",null,null],[17,"KEY_asciitilde","","",null,null],[17,"KEY_nobreakspace","","",null,null],[17,"KEY_exclamdown","","",null,null],[17,"KEY_cent","","",null,null],[17,"KEY_sterling","","",null,null],[17,"KEY_currency","","",null,null],[17,"KEY_yen","","",null,null],[17,"KEY_brokenbar","","",null,null],[17,"KEY_section","","",null,null],[17,"KEY_diaeresis","","",null,null],[17,"KEY_copyright","","",null,null],[17,"KEY_ordfeminine","","",null,null],[17,"KEY_guillemotleft","","",null,null],[17,"KEY_notsign","","",null,null],[17,"KEY_hyphen","","",null,null],[17,"KEY_registered","","",null,null],[17,"KEY_macron","","",null,null],[17,"KEY_degree","","",null,null],[17,"KEY_plusminus","","",null,null],[17,"KEY_twosuperior","","",null,null],[17,"KEY_threesuperior","","",null,null],[17,"KEY_acute","","",null,null],[17,"KEY_mu","","",null,null],[17,"KEY_paragraph","","",null,null],[17,"KEY_periodcentered","","",null,null],[17,"KEY_cedilla","","",null,null],[17,"KEY_onesuperior","","",null,null],[17,"KEY_masculine","","",null,null],[17,"KEY_guillemotright","","",null,null],[17,"KEY_onequarter","","",null,null],[17,"KEY_onehalf","","",null,null],[17,"KEY_threequarters","","",null,null],[17,"KEY_questiondown","","",null,null],[17,"KEY_Agrave","","",null,null],[17,"KEY_Aacute","","",null,null],[17,"KEY_Acircumflex","","",null,null],[17,"KEY_Atilde","","",null,null],[17,"KEY_Adiaeresis","","",null,null],[17,"KEY_Aring","","",null,null],[17,"KEY_AE","","",null,null],[17,"KEY_Ccedilla","","",null,null],[17,"KEY_Egrave","","",null,null],[17,"KEY_Eacute","","",null,null],[17,"KEY_Ecircumflex","","",null,null],[17,"KEY_Ediaeresis","","",null,null],[17,"KEY_Igrave","","",null,null],[17,"KEY_Iacute","","",null,null],[17,"KEY_Icircumflex","","",null,null],[17,"KEY_Idiaeresis","","",null,null],[17,"KEY_ETH","","",null,null],[17,"KEY_Eth","","",null,null],[17,"KEY_Ntilde","","",null,null],[17,"KEY_Ograve","","",null,null],[17,"KEY_Oacute","","",null,null],[17,"KEY_Ocircumflex","","",null,null],[17,"KEY_Otilde","","",null,null],[17,"KEY_Odiaeresis","","",null,null],[17,"KEY_multiply","","",null,null],[17,"KEY_Oslash","","",null,null],[17,"KEY_Ooblique","","",null,null],[17,"KEY_Ugrave","","",null,null],[17,"KEY_Uacute","","",null,null],[17,"KEY_Ucircumflex","","",null,null],[17,"KEY_Udiaeresis","","",null,null],[17,"KEY_Yacute","","",null,null],[17,"KEY_THORN","","",null,null],[17,"KEY_Thorn","","",null,null],[17,"KEY_ssharp","","",null,null],[17,"KEY_agrave","","",null,null],[17,"KEY_aacute","","",null,null],[17,"KEY_acircumflex","","",null,null],[17,"KEY_atilde","","",null,null],[17,"KEY_adiaeresis","","",null,null],[17,"KEY_aring","","",null,null],[17,"KEY_ae","","",null,null],[17,"KEY_ccedilla","","",null,null],[17,"KEY_egrave","","",null,null],[17,"KEY_eacute","","",null,null],[17,"KEY_ecircumflex","","",null,null],[17,"KEY_ediaeresis","","",null,null],[17,"KEY_igrave","","",null,null],[17,"KEY_iacute","","",null,null],[17,"KEY_icircumflex","","",null,null],[17,"KEY_idiaeresis","","",null,null],[17,"KEY_eth","","",null,null],[17,"KEY_ntilde","","",null,null],[17,"KEY_ograve","","",null,null],[17,"KEY_oacute","","",null,null],[17,"KEY_ocircumflex","","",null,null],[17,"KEY_otilde","","",null,null],[17,"KEY_odiaeresis","","",null,null],[17,"KEY_division","","",null,null],[17,"KEY_oslash","","",null,null],[17,"KEY_ooblique","","",null,null],[17,"KEY_ugrave","","",null,null],[17,"KEY_uacute","","",null,null],[17,"KEY_ucircumflex","","",null,null],[17,"KEY_udiaeresis","","",null,null],[17,"KEY_yacute","","",null,null],[17,"KEY_thorn","","",null,null],[17,"KEY_ydiaeresis","","",null,null],[17,"KEY_Aogonek","","",null,null],[17,"KEY_breve","","",null,null],[17,"KEY_Lstroke","","",null,null],[17,"KEY_Lcaron","","",null,null],[17,"KEY_Sacute","","",null,null],[17,"KEY_Scaron","","",null,null],[17,"KEY_Scedilla","","",null,null],[17,"KEY_Tcaron","","",null,null],[17,"KEY_Zacute","","",null,null],[17,"KEY_Zcaron","","",null,null],[17,"KEY_Zabovedot","","",null,null],[17,"KEY_aogonek","","",null,null],[17,"KEY_ogonek","","",null,null],[17,"KEY_lstroke","","",null,null],[17,"KEY_lcaron","","",null,null],[17,"KEY_sacute","","",null,null],[17,"KEY_caron","","",null,null],[17,"KEY_scaron","","",null,null],[17,"KEY_scedilla","","",null,null],[17,"KEY_tcaron","","",null,null],[17,"KEY_zacute","","",null,null],[17,"KEY_doubleacute","","",null,null],[17,"KEY_zcaron","","",null,null],[17,"KEY_zabovedot","","",null,null],[17,"KEY_Racute","","",null,null],[17,"KEY_Abreve","","",null,null],[17,"KEY_Lacute","","",null,null],[17,"KEY_Cacute","","",null,null],[17,"KEY_Ccaron","","",null,null],[17,"KEY_Eogonek","","",null,null],[17,"KEY_Ecaron","","",null,null],[17,"KEY_Dcaron","","",null,null],[17,"KEY_Dstroke","","",null,null],[17,"KEY_Nacute","","",null,null],[17,"KEY_Ncaron","","",null,null],[17,"KEY_Odoubleacute","","",null,null],[17,"KEY_Rcaron","","",null,null],[17,"KEY_Uring","","",null,null],[17,"KEY_Udoubleacute","","",null,null],[17,"KEY_Tcedilla","","",null,null],[17,"KEY_racute","","",null,null],[17,"KEY_abreve","","",null,null],[17,"KEY_lacute","","",null,null],[17,"KEY_cacute","","",null,null],[17,"KEY_ccaron","","",null,null],[17,"KEY_eogonek","","",null,null],[17,"KEY_ecaron","","",null,null],[17,"KEY_dcaron","","",null,null],[17,"KEY_dstroke","","",null,null],[17,"KEY_nacute","","",null,null],[17,"KEY_ncaron","","",null,null],[17,"KEY_odoubleacute","","",null,null],[17,"KEY_rcaron","","",null,null],[17,"KEY_uring","","",null,null],[17,"KEY_udoubleacute","","",null,null],[17,"KEY_tcedilla","","",null,null],[17,"KEY_abovedot","","",null,null],[17,"KEY_Hstroke","","",null,null],[17,"KEY_Hcircumflex","","",null,null],[17,"KEY_Iabovedot","","",null,null],[17,"KEY_Gbreve","","",null,null],[17,"KEY_Jcircumflex","","",null,null],[17,"KEY_hstroke","","",null,null],[17,"KEY_hcircumflex","","",null,null],[17,"KEY_idotless","","",null,null],[17,"KEY_gbreve","","",null,null],[17,"KEY_jcircumflex","","",null,null],[17,"KEY_Cabovedot","","",null,null],[17,"KEY_Ccircumflex","","",null,null],[17,"KEY_Gabovedot","","",null,null],[17,"KEY_Gcircumflex","","",null,null],[17,"KEY_Ubreve","","",null,null],[17,"KEY_Scircumflex","","",null,null],[17,"KEY_cabovedot","","",null,null],[17,"KEY_ccircumflex","","",null,null],[17,"KEY_gabovedot","","",null,null],[17,"KEY_gcircumflex","","",null,null],[17,"KEY_ubreve","","",null,null],[17,"KEY_scircumflex","","",null,null],[17,"KEY_kra","","",null,null],[17,"KEY_kappa","","",null,null],[17,"KEY_Rcedilla","","",null,null],[17,"KEY_Itilde","","",null,null],[17,"KEY_Lcedilla","","",null,null],[17,"KEY_Emacron","","",null,null],[17,"KEY_Gcedilla","","",null,null],[17,"KEY_Tslash","","",null,null],[17,"KEY_rcedilla","","",null,null],[17,"KEY_itilde","","",null,null],[17,"KEY_lcedilla","","",null,null],[17,"KEY_emacron","","",null,null],[17,"KEY_gcedilla","","",null,null],[17,"KEY_tslash","","",null,null],[17,"KEY_ENG","","",null,null],[17,"KEY_eng","","",null,null],[17,"KEY_Amacron","","",null,null],[17,"KEY_Iogonek","","",null,null],[17,"KEY_Eabovedot","","",null,null],[17,"KEY_Imacron","","",null,null],[17,"KEY_Ncedilla","","",null,null],[17,"KEY_Omacron","","",null,null],[17,"KEY_Kcedilla","","",null,null],[17,"KEY_Uogonek","","",null,null],[17,"KEY_Utilde","","",null,null],[17,"KEY_Umacron","","",null,null],[17,"KEY_amacron","","",null,null],[17,"KEY_iogonek","","",null,null],[17,"KEY_eabovedot","","",null,null],[17,"KEY_imacron","","",null,null],[17,"KEY_ncedilla","","",null,null],[17,"KEY_omacron","","",null,null],[17,"KEY_kcedilla","","",null,null],[17,"KEY_uogonek","","",null,null],[17,"KEY_utilde","","",null,null],[17,"KEY_umacron","","",null,null],[17,"KEY_Wcircumflex","","",null,null],[17,"KEY_wcircumflex","","",null,null],[17,"KEY_Ycircumflex","","",null,null],[17,"KEY_ycircumflex","","",null,null],[17,"KEY_Babovedot","","",null,null],[17,"KEY_babovedot","","",null,null],[17,"KEY_Dabovedot","","",null,null],[17,"KEY_dabovedot","","",null,null],[17,"KEY_Fabovedot","","",null,null],[17,"KEY_fabovedot","","",null,null],[17,"KEY_Mabovedot","","",null,null],[17,"KEY_mabovedot","","",null,null],[17,"KEY_Pabovedot","","",null,null],[17,"KEY_pabovedot","","",null,null],[17,"KEY_Sabovedot","","",null,null],[17,"KEY_sabovedot","","",null,null],[17,"KEY_Tabovedot","","",null,null],[17,"KEY_tabovedot","","",null,null],[17,"KEY_Wgrave","","",null,null],[17,"KEY_wgrave","","",null,null],[17,"KEY_Wacute","","",null,null],[17,"KEY_wacute","","",null,null],[17,"KEY_Wdiaeresis","","",null,null],[17,"KEY_wdiaeresis","","",null,null],[17,"KEY_Ygrave","","",null,null],[17,"KEY_ygrave","","",null,null],[17,"KEY_OE","","",null,null],[17,"KEY_oe","","",null,null],[17,"KEY_Ydiaeresis","","",null,null],[17,"KEY_overline","","",null,null],[17,"KEY_kana_fullstop","","",null,null],[17,"KEY_kana_openingbracket","","",null,null],[17,"KEY_kana_closingbracket","","",null,null],[17,"KEY_kana_comma","","",null,null],[17,"KEY_kana_conjunctive","","",null,null],[17,"KEY_kana_middledot","","",null,null],[17,"KEY_kana_WO","","",null,null],[17,"KEY_kana_a","","",null,null],[17,"KEY_kana_i","","",null,null],[17,"KEY_kana_u","","",null,null],[17,"KEY_kana_e","","",null,null],[17,"KEY_kana_o","","",null,null],[17,"KEY_kana_ya","","",null,null],[17,"KEY_kana_yu","","",null,null],[17,"KEY_kana_yo","","",null,null],[17,"KEY_kana_tsu","","",null,null],[17,"KEY_kana_tu","","",null,null],[17,"KEY_prolongedsound","","",null,null],[17,"KEY_kana_A","","",null,null],[17,"KEY_kana_I","","",null,null],[17,"KEY_kana_U","","",null,null],[17,"KEY_kana_E","","",null,null],[17,"KEY_kana_O","","",null,null],[17,"KEY_kana_KA","","",null,null],[17,"KEY_kana_KI","","",null,null],[17,"KEY_kana_KU","","",null,null],[17,"KEY_kana_KE","","",null,null],[17,"KEY_kana_KO","","",null,null],[17,"KEY_kana_SA","","",null,null],[17,"KEY_kana_SHI","","",null,null],[17,"KEY_kana_SU","","",null,null],[17,"KEY_kana_SE","","",null,null],[17,"KEY_kana_SO","","",null,null],[17,"KEY_kana_TA","","",null,null],[17,"KEY_kana_CHI","","",null,null],[17,"KEY_kana_TI","","",null,null],[17,"KEY_kana_TSU","","",null,null],[17,"KEY_kana_TU","","",null,null],[17,"KEY_kana_TE","","",null,null],[17,"KEY_kana_TO","","",null,null],[17,"KEY_kana_NA","","",null,null],[17,"KEY_kana_NI","","",null,null],[17,"KEY_kana_NU","","",null,null],[17,"KEY_kana_NE","","",null,null],[17,"KEY_kana_NO","","",null,null],[17,"KEY_kana_HA","","",null,null],[17,"KEY_kana_HI","","",null,null],[17,"KEY_kana_FU","","",null,null],[17,"KEY_kana_HU","","",null,null],[17,"KEY_kana_HE","","",null,null],[17,"KEY_kana_HO","","",null,null],[17,"KEY_kana_MA","","",null,null],[17,"KEY_kana_MI","","",null,null],[17,"KEY_kana_MU","","",null,null],[17,"KEY_kana_ME","","",null,null],[17,"KEY_kana_MO","","",null,null],[17,"KEY_kana_YA","","",null,null],[17,"KEY_kana_YU","","",null,null],[17,"KEY_kana_YO","","",null,null],[17,"KEY_kana_RA","","",null,null],[17,"KEY_kana_RI","","",null,null],[17,"KEY_kana_RU","","",null,null],[17,"KEY_kana_RE","","",null,null],[17,"KEY_kana_RO","","",null,null],[17,"KEY_kana_WA","","",null,null],[17,"KEY_kana_N","","",null,null],[17,"KEY_voicedsound","","",null,null],[17,"KEY_semivoicedsound","","",null,null],[17,"KEY_kana_switch","","",null,null],[17,"KEY_Farsi_0","","",null,null],[17,"KEY_Farsi_1","","",null,null],[17,"KEY_Farsi_2","","",null,null],[17,"KEY_Farsi_3","","",null,null],[17,"KEY_Farsi_4","","",null,null],[17,"KEY_Farsi_5","","",null,null],[17,"KEY_Farsi_6","","",null,null],[17,"KEY_Farsi_7","","",null,null],[17,"KEY_Farsi_8","","",null,null],[17,"KEY_Farsi_9","","",null,null],[17,"KEY_Arabic_percent","","",null,null],[17,"KEY_Arabic_superscript_alef","","",null,null],[17,"KEY_Arabic_tteh","","",null,null],[17,"KEY_Arabic_peh","","",null,null],[17,"KEY_Arabic_tcheh","","",null,null],[17,"KEY_Arabic_ddal","","",null,null],[17,"KEY_Arabic_rreh","","",null,null],[17,"KEY_Arabic_comma","","",null,null],[17,"KEY_Arabic_fullstop","","",null,null],[17,"KEY_Arabic_0","","",null,null],[17,"KEY_Arabic_1","","",null,null],[17,"KEY_Arabic_2","","",null,null],[17,"KEY_Arabic_3","","",null,null],[17,"KEY_Arabic_4","","",null,null],[17,"KEY_Arabic_5","","",null,null],[17,"KEY_Arabic_6","","",null,null],[17,"KEY_Arabic_7","","",null,null],[17,"KEY_Arabic_8","","",null,null],[17,"KEY_Arabic_9","","",null,null],[17,"KEY_Arabic_semicolon","","",null,null],[17,"KEY_Arabic_question_mark","","",null,null],[17,"KEY_Arabic_hamza","","",null,null],[17,"KEY_Arabic_maddaonalef","","",null,null],[17,"KEY_Arabic_hamzaonalef","","",null,null],[17,"KEY_Arabic_hamzaonwaw","","",null,null],[17,"KEY_Arabic_hamzaunderalef","","",null,null],[17,"KEY_Arabic_hamzaonyeh","","",null,null],[17,"KEY_Arabic_alef","","",null,null],[17,"KEY_Arabic_beh","","",null,null],[17,"KEY_Arabic_tehmarbuta","","",null,null],[17,"KEY_Arabic_teh","","",null,null],[17,"KEY_Arabic_theh","","",null,null],[17,"KEY_Arabic_jeem","","",null,null],[17,"KEY_Arabic_hah","","",null,null],[17,"KEY_Arabic_khah","","",null,null],[17,"KEY_Arabic_dal","","",null,null],[17,"KEY_Arabic_thal","","",null,null],[17,"KEY_Arabic_ra","","",null,null],[17,"KEY_Arabic_zain","","",null,null],[17,"KEY_Arabic_seen","","",null,null],[17,"KEY_Arabic_sheen","","",null,null],[17,"KEY_Arabic_sad","","",null,null],[17,"KEY_Arabic_dad","","",null,null],[17,"KEY_Arabic_tah","","",null,null],[17,"KEY_Arabic_zah","","",null,null],[17,"KEY_Arabic_ain","","",null,null],[17,"KEY_Arabic_ghain","","",null,null],[17,"KEY_Arabic_tatweel","","",null,null],[17,"KEY_Arabic_feh","","",null,null],[17,"KEY_Arabic_qaf","","",null,null],[17,"KEY_Arabic_kaf","","",null,null],[17,"KEY_Arabic_lam","","",null,null],[17,"KEY_Arabic_meem","","",null,null],[17,"KEY_Arabic_noon","","",null,null],[17,"KEY_Arabic_ha","","",null,null],[17,"KEY_Arabic_heh","","",null,null],[17,"KEY_Arabic_waw","","",null,null],[17,"KEY_Arabic_alefmaksura","","",null,null],[17,"KEY_Arabic_yeh","","",null,null],[17,"KEY_Arabic_fathatan","","",null,null],[17,"KEY_Arabic_dammatan","","",null,null],[17,"KEY_Arabic_kasratan","","",null,null],[17,"KEY_Arabic_fatha","","",null,null],[17,"KEY_Arabic_damma","","",null,null],[17,"KEY_Arabic_kasra","","",null,null],[17,"KEY_Arabic_shadda","","",null,null],[17,"KEY_Arabic_sukun","","",null,null],[17,"KEY_Arabic_madda_above","","",null,null],[17,"KEY_Arabic_hamza_above","","",null,null],[17,"KEY_Arabic_hamza_below","","",null,null],[17,"KEY_Arabic_jeh","","",null,null],[17,"KEY_Arabic_veh","","",null,null],[17,"KEY_Arabic_keheh","","",null,null],[17,"KEY_Arabic_gaf","","",null,null],[17,"KEY_Arabic_noon_ghunna","","",null,null],[17,"KEY_Arabic_heh_doachashmee","","",null,null],[17,"KEY_Farsi_yeh","","",null,null],[17,"KEY_Arabic_farsi_yeh","","",null,null],[17,"KEY_Arabic_yeh_baree","","",null,null],[17,"KEY_Arabic_heh_goal","","",null,null],[17,"KEY_Arabic_switch","","",null,null],[17,"KEY_Cyrillic_GHE_bar","","",null,null],[17,"KEY_Cyrillic_ghe_bar","","",null,null],[17,"KEY_Cyrillic_ZHE_descender","","",null,null],[17,"KEY_Cyrillic_zhe_descender","","",null,null],[17,"KEY_Cyrillic_KA_descender","","",null,null],[17,"KEY_Cyrillic_ka_descender","","",null,null],[17,"KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"KEY_Cyrillic_EN_descender","","",null,null],[17,"KEY_Cyrillic_en_descender","","",null,null],[17,"KEY_Cyrillic_U_straight","","",null,null],[17,"KEY_Cyrillic_u_straight","","",null,null],[17,"KEY_Cyrillic_U_straight_bar","","",null,null],[17,"KEY_Cyrillic_u_straight_bar","","",null,null],[17,"KEY_Cyrillic_HA_descender","","",null,null],[17,"KEY_Cyrillic_ha_descender","","",null,null],[17,"KEY_Cyrillic_CHE_descender","","",null,null],[17,"KEY_Cyrillic_che_descender","","",null,null],[17,"KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"KEY_Cyrillic_che_vertstroke","","",null,null],[17,"KEY_Cyrillic_SHHA","","",null,null],[17,"KEY_Cyrillic_shha","","",null,null],[17,"KEY_Cyrillic_SCHWA","","",null,null],[17,"KEY_Cyrillic_schwa","","",null,null],[17,"KEY_Cyrillic_I_macron","","",null,null],[17,"KEY_Cyrillic_i_macron","","",null,null],[17,"KEY_Cyrillic_O_bar","","",null,null],[17,"KEY_Cyrillic_o_bar","","",null,null],[17,"KEY_Cyrillic_U_macron","","",null,null],[17,"KEY_Cyrillic_u_macron","","",null,null],[17,"KEY_Serbian_dje","","",null,null],[17,"KEY_Macedonia_gje","","",null,null],[17,"KEY_Cyrillic_io","","",null,null],[17,"KEY_Ukrainian_ie","","",null,null],[17,"KEY_Ukranian_je","","",null,null],[17,"KEY_Macedonia_dse","","",null,null],[17,"KEY_Ukrainian_i","","",null,null],[17,"KEY_Ukranian_i","","",null,null],[17,"KEY_Ukrainian_yi","","",null,null],[17,"KEY_Ukranian_yi","","",null,null],[17,"KEY_Cyrillic_je","","",null,null],[17,"KEY_Serbian_je","","",null,null],[17,"KEY_Cyrillic_lje","","",null,null],[17,"KEY_Serbian_lje","","",null,null],[17,"KEY_Cyrillic_nje","","",null,null],[17,"KEY_Serbian_nje","","",null,null],[17,"KEY_Serbian_tshe","","",null,null],[17,"KEY_Macedonia_kje","","",null,null],[17,"KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"KEY_Byelorussian_shortu","","",null,null],[17,"KEY_Cyrillic_dzhe","","",null,null],[17,"KEY_Serbian_dze","","",null,null],[17,"KEY_numerosign","","",null,null],[17,"KEY_Serbian_DJE","","",null,null],[17,"KEY_Macedonia_GJE","","",null,null],[17,"KEY_Cyrillic_IO","","",null,null],[17,"KEY_Ukrainian_IE","","",null,null],[17,"KEY_Ukranian_JE","","",null,null],[17,"KEY_Macedonia_DSE","","",null,null],[17,"KEY_Ukrainian_I","","",null,null],[17,"KEY_Ukranian_I","","",null,null],[17,"KEY_Ukrainian_YI","","",null,null],[17,"KEY_Ukranian_YI","","",null,null],[17,"KEY_Cyrillic_JE","","",null,null],[17,"KEY_Serbian_JE","","",null,null],[17,"KEY_Cyrillic_LJE","","",null,null],[17,"KEY_Serbian_LJE","","",null,null],[17,"KEY_Cyrillic_NJE","","",null,null],[17,"KEY_Serbian_NJE","","",null,null],[17,"KEY_Serbian_TSHE","","",null,null],[17,"KEY_Macedonia_KJE","","",null,null],[17,"KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"KEY_Byelorussian_SHORTU","","",null,null],[17,"KEY_Cyrillic_DZHE","","",null,null],[17,"KEY_Serbian_DZE","","",null,null],[17,"KEY_Cyrillic_yu","","",null,null],[17,"KEY_Cyrillic_a","","",null,null],[17,"KEY_Cyrillic_be","","",null,null],[17,"KEY_Cyrillic_tse","","",null,null],[17,"KEY_Cyrillic_de","","",null,null],[17,"KEY_Cyrillic_ie","","",null,null],[17,"KEY_Cyrillic_ef","","",null,null],[17,"KEY_Cyrillic_ghe","","",null,null],[17,"KEY_Cyrillic_ha","","",null,null],[17,"KEY_Cyrillic_i","","",null,null],[17,"KEY_Cyrillic_shorti","","",null,null],[17,"KEY_Cyrillic_ka","","",null,null],[17,"KEY_Cyrillic_el","","",null,null],[17,"KEY_Cyrillic_em","","",null,null],[17,"KEY_Cyrillic_en","","",null,null],[17,"KEY_Cyrillic_o","","",null,null],[17,"KEY_Cyrillic_pe","","",null,null],[17,"KEY_Cyrillic_ya","","",null,null],[17,"KEY_Cyrillic_er","","",null,null],[17,"KEY_Cyrillic_es","","",null,null],[17,"KEY_Cyrillic_te","","",null,null],[17,"KEY_Cyrillic_u","","",null,null],[17,"KEY_Cyrillic_zhe","","",null,null],[17,"KEY_Cyrillic_ve","","",null,null],[17,"KEY_Cyrillic_softsign","","",null,null],[17,"KEY_Cyrillic_yeru","","",null,null],[17,"KEY_Cyrillic_ze","","",null,null],[17,"KEY_Cyrillic_sha","","",null,null],[17,"KEY_Cyrillic_e","","",null,null],[17,"KEY_Cyrillic_shcha","","",null,null],[17,"KEY_Cyrillic_che","","",null,null],[17,"KEY_Cyrillic_hardsign","","",null,null],[17,"KEY_Cyrillic_YU","","",null,null],[17,"KEY_Cyrillic_A","","",null,null],[17,"KEY_Cyrillic_BE","","",null,null],[17,"KEY_Cyrillic_TSE","","",null,null],[17,"KEY_Cyrillic_DE","","",null,null],[17,"KEY_Cyrillic_IE","","",null,null],[17,"KEY_Cyrillic_EF","","",null,null],[17,"KEY_Cyrillic_GHE","","",null,null],[17,"KEY_Cyrillic_HA","","",null,null],[17,"KEY_Cyrillic_I","","",null,null],[17,"KEY_Cyrillic_SHORTI","","",null,null],[17,"KEY_Cyrillic_KA","","",null,null],[17,"KEY_Cyrillic_EL","","",null,null],[17,"KEY_Cyrillic_EM","","",null,null],[17,"KEY_Cyrillic_EN","","",null,null],[17,"KEY_Cyrillic_O","","",null,null],[17,"KEY_Cyrillic_PE","","",null,null],[17,"KEY_Cyrillic_YA","","",null,null],[17,"KEY_Cyrillic_ER","","",null,null],[17,"KEY_Cyrillic_ES","","",null,null],[17,"KEY_Cyrillic_TE","","",null,null],[17,"KEY_Cyrillic_U","","",null,null],[17,"KEY_Cyrillic_ZHE","","",null,null],[17,"KEY_Cyrillic_VE","","",null,null],[17,"KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"KEY_Cyrillic_YERU","","",null,null],[17,"KEY_Cyrillic_ZE","","",null,null],[17,"KEY_Cyrillic_SHA","","",null,null],[17,"KEY_Cyrillic_E","","",null,null],[17,"KEY_Cyrillic_SHCHA","","",null,null],[17,"KEY_Cyrillic_CHE","","",null,null],[17,"KEY_Cyrillic_HARDSIGN","","",null,null],[17,"KEY_Greek_ALPHAaccent","","",null,null],[17,"KEY_Greek_EPSILONaccent","","",null,null],[17,"KEY_Greek_ETAaccent","","",null,null],[17,"KEY_Greek_IOTAaccent","","",null,null],[17,"KEY_Greek_IOTAdieresis","","",null,null],[17,"KEY_Greek_IOTAdiaeresis","","",null,null],[17,"KEY_Greek_OMICRONaccent","","",null,null],[17,"KEY_Greek_UPSILONaccent","","",null,null],[17,"KEY_Greek_UPSILONdieresis","","",null,null],[17,"KEY_Greek_OMEGAaccent","","",null,null],[17,"KEY_Greek_accentdieresis","","",null,null],[17,"KEY_Greek_horizbar","","",null,null],[17,"KEY_Greek_alphaaccent","","",null,null],[17,"KEY_Greek_epsilonaccent","","",null,null],[17,"KEY_Greek_etaaccent","","",null,null],[17,"KEY_Greek_iotaaccent","","",null,null],[17,"KEY_Greek_iotadieresis","","",null,null],[17,"KEY_Greek_iotaaccentdieresis","","",null,null],[17,"KEY_Greek_omicronaccent","","",null,null],[17,"KEY_Greek_upsilonaccent","","",null,null],[17,"KEY_Greek_upsilondieresis","","",null,null],[17,"KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"KEY_Greek_omegaaccent","","",null,null],[17,"KEY_Greek_ALPHA","","",null,null],[17,"KEY_Greek_BETA","","",null,null],[17,"KEY_Greek_GAMMA","","",null,null],[17,"KEY_Greek_DELTA","","",null,null],[17,"KEY_Greek_EPSILON","","",null,null],[17,"KEY_Greek_ZETA","","",null,null],[17,"KEY_Greek_ETA","","",null,null],[17,"KEY_Greek_THETA","","",null,null],[17,"KEY_Greek_IOTA","","",null,null],[17,"KEY_Greek_KAPPA","","",null,null],[17,"KEY_Greek_LAMDA","","",null,null],[17,"KEY_Greek_LAMBDA","","",null,null],[17,"KEY_Greek_MU","","",null,null],[17,"KEY_Greek_NU","","",null,null],[17,"KEY_Greek_XI","","",null,null],[17,"KEY_Greek_OMICRON","","",null,null],[17,"KEY_Greek_PI","","",null,null],[17,"KEY_Greek_RHO","","",null,null],[17,"KEY_Greek_SIGMA","","",null,null],[17,"KEY_Greek_TAU","","",null,null],[17,"KEY_Greek_UPSILON","","",null,null],[17,"KEY_Greek_PHI","","",null,null],[17,"KEY_Greek_CHI","","",null,null],[17,"KEY_Greek_PSI","","",null,null],[17,"KEY_Greek_OMEGA","","",null,null],[17,"KEY_Greek_alpha","","",null,null],[17,"KEY_Greek_beta","","",null,null],[17,"KEY_Greek_gamma","","",null,null],[17,"KEY_Greek_delta","","",null,null],[17,"KEY_Greek_epsilon","","",null,null],[17,"KEY_Greek_zeta","","",null,null],[17,"KEY_Greek_eta","","",null,null],[17,"KEY_Greek_theta","","",null,null],[17,"KEY_Greek_iota","","",null,null],[17,"KEY_Greek_kappa","","",null,null],[17,"KEY_Greek_lamda","","",null,null],[17,"KEY_Greek_lambda","","",null,null],[17,"KEY_Greek_mu","","",null,null],[17,"KEY_Greek_nu","","",null,null],[17,"KEY_Greek_xi","","",null,null],[17,"KEY_Greek_omicron","","",null,null],[17,"KEY_Greek_pi","","",null,null],[17,"KEY_Greek_rho","","",null,null],[17,"KEY_Greek_sigma","","",null,null],[17,"KEY_Greek_finalsmallsigma","","",null,null],[17,"KEY_Greek_tau","","",null,null],[17,"KEY_Greek_upsilon","","",null,null],[17,"KEY_Greek_phi","","",null,null],[17,"KEY_Greek_chi","","",null,null],[17,"KEY_Greek_psi","","",null,null],[17,"KEY_Greek_omega","","",null,null],[17,"KEY_Greek_switch","","",null,null],[17,"KEY_leftradical","","",null,null],[17,"KEY_topleftradical","","",null,null],[17,"KEY_horizconnector","","",null,null],[17,"KEY_topintegral","","",null,null],[17,"KEY_botintegral","","",null,null],[17,"KEY_vertconnector","","",null,null],[17,"KEY_topleftsqbracket","","",null,null],[17,"KEY_botleftsqbracket","","",null,null],[17,"KEY_toprightsqbracket","","",null,null],[17,"KEY_botrightsqbracket","","",null,null],[17,"KEY_topleftparens","","",null,null],[17,"KEY_botleftparens","","",null,null],[17,"KEY_toprightparens","","",null,null],[17,"KEY_botrightparens","","",null,null],[17,"KEY_leftmiddlecurlybrace","","",null,null],[17,"KEY_rightmiddlecurlybrace","","",null,null],[17,"KEY_topleftsummation","","",null,null],[17,"KEY_botleftsummation","","",null,null],[17,"KEY_topvertsummationconnector","","",null,null],[17,"KEY_botvertsummationconnector","","",null,null],[17,"KEY_toprightsummation","","",null,null],[17,"KEY_botrightsummation","","",null,null],[17,"KEY_rightmiddlesummation","","",null,null],[17,"KEY_lessthanequal","","",null,null],[17,"KEY_notequal","","",null,null],[17,"KEY_greaterthanequal","","",null,null],[17,"KEY_integral","","",null,null],[17,"KEY_therefore","","",null,null],[17,"KEY_variation","","",null,null],[17,"KEY_infinity","","",null,null],[17,"KEY_nabla","","",null,null],[17,"KEY_approximate","","",null,null],[17,"KEY_similarequal","","",null,null],[17,"KEY_ifonlyif","","",null,null],[17,"KEY_implies","","",null,null],[17,"KEY_identical","","",null,null],[17,"KEY_radical","","",null,null],[17,"KEY_includedin","","",null,null],[17,"KEY_includes","","",null,null],[17,"KEY_intersection","","",null,null],[17,"KEY_union","","",null,null],[17,"KEY_logicaland","","",null,null],[17,"KEY_logicalor","","",null,null],[17,"KEY_partialderivative","","",null,null],[17,"KEY_function","","",null,null],[17,"KEY_leftarrow","","",null,null],[17,"KEY_uparrow","","",null,null],[17,"KEY_rightarrow","","",null,null],[17,"KEY_downarrow","","",null,null],[17,"KEY_blank","","",null,null],[17,"KEY_soliddiamond","","",null,null],[17,"KEY_checkerboard","","",null,null],[17,"KEY_ht","","",null,null],[17,"KEY_ff","","",null,null],[17,"KEY_cr","","",null,null],[17,"KEY_lf","","",null,null],[17,"KEY_nl","","",null,null],[17,"KEY_vt","","",null,null],[17,"KEY_lowrightcorner","","",null,null],[17,"KEY_uprightcorner","","",null,null],[17,"KEY_upleftcorner","","",null,null],[17,"KEY_lowleftcorner","","",null,null],[17,"KEY_crossinglines","","",null,null],[17,"KEY_horizlinescan1","","",null,null],[17,"KEY_horizlinescan3","","",null,null],[17,"KEY_horizlinescan5","","",null,null],[17,"KEY_horizlinescan7","","",null,null],[17,"KEY_horizlinescan9","","",null,null],[17,"KEY_leftt","","",null,null],[17,"KEY_rightt","","",null,null],[17,"KEY_bott","","",null,null],[17,"KEY_topt","","",null,null],[17,"KEY_vertbar","","",null,null],[17,"KEY_emspace","","",null,null],[17,"KEY_enspace","","",null,null],[17,"KEY_em3space","","",null,null],[17,"KEY_em4space","","",null,null],[17,"KEY_digitspace","","",null,null],[17,"KEY_punctspace","","",null,null],[17,"KEY_thinspace","","",null,null],[17,"KEY_hairspace","","",null,null],[17,"KEY_emdash","","",null,null],[17,"KEY_endash","","",null,null],[17,"KEY_signifblank","","",null,null],[17,"KEY_ellipsis","","",null,null],[17,"KEY_doubbaselinedot","","",null,null],[17,"KEY_onethird","","",null,null],[17,"KEY_twothirds","","",null,null],[17,"KEY_onefifth","","",null,null],[17,"KEY_twofifths","","",null,null],[17,"KEY_threefifths","","",null,null],[17,"KEY_fourfifths","","",null,null],[17,"KEY_onesixth","","",null,null],[17,"KEY_fivesixths","","",null,null],[17,"KEY_careof","","",null,null],[17,"KEY_figdash","","",null,null],[17,"KEY_leftanglebracket","","",null,null],[17,"KEY_decimalpoint","","",null,null],[17,"KEY_rightanglebracket","","",null,null],[17,"KEY_marker","","",null,null],[17,"KEY_oneeighth","","",null,null],[17,"KEY_threeeighths","","",null,null],[17,"KEY_fiveeighths","","",null,null],[17,"KEY_seveneighths","","",null,null],[17,"KEY_trademark","","",null,null],[17,"KEY_signaturemark","","",null,null],[17,"KEY_trademarkincircle","","",null,null],[17,"KEY_leftopentriangle","","",null,null],[17,"KEY_rightopentriangle","","",null,null],[17,"KEY_emopencircle","","",null,null],[17,"KEY_emopenrectangle","","",null,null],[17,"KEY_leftsinglequotemark","","",null,null],[17,"KEY_rightsinglequotemark","","",null,null],[17,"KEY_leftdoublequotemark","","",null,null],[17,"KEY_rightdoublequotemark","","",null,null],[17,"KEY_prescription","","",null,null],[17,"KEY_permille","","",null,null],[17,"KEY_minutes","","",null,null],[17,"KEY_seconds","","",null,null],[17,"KEY_latincross","","",null,null],[17,"KEY_hexagram","","",null,null],[17,"KEY_filledrectbullet","","",null,null],[17,"KEY_filledlefttribullet","","",null,null],[17,"KEY_filledrighttribullet","","",null,null],[17,"KEY_emfilledcircle","","",null,null],[17,"KEY_emfilledrect","","",null,null],[17,"KEY_enopencircbullet","","",null,null],[17,"KEY_enopensquarebullet","","",null,null],[17,"KEY_openrectbullet","","",null,null],[17,"KEY_opentribulletup","","",null,null],[17,"KEY_opentribulletdown","","",null,null],[17,"KEY_openstar","","",null,null],[17,"KEY_enfilledcircbullet","","",null,null],[17,"KEY_enfilledsqbullet","","",null,null],[17,"KEY_filledtribulletup","","",null,null],[17,"KEY_filledtribulletdown","","",null,null],[17,"KEY_leftpointer","","",null,null],[17,"KEY_rightpointer","","",null,null],[17,"KEY_club","","",null,null],[17,"KEY_diamond","","",null,null],[17,"KEY_heart","","",null,null],[17,"KEY_maltesecross","","",null,null],[17,"KEY_dagger","","",null,null],[17,"KEY_doubledagger","","",null,null],[17,"KEY_checkmark","","",null,null],[17,"KEY_ballotcross","","",null,null],[17,"KEY_musicalsharp","","",null,null],[17,"KEY_musicalflat","","",null,null],[17,"KEY_malesymbol","","",null,null],[17,"KEY_femalesymbol","","",null,null],[17,"KEY_telephone","","",null,null],[17,"KEY_telephonerecorder","","",null,null],[17,"KEY_phonographcopyright","","",null,null],[17,"KEY_caret","","",null,null],[17,"KEY_singlelowquotemark","","",null,null],[17,"KEY_doublelowquotemark","","",null,null],[17,"KEY_cursor","","",null,null],[17,"KEY_leftcaret","","",null,null],[17,"KEY_rightcaret","","",null,null],[17,"KEY_downcaret","","",null,null],[17,"KEY_upcaret","","",null,null],[17,"KEY_overbar","","",null,null],[17,"KEY_downtack","","",null,null],[17,"KEY_upshoe","","",null,null],[17,"KEY_downstile","","",null,null],[17,"KEY_underbar","","",null,null],[17,"KEY_jot","","",null,null],[17,"KEY_quad","","",null,null],[17,"KEY_uptack","","",null,null],[17,"KEY_circle","","",null,null],[17,"KEY_upstile","","",null,null],[17,"KEY_downshoe","","",null,null],[17,"KEY_rightshoe","","",null,null],[17,"KEY_leftshoe","","",null,null],[17,"KEY_lefttack","","",null,null],[17,"KEY_righttack","","",null,null],[17,"KEY_hebrew_doublelowline","","",null,null],[17,"KEY_hebrew_aleph","","",null,null],[17,"KEY_hebrew_bet","","",null,null],[17,"KEY_hebrew_beth","","",null,null],[17,"KEY_hebrew_gimel","","",null,null],[17,"KEY_hebrew_gimmel","","",null,null],[17,"KEY_hebrew_dalet","","",null,null],[17,"KEY_hebrew_daleth","","",null,null],[17,"KEY_hebrew_he","","",null,null],[17,"KEY_hebrew_waw","","",null,null],[17,"KEY_hebrew_zain","","",null,null],[17,"KEY_hebrew_zayin","","",null,null],[17,"KEY_hebrew_chet","","",null,null],[17,"KEY_hebrew_het","","",null,null],[17,"KEY_hebrew_tet","","",null,null],[17,"KEY_hebrew_teth","","",null,null],[17,"KEY_hebrew_yod","","",null,null],[17,"KEY_hebrew_finalkaph","","",null,null],[17,"KEY_hebrew_kaph","","",null,null],[17,"KEY_hebrew_lamed","","",null,null],[17,"KEY_hebrew_finalmem","","",null,null],[17,"KEY_hebrew_mem","","",null,null],[17,"KEY_hebrew_finalnun","","",null,null],[17,"KEY_hebrew_nun","","",null,null],[17,"KEY_hebrew_samech","","",null,null],[17,"KEY_hebrew_samekh","","",null,null],[17,"KEY_hebrew_ayin","","",null,null],[17,"KEY_hebrew_finalpe","","",null,null],[17,"KEY_hebrew_pe","","",null,null],[17,"KEY_hebrew_finalzade","","",null,null],[17,"KEY_hebrew_finalzadi","","",null,null],[17,"KEY_hebrew_zade","","",null,null],[17,"KEY_hebrew_zadi","","",null,null],[17,"KEY_hebrew_qoph","","",null,null],[17,"KEY_hebrew_kuf","","",null,null],[17,"KEY_hebrew_resh","","",null,null],[17,"KEY_hebrew_shin","","",null,null],[17,"KEY_hebrew_taw","","",null,null],[17,"KEY_hebrew_taf","","",null,null],[17,"KEY_Hebrew_switch","","",null,null],[17,"KEY_Thai_kokai","","",null,null],[17,"KEY_Thai_khokhai","","",null,null],[17,"KEY_Thai_khokhuat","","",null,null],[17,"KEY_Thai_khokhwai","","",null,null],[17,"KEY_Thai_khokhon","","",null,null],[17,"KEY_Thai_khorakhang","","",null,null],[17,"KEY_Thai_ngongu","","",null,null],[17,"KEY_Thai_chochan","","",null,null],[17,"KEY_Thai_choching","","",null,null],[17,"KEY_Thai_chochang","","",null,null],[17,"KEY_Thai_soso","","",null,null],[17,"KEY_Thai_chochoe","","",null,null],[17,"KEY_Thai_yoying","","",null,null],[17,"KEY_Thai_dochada","","",null,null],[17,"KEY_Thai_topatak","","",null,null],[17,"KEY_Thai_thothan","","",null,null],[17,"KEY_Thai_thonangmontho","","",null,null],[17,"KEY_Thai_thophuthao","","",null,null],[17,"KEY_Thai_nonen","","",null,null],[17,"KEY_Thai_dodek","","",null,null],[17,"KEY_Thai_totao","","",null,null],[17,"KEY_Thai_thothung","","",null,null],[17,"KEY_Thai_thothahan","","",null,null],[17,"KEY_Thai_thothong","","",null,null],[17,"KEY_Thai_nonu","","",null,null],[17,"KEY_Thai_bobaimai","","",null,null],[17,"KEY_Thai_popla","","",null,null],[17,"KEY_Thai_phophung","","",null,null],[17,"KEY_Thai_fofa","","",null,null],[17,"KEY_Thai_phophan","","",null,null],[17,"KEY_Thai_fofan","","",null,null],[17,"KEY_Thai_phosamphao","","",null,null],[17,"KEY_Thai_moma","","",null,null],[17,"KEY_Thai_yoyak","","",null,null],[17,"KEY_Thai_rorua","","",null,null],[17,"KEY_Thai_ru","","",null,null],[17,"KEY_Thai_loling","","",null,null],[17,"KEY_Thai_lu","","",null,null],[17,"KEY_Thai_wowaen","","",null,null],[17,"KEY_Thai_sosala","","",null,null],[17,"KEY_Thai_sorusi","","",null,null],[17,"KEY_Thai_sosua","","",null,null],[17,"KEY_Thai_hohip","","",null,null],[17,"KEY_Thai_lochula","","",null,null],[17,"KEY_Thai_oang","","",null,null],[17,"KEY_Thai_honokhuk","","",null,null],[17,"KEY_Thai_paiyannoi","","",null,null],[17,"KEY_Thai_saraa","","",null,null],[17,"KEY_Thai_maihanakat","","",null,null],[17,"KEY_Thai_saraaa","","",null,null],[17,"KEY_Thai_saraam","","",null,null],[17,"KEY_Thai_sarai","","",null,null],[17,"KEY_Thai_saraii","","",null,null],[17,"KEY_Thai_saraue","","",null,null],[17,"KEY_Thai_sarauee","","",null,null],[17,"KEY_Thai_sarau","","",null,null],[17,"KEY_Thai_sarauu","","",null,null],[17,"KEY_Thai_phinthu","","",null,null],[17,"KEY_Thai_maihanakat_maitho","","",null,null],[17,"KEY_Thai_baht","","",null,null],[17,"KEY_Thai_sarae","","",null,null],[17,"KEY_Thai_saraae","","",null,null],[17,"KEY_Thai_sarao","","",null,null],[17,"KEY_Thai_saraaimaimuan","","",null,null],[17,"KEY_Thai_saraaimaimalai","","",null,null],[17,"KEY_Thai_lakkhangyao","","",null,null],[17,"KEY_Thai_maiyamok","","",null,null],[17,"KEY_Thai_maitaikhu","","",null,null],[17,"KEY_Thai_maiek","","",null,null],[17,"KEY_Thai_maitho","","",null,null],[17,"KEY_Thai_maitri","","",null,null],[17,"KEY_Thai_maichattawa","","",null,null],[17,"KEY_Thai_thanthakhat","","",null,null],[17,"KEY_Thai_nikhahit","","",null,null],[17,"KEY_Thai_leksun","","",null,null],[17,"KEY_Thai_leknung","","",null,null],[17,"KEY_Thai_leksong","","",null,null],[17,"KEY_Thai_leksam","","",null,null],[17,"KEY_Thai_leksi","","",null,null],[17,"KEY_Thai_lekha","","",null,null],[17,"KEY_Thai_lekhok","","",null,null],[17,"KEY_Thai_lekchet","","",null,null],[17,"KEY_Thai_lekpaet","","",null,null],[17,"KEY_Thai_lekkao","","",null,null],[17,"KEY_Hangul","","",null,null],[17,"KEY_Hangul_Start","","",null,null],[17,"KEY_Hangul_End","","",null,null],[17,"KEY_Hangul_Hanja","","",null,null],[17,"KEY_Hangul_Jamo","","",null,null],[17,"KEY_Hangul_Romaja","","",null,null],[17,"KEY_Hangul_Codeinput","","",null,null],[17,"KEY_Hangul_Jeonja","","",null,null],[17,"KEY_Hangul_Banja","","",null,null],[17,"KEY_Hangul_PreHanja","","",null,null],[17,"KEY_Hangul_PostHanja","","",null,null],[17,"KEY_Hangul_SingleCandidate","","",null,null],[17,"KEY_Hangul_MultipleCandidate","","",null,null],[17,"KEY_Hangul_PreviousCandidate","","",null,null],[17,"KEY_Hangul_Special","","",null,null],[17,"KEY_Hangul_switch","","",null,null],[17,"KEY_Hangul_Kiyeog","","",null,null],[17,"KEY_Hangul_SsangKiyeog","","",null,null],[17,"KEY_Hangul_KiyeogSios","","",null,null],[17,"KEY_Hangul_Nieun","","",null,null],[17,"KEY_Hangul_NieunJieuj","","",null,null],[17,"KEY_Hangul_NieunHieuh","","",null,null],[17,"KEY_Hangul_Dikeud","","",null,null],[17,"KEY_Hangul_SsangDikeud","","",null,null],[17,"KEY_Hangul_Rieul","","",null,null],[17,"KEY_Hangul_RieulKiyeog","","",null,null],[17,"KEY_Hangul_RieulMieum","","",null,null],[17,"KEY_Hangul_RieulPieub","","",null,null],[17,"KEY_Hangul_RieulSios","","",null,null],[17,"KEY_Hangul_RieulTieut","","",null,null],[17,"KEY_Hangul_RieulPhieuf","","",null,null],[17,"KEY_Hangul_RieulHieuh","","",null,null],[17,"KEY_Hangul_Mieum","","",null,null],[17,"KEY_Hangul_Pieub","","",null,null],[17,"KEY_Hangul_SsangPieub","","",null,null],[17,"KEY_Hangul_PieubSios","","",null,null],[17,"KEY_Hangul_Sios","","",null,null],[17,"KEY_Hangul_SsangSios","","",null,null],[17,"KEY_Hangul_Ieung","","",null,null],[17,"KEY_Hangul_Jieuj","","",null,null],[17,"KEY_Hangul_SsangJieuj","","",null,null],[17,"KEY_Hangul_Cieuc","","",null,null],[17,"KEY_Hangul_Khieuq","","",null,null],[17,"KEY_Hangul_Tieut","","",null,null],[17,"KEY_Hangul_Phieuf","","",null,null],[17,"KEY_Hangul_Hieuh","","",null,null],[17,"KEY_Hangul_A","","",null,null],[17,"KEY_Hangul_AE","","",null,null],[17,"KEY_Hangul_YA","","",null,null],[17,"KEY_Hangul_YAE","","",null,null],[17,"KEY_Hangul_EO","","",null,null],[17,"KEY_Hangul_E","","",null,null],[17,"KEY_Hangul_YEO","","",null,null],[17,"KEY_Hangul_YE","","",null,null],[17,"KEY_Hangul_O","","",null,null],[17,"KEY_Hangul_WA","","",null,null],[17,"KEY_Hangul_WAE","","",null,null],[17,"KEY_Hangul_OE","","",null,null],[17,"KEY_Hangul_YO","","",null,null],[17,"KEY_Hangul_U","","",null,null],[17,"KEY_Hangul_WEO","","",null,null],[17,"KEY_Hangul_WE","","",null,null],[17,"KEY_Hangul_WI","","",null,null],[17,"KEY_Hangul_YU","","",null,null],[17,"KEY_Hangul_EU","","",null,null],[17,"KEY_Hangul_YI","","",null,null],[17,"KEY_Hangul_I","","",null,null],[17,"KEY_Hangul_J_Kiyeog","","",null,null],[17,"KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"KEY_Hangul_J_KiyeogSios","","",null,null],[17,"KEY_Hangul_J_Nieun","","",null,null],[17,"KEY_Hangul_J_NieunJieuj","","",null,null],[17,"KEY_Hangul_J_NieunHieuh","","",null,null],[17,"KEY_Hangul_J_Dikeud","","",null,null],[17,"KEY_Hangul_J_Rieul","","",null,null],[17,"KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"KEY_Hangul_J_RieulMieum","","",null,null],[17,"KEY_Hangul_J_RieulPieub","","",null,null],[17,"KEY_Hangul_J_RieulSios","","",null,null],[17,"KEY_Hangul_J_RieulTieut","","",null,null],[17,"KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"KEY_Hangul_J_RieulHieuh","","",null,null],[17,"KEY_Hangul_J_Mieum","","",null,null],[17,"KEY_Hangul_J_Pieub","","",null,null],[17,"KEY_Hangul_J_PieubSios","","",null,null],[17,"KEY_Hangul_J_Sios","","",null,null],[17,"KEY_Hangul_J_SsangSios","","",null,null],[17,"KEY_Hangul_J_Ieung","","",null,null],[17,"KEY_Hangul_J_Jieuj","","",null,null],[17,"KEY_Hangul_J_Cieuc","","",null,null],[17,"KEY_Hangul_J_Khieuq","","",null,null],[17,"KEY_Hangul_J_Tieut","","",null,null],[17,"KEY_Hangul_J_Phieuf","","",null,null],[17,"KEY_Hangul_J_Hieuh","","",null,null],[17,"KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"KEY_Hangul_PanSios","","",null,null],[17,"KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"KEY_Hangul_YeorinHieuh","","",null,null],[17,"KEY_Hangul_AraeA","","",null,null],[17,"KEY_Hangul_AraeAE","","",null,null],[17,"KEY_Hangul_J_PanSios","","",null,null],[17,"KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"KEY_Korean_Won","","",null,null],[17,"KEY_Armenian_ligature_ew","","",null,null],[17,"KEY_Armenian_full_stop","","",null,null],[17,"KEY_Armenian_verjaket","","",null,null],[17,"KEY_Armenian_separation_mark","","",null,null],[17,"KEY_Armenian_but","","",null,null],[17,"KEY_Armenian_hyphen","","",null,null],[17,"KEY_Armenian_yentamna","","",null,null],[17,"KEY_Armenian_exclam","","",null,null],[17,"KEY_Armenian_amanak","","",null,null],[17,"KEY_Armenian_accent","","",null,null],[17,"KEY_Armenian_shesht","","",null,null],[17,"KEY_Armenian_question","","",null,null],[17,"KEY_Armenian_paruyk","","",null,null],[17,"KEY_Armenian_AYB","","",null,null],[17,"KEY_Armenian_ayb","","",null,null],[17,"KEY_Armenian_BEN","","",null,null],[17,"KEY_Armenian_ben","","",null,null],[17,"KEY_Armenian_GIM","","",null,null],[17,"KEY_Armenian_gim","","",null,null],[17,"KEY_Armenian_DA","","",null,null],[17,"KEY_Armenian_da","","",null,null],[17,"KEY_Armenian_YECH","","",null,null],[17,"KEY_Armenian_yech","","",null,null],[17,"KEY_Armenian_ZA","","",null,null],[17,"KEY_Armenian_za","","",null,null],[17,"KEY_Armenian_E","","",null,null],[17,"KEY_Armenian_e","","",null,null],[17,"KEY_Armenian_AT","","",null,null],[17,"KEY_Armenian_at","","",null,null],[17,"KEY_Armenian_TO","","",null,null],[17,"KEY_Armenian_to","","",null,null],[17,"KEY_Armenian_ZHE","","",null,null],[17,"KEY_Armenian_zhe","","",null,null],[17,"KEY_Armenian_INI","","",null,null],[17,"KEY_Armenian_ini","","",null,null],[17,"KEY_Armenian_LYUN","","",null,null],[17,"KEY_Armenian_lyun","","",null,null],[17,"KEY_Armenian_KHE","","",null,null],[17,"KEY_Armenian_khe","","",null,null],[17,"KEY_Armenian_TSA","","",null,null],[17,"KEY_Armenian_tsa","","",null,null],[17,"KEY_Armenian_KEN","","",null,null],[17,"KEY_Armenian_ken","","",null,null],[17,"KEY_Armenian_HO","","",null,null],[17,"KEY_Armenian_ho","","",null,null],[17,"KEY_Armenian_DZA","","",null,null],[17,"KEY_Armenian_dza","","",null,null],[17,"KEY_Armenian_GHAT","","",null,null],[17,"KEY_Armenian_ghat","","",null,null],[17,"KEY_Armenian_TCHE","","",null,null],[17,"KEY_Armenian_tche","","",null,null],[17,"KEY_Armenian_MEN","","",null,null],[17,"KEY_Armenian_men","","",null,null],[17,"KEY_Armenian_HI","","",null,null],[17,"KEY_Armenian_hi","","",null,null],[17,"KEY_Armenian_NU","","",null,null],[17,"KEY_Armenian_nu","","",null,null],[17,"KEY_Armenian_SHA","","",null,null],[17,"KEY_Armenian_sha","","",null,null],[17,"KEY_Armenian_VO","","",null,null],[17,"KEY_Armenian_vo","","",null,null],[17,"KEY_Armenian_CHA","","",null,null],[17,"KEY_Armenian_cha","","",null,null],[17,"KEY_Armenian_PE","","",null,null],[17,"KEY_Armenian_pe","","",null,null],[17,"KEY_Armenian_JE","","",null,null],[17,"KEY_Armenian_je","","",null,null],[17,"KEY_Armenian_RA","","",null,null],[17,"KEY_Armenian_ra","","",null,null],[17,"KEY_Armenian_SE","","",null,null],[17,"KEY_Armenian_se","","",null,null],[17,"KEY_Armenian_VEV","","",null,null],[17,"KEY_Armenian_vev","","",null,null],[17,"KEY_Armenian_TYUN","","",null,null],[17,"KEY_Armenian_tyun","","",null,null],[17,"KEY_Armenian_RE","","",null,null],[17,"KEY_Armenian_re","","",null,null],[17,"KEY_Armenian_TSO","","",null,null],[17,"KEY_Armenian_tso","","",null,null],[17,"KEY_Armenian_VYUN","","",null,null],[17,"KEY_Armenian_vyun","","",null,null],[17,"KEY_Armenian_PYUR","","",null,null],[17,"KEY_Armenian_pyur","","",null,null],[17,"KEY_Armenian_KE","","",null,null],[17,"KEY_Armenian_ke","","",null,null],[17,"KEY_Armenian_O","","",null,null],[17,"KEY_Armenian_o","","",null,null],[17,"KEY_Armenian_FE","","",null,null],[17,"KEY_Armenian_fe","","",null,null],[17,"KEY_Armenian_apostrophe","","",null,null],[17,"KEY_Georgian_an","","",null,null],[17,"KEY_Georgian_ban","","",null,null],[17,"KEY_Georgian_gan","","",null,null],[17,"KEY_Georgian_don","","",null,null],[17,"KEY_Georgian_en","","",null,null],[17,"KEY_Georgian_vin","","",null,null],[17,"KEY_Georgian_zen","","",null,null],[17,"KEY_Georgian_tan","","",null,null],[17,"KEY_Georgian_in","","",null,null],[17,"KEY_Georgian_kan","","",null,null],[17,"KEY_Georgian_las","","",null,null],[17,"KEY_Georgian_man","","",null,null],[17,"KEY_Georgian_nar","","",null,null],[17,"KEY_Georgian_on","","",null,null],[17,"KEY_Georgian_par","","",null,null],[17,"KEY_Georgian_zhar","","",null,null],[17,"KEY_Georgian_rae","","",null,null],[17,"KEY_Georgian_san","","",null,null],[17,"KEY_Georgian_tar","","",null,null],[17,"KEY_Georgian_un","","",null,null],[17,"KEY_Georgian_phar","","",null,null],[17,"KEY_Georgian_khar","","",null,null],[17,"KEY_Georgian_ghan","","",null,null],[17,"KEY_Georgian_qar","","",null,null],[17,"KEY_Georgian_shin","","",null,null],[17,"KEY_Georgian_chin","","",null,null],[17,"KEY_Georgian_can","","",null,null],[17,"KEY_Georgian_jil","","",null,null],[17,"KEY_Georgian_cil","","",null,null],[17,"KEY_Georgian_char","","",null,null],[17,"KEY_Georgian_xan","","",null,null],[17,"KEY_Georgian_jhan","","",null,null],[17,"KEY_Georgian_hae","","",null,null],[17,"KEY_Georgian_he","","",null,null],[17,"KEY_Georgian_hie","","",null,null],[17,"KEY_Georgian_we","","",null,null],[17,"KEY_Georgian_har","","",null,null],[17,"KEY_Georgian_hoe","","",null,null],[17,"KEY_Georgian_fi","","",null,null],[17,"KEY_Xabovedot","","",null,null],[17,"KEY_Ibreve","","",null,null],[17,"KEY_Zstroke","","",null,null],[17,"KEY_Gcaron","","",null,null],[17,"KEY_Ocaron","","",null,null],[17,"KEY_Obarred","","",null,null],[17,"KEY_xabovedot","","",null,null],[17,"KEY_ibreve","","",null,null],[17,"KEY_zstroke","","",null,null],[17,"KEY_gcaron","","",null,null],[17,"KEY_ocaron","","",null,null],[17,"KEY_obarred","","",null,null],[17,"KEY_SCHWA","","",null,null],[17,"KEY_schwa","","",null,null],[17,"KEY_EZH","","",null,null],[17,"KEY_ezh","","",null,null],[17,"KEY_Lbelowdot","","",null,null],[17,"KEY_lbelowdot","","",null,null],[17,"KEY_Abelowdot","","",null,null],[17,"KEY_abelowdot","","",null,null],[17,"KEY_Ahook","","",null,null],[17,"KEY_ahook","","",null,null],[17,"KEY_Acircumflexacute","","",null,null],[17,"KEY_acircumflexacute","","",null,null],[17,"KEY_Acircumflexgrave","","",null,null],[17,"KEY_acircumflexgrave","","",null,null],[17,"KEY_Acircumflexhook","","",null,null],[17,"KEY_acircumflexhook","","",null,null],[17,"KEY_Acircumflextilde","","",null,null],[17,"KEY_acircumflextilde","","",null,null],[17,"KEY_Acircumflexbelowdot","","",null,null],[17,"KEY_acircumflexbelowdot","","",null,null],[17,"KEY_Abreveacute","","",null,null],[17,"KEY_abreveacute","","",null,null],[17,"KEY_Abrevegrave","","",null,null],[17,"KEY_abrevegrave","","",null,null],[17,"KEY_Abrevehook","","",null,null],[17,"KEY_abrevehook","","",null,null],[17,"KEY_Abrevetilde","","",null,null],[17,"KEY_abrevetilde","","",null,null],[17,"KEY_Abrevebelowdot","","",null,null],[17,"KEY_abrevebelowdot","","",null,null],[17,"KEY_Ebelowdot","","",null,null],[17,"KEY_ebelowdot","","",null,null],[17,"KEY_Ehook","","",null,null],[17,"KEY_ehook","","",null,null],[17,"KEY_Etilde","","",null,null],[17,"KEY_etilde","","",null,null],[17,"KEY_Ecircumflexacute","","",null,null],[17,"KEY_ecircumflexacute","","",null,null],[17,"KEY_Ecircumflexgrave","","",null,null],[17,"KEY_ecircumflexgrave","","",null,null],[17,"KEY_Ecircumflexhook","","",null,null],[17,"KEY_ecircumflexhook","","",null,null],[17,"KEY_Ecircumflextilde","","",null,null],[17,"KEY_ecircumflextilde","","",null,null],[17,"KEY_Ecircumflexbelowdot","","",null,null],[17,"KEY_ecircumflexbelowdot","","",null,null],[17,"KEY_Ihook","","",null,null],[17,"KEY_ihook","","",null,null],[17,"KEY_Ibelowdot","","",null,null],[17,"KEY_ibelowdot","","",null,null],[17,"KEY_Obelowdot","","",null,null],[17,"KEY_obelowdot","","",null,null],[17,"KEY_Ohook","","",null,null],[17,"KEY_ohook","","",null,null],[17,"KEY_Ocircumflexacute","","",null,null],[17,"KEY_ocircumflexacute","","",null,null],[17,"KEY_Ocircumflexgrave","","",null,null],[17,"KEY_ocircumflexgrave","","",null,null],[17,"KEY_Ocircumflexhook","","",null,null],[17,"KEY_ocircumflexhook","","",null,null],[17,"KEY_Ocircumflextilde","","",null,null],[17,"KEY_ocircumflextilde","","",null,null],[17,"KEY_Ocircumflexbelowdot","","",null,null],[17,"KEY_ocircumflexbelowdot","","",null,null],[17,"KEY_Ohornacute","","",null,null],[17,"KEY_ohornacute","","",null,null],[17,"KEY_Ohorngrave","","",null,null],[17,"KEY_ohorngrave","","",null,null],[17,"KEY_Ohornhook","","",null,null],[17,"KEY_ohornhook","","",null,null],[17,"KEY_Ohorntilde","","",null,null],[17,"KEY_ohorntilde","","",null,null],[17,"KEY_Ohornbelowdot","","",null,null],[17,"KEY_ohornbelowdot","","",null,null],[17,"KEY_Ubelowdot","","",null,null],[17,"KEY_ubelowdot","","",null,null],[17,"KEY_Uhook","","",null,null],[17,"KEY_uhook","","",null,null],[17,"KEY_Uhornacute","","",null,null],[17,"KEY_uhornacute","","",null,null],[17,"KEY_Uhorngrave","","",null,null],[17,"KEY_uhorngrave","","",null,null],[17,"KEY_Uhornhook","","",null,null],[17,"KEY_uhornhook","","",null,null],[17,"KEY_Uhorntilde","","",null,null],[17,"KEY_uhorntilde","","",null,null],[17,"KEY_Uhornbelowdot","","",null,null],[17,"KEY_uhornbelowdot","","",null,null],[17,"KEY_Ybelowdot","","",null,null],[17,"KEY_ybelowdot","","",null,null],[17,"KEY_Yhook","","",null,null],[17,"KEY_yhook","","",null,null],[17,"KEY_Ytilde","","",null,null],[17,"KEY_ytilde","","",null,null],[17,"KEY_Ohorn","","",null,null],[17,"KEY_ohorn","","",null,null],[17,"KEY_Uhorn","","",null,null],[17,"KEY_uhorn","","",null,null],[17,"KEY_EcuSign","","",null,null],[17,"KEY_ColonSign","","",null,null],[17,"KEY_CruzeiroSign","","",null,null],[17,"KEY_FFrancSign","","",null,null],[17,"KEY_LiraSign","","",null,null],[17,"KEY_MillSign","","",null,null],[17,"KEY_NairaSign","","",null,null],[17,"KEY_PesetaSign","","",null,null],[17,"KEY_RupeeSign","","",null,null],[17,"KEY_WonSign","","",null,null],[17,"KEY_NewSheqelSign","","",null,null],[17,"KEY_DongSign","","",null,null],[17,"KEY_EuroSign","","",null,null],[17,"KEY_zerosuperior","","",null,null],[17,"KEY_foursuperior","","",null,null],[17,"KEY_fivesuperior","","",null,null],[17,"KEY_sixsuperior","","",null,null],[17,"KEY_sevensuperior","","",null,null],[17,"KEY_eightsuperior","","",null,null],[17,"KEY_ninesuperior","","",null,null],[17,"KEY_zerosubscript","","",null,null],[17,"KEY_onesubscript","","",null,null],[17,"KEY_twosubscript","","",null,null],[17,"KEY_threesubscript","","",null,null],[17,"KEY_foursubscript","","",null,null],[17,"KEY_fivesubscript","","",null,null],[17,"KEY_sixsubscript","","",null,null],[17,"KEY_sevensubscript","","",null,null],[17,"KEY_eightsubscript","","",null,null],[17,"KEY_ninesubscript","","",null,null],[17,"KEY_partdifferential","","",null,null],[17,"KEY_emptyset","","",null,null],[17,"KEY_elementof","","",null,null],[17,"KEY_notelementof","","",null,null],[17,"KEY_containsas","","",null,null],[17,"KEY_squareroot","","",null,null],[17,"KEY_cuberoot","","",null,null],[17,"KEY_fourthroot","","",null,null],[17,"KEY_dintegral","","",null,null],[17,"KEY_tintegral","","",null,null],[17,"KEY_because","","",null,null],[17,"KEY_approxeq","","",null,null],[17,"KEY_notapproxeq","","",null,null],[17,"KEY_notidentical","","",null,null],[17,"KEY_stricteq","","",null,null],[17,"KEY_braille_dot_1","","",null,null],[17,"KEY_braille_dot_2","","",null,null],[17,"KEY_braille_dot_3","","",null,null],[17,"KEY_braille_dot_4","","",null,null],[17,"KEY_braille_dot_5","","",null,null],[17,"KEY_braille_dot_6","","",null,null],[17,"KEY_braille_dot_7","","",null,null],[17,"KEY_braille_dot_8","","",null,null],[17,"KEY_braille_dot_9","","",null,null],[17,"KEY_braille_dot_10","","",null,null],[17,"KEY_braille_blank","","",null,null],[17,"KEY_braille_dots_1","","",null,null],[17,"KEY_braille_dots_2","","",null,null],[17,"KEY_braille_dots_12","","",null,null],[17,"KEY_braille_dots_3","","",null,null],[17,"KEY_braille_dots_13","","",null,null],[17,"KEY_braille_dots_23","","",null,null],[17,"KEY_braille_dots_123","","",null,null],[17,"KEY_braille_dots_4","","",null,null],[17,"KEY_braille_dots_14","","",null,null],[17,"KEY_braille_dots_24","","",null,null],[17,"KEY_braille_dots_124","","",null,null],[17,"KEY_braille_dots_34","","",null,null],[17,"KEY_braille_dots_134","","",null,null],[17,"KEY_braille_dots_234","","",null,null],[17,"KEY_braille_dots_1234","","",null,null],[17,"KEY_braille_dots_5","","",null,null],[17,"KEY_braille_dots_15","","",null,null],[17,"KEY_braille_dots_25","","",null,null],[17,"KEY_braille_dots_125","","",null,null],[17,"KEY_braille_dots_35","","",null,null],[17,"KEY_braille_dots_135","","",null,null],[17,"KEY_braille_dots_235","","",null,null],[17,"KEY_braille_dots_1235","","",null,null],[17,"KEY_braille_dots_45","","",null,null],[17,"KEY_braille_dots_145","","",null,null],[17,"KEY_braille_dots_245","","",null,null],[17,"KEY_braille_dots_1245","","",null,null],[17,"KEY_braille_dots_345","","",null,null],[17,"KEY_braille_dots_1345","","",null,null],[17,"KEY_braille_dots_2345","","",null,null],[17,"KEY_braille_dots_12345","","",null,null],[17,"KEY_braille_dots_6","","",null,null],[17,"KEY_braille_dots_16","","",null,null],[17,"KEY_braille_dots_26","","",null,null],[17,"KEY_braille_dots_126","","",null,null],[17,"KEY_braille_dots_36","","",null,null],[17,"KEY_braille_dots_136","","",null,null],[17,"KEY_braille_dots_236","","",null,null],[17,"KEY_braille_dots_1236","","",null,null],[17,"KEY_braille_dots_46","","",null,null],[17,"KEY_braille_dots_146","","",null,null],[17,"KEY_braille_dots_246","","",null,null],[17,"KEY_braille_dots_1246","","",null,null],[17,"KEY_braille_dots_346","","",null,null],[17,"KEY_braille_dots_1346","","",null,null],[17,"KEY_braille_dots_2346","","",null,null],[17,"KEY_braille_dots_12346","","",null,null],[17,"KEY_braille_dots_56","","",null,null],[17,"KEY_braille_dots_156","","",null,null],[17,"KEY_braille_dots_256","","",null,null],[17,"KEY_braille_dots_1256","","",null,null],[17,"KEY_braille_dots_356","","",null,null],[17,"KEY_braille_dots_1356","","",null,null],[17,"KEY_braille_dots_2356","","",null,null],[17,"KEY_braille_dots_12356","","",null,null],[17,"KEY_braille_dots_456","","",null,null],[17,"KEY_braille_dots_1456","","",null,null],[17,"KEY_braille_dots_2456","","",null,null],[17,"KEY_braille_dots_12456","","",null,null],[17,"KEY_braille_dots_3456","","",null,null],[17,"KEY_braille_dots_13456","","",null,null],[17,"KEY_braille_dots_23456","","",null,null],[17,"KEY_braille_dots_123456","","",null,null],[17,"KEY_braille_dots_7","","",null,null],[17,"KEY_braille_dots_17","","",null,null],[17,"KEY_braille_dots_27","","",null,null],[17,"KEY_braille_dots_127","","",null,null],[17,"KEY_braille_dots_37","","",null,null],[17,"KEY_braille_dots_137","","",null,null],[17,"KEY_braille_dots_237","","",null,null],[17,"KEY_braille_dots_1237","","",null,null],[17,"KEY_braille_dots_47","","",null,null],[17,"KEY_braille_dots_147","","",null,null],[17,"KEY_braille_dots_247","","",null,null],[17,"KEY_braille_dots_1247","","",null,null],[17,"KEY_braille_dots_347","","",null,null],[17,"KEY_braille_dots_1347","","",null,null],[17,"KEY_braille_dots_2347","","",null,null],[17,"KEY_braille_dots_12347","","",null,null],[17,"KEY_braille_dots_57","","",null,null],[17,"KEY_braille_dots_157","","",null,null],[17,"KEY_braille_dots_257","","",null,null],[17,"KEY_braille_dots_1257","","",null,null],[17,"KEY_braille_dots_357","","",null,null],[17,"KEY_braille_dots_1357","","",null,null],[17,"KEY_braille_dots_2357","","",null,null],[17,"KEY_braille_dots_12357","","",null,null],[17,"KEY_braille_dots_457","","",null,null],[17,"KEY_braille_dots_1457","","",null,null],[17,"KEY_braille_dots_2457","","",null,null],[17,"KEY_braille_dots_12457","","",null,null],[17,"KEY_braille_dots_3457","","",null,null],[17,"KEY_braille_dots_13457","","",null,null],[17,"KEY_braille_dots_23457","","",null,null],[17,"KEY_braille_dots_123457","","",null,null],[17,"KEY_braille_dots_67","","",null,null],[17,"KEY_braille_dots_167","","",null,null],[17,"KEY_braille_dots_267","","",null,null],[17,"KEY_braille_dots_1267","","",null,null],[17,"KEY_braille_dots_367","","",null,null],[17,"KEY_braille_dots_1367","","",null,null],[17,"KEY_braille_dots_2367","","",null,null],[17,"KEY_braille_dots_12367","","",null,null],[17,"KEY_braille_dots_467","","",null,null],[17,"KEY_braille_dots_1467","","",null,null],[17,"KEY_braille_dots_2467","","",null,null],[17,"KEY_braille_dots_12467","","",null,null],[17,"KEY_braille_dots_3467","","",null,null],[17,"KEY_braille_dots_13467","","",null,null],[17,"KEY_braille_dots_23467","","",null,null],[17,"KEY_braille_dots_123467","","",null,null],[17,"KEY_braille_dots_567","","",null,null],[17,"KEY_braille_dots_1567","","",null,null],[17,"KEY_braille_dots_2567","","",null,null],[17,"KEY_braille_dots_12567","","",null,null],[17,"KEY_braille_dots_3567","","",null,null],[17,"KEY_braille_dots_13567","","",null,null],[17,"KEY_braille_dots_23567","","",null,null],[17,"KEY_braille_dots_123567","","",null,null],[17,"KEY_braille_dots_4567","","",null,null],[17,"KEY_braille_dots_14567","","",null,null],[17,"KEY_braille_dots_24567","","",null,null],[17,"KEY_braille_dots_124567","","",null,null],[17,"KEY_braille_dots_34567","","",null,null],[17,"KEY_braille_dots_134567","","",null,null],[17,"KEY_braille_dots_234567","","",null,null],[17,"KEY_braille_dots_1234567","","",null,null],[17,"KEY_braille_dots_8","","",null,null],[17,"KEY_braille_dots_18","","",null,null],[17,"KEY_braille_dots_28","","",null,null],[17,"KEY_braille_dots_128","","",null,null],[17,"KEY_braille_dots_38","","",null,null],[17,"KEY_braille_dots_138","","",null,null],[17,"KEY_braille_dots_238","","",null,null],[17,"KEY_braille_dots_1238","","",null,null],[17,"KEY_braille_dots_48","","",null,null],[17,"KEY_braille_dots_148","","",null,null],[17,"KEY_braille_dots_248","","",null,null],[17,"KEY_braille_dots_1248","","",null,null],[17,"KEY_braille_dots_348","","",null,null],[17,"KEY_braille_dots_1348","","",null,null],[17,"KEY_braille_dots_2348","","",null,null],[17,"KEY_braille_dots_12348","","",null,null],[17,"KEY_braille_dots_58","","",null,null],[17,"KEY_braille_dots_158","","",null,null],[17,"KEY_braille_dots_258","","",null,null],[17,"KEY_braille_dots_1258","","",null,null],[17,"KEY_braille_dots_358","","",null,null],[17,"KEY_braille_dots_1358","","",null,null],[17,"KEY_braille_dots_2358","","",null,null],[17,"KEY_braille_dots_12358","","",null,null],[17,"KEY_braille_dots_458","","",null,null],[17,"KEY_braille_dots_1458","","",null,null],[17,"KEY_braille_dots_2458","","",null,null],[17,"KEY_braille_dots_12458","","",null,null],[17,"KEY_braille_dots_3458","","",null,null],[17,"KEY_braille_dots_13458","","",null,null],[17,"KEY_braille_dots_23458","","",null,null],[17,"KEY_braille_dots_123458","","",null,null],[17,"KEY_braille_dots_68","","",null,null],[17,"KEY_braille_dots_168","","",null,null],[17,"KEY_braille_dots_268","","",null,null],[17,"KEY_braille_dots_1268","","",null,null],[17,"KEY_braille_dots_368","","",null,null],[17,"KEY_braille_dots_1368","","",null,null],[17,"KEY_braille_dots_2368","","",null,null],[17,"KEY_braille_dots_12368","","",null,null],[17,"KEY_braille_dots_468","","",null,null],[17,"KEY_braille_dots_1468","","",null,null],[17,"KEY_braille_dots_2468","","",null,null],[17,"KEY_braille_dots_12468","","",null,null],[17,"KEY_braille_dots_3468","","",null,null],[17,"KEY_braille_dots_13468","","",null,null],[17,"KEY_braille_dots_23468","","",null,null],[17,"KEY_braille_dots_123468","","",null,null],[17,"KEY_braille_dots_568","","",null,null],[17,"KEY_braille_dots_1568","","",null,null],[17,"KEY_braille_dots_2568","","",null,null],[17,"KEY_braille_dots_12568","","",null,null],[17,"KEY_braille_dots_3568","","",null,null],[17,"KEY_braille_dots_13568","","",null,null],[17,"KEY_braille_dots_23568","","",null,null],[17,"KEY_braille_dots_123568","","",null,null],[17,"KEY_braille_dots_4568","","",null,null],[17,"KEY_braille_dots_14568","","",null,null],[17,"KEY_braille_dots_24568","","",null,null],[17,"KEY_braille_dots_124568","","",null,null],[17,"KEY_braille_dots_34568","","",null,null],[17,"KEY_braille_dots_134568","","",null,null],[17,"KEY_braille_dots_234568","","",null,null],[17,"KEY_braille_dots_1234568","","",null,null],[17,"KEY_braille_dots_78","","",null,null],[17,"KEY_braille_dots_178","","",null,null],[17,"KEY_braille_dots_278","","",null,null],[17,"KEY_braille_dots_1278","","",null,null],[17,"KEY_braille_dots_378","","",null,null],[17,"KEY_braille_dots_1378","","",null,null],[17,"KEY_braille_dots_2378","","",null,null],[17,"KEY_braille_dots_12378","","",null,null],[17,"KEY_braille_dots_478","","",null,null],[17,"KEY_braille_dots_1478","","",null,null],[17,"KEY_braille_dots_2478","","",null,null],[17,"KEY_braille_dots_12478","","",null,null],[17,"KEY_braille_dots_3478","","",null,null],[17,"KEY_braille_dots_13478","","",null,null],[17,"KEY_braille_dots_23478","","",null,null],[17,"KEY_braille_dots_123478","","",null,null],[17,"KEY_braille_dots_578","","",null,null],[17,"KEY_braille_dots_1578","","",null,null],[17,"KEY_braille_dots_2578","","",null,null],[17,"KEY_braille_dots_12578","","",null,null],[17,"KEY_braille_dots_3578","","",null,null],[17,"KEY_braille_dots_13578","","",null,null],[17,"KEY_braille_dots_23578","","",null,null],[17,"KEY_braille_dots_123578","","",null,null],[17,"KEY_braille_dots_4578","","",null,null],[17,"KEY_braille_dots_14578","","",null,null],[17,"KEY_braille_dots_24578","","",null,null],[17,"KEY_braille_dots_124578","","",null,null],[17,"KEY_braille_dots_34578","","",null,null],[17,"KEY_braille_dots_134578","","",null,null],[17,"KEY_braille_dots_234578","","",null,null],[17,"KEY_braille_dots_1234578","","",null,null],[17,"KEY_braille_dots_678","","",null,null],[17,"KEY_braille_dots_1678","","",null,null],[17,"KEY_braille_dots_2678","","",null,null],[17,"KEY_braille_dots_12678","","",null,null],[17,"KEY_braille_dots_3678","","",null,null],[17,"KEY_braille_dots_13678","","",null,null],[17,"KEY_braille_dots_23678","","",null,null],[17,"KEY_braille_dots_123678","","",null,null],[17,"KEY_braille_dots_4678","","",null,null],[17,"KEY_braille_dots_14678","","",null,null],[17,"KEY_braille_dots_24678","","",null,null],[17,"KEY_braille_dots_124678","","",null,null],[17,"KEY_braille_dots_34678","","",null,null],[17,"KEY_braille_dots_134678","","",null,null],[17,"KEY_braille_dots_234678","","",null,null],[17,"KEY_braille_dots_1234678","","",null,null],[17,"KEY_braille_dots_5678","","",null,null],[17,"KEY_braille_dots_15678","","",null,null],[17,"KEY_braille_dots_25678","","",null,null],[17,"KEY_braille_dots_125678","","",null,null],[17,"KEY_braille_dots_35678","","",null,null],[17,"KEY_braille_dots_135678","","",null,null],[17,"KEY_braille_dots_235678","","",null,null],[17,"KEY_braille_dots_1235678","","",null,null],[17,"KEY_braille_dots_45678","","",null,null],[17,"KEY_braille_dots_145678","","",null,null],[17,"KEY_braille_dots_245678","","",null,null],[17,"KEY_braille_dots_1245678","","",null,null],[17,"KEY_braille_dots_345678","","",null,null],[17,"KEY_braille_dots_1345678","","",null,null],[17,"KEY_braille_dots_2345678","","",null,null],[17,"KEY_braille_dots_12345678","","",null,null],[17,"KEY_Sinh_ng","","",null,null],[17,"KEY_Sinh_h2","","",null,null],[17,"KEY_Sinh_a","","",null,null],[17,"KEY_Sinh_aa","","",null,null],[17,"KEY_Sinh_ae","","",null,null],[17,"KEY_Sinh_aee","","",null,null],[17,"KEY_Sinh_i","","",null,null],[17,"KEY_Sinh_ii","","",null,null],[17,"KEY_Sinh_u","","",null,null],[17,"KEY_Sinh_uu","","",null,null],[17,"KEY_Sinh_ri","","",null,null],[17,"KEY_Sinh_rii","","",null,null],[17,"KEY_Sinh_lu","","",null,null],[17,"KEY_Sinh_luu","","",null,null],[17,"KEY_Sinh_e","","",null,null],[17,"KEY_Sinh_ee","","",null,null],[17,"KEY_Sinh_ai","","",null,null],[17,"KEY_Sinh_o","","",null,null],[17,"KEY_Sinh_oo","","",null,null],[17,"KEY_Sinh_au","","",null,null],[17,"KEY_Sinh_ka","","",null,null],[17,"KEY_Sinh_kha","","",null,null],[17,"KEY_Sinh_ga","","",null,null],[17,"KEY_Sinh_gha","","",null,null],[17,"KEY_Sinh_ng2","","",null,null],[17,"KEY_Sinh_nga","","",null,null],[17,"KEY_Sinh_ca","","",null,null],[17,"KEY_Sinh_cha","","",null,null],[17,"KEY_Sinh_ja","","",null,null],[17,"KEY_Sinh_jha","","",null,null],[17,"KEY_Sinh_nya","","",null,null],[17,"KEY_Sinh_jnya","","",null,null],[17,"KEY_Sinh_nja","","",null,null],[17,"KEY_Sinh_tta","","",null,null],[17,"KEY_Sinh_ttha","","",null,null],[17,"KEY_Sinh_dda","","",null,null],[17,"KEY_Sinh_ddha","","",null,null],[17,"KEY_Sinh_nna","","",null,null],[17,"KEY_Sinh_ndda","","",null,null],[17,"KEY_Sinh_tha","","",null,null],[17,"KEY_Sinh_thha","","",null,null],[17,"KEY_Sinh_dha","","",null,null],[17,"KEY_Sinh_dhha","","",null,null],[17,"KEY_Sinh_na","","",null,null],[17,"KEY_Sinh_ndha","","",null,null],[17,"KEY_Sinh_pa","","",null,null],[17,"KEY_Sinh_pha","","",null,null],[17,"KEY_Sinh_ba","","",null,null],[17,"KEY_Sinh_bha","","",null,null],[17,"KEY_Sinh_ma","","",null,null],[17,"KEY_Sinh_mba","","",null,null],[17,"KEY_Sinh_ya","","",null,null],[17,"KEY_Sinh_ra","","",null,null],[17,"KEY_Sinh_la","","",null,null],[17,"KEY_Sinh_va","","",null,null],[17,"KEY_Sinh_sha","","",null,null],[17,"KEY_Sinh_ssha","","",null,null],[17,"KEY_Sinh_sa","","",null,null],[17,"KEY_Sinh_ha","","",null,null],[17,"KEY_Sinh_lla","","",null,null],[17,"KEY_Sinh_fa","","",null,null],[17,"KEY_Sinh_al","","",null,null],[17,"KEY_Sinh_aa2","","",null,null],[17,"KEY_Sinh_ae2","","",null,null],[17,"KEY_Sinh_aee2","","",null,null],[17,"KEY_Sinh_i2","","",null,null],[17,"KEY_Sinh_ii2","","",null,null],[17,"KEY_Sinh_u2","","",null,null],[17,"KEY_Sinh_uu2","","",null,null],[17,"KEY_Sinh_ru2","","",null,null],[17,"KEY_Sinh_e2","","",null,null],[17,"KEY_Sinh_ee2","","",null,null],[17,"KEY_Sinh_ai2","","",null,null],[17,"KEY_Sinh_o2","","",null,null],[17,"KEY_Sinh_oo2","","",null,null],[17,"KEY_Sinh_au2","","",null,null],[17,"KEY_Sinh_lu2","","",null,null],[17,"KEY_Sinh_ruu2","","",null,null],[17,"KEY_Sinh_luu2","","",null,null],[17,"KEY_Sinh_kunddaliya","","",null,null],[17,"KEY_XF86ModeLock","","",null,null],[17,"KEY_XF86MonBrightnessUp","","",null,null],[17,"KEY_XF86MonBrightnessDown","","",null,null],[17,"KEY_XF86KbdLightOnOff","","",null,null],[17,"KEY_XF86KbdBrightnessUp","","",null,null],[17,"KEY_XF86KbdBrightnessDown","","",null,null],[17,"KEY_XF86Standby","","",null,null],[17,"KEY_XF86AudioLowerVolume","","",null,null],[17,"KEY_XF86AudioMute","","",null,null],[17,"KEY_XF86AudioRaiseVolume","","",null,null],[17,"KEY_XF86AudioPlay","","",null,null],[17,"KEY_XF86AudioStop","","",null,null],[17,"KEY_XF86AudioPrev","","",null,null],[17,"KEY_XF86AudioNext","","",null,null],[17,"KEY_XF86HomePage","","",null,null],[17,"KEY_XF86Mail","","",null,null],[17,"KEY_XF86Start","","",null,null],[17,"KEY_XF86Search","","",null,null],[17,"KEY_XF86AudioRecord","","",null,null],[17,"KEY_XF86Calculator","","",null,null],[17,"KEY_XF86Memo","","",null,null],[17,"KEY_XF86ToDoList","","",null,null],[17,"KEY_XF86Calendar","","",null,null],[17,"KEY_XF86PowerDown","","",null,null],[17,"KEY_XF86ContrastAdjust","","",null,null],[17,"KEY_XF86RockerUp","","",null,null],[17,"KEY_XF86RockerDown","","",null,null],[17,"KEY_XF86RockerEnter","","",null,null],[17,"KEY_XF86Back","","",null,null],[17,"KEY_XF86Forward","","",null,null],[17,"KEY_XF86Stop","","",null,null],[17,"KEY_XF86Refresh","","",null,null],[17,"KEY_XF86PowerOff","","",null,null],[17,"KEY_XF86WakeUp","","",null,null],[17,"KEY_XF86Eject","","",null,null],[17,"KEY_XF86ScreenSaver","","",null,null],[17,"KEY_XF86WWW","","",null,null],[17,"KEY_XF86Sleep","","",null,null],[17,"KEY_XF86Favorites","","",null,null],[17,"KEY_XF86AudioPause","","",null,null],[17,"KEY_XF86AudioMedia","","",null,null],[17,"KEY_XF86MyComputer","","",null,null],[17,"KEY_XF86VendorHome","","",null,null],[17,"KEY_XF86LightBulb","","",null,null],[17,"KEY_XF86Shop","","",null,null],[17,"KEY_XF86History","","",null,null],[17,"KEY_XF86OpenURL","","",null,null],[17,"KEY_XF86AddFavorite","","",null,null],[17,"KEY_XF86HotLinks","","",null,null],[17,"KEY_XF86BrightnessAdjust","","",null,null],[17,"KEY_XF86Finance","","",null,null],[17,"KEY_XF86Community","","",null,null],[17,"KEY_XF86AudioRewind","","",null,null],[17,"KEY_XF86BackForward","","",null,null],[17,"KEY_XF86Launch0","","",null,null],[17,"KEY_XF86Launch1","","",null,null],[17,"KEY_XF86Launch2","","",null,null],[17,"KEY_XF86Launch3","","",null,null],[17,"KEY_XF86Launch4","","",null,null],[17,"KEY_XF86Launch5","","",null,null],[17,"KEY_XF86Launch6","","",null,null],[17,"KEY_XF86Launch7","","",null,null],[17,"KEY_XF86Launch8","","",null,null],[17,"KEY_XF86Launch9","","",null,null],[17,"KEY_XF86LaunchA","","",null,null],[17,"KEY_XF86LaunchB","","",null,null],[17,"KEY_XF86LaunchC","","",null,null],[17,"KEY_XF86LaunchD","","",null,null],[17,"KEY_XF86LaunchE","","",null,null],[17,"KEY_XF86LaunchF","","",null,null],[17,"KEY_XF86ApplicationLeft","","",null,null],[17,"KEY_XF86ApplicationRight","","",null,null],[17,"KEY_XF86Book","","",null,null],[17,"KEY_XF86CD","","",null,null],[17,"KEY_XF86Calculater","","",null,null],[17,"KEY_XF86Clear","","",null,null],[17,"KEY_XF86Close","","",null,null],[17,"KEY_XF86Copy","","",null,null],[17,"KEY_XF86Cut","","",null,null],[17,"KEY_XF86Display","","",null,null],[17,"KEY_XF86DOS","","",null,null],[17,"KEY_XF86Documents","","",null,null],[17,"KEY_XF86Excel","","",null,null],[17,"KEY_XF86Explorer","","",null,null],[17,"KEY_XF86Game","","",null,null],[17,"KEY_XF86Go","","",null,null],[17,"KEY_XF86iTouch","","",null,null],[17,"KEY_XF86LogOff","","",null,null],[17,"KEY_XF86Market","","",null,null],[17,"KEY_XF86Meeting","","",null,null],[17,"KEY_XF86MenuKB","","",null,null],[17,"KEY_XF86MenuPB","","",null,null],[17,"KEY_XF86MySites","","",null,null],[17,"KEY_XF86New","","",null,null],[17,"KEY_XF86News","","",null,null],[17,"KEY_XF86OfficeHome","","",null,null],[17,"KEY_XF86Open","","",null,null],[17,"KEY_XF86Option","","",null,null],[17,"KEY_XF86Paste","","",null,null],[17,"KEY_XF86Phone","","",null,null],[17,"KEY_XF86Q","","",null,null],[17,"KEY_XF86Reply","","",null,null],[17,"KEY_XF86Reload","","",null,null],[17,"KEY_XF86RotateWindows","","",null,null],[17,"KEY_XF86RotationPB","","",null,null],[17,"KEY_XF86RotationKB","","",null,null],[17,"KEY_XF86Save","","",null,null],[17,"KEY_XF86ScrollUp","","",null,null],[17,"KEY_XF86ScrollDown","","",null,null],[17,"KEY_XF86ScrollClick","","",null,null],[17,"KEY_XF86Send","","",null,null],[17,"KEY_XF86Spell","","",null,null],[17,"KEY_XF86SplitScreen","","",null,null],[17,"KEY_XF86Support","","",null,null],[17,"KEY_XF86TaskPane","","",null,null],[17,"KEY_XF86Terminal","","",null,null],[17,"KEY_XF86Tools","","",null,null],[17,"KEY_XF86Travel","","",null,null],[17,"KEY_XF86UserPB","","",null,null],[17,"KEY_XF86User1KB","","",null,null],[17,"KEY_XF86User2KB","","",null,null],[17,"KEY_XF86Video","","",null,null],[17,"KEY_XF86WheelButton","","",null,null],[17,"KEY_XF86Word","","",null,null],[17,"KEY_XF86Xfer","","",null,null],[17,"KEY_XF86ZoomIn","","",null,null],[17,"KEY_XF86ZoomOut","","",null,null],[17,"KEY_XF86Away","","",null,null],[17,"KEY_XF86Messenger","","",null,null],[17,"KEY_XF86WebCam","","",null,null],[17,"KEY_XF86MailForward","","",null,null],[17,"KEY_XF86Pictures","","",null,null],[17,"KEY_XF86Music","","",null,null],[17,"KEY_XF86Battery","","",null,null],[17,"KEY_XF86Bluetooth","","",null,null],[17,"KEY_XF86WLAN","","",null,null],[17,"KEY_XF86UWB","","",null,null],[17,"KEY_XF86AudioForward","","",null,null],[17,"KEY_XF86AudioRepeat","","",null,null],[17,"KEY_XF86AudioRandomPlay","","",null,null],[17,"KEY_XF86Subtitle","","",null,null],[17,"KEY_XF86AudioCycleTrack","","",null,null],[17,"KEY_XF86CycleAngle","","",null,null],[17,"KEY_XF86FrameBack","","",null,null],[17,"KEY_XF86FrameForward","","",null,null],[17,"KEY_XF86Time","","",null,null],[17,"KEY_XF86Select","","",null,null],[17,"KEY_XF86View","","",null,null],[17,"KEY_XF86TopMenu","","",null,null],[17,"KEY_XF86Red","","",null,null],[17,"KEY_XF86Green","","",null,null],[17,"KEY_XF86Yellow","","",null,null],[17,"KEY_XF86Blue","","",null,null],[17,"KEY_XF86Suspend","","",null,null],[17,"KEY_XF86Hibernate","","",null,null],[17,"KEY_XF86TouchpadToggle","","",null,null],[17,"KEY_XF86TouchpadOn","","",null,null],[17,"KEY_XF86TouchpadOff","","",null,null],[17,"KEY_XF86AudioMicMute","","",null,null],[17,"KEY_XF86Switch_VT_1","","",null,null],[17,"KEY_XF86Switch_VT_2","","",null,null],[17,"KEY_XF86Switch_VT_3","","",null,null],[17,"KEY_XF86Switch_VT_4","","",null,null],[17,"KEY_XF86Switch_VT_5","","",null,null],[17,"KEY_XF86Switch_VT_6","","",null,null],[17,"KEY_XF86Switch_VT_7","","",null,null],[17,"KEY_XF86Switch_VT_8","","",null,null],[17,"KEY_XF86Switch_VT_9","","",null,null],[17,"KEY_XF86Switch_VT_10","","",null,null],[17,"KEY_XF86Switch_VT_11","","",null,null],[17,"KEY_XF86Switch_VT_12","","",null,null],[17,"KEY_XF86Ungrab","","",null,null],[17,"KEY_XF86ClearGrab","","",null,null],[17,"KEY_XF86Next_VMode","","",null,null],[17,"KEY_XF86Prev_VMode","","",null,null],[17,"KEY_XF86LogWindowTree","","",null,null],[17,"KEY_XF86LogGrabInfo","","",null,null],[17,"KEY_SunFA_Grave","","",null,null],[17,"KEY_SunFA_Circum","","",null,null],[17,"KEY_SunFA_Tilde","","",null,null],[17,"KEY_SunFA_Acute","","",null,null],[17,"KEY_SunFA_Diaeresis","","",null,null],[17,"KEY_SunFA_Cedilla","","",null,null],[17,"KEY_SunF36","","",null,null],[17,"KEY_SunF37","","",null,null],[17,"KEY_SunSys_Req","","",null,null],[17,"KEY_SunPrint_Screen","","",null,null],[17,"KEY_SunCompose","","",null,null],[17,"KEY_SunAltGraph","","",null,null],[17,"KEY_SunPageUp","","",null,null],[17,"KEY_SunPageDown","","",null,null],[17,"KEY_SunUndo","","",null,null],[17,"KEY_SunAgain","","",null,null],[17,"KEY_SunFind","","",null,null],[17,"KEY_SunStop","","",null,null],[17,"KEY_SunProps","","",null,null],[17,"KEY_SunFront","","",null,null],[17,"KEY_SunCopy","","",null,null],[17,"KEY_SunOpen","","",null,null],[17,"KEY_SunPaste","","",null,null],[17,"KEY_SunCut","","",null,null],[17,"KEY_SunPowerSwitch","","",null,null],[17,"KEY_SunAudioLowerVolume","","",null,null],[17,"KEY_SunAudioMute","","",null,null],[17,"KEY_SunAudioRaiseVolume","","",null,null],[17,"KEY_SunVideoDegauss","","",null,null],[17,"KEY_SunVideoLowerBrightness","","",null,null],[17,"KEY_SunVideoRaiseBrightness","","",null,null],[17,"KEY_SunPowerSwitchShift","","",null,null],[17,"KEY_Dring_accent","","",null,null],[17,"KEY_Dcircumflex_accent","","",null,null],[17,"KEY_Dcedilla_accent","","",null,null],[17,"KEY_Dacute_accent","","",null,null],[17,"KEY_Dgrave_accent","","",null,null],[17,"KEY_Dtilde","","",null,null],[17,"KEY_Ddiaeresis","","",null,null],[17,"KEY_DRemove","","",null,null],[17,"KEY_hpClearLine","","",null,null],[17,"KEY_hpInsertLine","","",null,null],[17,"KEY_hpDeleteLine","","",null,null],[17,"KEY_hpInsertChar","","",null,null],[17,"KEY_hpDeleteChar","","",null,null],[17,"KEY_hpBackTab","","",null,null],[17,"KEY_hpKP_BackTab","","",null,null],[17,"KEY_hpModelock1","","",null,null],[17,"KEY_hpModelock2","","",null,null],[17,"KEY_hpReset","","",null,null],[17,"KEY_hpSystem","","",null,null],[17,"KEY_hpUser","","",null,null],[17,"KEY_hpmute_acute","","",null,null],[17,"KEY_hpmute_grave","","",null,null],[17,"KEY_hpmute_asciicircum","","",null,null],[17,"KEY_hpmute_diaeresis","","",null,null],[17,"KEY_hpmute_asciitilde","","",null,null],[17,"KEY_hplira","","",null,null],[17,"KEY_hpguilder","","",null,null],[17,"KEY_hpYdiaeresis","","",null,null],[17,"KEY_hpIO","","",null,null],[17,"KEY_hplongminus","","",null,null],[17,"KEY_hpblock","","",null,null],[17,"KEY_osfCopy","","",null,null],[17,"KEY_osfCut","","",null,null],[17,"KEY_osfPaste","","",null,null],[17,"KEY_osfBackTab","","",null,null],[17,"KEY_osfBackSpace","","",null,null],[17,"KEY_osfClear","","",null,null],[17,"KEY_osfEscape","","",null,null],[17,"KEY_osfAddMode","","",null,null],[17,"KEY_osfPrimaryPaste","","",null,null],[17,"KEY_osfQuickPaste","","",null,null],[17,"KEY_osfPageLeft","","",null,null],[17,"KEY_osfPageUp","","",null,null],[17,"KEY_osfPageDown","","",null,null],[17,"KEY_osfPageRight","","",null,null],[17,"KEY_osfActivate","","",null,null],[17,"KEY_osfMenuBar","","",null,null],[17,"KEY_osfLeft","","",null,null],[17,"KEY_osfUp","","",null,null],[17,"KEY_osfRight","","",null,null],[17,"KEY_osfDown","","",null,null],[17,"KEY_osfEndLine","","",null,null],[17,"KEY_osfBeginLine","","",null,null],[17,"KEY_osfEndData","","",null,null],[17,"KEY_osfBeginData","","",null,null],[17,"KEY_osfPrevMenu","","",null,null],[17,"KEY_osfNextMenu","","",null,null],[17,"KEY_osfPrevField","","",null,null],[17,"KEY_osfNextField","","",null,null],[17,"KEY_osfSelect","","",null,null],[17,"KEY_osfInsert","","",null,null],[17,"KEY_osfUndo","","",null,null],[17,"KEY_osfMenu","","",null,null],[17,"KEY_osfCancel","","",null,null],[17,"KEY_osfHelp","","",null,null],[17,"KEY_osfSelectAll","","",null,null],[17,"KEY_osfDeselectAll","","",null,null],[17,"KEY_osfReselect","","",null,null],[17,"KEY_osfExtend","","",null,null],[17,"KEY_osfRestore","","",null,null],[17,"KEY_osfDelete","","",null,null],[17,"KEY_Reset","","",null,null],[17,"KEY_System","","",null,null],[17,"KEY_User","","",null,null],[17,"KEY_ClearLine","","",null,null],[17,"KEY_InsertLine","","",null,null],[17,"KEY_DeleteLine","","",null,null],[17,"KEY_InsertChar","","",null,null],[17,"KEY_DeleteChar","","",null,null],[17,"KEY_BackTab","","",null,null],[17,"KEY_KP_BackTab","","",null,null],[17,"KEY_Ext16bit_L","","",null,null],[17,"KEY_Ext16bit_R","","",null,null],[17,"KEY_mute_acute","","",null,null],[17,"KEY_mute_grave","","",null,null],[17,"KEY_mute_asciicircum","","",null,null],[17,"KEY_mute_diaeresis","","",null,null],[17,"KEY_mute_asciitilde","","",null,null],[17,"KEY_lira","","",null,null],[17,"KEY_guilder","","",null,null],[17,"KEY_IO","","",null,null],[17,"KEY_longminus","","",null,null],[17,"KEY_block","","",null,null],[6,"Keysym","smithay::wayland::seat","A number used to represent the symbols generated from a…",null,null],[3,"KeyboardHandle","","An handle to a keyboard handler",null,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[12,"ctrl","","The \\\"control\\\" key",139,null],[12,"alt","","The \\\"alt\\\" key",139,null],[12,"shift","","The \\\"shift\\\" key",139,null],[12,"caps_lock","","The \\\"Caps lock\\\" key",139,null],[12,"logo","","The \\\"logo\\\" key",139,null],[12,"num_lock","","The \\\"Num lock\\\" key",139,null],[3,"XkbConfig","","Configuration for xkbcommon.",null,null],[12,"rules","","The rules file to use.",140,null],[12,"model","","The keyboard model by which to interpret keycodes and LEDs.",140,null],[12,"layout","","A comma separated list of layouts (languages) to include…",140,null],[12,"variant","","A comma separated list of variants, one per layout, which…",140,null],[12,"options","","A comma separated list of options, through which the user…",140,null],[3,"AxisFrame","","A frame of pointer axis events.",null,null],[3,"CursorImageRole","","The role representing a surface set as the pointer cursor",null,null],[12,"hotspot","","Location of the hotspot of the pointer in the surface",141,null],[3,"GrabStartData","","Data about the event that started the grab.",null,null],[12,"focus","","The focused surface and its location, if any, at the start…",142,null],[12,"button","","The button that initiated the grab.",142,null],[12,"location","","The location of the click that initiated the grab, in the…",142,null],[3,"PointerHandle","","An handle to a pointer handler",null,null],[3,"PointerInnerHandle","","This inner handle is accessed from inside a pointer grab…",null,null],[3,"Seat","","A Seat handle",null,null],[4,"KeyboardError","","Errors that can be encountered when creating a keyboard…",null,null],[13,"BadKeymap","","libxkbcommon could not load the specified keymap",143,null],[13,"IoError","","Smithay could not create a tempfile to share the keymap…",143,null],[4,"CursorImageStatus","","Possible status of a cursor as requested by clients",null,null],[13,"Hidden","","The cursor should be hidden",144,null],[13,"Default","","The compositor should draw its cursor",144,null],[13,"Image","","The cursor should be drawn using this surface as an image",144,null],[11,"input","","Handle a keystroke",145,[[["keystate",4]]]],[11,"set_focus","","Set the current focus of this keyboard",145,[[["wlsurface",3],["option",4]]]],[11,"has_focus","","Check if given client currently has keyboard focus",145,[[["client",3]]]],[11,"change_repeat_info","","Change the repeat info configured for this keyboard",145,[[]]],[11,"set_grab","","Change the current grab on this pointer to the provided grab",146,[[["pointergrab",8]]]],[11,"unset_grab","","Remove any current grab on this pointer, reseting it to…",146,[[]]],[11,"has_grab","","Check if this pointer is currently grabbed with this serial",146,[[]]],[11,"is_grabbed","","Check if this pointer is currently being grabbed",146,[[]]],[11,"grab_start_data","","Returns the start data for the grab, if any.",146,[[],[["option",4],["grabstartdata",3]]]],[11,"motion","","Notify that the pointer moved",146,[[["option",4]]]],[11,"button","","Notify that a button was pressed",146,[[["buttonstate",4]]]],[11,"axis","","Start an axis frame",146,[[["axisframe",3]]]],[11,"current_location","","Access the current location of this pointer in the global…",146,[[]]],[11,"set_grab","","Change the current grab on this pointer to the provided grab",147,[[["pointergrab",8]]]],[11,"unset_grab","","Remove any current grab on this pointer, resetting it to…",147,[[]]],[11,"current_focus","","Access the current focus of this pointer",147,[[],["option",4]]],[11,"current_location","","Access the current location of this pointer in the global…",147,[[]]],[11,"current_pressed","","A list of the currently physically pressed buttons",147,[[]]],[11,"motion","","Notify that the pointer moved",147,[[["option",4]]]],[11,"button","","Notify that a button was pressed",147,[[["buttonstate",4]]]],[11,"axis","","Notify that an axis was scrolled",147,[[["axisframe",3]]]],[11,"new","","Create a new frame of axis events",148,[[]]],[11,"source","","Specify the source of the axis events",148,[[["axissource",4]]]],[11,"discrete","","Specify discrete scrolling steps additionally to the…",148,[[["axis",4]]]],[11,"value","","The actual scroll value. This event is the only required…",148,[[["axis",4]]]],[11,"stop","","Notification of stop of scrolling on an axis.",148,[[["axis",4]]]],[8,"PointerGrab","","A trait to implement a pointer grab",null,null],[10,"motion","","A motion was reported",149,[[["pointerinnerhandle",3],["option",4]]]],[10,"button","","A button press was reported",149,[[["buttonstate",4],["pointerinnerhandle",3]]]],[10,"axis","","An axis scroll was reported",149,[[["pointerinnerhandle",3],["axisframe",3]]]],[10,"start_data","","The data about the event that started the grab.",149,[[],["grabstartdata",3]]],[11,"new","","Create a new seat global",150,[[["string",3],["display",3],["compositortoken",3]]]],[11,"from_resource","","Attempt to retrieve a [`Seat`] from an existing resource",150,[[["wlseat",3]],[["option",4],["seat",3]]]],[11,"user_data","","Acces the `UserDataMap` associated with this `Seat`",150,[[],["userdatamap",3]]],[11,"add_pointer","","Adds the pointer capability to this seat",150,[[["compositortoken",3]],["pointerhandle",3]]],[11,"get_pointer","","Access the pointer of this seat if any",150,[[],[["option",4],["pointerhandle",3]]]],[11,"remove_pointer","","Remove the pointer capability from this seat",150,[[]]],[11,"add_keyboard","","Adds the keyboard capability to this seat",150,[[["xkbconfig",3]],[["keyboarderror",4],["result",4],["keyboardhandle",3]]]],[11,"get_keyboard","","Access the keyboard of this seat if any",150,[[],[["option",4],["keyboardhandle",3]]]],[11,"remove_keyboard","","Remove the keyboard capability from this seat",150,[[]]],[11,"owns","","Checks whether a given `WlSeat` is associated with this…",150,[[["wlseat",3]]]],[0,"shell","smithay::wayland","Handler utilities for the various shell protocols",null,null],[0,"legacy","smithay::wayland::shell","Utilities for handling shell surfaces with the `wl_shell`…",null,null],[3,"ShellSurfaceRole","smithay::wayland::shell::legacy","Metadata associated with the `wl_surface` role",null,null],[12,"title","","Title of the surface",151,null],[12,"class","","Class of the surface",151,null],[3,"ShellSurface","","A handle to a shell surface",null,null],[3,"ShellState","","Shell global state",null,null],[4,"ShellSurfaceKind","","Possible kinds of shell surface of the `wl_shell` protocol",null,null],[13,"Toplevel","","Toplevel, a regular window displayed somewhere in the…",152,null],[13,"Transient","","Transient, this surface has a parent surface",152,null],[12,"parent","smithay::wayland::shell::legacy::ShellSurfaceKind","The surface considered as parent",153,null],[12,"location","","Location relative to the parent",153,null],[12,"inactive","","Wether this window should be marked as inactive",153,null],[13,"Fullscreen","smithay::wayland::shell::legacy","Fullscreen surface, covering an entire output",152,null],[12,"method","smithay::wayland::shell::legacy::ShellSurfaceKind","Method used for fullscreen",154,null],[12,"framerate","","Framerate (relevant only for driver fullscreen)",154,null],[12,"output","","Requested output if any",154,null],[13,"Popup","smithay::wayland::shell::legacy","A popup surface",152,null],[12,"parent","smithay::wayland::shell::legacy::ShellSurfaceKind","The parent surface of this popup",155,null],[12,"serial","","The serial of the input event triggering the creation of…",155,null],[12,"inactive","","Wether this popup should be marked as inactive",155,null],[12,"location","","Location of the popup relative to its parent",155,null],[12,"seat","","Seat associated this the input that triggered the creation…",155,null],[13,"Maximized","smithay::wayland::shell::legacy","A maximized surface",152,null],[12,"output","smithay::wayland::shell::legacy::ShellSurfaceKind","Requested output for maximization",156,null],[4,"ShellRequest","smithay::wayland::shell::legacy","A request triggered by a `wl_shell_surface`",null,null],[13,"NewShellSurface","","A new shell surface was created",157,null],[12,"surface","smithay::wayland::shell::legacy::ShellRequest","The created surface",158,null],[13,"Pong","smithay::wayland::shell::legacy","A pong event",157,null],[12,"surface","smithay::wayland::shell::legacy::ShellRequest","The surface that sent the pong",159,null],[13,"Move","smithay::wayland::shell::legacy","Start of an interactive move",157,null],[12,"surface","smithay::wayland::shell::legacy::ShellRequest","The surface requesting the move",160,null],[12,"serial","","Serial of the implicit grab that initiated the move",160,null],[12,"seat","","Seat associated with the move",160,null],[13,"Resize","smithay::wayland::shell::legacy","Start of an interactive resize",157,null],[12,"surface","smithay::wayland::shell::legacy::ShellRequest","The surface requesting the resize",161,null],[12,"serial","","Serial of the implicit grab that initiated the resize",161,null],[12,"seat","","Seat associated with the resize",161,null],[12,"edges","","Direction of the resize",161,null],[13,"SetKind","smithay::wayland::shell::legacy","The surface changed its kind",157,null],[12,"surface","smithay::wayland::shell::legacy::ShellRequest","The surface",162,null],[12,"kind","","Its new kind",162,null],[5,"wl_shell_init","smithay::wayland::shell::legacy","Create a new `wl_shell` global",null,[[["compositortoken",3],["display",3]]]],[11,"alive","","Is the shell surface referred by this handle still alive?",163,[[]]],[11,"equals","","Do this handle and the other one actually refer to the…",163,[[]]],[11,"get_surface","","Access the underlying `wl_surface` of this toplevel surface",163,[[],[["wlsurface",3],["option",4]]]],[11,"send_ping","","Send a ping request to this shell surface",163,[[],["result",4]]],[11,"send_configure","","Send a configure event to this toplevel surface to suggest…",163,[[["resize",3]]]],[11,"send_popup_done","","Signal a popup surface that it has lost focus",163,[[]]],[11,"surfaces","","Access all the shell surfaces known by this handler",164,[[]]],[0,"xdg","smithay::wayland::shell","Utilities for handling shell surfaces with the `xdg_shell`…",null,null],[3,"XdgSurfaceRole","smithay::wayland::shell::xdg","Metadata associated with the `xdg_surface` role",null,null],[12,"pending_state","","Pending state as requested by the client",165,null],[12,"window_geometry","","Geometry of the surface",165,null],[12,"pending_configures","","List of non-acked configures pending",165,null],[12,"configured","","Has this surface acked at least one configure?",165,null],[3,"PositionerState","","The state of a positioner, as set by the client",null,null],[12,"rect_size","","Size of the rectangle that needs to be positioned",166,null],[12,"anchor_rect","","Anchor rectangle in the parent surface coordinates…",166,null],[12,"anchor_edges","","Edges defining the anchor point",166,null],[12,"gravity","","Gravity direction for positioning the child surface…",166,null],[12,"constraint_adjustment","","Adjustments to do if previous criteria constrain the surface",166,null],[12,"offset","","Offset placement relative to the anchor point",166,null],[3,"ToplevelState","","State of a regular toplevel surface",null,null],[12,"parent","","Parent of this surface",167,null],[12,"title","","Title of this shell surface",167,null],[12,"app_id","","App id for this shell surface",167,null],[12,"min_size","","Minimum size requested for this surface",167,null],[12,"max_size","","Maximum size requested for this surface",167,null],[3,"PopupState","","The pending state of a popup surface",null,null],[12,"parent","","Parent of this popup surface",168,null],[12,"positioner","","The positioner specifying how this tooltip should be…",168,null],[3,"ShellState","","Shell global state",null,null],[3,"ShellClient","","A shell client",null,null],[3,"ToplevelSurface","","A handle to a toplevel surface",null,null],[3,"PopupSurface","","A handle to a popup surface",null,null],[3,"ToplevelConfigure","","A configure message for toplevel surfaces",null,null],[12,"size","","A suggestion for a new size for the surface",169,null],[12,"states","","A notification of what are the current states of this…",169,null],[12,"serial","","A serial number to track ACK from the client",169,null],[3,"PopupConfigure","","A configure message for popup surface",null,null],[12,"position","","The position chosen for this popup relative to its parent",170,null],[12,"size","","A suggested size for the popup",170,null],[12,"serial","","A serial number to track ACK from the client",170,null],[4,"XdgSurfacePendingState","","Contents of the pending state of a shell surface,…",null,null],[13,"Toplevel","","This a regular, toplevel surface",171,null],[13,"Popup","","This is a popup surface",171,null],[13,"None","","This surface was not yet assigned a kind",171,null],[4,"XdgRequest","","Events generated by xdg shell surfaces",null,null],[13,"NewClient","","A new shell client was instantiated",172,null],[12,"client","smithay::wayland::shell::xdg::XdgRequest","the client",173,null],[13,"ClientPong","smithay::wayland::shell::xdg","The pong for a pending ping of this shell client was…",172,null],[12,"client","smithay::wayland::shell::xdg::XdgRequest","the client",174,null],[13,"NewToplevel","smithay::wayland::shell::xdg","A new toplevel surface was created",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","the surface",175,null],[13,"NewPopup","smithay::wayland::shell::xdg","A new popup surface was created",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","the surface",176,null],[13,"Move","smithay::wayland::shell::xdg","The client requested the start of an interactive move for…",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","the surface",177,null],[12,"seat","","the seat associated to this move",177,null],[12,"serial","","the grab serial",177,null],[13,"Resize","smithay::wayland::shell::xdg","The client requested the start of an interactive resize…",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",178,null],[12,"seat","","The seat associated with this resize",178,null],[12,"serial","","The grab serial",178,null],[12,"edges","","Specification of which part of the window\'s border is…",178,null],[13,"Grab","smithay::wayland::shell::xdg","This popup requests a grab of the pointer",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",179,null],[12,"seat","","The seat to grab",179,null],[12,"serial","","The grab serial",179,null],[13,"Maximize","smithay::wayland::shell::xdg","A toplevel surface requested to be maximized",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",180,null],[13,"UnMaximize","smithay::wayland::shell::xdg","A toplevel surface requested to stop being maximized",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",181,null],[13,"Fullscreen","smithay::wayland::shell::xdg","A toplevel surface requested to be set fullscreen",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",182,null],[12,"output","","The output (if any) on which the fullscreen is requested",182,null],[13,"UnFullscreen","smithay::wayland::shell::xdg","A toplevel surface request to stop being fullscreen",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",183,null],[13,"Minimize","smithay::wayland::shell::xdg","A toplevel surface requested to be minimized",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",184,null],[13,"ShowWindowMenu","smithay::wayland::shell::xdg","The client requests the window menu to be displayed on…",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface",185,null],[12,"seat","","The seat associated with this input grab",185,null],[12,"serial","","the grab serial",185,null],[12,"location","","location of the menu request",185,null],[13,"AckConfigure","smithay::wayland::shell::xdg","A surface has acknowledged a configure serial.",172,null],[12,"surface","smithay::wayland::shell::xdg::XdgRequest","The surface.",186,null],[12,"serial","","The configure serial.",186,null],[5,"xdg_shell_init","smithay::wayland::shell::xdg","Create a new `xdg_shell` globals",null,[[["compositortoken",3],["display",3]]]],[11,"toplevel_surfaces","","Access all the shell surfaces known by this handler",187,[[]]],[11,"popup_surfaces","","Access all the popup surfaces known by this handler",187,[[]]],[11,"alive","","Is the shell client represented by this handle still…",188,[[]]],[11,"equals","","Checks if this handle and the other one actually refer to…",188,[[]]],[11,"send_ping","","Send a ping request to this shell client",188,[[],["result",4]]],[11,"with_data","","Access the user data associated with this shell client",188,[[],["result",4]]],[11,"alive","","Is the toplevel surface referred by this handle still alive?",189,[[]]],[11,"equals","","Do this handle and the other one actually refer to the…",189,[[]]],[11,"client","","Retrieve the shell client owning this toplevel surface",189,[[],[["option",4],["shellclient",3]]]],[11,"send_configure","","Send a configure event to this toplevel surface to suggest…",189,[[["toplevelconfigure",3]]]],[11,"ensure_configured","","Make sure this surface was configured",189,[[]]],[11,"send_close","","Send a \\\"close\\\" event to the client",189,[[]]],[11,"get_surface","","Access the underlying `wl_surface` of this toplevel surface",189,[[],[["wlsurface",3],["option",4]]]],[11,"get_pending_state","","Retrieve a copy of the pending state of this toplevel…",189,[[],[["toplevelstate",3],["option",4]]]],[11,"alive","","Is the popup surface referred by this handle still alive?",190,[[]]],[11,"equals","","Do this handle and the other one actually refer to the…",190,[[]]],[11,"client","","Retrieve the shell client owning this popup surface",190,[[],[["option",4],["shellclient",3]]]],[11,"send_configure","","Send a configure event to this toplevel surface to suggest…",190,[[["popupconfigure",3]]]],[11,"ensure_configured","","Make sure this surface was configured",190,[[]]],[11,"send_popup_done","","Send a `popup_done` event to the popup surface",190,[[]]],[11,"get_surface","","Access the underlying `wl_surface` of this toplevel surface",190,[[],[["wlsurface",3],["option",4]]]],[11,"get_pending_state","","Retrieve a copy of the pending state of this popup surface",190,[[],[["popupstate",3],["option",4]]]],[0,"shm","smithay::wayland","SHM handling helpers",null,null],[3,"ShmGlobalData","smithay::wayland::shm","Internal data storage of `ShmGlobal`",null,null],[3,"BufferData","","Details of the contents of a buffer relative to its pool",null,null],[12,"offset","","Offset of the start of the buffer relative to the…",191,null],[12,"width","","Wwidth of the buffer in bytes",191,null],[12,"height","","Height of the buffer in bytes",191,null],[12,"stride","","Stride of the buffer in bytes",191,null],[12,"format","","Format used by this buffer",191,null],[4,"BufferAccessError","","Error that can occur when accessing an SHM buffer",null,null],[13,"NotManaged","","This buffer is not managed by the SHM handler",192,null],[13,"BadMap","","An error occurred while accessing the memory map",192,null],[5,"init_shm_global","","Create a new SHM global advertizing given supported formats.",null,[[["format",4],["display",3],["vec",3]],[["global",3],["wlshm",3]]]],[5,"with_buffer_contents","","Call given closure with the contents of the given buffer",null,[[["wlbuffer",3]],[["bufferaccesserror",4],["result",4]]]],[7,"SERIAL_COUNTER","smithay::wayland","A global [`SerialCounter`] for use in your compositor.",null,null],[11,"next_serial","","Retrieve the next serial from the counter",193,[[]]],[0,"signaling","smithay","A general purpose signaling mechanism",null,null],[3,"Signaler","smithay::signaling","A signaler, main type for signaling",null,null],[3,"SignalToken","","A token associated with a callback registered to a Signaler",null,null],[8,"Linkable","","Trait representing the capability of an object to listen…",null,null],[10,"link","","Make this object listen for signals from given signaler",194,[[["signaler",3]]]],[11,"new","","Create a new signaler for given signal type",195,[[],["signaler",3]]],[11,"register","","Register a new callback to this signaler",195,[[["fnmut",8]],["signaltoken",3]]],[11,"signal","","Signal the callbacks",195,[[]]],[11,"leak","","Destroy the token without disabling the associated callback",196,[[]]],[0,"xwayland","smithay","XWayland utilities",null,null],[3,"XWayland","smithay::xwayland","The XWayland handle",null,null],[11,"init","","Start the XWayland server",197,[[["refcell",3],["rc",3],["loophandle",3]],[["result",4],["xwayland",3]]]],[8,"XWindowManager","","Trait to be implemented by you WM for XWayland",null,null],[10,"xwayland_ready","","The XWayland server is ready",198,[[["client",3],["unixstream",3]]]],[10,"xwayland_exited","","The XWayland server has exited",198,[[]]],[0,"reexports","smithay","Reexports of crates, that are part of the public api, for…",null,null],[14,"define_roles","","The roles defining macro",null,null],[11,"from","smithay::backend::graphics","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"read","","",0,[[],["result",4]]],[11,"get_elements_size","","",0,[[]]],[11,"to_void_ptr","","",0,[[]]],[11,"ref_from_ptr","","",0,[[],["option",4]]],[11,"is_size_suitable","","",0,[[]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","smithay::backend::graphics::gl","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","smithay::backend::graphics::glium","",4,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"get_version","","",4,[[],["version",3]]],[11,"get_extensions","","",4,[[],["extensionslist",3]]],[11,"get_capabilities","","",4,[[],["capabilities",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","smithay::backend::input","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"read","","",7,[[],["result",4]]],[11,"get_elements_size","","",7,[[]]],[11,"to_void_ptr","","",7,[[]]],[11,"ref_from_ptr","","",7,[[],["option",4]]],[11,"is_size_suitable","","",7,[[]]],[11,"vzip","","",7,[[]]],[11,"from","","",199,[[]]],[11,"into","","",199,[[]]],[11,"to_owned","","",199,[[]]],[11,"clone_into","","",199,[[]]],[11,"try_from","","",199,[[],["result",4]]],[11,"try_into","","",199,[[],["result",4]]],[11,"borrow","","",199,[[]]],[11,"borrow_mut","","",199,[[]]],[11,"type_id","","",199,[[],["typeid",3]]],[11,"read","","",199,[[],["result",4]]],[11,"get_elements_size","","",199,[[]]],[11,"to_void_ptr","","",199,[[]]],[11,"ref_from_ptr","","",199,[[],["option",4]]],[11,"is_size_suitable","","",199,[[]]],[11,"vzip","","",199,[[]]],[11,"from","","",200,[[]]],[11,"into","","",200,[[]]],[11,"try_from","","",200,[[],["result",4]]],[11,"try_into","","",200,[[],["result",4]]],[11,"borrow","","",200,[[]]],[11,"borrow_mut","","",200,[[]]],[11,"type_id","","",200,[[],["typeid",3]]],[11,"vzip","","",200,[[]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"read","","",8,[[],["result",4]]],[11,"get_elements_size","","",8,[[]]],[11,"to_void_ptr","","",8,[[]]],[11,"ref_from_ptr","","",8,[[],["option",4]]],[11,"is_size_suitable","","",8,[[]]],[11,"vzip","","",8,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"read","","",9,[[],["result",4]]],[11,"get_elements_size","","",9,[[]]],[11,"to_void_ptr","","",9,[[]]],[11,"ref_from_ptr","","",9,[[],["option",4]]],[11,"is_size_suitable","","",9,[[]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"read","","",10,[[],["result",4]]],[11,"get_elements_size","","",10,[[]]],[11,"to_void_ptr","","",10,[[]]],[11,"ref_from_ptr","","",10,[[],["option",4]]],[11,"is_size_suitable","","",10,[[]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"read","","",11,[[],["result",4]]],[11,"get_elements_size","","",11,[[]]],[11,"to_void_ptr","","",11,[[]]],[11,"ref_from_ptr","","",11,[[],["option",4]]],[11,"is_size_suitable","","",11,[[]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"read","","",12,[[],["result",4]]],[11,"get_elements_size","","",12,[[]]],[11,"to_void_ptr","","",12,[[]]],[11,"ref_from_ptr","","",12,[[],["option",4]]],[11,"is_size_suitable","","",12,[[]]],[11,"vzip","","",12,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"dev_path","smithay::backend::drm::atomic","",201,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",201,[[]]],[11,"into","","",201,[[]]],[11,"try_from","","",201,[[],["result",4]]],[11,"try_into","","",201,[[],["result",4]]],[11,"borrow","","",201,[[]]],[11,"borrow_mut","","",201,[[]]],[11,"type_id","","",201,[[],["typeid",3]]],[11,"vzip","","",201,[[]]],[11,"dev_path","","",36,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"vzip","","",36,[[]]],[11,"from","smithay::backend::drm::atomic::session","",202,[[]]],[11,"into","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"vzip","","",202,[[]]],[11,"from","smithay::backend::drm::common","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_string","","",37,[[],["string",3]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"as_fail","","",37,[[],["fail",8]]],[11,"vzip","","",37,[[]]],[11,"dev_path","smithay::backend::drm::common::fallback","",42,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"vzip","","",42,[[]]],[11,"dev_path","","",43,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"vzip","","",43,[[]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_string","","",44,[[],["string",3]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"as_fail","","",44,[[],["fail",8]]],[11,"vzip","","",44,[[]]],[11,"from","smithay::backend::drm::egl","",203,[[]]],[11,"into","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"vzip","","",203,[[]]],[11,"dev_path","","",46,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"vzip","","",46,[[]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"as_fail","","",45,[[],["fail",8]]],[11,"vzip","","",45,[[]]],[11,"from","smithay::backend::drm::egl::session","",204,[[]]],[11,"into","","",204,[[]]],[11,"try_from","","",204,[[],["result",4]]],[11,"try_into","","",204,[[],["result",4]]],[11,"borrow","","",204,[[]]],[11,"borrow_mut","","",204,[[]]],[11,"type_id","","",204,[[],["typeid",3]]],[11,"vzip","","",204,[[]]],[11,"from","smithay::backend::drm::eglstream","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"vzip","","",48,[[]]],[11,"dev_path","","",49,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"vzip","","",49,[[]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_string","","",47,[[],["string",3]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"as_fail","","",47,[[],["fail",8]]],[11,"vzip","","",47,[[]]],[11,"from","smithay::backend::drm::eglstream::egl","",205,[[]]],[11,"into","","",205,[[]]],[11,"try_from","","",205,[[],["result",4]]],[11,"try_into","","",205,[[],["result",4]]],[11,"borrow","","",205,[[]]],[11,"borrow_mut","","",205,[[]]],[11,"type_id","","",205,[[],["typeid",3]]],[11,"vzip","","",205,[[]]],[11,"from","smithay::backend::drm::eglstream::session","",206,[[]]],[11,"into","","",206,[[]]],[11,"try_from","","",206,[[],["result",4]]],[11,"try_into","","",206,[[],["result",4]]],[11,"borrow","","",206,[[]]],[11,"borrow_mut","","",206,[[]]],[11,"type_id","","",206,[[],["typeid",3]]],[11,"vzip","","",206,[[]]],[11,"from","smithay::backend::drm::gbm","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"vzip","","",51,[[]]],[11,"dev_path","","",52,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"vzip","","",52,[[]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"to_string","","",50,[[],["string",3]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"as_fail","","",50,[[],["fail",8]]],[11,"vzip","","",50,[[]]],[11,"from","smithay::backend::drm::gbm::egl","",207,[[]]],[11,"into","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"vzip","","",207,[[]]],[11,"dev_path","smithay::backend::drm::legacy","",208,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"vzip","","",208,[[]]],[11,"dev_path","","",53,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"vzip","","",53,[[]]],[11,"from","smithay::backend::egl","",209,[[]]],[11,"into","","",209,[[]]],[11,"to_owned","","",209,[[]]],[11,"clone_into","","",209,[[]]],[11,"to_string","","",209,[[],["string",3]]],[11,"try_from","","",209,[[],["result",4]]],[11,"try_into","","",209,[[],["result",4]]],[11,"borrow","","",209,[[]]],[11,"borrow_mut","","",209,[[]]],[11,"type_id","","",209,[[],["typeid",3]]],[11,"as_fail","","",209,[[],["fail",8]]],[11,"vzip","","",209,[[]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"to_string","","",210,[[],["string",3]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"as_fail","","",210,[[],["fail",8]]],[11,"vzip","","",210,[[]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"vzip","","",60,[[]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"to_string","","",61,[[],["string",3]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"as_fail","","",61,[[],["fail",8]]],[11,"vzip","","",61,[[]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"to_string","","",62,[[],["string",3]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"as_fail","","",62,[[],["fail",8]]],[11,"vzip","","",62,[[]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_string","","",63,[[],["string",3]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"as_fail","","",63,[[],["fail",8]]],[11,"vzip","","",63,[[]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_string","","",64,[[],["string",3]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"as_fail","","",64,[[],["fail",8]]],[11,"vzip","","",64,[[]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"to_string","","",65,[[],["string",3]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"as_fail","","",65,[[],["fail",8]]],[11,"vzip","","",65,[[]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"to_string","","",66,[[],["string",3]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"as_fail","","",66,[[],["fail",8]]],[11,"vzip","","",66,[[]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"vzip","","",67,[[]]],[11,"from","smithay::backend::egl::context","",71,[[]]],[11,"into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"vzip","","",71,[[]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"read","","",68,[[],["result",4]]],[11,"get_elements_size","","",68,[[]]],[11,"to_void_ptr","","",68,[[]]],[11,"ref_from_ptr","","",68,[[],["option",4]]],[11,"is_size_suitable","","",68,[[]]],[11,"vzip","","",68,[[]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"read","","",69,[[],["result",4]]],[11,"get_elements_size","","",69,[[]]],[11,"to_void_ptr","","",69,[[]]],[11,"ref_from_ptr","","",69,[[],["option",4]]],[11,"is_size_suitable","","",69,[[]]],[11,"vzip","","",69,[[]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"read","","",70,[[],["result",4]]],[11,"get_elements_size","","",70,[[]]],[11,"to_void_ptr","","",70,[[]]],[11,"ref_from_ptr","","",70,[[],["option",4]]],[11,"is_size_suitable","","",70,[[]]],[11,"vzip","","",70,[[]]],[11,"from","smithay::backend::egl::ffi::egl","",211,[[]]],[11,"into","","",211,[[]]],[11,"try_from","","",211,[[],["result",4]]],[11,"try_into","","",211,[[],["result",4]]],[11,"borrow","","",211,[[]]],[11,"borrow_mut","","",211,[[]]],[11,"type_id","","",211,[[],["typeid",3]]],[11,"vzip","","",211,[[]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"vzip","","",72,[[]]],[11,"from","smithay::backend::egl::ffi::egl::types","",212,[[]]],[11,"into","","",212,[[]]],[11,"try_from","","",212,[[],["result",4]]],[11,"try_into","","",212,[[],["result",4]]],[11,"borrow","","",212,[[]]],[11,"borrow_mut","","",212,[[]]],[11,"type_id","","",212,[[],["typeid",3]]],[11,"vzip","","",212,[[]]],[11,"from","","",213,[[]]],[11,"into","","",213,[[]]],[11,"try_from","","",213,[[],["result",4]]],[11,"try_into","","",213,[[],["result",4]]],[11,"borrow","","",213,[[]]],[11,"borrow_mut","","",213,[[]]],[11,"type_id","","",213,[[],["typeid",3]]],[11,"vzip","","",213,[[]]],[11,"from","smithay::backend::egl::display","",73,[[]]],[11,"into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"vzip","","",73,[[]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"vzip","","",74,[[]]],[11,"from","","",75,[[]]],[11,"into","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"vzip","","",75,[[]]],[11,"from","smithay::backend::egl::native","",214,[[]]],[11,"into","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"vzip","","",214,[[]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"vzip","","",215,[[]]],[11,"from","","",216,[[]]],[11,"into","","",216,[[]]],[11,"try_from","","",216,[[],["result",4]]],[11,"try_into","","",216,[[],["result",4]]],[11,"borrow","","",216,[[]]],[11,"borrow_mut","","",216,[[]]],[11,"type_id","","",216,[[],["typeid",3]]],[11,"vzip","","",216,[[]]],[11,"from","smithay::backend::egl::surface","",79,[[]]],[11,"into","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"vzip","","",79,[[]]],[11,"load","","",79,[[]]],[11,"load","","",79,[[],["dynguard",3]]],[11,"dev_path","smithay::backend::libinput","",82,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"vzip","","",82,[[]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"vzip","","",83,[[]]],[11,"from","","",217,[[]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"vzip","","",217,[[]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"vzip","","",81,[[]]],[11,"from","smithay::backend::session","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"read","","",84,[[],["result",4]]],[11,"get_elements_size","","",84,[[]]],[11,"to_void_ptr","","",84,[[]]],[11,"ref_from_ptr","","",84,[[],["option",4]]],[11,"is_size_suitable","","",84,[[]]],[11,"vzip","","",84,[[]]],[11,"from","smithay::backend::session::auto","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"vzip","","",87,[[]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"vzip","","",88,[[]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"to_string","","",89,[[],["string",3]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"as_fail","","",89,[[],["fail",8]]],[11,"vzip","","",89,[[]]],[11,"from","smithay::backend::session::direct","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"vzip","","",91,[[]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"vzip","","",92,[[]]],[11,"from","","",218,[[]]],[11,"into","","",218,[[]]],[11,"to_owned","","",218,[[]]],[11,"clone_into","","",218,[[]]],[11,"try_from","","",218,[[],["result",4]]],[11,"try_into","","",218,[[],["result",4]]],[11,"borrow","","",218,[[]]],[11,"borrow_mut","","",218,[[]]],[11,"type_id","","",218,[[],["typeid",3]]],[11,"read","","",218,[[],["result",4]]],[11,"get_elements_size","","",218,[[]]],[11,"to_void_ptr","","",218,[[]]],[11,"ref_from_ptr","","",218,[[],["option",4]]],[11,"is_size_suitable","","",218,[[]]],[11,"vzip","","",218,[[]]],[11,"from","","",90,[[]]],[11,"into","","",90,[[]]],[11,"to_string","","",90,[[],["string",3]]],[11,"try_from","","",90,[[],["result",4]]],[11,"try_into","","",90,[[],["result",4]]],[11,"borrow","","",90,[[]]],[11,"borrow_mut","","",90,[[]]],[11,"type_id","","",90,[[],["typeid",3]]],[11,"as_fail","","",90,[[],["fail",8]]],[11,"vzip","","",90,[[]]],[11,"from","smithay::backend::session::logind","",219,[[]]],[11,"into","","",219,[[]]],[11,"to_owned","","",219,[[]]],[11,"clone_into","","",219,[[]]],[11,"try_from","","",219,[[],["result",4]]],[11,"try_into","","",219,[[],["result",4]]],[11,"borrow","","",219,[[]]],[11,"borrow_mut","","",219,[[]]],[11,"type_id","","",219,[[],["typeid",3]]],[11,"vzip","","",219,[[]]],[11,"from","","",220,[[]]],[11,"into","","",220,[[]]],[11,"to_owned","","",220,[[]]],[11,"clone_into","","",220,[[]]],[11,"try_from","","",220,[[],["result",4]]],[11,"try_into","","",220,[[],["result",4]]],[11,"borrow","","",220,[[]]],[11,"borrow_mut","","",220,[[]]],[11,"type_id","","",220,[[],["typeid",3]]],[11,"vzip","","",220,[[]]],[11,"from","","",93,[[]]],[11,"into","","",93,[[]]],[11,"to_string","","",93,[[],["string",3]]],[11,"try_from","","",93,[[],["result",4]]],[11,"try_into","","",93,[[],["result",4]]],[11,"borrow","","",93,[[]]],[11,"borrow_mut","","",93,[[]]],[11,"type_id","","",93,[[],["typeid",3]]],[11,"as_fail","","",93,[[],["fail",8]]],[11,"vzip","","",93,[[]]],[11,"dev_path","smithay::backend::udev","",102,[[],[["option",4],["pathbuf",3]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"vzip","","",102,[[]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"vzip","","",98,[[]]],[11,"from","smithay::backend::winit","",107,[[]]],[11,"into","","",107,[[]]],[11,"try_from","","",107,[[],["result",4]]],[11,"try_into","","",107,[[],["result",4]]],[11,"borrow","","",107,[[]]],[11,"borrow_mut","","",107,[[]]],[11,"type_id","","",107,[[],["typeid",3]]],[11,"vzip","","",107,[[]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"vzip","","",221,[[]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"to_owned","","",222,[[]]],[11,"clone_into","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"read","","",222,[[],["result",4]]],[11,"get_elements_size","","",222,[[]]],[11,"to_void_ptr","","",222,[[]]],[11,"ref_from_ptr","","",222,[[],["option",4]]],[11,"is_size_suitable","","",222,[[]]],[11,"vzip","","",222,[[]]],[11,"from","","",223,[[]]],[11,"into","","",223,[[]]],[11,"to_owned","","",223,[[]]],[11,"clone_into","","",223,[[]]],[11,"try_from","","",223,[[],["result",4]]],[11,"try_into","","",223,[[],["result",4]]],[11,"borrow","","",223,[[]]],[11,"borrow_mut","","",223,[[]]],[11,"type_id","","",223,[[],["typeid",3]]],[11,"vzip","","",223,[[]]],[11,"from","","",224,[[]]],[11,"into","","",224,[[]]],[11,"to_owned","","",224,[[]]],[11,"clone_into","","",224,[[]]],[11,"try_from","","",224,[[],["result",4]]],[11,"try_into","","",224,[[],["result",4]]],[11,"borrow","","",224,[[]]],[11,"borrow_mut","","",224,[[]]],[11,"type_id","","",224,[[],["typeid",3]]],[11,"read","","",224,[[],["result",4]]],[11,"get_elements_size","","",224,[[]]],[11,"to_void_ptr","","",224,[[]]],[11,"ref_from_ptr","","",224,[[],["option",4]]],[11,"is_size_suitable","","",224,[[]]],[11,"vzip","","",224,[[]]],[11,"from","","",225,[[]]],[11,"into","","",225,[[]]],[11,"to_owned","","",225,[[]]],[11,"clone_into","","",225,[[]]],[11,"try_from","","",225,[[],["result",4]]],[11,"try_into","","",225,[[],["result",4]]],[11,"borrow","","",225,[[]]],[11,"borrow_mut","","",225,[[]]],[11,"type_id","","",225,[[],["typeid",3]]],[11,"read","","",225,[[],["result",4]]],[11,"get_elements_size","","",225,[[]]],[11,"to_void_ptr","","",225,[[]]],[11,"ref_from_ptr","","",225,[[],["option",4]]],[11,"is_size_suitable","","",225,[[]]],[11,"vzip","","",225,[[]]],[11,"from","","",226,[[]]],[11,"into","","",226,[[]]],[11,"to_owned","","",226,[[]]],[11,"clone_into","","",226,[[]]],[11,"try_from","","",226,[[],["result",4]]],[11,"try_into","","",226,[[],["result",4]]],[11,"borrow","","",226,[[]]],[11,"borrow_mut","","",226,[[]]],[11,"type_id","","",226,[[],["typeid",3]]],[11,"vzip","","",226,[[]]],[11,"from","","",227,[[]]],[11,"into","","",227,[[]]],[11,"to_owned","","",227,[[]]],[11,"clone_into","","",227,[[]]],[11,"try_from","","",227,[[],["result",4]]],[11,"try_into","","",227,[[],["result",4]]],[11,"borrow","","",227,[[]]],[11,"borrow_mut","","",227,[[]]],[11,"type_id","","",227,[[],["typeid",3]]],[11,"vzip","","",227,[[]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"read","","",228,[[],["result",4]]],[11,"get_elements_size","","",228,[[]]],[11,"to_void_ptr","","",228,[[]]],[11,"ref_from_ptr","","",228,[[],["option",4]]],[11,"is_size_suitable","","",228,[[]]],[11,"vzip","","",228,[[]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"to_owned","","",229,[[]]],[11,"clone_into","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"read","","",229,[[],["result",4]]],[11,"get_elements_size","","",229,[[]]],[11,"to_void_ptr","","",229,[[]]],[11,"ref_from_ptr","","",229,[[],["option",4]]],[11,"is_size_suitable","","",229,[[]]],[11,"vzip","","",229,[[]]],[11,"from","","",230,[[]]],[11,"into","","",230,[[]]],[11,"try_from","","",230,[[],["result",4]]],[11,"try_into","","",230,[[],["result",4]]],[11,"borrow","","",230,[[]]],[11,"borrow_mut","","",230,[[]]],[11,"type_id","","",230,[[],["typeid",3]]],[11,"vzip","","",230,[[]]],[11,"from","","",103,[[]]],[11,"into","","",103,[[]]],[11,"to_string","","",103,[[],["string",3]]],[11,"try_from","","",103,[[],["result",4]]],[11,"try_into","","",103,[[],["result",4]]],[11,"borrow","","",103,[[]]],[11,"borrow_mut","","",103,[[]]],[11,"type_id","","",103,[[],["typeid",3]]],[11,"as_fail","","",103,[[],["fail",8]]],[11,"vzip","","",103,[[]]],[11,"from","","",104,[[]]],[11,"into","","",104,[[]]],[11,"try_from","","",104,[[],["result",4]]],[11,"try_into","","",104,[[],["result",4]]],[11,"borrow","","",104,[[]]],[11,"borrow_mut","","",104,[[]]],[11,"type_id","","",104,[[],["typeid",3]]],[11,"vzip","","",104,[[]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"to_owned","","",106,[[]]],[11,"clone_into","","",106,[[]]],[11,"to_string","","",106,[[],["string",3]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"read","","",106,[[],["result",4]]],[11,"get_elements_size","","",106,[[]]],[11,"to_void_ptr","","",106,[[]]],[11,"ref_from_ptr","","",106,[[],["option",4]]],[11,"is_size_suitable","","",106,[[]]],[11,"as_fail","","",106,[[],["fail",8]]],[11,"vzip","","",106,[[]]],[11,"from","smithay::utils","",108,[[]]],[11,"into","","",108,[[]]],[11,"to_owned","","",108,[[]]],[11,"clone_into","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"read","","",108,[[],["result",4]]],[11,"get_elements_size","","",108,[[]]],[11,"to_void_ptr","","",108,[[]]],[11,"ref_from_ptr","","",108,[[],["option",4]]],[11,"is_size_suitable","","",108,[[]]],[11,"vzip","","",108,[[]]],[11,"from","smithay::wayland","",193,[[]]],[11,"into","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"vzip","","",193,[[]]],[11,"from","smithay::wayland::compositor","",109,[[]]],[11,"into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"vzip","","",109,[[]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"read","","",110,[[],["result",4]]],[11,"get_elements_size","","",110,[[]]],[11,"to_void_ptr","","",110,[[]]],[11,"ref_from_ptr","","",110,[[],["option",4]]],[11,"is_size_suitable","","",110,[[]]],[11,"vzip","","",110,[[]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"vzip","","",111,[[]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"to_owned","","",120,[[]]],[11,"clone_into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"read","","",120,[[],["result",4]]],[11,"get_elements_size","","",120,[[]]],[11,"to_void_ptr","","",120,[[]]],[11,"ref_from_ptr","","",120,[[],["option",4]]],[11,"is_size_suitable","","",120,[[]]],[11,"vzip","","",120,[[]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"vzip","","",112,[[]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"vzip","","",113,[[]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"vzip","","",114,[[]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"to_owned","","",116,[[]]],[11,"clone_into","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"read","","",116,[[],["result",4]]],[11,"get_elements_size","","",116,[[]]],[11,"to_void_ptr","","",116,[[]]],[11,"ref_from_ptr","","",116,[[],["option",4]]],[11,"is_size_suitable","","",116,[[]]],[11,"vzip","","",116,[[]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"vzip","","",117,[[]]],[11,"from","smithay::wayland::compositor::roles","",231,[[]]],[11,"into","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"vzip","","",231,[[]]],[11,"from","smithay::wayland::data_device","",121,[[]]],[11,"into","","",121,[[]]],[11,"to_owned","","",121,[[]]],[11,"clone_into","","",121,[[]]],[11,"try_from","","",121,[[],["result",4]]],[11,"try_into","","",121,[[],["result",4]]],[11,"borrow","","",121,[[]]],[11,"borrow_mut","","",121,[[]]],[11,"type_id","","",121,[[],["typeid",3]]],[11,"vzip","","",121,[[]]],[11,"from","","",232,[[]]],[11,"into","","",232,[[]]],[11,"try_from","","",232,[[],["result",4]]],[11,"try_into","","",232,[[],["result",4]]],[11,"borrow","","",232,[[]]],[11,"borrow_mut","","",232,[[]]],[11,"type_id","","",232,[[],["typeid",3]]],[11,"vzip","","",232,[[]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"vzip","","",122,[[]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"vzip","","",124,[[]]],[11,"from","smithay::wayland::dmabuf","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"read","","",127,[[],["result",4]]],[11,"get_elements_size","","",127,[[]]],[11,"to_void_ptr","","",127,[[]]],[11,"ref_from_ptr","","",127,[[],["option",4]]],[11,"is_size_suitable","","",127,[[]]],[11,"vzip","","",127,[[]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"vzip","","",128,[[]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"vzip","","",129,[[]]],[11,"from","","",132,[[]]],[11,"into","","",132,[[]]],[11,"to_owned","","",132,[[]]],[11,"clone_into","","",132,[[]]],[11,"try_from","","",132,[[],["result",4]]],[11,"try_into","","",132,[[],["result",4]]],[11,"borrow","","",132,[[]]],[11,"borrow_mut","","",132,[[]]],[11,"type_id","","",132,[[],["typeid",3]]],[11,"read","","",132,[[],["result",4]]],[11,"get_elements_size","","",132,[[]]],[11,"to_void_ptr","","",132,[[]]],[11,"ref_from_ptr","","",132,[[],["option",4]]],[11,"is_size_suitable","","",132,[[]]],[11,"vzip","","",132,[[]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"vzip","","",130,[[]]],[11,"from","smithay::wayland::explicit_synchronization","",135,[[]]],[11,"into","","",135,[[]]],[11,"try_from","","",135,[[],["result",4]]],[11,"try_into","","",135,[[],["result",4]]],[11,"borrow","","",135,[[]]],[11,"borrow_mut","","",135,[[]]],[11,"type_id","","",135,[[],["typeid",3]]],[11,"vzip","","",135,[[]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"vzip","","",133,[[]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"vzip","","",134,[[]]],[11,"from","smithay::wayland::output","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"read","","",136,[[],["result",4]]],[11,"get_elements_size","","",136,[[]]],[11,"to_void_ptr","","",136,[[]]],[11,"ref_from_ptr","","",136,[[],["option",4]]],[11,"is_size_suitable","","",136,[[]]],[11,"vzip","","",136,[[]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"vzip","","",137,[[]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"vzip","","",138,[[]]],[11,"from","smithay::wayland::seat","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"vzip","","",145,[[]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"to_owned","","",139,[[]]],[11,"clone_into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"read","","",139,[[],["result",4]]],[11,"get_elements_size","","",139,[[]]],[11,"to_void_ptr","","",139,[[]]],[11,"ref_from_ptr","","",139,[[],["option",4]]],[11,"is_size_suitable","","",139,[[]]],[11,"vzip","","",139,[[]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"to_owned","","",140,[[]]],[11,"clone_into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"vzip","","",140,[[]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"to_owned","","",148,[[]]],[11,"clone_into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"read","","",148,[[],["result",4]]],[11,"get_elements_size","","",148,[[]]],[11,"to_void_ptr","","",148,[[]]],[11,"ref_from_ptr","","",148,[[],["option",4]]],[11,"is_size_suitable","","",148,[[]]],[11,"vzip","","",148,[[]]],[11,"from","","",141,[[]]],[11,"into","","",141,[[]]],[11,"to_owned","","",141,[[]]],[11,"clone_into","","",141,[[]]],[11,"try_from","","",141,[[],["result",4]]],[11,"try_into","","",141,[[],["result",4]]],[11,"borrow","","",141,[[]]],[11,"borrow_mut","","",141,[[]]],[11,"type_id","","",141,[[],["typeid",3]]],[11,"read","","",141,[[],["result",4]]],[11,"get_elements_size","","",141,[[]]],[11,"to_void_ptr","","",141,[[]]],[11,"ref_from_ptr","","",141,[[],["option",4]]],[11,"is_size_suitable","","",141,[[]]],[11,"vzip","","",141,[[]]],[11,"from","","",142,[[]]],[11,"into","","",142,[[]]],[11,"to_owned","","",142,[[]]],[11,"clone_into","","",142,[[]]],[11,"try_from","","",142,[[],["result",4]]],[11,"try_into","","",142,[[],["result",4]]],[11,"borrow","","",142,[[]]],[11,"borrow_mut","","",142,[[]]],[11,"type_id","","",142,[[],["typeid",3]]],[11,"vzip","","",142,[[]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"vzip","","",146,[[]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"vzip","","",147,[[]]],[11,"from","","",150,[[]]],[11,"into","","",150,[[]]],[11,"to_owned","","",150,[[]]],[11,"clone_into","","",150,[[]]],[11,"try_from","","",150,[[],["result",4]]],[11,"try_into","","",150,[[],["result",4]]],[11,"borrow","","",150,[[]]],[11,"borrow_mut","","",150,[[]]],[11,"type_id","","",150,[[],["typeid",3]]],[11,"vzip","","",150,[[]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_string","","",143,[[],["string",3]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"as_fail","","",143,[[],["fail",8]]],[11,"vzip","","",143,[[]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"vzip","","",144,[[]]],[11,"from","smithay::wayland::shell::legacy","",151,[[]]],[11,"into","","",151,[[]]],[11,"try_from","","",151,[[],["result",4]]],[11,"try_into","","",151,[[],["result",4]]],[11,"borrow","","",151,[[]]],[11,"borrow_mut","","",151,[[]]],[11,"type_id","","",151,[[],["typeid",3]]],[11,"vzip","","",151,[[]]],[11,"from","","",163,[[]]],[11,"into","","",163,[[]]],[11,"to_owned","","",163,[[]]],[11,"clone_into","","",163,[[]]],[11,"try_from","","",163,[[],["result",4]]],[11,"try_into","","",163,[[],["result",4]]],[11,"borrow","","",163,[[]]],[11,"borrow_mut","","",163,[[]]],[11,"type_id","","",163,[[],["typeid",3]]],[11,"vzip","","",163,[[]]],[11,"from","","",164,[[]]],[11,"into","","",164,[[]]],[11,"try_from","","",164,[[],["result",4]]],[11,"try_into","","",164,[[],["result",4]]],[11,"borrow","","",164,[[]]],[11,"borrow_mut","","",164,[[]]],[11,"type_id","","",164,[[],["typeid",3]]],[11,"vzip","","",164,[[]]],[11,"from","","",152,[[]]],[11,"into","","",152,[[]]],[11,"try_from","","",152,[[],["result",4]]],[11,"try_into","","",152,[[],["result",4]]],[11,"borrow","","",152,[[]]],[11,"borrow_mut","","",152,[[]]],[11,"type_id","","",152,[[],["typeid",3]]],[11,"vzip","","",152,[[]]],[11,"from","","",157,[[]]],[11,"into","","",157,[[]]],[11,"try_from","","",157,[[],["result",4]]],[11,"try_into","","",157,[[],["result",4]]],[11,"borrow","","",157,[[]]],[11,"borrow_mut","","",157,[[]]],[11,"type_id","","",157,[[],["typeid",3]]],[11,"vzip","","",157,[[]]],[11,"from","smithay::wayland::shell::xdg","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"vzip","","",165,[[]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"to_owned","","",166,[[]]],[11,"clone_into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"vzip","","",166,[[]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"to_owned","","",167,[[]]],[11,"clone_into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"vzip","","",167,[[]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"vzip","","",168,[[]]],[11,"from","","",187,[[]]],[11,"into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"vzip","","",187,[[]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"vzip","","",188,[[]]],[11,"from","","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"vzip","","",189,[[]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"vzip","","",190,[[]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"vzip","","",169,[[]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"vzip","","",170,[[]]],[11,"from","","",171,[[]]],[11,"into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"vzip","","",171,[[]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"vzip","","",172,[[]]],[11,"from","smithay::wayland::shm","",233,[[]]],[11,"into","","",233,[[]]],[11,"to_owned","","",233,[[]]],[11,"clone_into","","",233,[[]]],[11,"try_from","","",233,[[],["result",4]]],[11,"try_into","","",233,[[],["result",4]]],[11,"borrow","","",233,[[]]],[11,"borrow_mut","","",233,[[]]],[11,"type_id","","",233,[[],["typeid",3]]],[11,"vzip","","",233,[[]]],[11,"from","","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"read","","",191,[[],["result",4]]],[11,"get_elements_size","","",191,[[]]],[11,"to_void_ptr","","",191,[[]]],[11,"ref_from_ptr","","",191,[[],["option",4]]],[11,"is_size_suitable","","",191,[[]]],[11,"vzip","","",191,[[]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"vzip","","",192,[[]]],[11,"from","smithay::signaling","",195,[[]]],[11,"into","","",195,[[]]],[11,"to_owned","","",195,[[]]],[11,"clone_into","","",195,[[]]],[11,"try_from","","",195,[[],["result",4]]],[11,"try_into","","",195,[[],["result",4]]],[11,"borrow","","",195,[[]]],[11,"borrow_mut","","",195,[[]]],[11,"type_id","","",195,[[],["typeid",3]]],[11,"vzip","","",195,[[]]],[11,"from","","",196,[[]]],[11,"into","","",196,[[]]],[11,"try_from","","",196,[[],["result",4]]],[11,"try_into","","",196,[[],["result",4]]],[11,"borrow","","",196,[[]]],[11,"borrow_mut","","",196,[[]]],[11,"type_id","","",196,[[],["typeid",3]]],[11,"vzip","","",196,[[]]],[11,"from","smithay::xwayland","",197,[[]]],[11,"into","","",197,[[]]],[11,"try_from","","",197,[[],["result",4]]],[11,"try_into","","",197,[[],["result",4]]],[11,"borrow","","",197,[[]]],[11,"borrow_mut","","",197,[[]]],[11,"type_id","","",197,[[],["typeid",3]]],[11,"vzip","","",197,[[]]],[11,"eq","smithay::wayland::dmabuf","",127,[[["flags",4]]]],[11,"clone","","",127,[[],["flags",4]]],[11,"fmt","","",127,[[["formatter",3]],[["error",3],["result",4]]]],[11,"set_cursor_position","smithay::backend::drm::atomic","",201,[[],[["error",4],["result",4]]]],[11,"set_cursor_representation","","",201,[[],[["error",4],["result",4]]]],[11,"clear_cursor_representation","","",201,[[],["result",4]]],[11,"set_cursor_position","smithay::backend::drm::common::fallback","",43,[[],[["result",4],["eithererror",4]]]],[11,"set_cursor_representation","","",43,[[],[["result",4],["eithererror",4]]]],[11,"clear_cursor_representation","","",43,[[],[["result",4],["eithererror",4]]]],[11,"set_cursor_position","smithay::backend::drm::egl","",203,[[],["result",4]]],[11,"set_cursor_representation","","",203,[[],["result",4]]],[11,"clear_cursor_representation","","",203,[[],["result",4]]],[11,"set_cursor_position","smithay::backend::drm::eglstream","",48,[[],["result",4]]],[11,"set_cursor_representation","","",48,[[["imagebuffer",3]],["result",4]]],[11,"clear_cursor_representation","","",48,[[],["result",4]]],[11,"set_cursor_position","smithay::backend::drm::gbm","",51,[[],["result",4]]],[11,"set_cursor_representation","","",51,[[["imagebuffer",3]],["result",4]]],[11,"clear_cursor_representation","","",51,[[],["result",4]]],[11,"set_cursor_position","smithay::backend::drm::legacy","",208,[[],[["error",4],["result",4]]]],[11,"set_cursor_representation","","",208,[[],[["error",4],["result",4]]]],[11,"clear_cursor_representation","","",208,[[],["result",4]]],[11,"set_cursor_position","smithay::backend::winit","",107,[[],["result",4]]],[11,"set_cursor_representation","","",107,[[],["result",4]]],[11,"clear_cursor_representation","","",107,[[],["result",4]]],[11,"swap_buffers","smithay::backend::drm::common::fallback","",43,[[],[["swapbufferserror",4],["result",4]]]],[11,"get_proc_address","","",43,[[]]],[11,"get_framebuffer_dimensions","","",43,[[]]],[11,"is_current","","",43,[[]]],[11,"make_current","","",43,[[],[["swapbufferserror",4],["result",4]]]],[11,"get_pixel_format","","",43,[[],["pixelformat",3]]],[11,"swap_buffers","smithay::backend::drm::egl","",203,[[],[["swapbufferserror",4],["result",4]]]],[11,"get_proc_address","","",203,[[]]],[11,"get_framebuffer_dimensions","","",203,[[]]],[11,"is_current","","",203,[[]]],[11,"make_current","","",203,[[],[["swapbufferserror",4],["result",4]]]],[11,"get_pixel_format","","",203,[[],["pixelformat",3]]],[11,"swap_buffers","smithay::backend::winit","",107,[[],[["swapbufferserror",4],["result",4]]]],[11,"get_proc_address","","",107,[[]]],[11,"get_framebuffer_dimensions","","",107,[[]]],[11,"is_current","","",107,[[]]],[11,"make_current","","",107,[[],[["swapbufferserror",4],["result",4]]]],[11,"get_pixel_format","","",107,[[],["pixelformat",3]]],[11,"time","smithay::backend::input","",200,[[]]],[11,"time","smithay::backend::winit","",222,[[]]],[11,"time","","",223,[[]]],[11,"time","","",224,[[]]],[11,"time","","",225,[[]]],[11,"time","","",226,[[]]],[11,"time","","",227,[[]]],[11,"time","","",228,[[]]],[11,"time","","",229,[[]]],[11,"key_code","smithay::backend::input","",200,[[]]],[11,"state","","",200,[[],["keystate",4]]],[11,"count","","",200,[[]]],[11,"key_code","smithay::backend::winit","",222,[[]]],[11,"state","","",222,[[],["keystate",4]]],[11,"count","","",222,[[]]],[11,"button","smithay::backend::input","",200,[[],["mousebutton",4]]],[11,"state","","",200,[[],["mousebuttonstate",4]]],[11,"button","smithay::backend::winit","",225,[[],["mousebutton",4]]],[11,"state","","",225,[[],["mousebuttonstate",4]]],[11,"amount","smithay::backend::input","",200,[[["axis",4]],["option",4]]],[11,"amount_discrete","","",200,[[["axis",4]],["option",4]]],[11,"source","","",200,[[],["axissource",4]]],[11,"source","smithay::backend::winit","",224,[[],["axissource",4]]],[11,"amount","","",224,[[["axis",4]],["option",4]]],[11,"amount_discrete","","",224,[[["axis",4]],["option",4]]],[11,"delta_x","smithay::backend::input","",200,[[]]],[11,"delta_y","","",200,[[]]],[11,"x","","",200,[[]]],[11,"y","","",200,[[]]],[11,"x_transformed","","",200,[[]]],[11,"y_transformed","","",200,[[]]],[11,"x","smithay::backend::winit","",223,[[]]],[11,"y","","",223,[[]]],[11,"x_transformed","","",223,[[]]],[11,"y_transformed","","",223,[[]]],[11,"slot","smithay::backend::input","",200,[[],[["option",4],["touchslot",3]]]],[11,"x","","",200,[[]]],[11,"y","","",200,[[]]],[11,"x_transformed","","",200,[[]]],[11,"y_transformed","","",200,[[]]],[11,"slot","smithay::backend::winit","",226,[[],[["option",4],["touchslot",3]]]],[11,"x","","",226,[[]]],[11,"y","","",226,[[]]],[11,"x_transformed","","",226,[[]]],[11,"y_transformed","","",226,[[]]],[11,"slot","smithay::backend::input","",200,[[],[["option",4],["touchslot",3]]]],[11,"x","","",200,[[]]],[11,"y","","",200,[[]]],[11,"x_transformed","","",200,[[]]],[11,"y_transformed","","",200,[[]]],[11,"slot","smithay::backend::winit","",227,[[],[["option",4],["touchslot",3]]]],[11,"x","","",227,[[]]],[11,"y","","",227,[[]]],[11,"x_transformed","","",227,[[]]],[11,"y_transformed","","",227,[[]]],[11,"slot","smithay::backend::input","",200,[[],[["option",4],["touchslot",3]]]],[11,"slot","smithay::backend::winit","",228,[[],[["option",4],["touchslot",3]]]],[11,"slot","smithay::backend::input","",200,[[],[["option",4],["touchslot",3]]]],[11,"slot","smithay::backend::winit","",229,[[],[["option",4],["touchslot",3]]]],[11,"seats","smithay::backend::libinput","",82,[[],[["vec",3],["seat",3]]]],[11,"input_config","","",82,[[]]],[11,"dispatch_new_events","","",82,[[],[["ioerror",3],["result",4]]]],[11,"seats","smithay::backend::winit","",221,[[],[["vec",3],["seat",3]]]],[11,"input_config","","",221,[[]]],[11,"dispatch_new_events","","Processes new events of the underlying event loop to drive…",221,[[],[["winitinputerror",4],["result",4]]]],[11,"device_id","smithay::backend::drm::atomic","",36,[[],["dev_t",6]]],[11,"set_handler","","",36,[[]]],[11,"clear_handler","","",36,[[]]],[11,"create_surface","","",36,[[["handle",3],["mode",3]],[["result",4],["atomicdrmsurface",3],["error",4]]]],[11,"process_events","","",36,[[]]],[11,"resource_handles","","",36,[[],[["result",4],["error",4],["resourcehandles",3]]]],[11,"get_connector_info","","",36,[[["handle",3]],[["info",3],["result",4],["drmerror",4]]]],[11,"get_crtc_info","","",36,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_encoder_info","","",36,[[["handle",3]],[["info",3],["drmerror",4],["result",4]]]],[11,"get_framebuffer_info","","",36,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_plane_info","","",36,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"device_id","smithay::backend::drm::common::fallback","",42,[[],["dev_t",6]]],[11,"set_handler","","",42,[[]]],[11,"clear_handler","","",42,[[]]],[11,"create_surface","","",42,[[["handle",3],["mode",3]],[["eithererror",4],["result",4]]]],[11,"process_events","","",42,[[]]],[11,"resource_handles","","",42,[[],[["resourcehandles",3],["eithererror",4],["result",4]]]],[11,"get_connector_info","","",42,[[["handle",3]],[["info",3],["result",4],["drmerror",4]]]],[11,"get_crtc_info","","",42,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_encoder_info","","",42,[[["handle",3]],[["info",3],["drmerror",4],["result",4]]]],[11,"get_framebuffer_info","","",42,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_plane_info","","",42,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"device_id","smithay::backend::drm::egl","",46,[[],["dev_t",6]]],[11,"set_handler","","",46,[[]]],[11,"clear_handler","","",46,[[]]],[11,"create_surface","","",46,[[["handle",3],["mode",3]],["result",4]]],[11,"process_events","","",46,[[]]],[11,"resource_handles","","",46,[[],[["result",4],["resourcehandles",3]]]],[11,"get_connector_info","","",46,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_crtc_info","","",46,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_encoder_info","","",46,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_framebuffer_info","","",46,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_plane_info","","",46,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"device_id","smithay::backend::drm::eglstream","",49,[[],["dev_t",6]]],[11,"set_handler","","",49,[[]]],[11,"clear_handler","","",49,[[]]],[11,"create_surface","","",49,[[["handle",3],["mode",3]],[["eglstreamsurface",3],["error",4],["result",4]]]],[11,"process_events","","",49,[[]]],[11,"resource_handles","","",49,[[],[["resourcehandles",3],["error",4],["result",4]]]],[11,"get_connector_info","","",49,[[["handle",3]],[["info",3],["result",4],["drmerror",4]]]],[11,"get_crtc_info","","",49,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_encoder_info","","",49,[[["handle",3]],[["info",3],["drmerror",4],["result",4]]]],[11,"get_framebuffer_info","","",49,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_plane_info","","",49,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"device_id","smithay::backend::drm::gbm","",52,[[],["dev_t",6]]],[11,"set_handler","","",52,[[]]],[11,"clear_handler","","",52,[[]]],[11,"create_surface","","",52,[[["handle",3],["mode",3]],[["error",4],["gbmsurface",3],["result",4]]]],[11,"process_events","","",52,[[]]],[11,"resource_handles","","",52,[[],[["result",4],["error",4],["resourcehandles",3]]]],[11,"get_connector_info","","",52,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_crtc_info","","",52,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_encoder_info","","",52,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_framebuffer_info","","",52,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_plane_info","","",52,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"device_id","smithay::backend::drm::legacy","",53,[[],["dev_t",6]]],[11,"set_handler","","",53,[[]]],[11,"clear_handler","","",53,[[]]],[11,"create_surface","","",53,[[["handle",3],["mode",3]],[["error",4],["result",4],["legacydrmsurface",3]]]],[11,"process_events","","",53,[[]]],[11,"resource_handles","","",53,[[],[["result",4],["error",4],["resourcehandles",3]]]],[11,"get_connector_info","","",53,[[["handle",3]],[["info",3],["result",4],["drmerror",4]]]],[11,"get_crtc_info","","",53,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"get_encoder_info","","",53,[[["handle",3]],[["info",3],["drmerror",4],["result",4]]]],[11,"get_framebuffer_info","","",53,[[["handle",3]],[["drmerror",4],["result",4],["info",3]]]],[11,"get_plane_info","","",53,[[["handle",3]],[["result",4],["info",3],["drmerror",4]]]],[11,"crtc","smithay::backend::drm::atomic","",201,[[],["handle",3]]],[11,"current_connectors","","",201,[[]]],[11,"pending_connectors","","",201,[[]]],[11,"current_mode","","",201,[[],["mode",3]]],[11,"pending_mode","","",201,[[],["mode",3]]],[11,"add_connector","","",201,[[["handle",3]],[["error",4],["result",4]]]],[11,"remove_connector","","",201,[[["handle",3]],[["error",4],["result",4]]]],[11,"set_connectors","","",201,[[],[["error",4],["result",4]]]],[11,"use_mode","","",201,[[["mode",3]],[["error",4],["result",4]]]],[11,"crtc","smithay::backend::drm::common::fallback","",43,[[],["handle",3]]],[11,"current_connectors","","",43,[[]]],[11,"pending_connectors","","",43,[[]]],[11,"add_connector","","",43,[[["handle",3]],[["eithererror",4],["result",4]]]],[11,"remove_connector","","",43,[[["handle",3]],[["eithererror",4],["result",4]]]],[11,"set_connectors","","",43,[[],[["eithererror",4],["result",4]]]],[11,"current_mode","","",43,[[],["mode",3]]],[11,"pending_mode","","",43,[[],["mode",3]]],[11,"use_mode","","",43,[[["mode",3]],[["eithererror",4],["result",4]]]],[11,"crtc","smithay::backend::drm::egl","",203,[[],["handle",3]]],[11,"current_connectors","","",203,[[]]],[11,"pending_connectors","","",203,[[]]],[11,"add_connector","","",203,[[["handle",3]],["result",4]]],[11,"remove_connector","","",203,[[["handle",3]],["result",4]]],[11,"set_connectors","","",203,[[],["result",4]]],[11,"current_mode","","",203,[[],["mode",3]]],[11,"pending_mode","","",203,[[],["mode",3]]],[11,"use_mode","","",203,[[["mode",3]],["result",4]]],[11,"crtc","smithay::backend::drm::eglstream","",48,[[],["handle",3]]],[11,"current_connectors","","",48,[[]]],[11,"pending_connectors","","",48,[[]]],[11,"add_connector","","",48,[[["handle",3]],["result",4]]],[11,"remove_connector","","",48,[[["handle",3]],["result",4]]],[11,"set_connectors","","",48,[[],["result",4]]],[11,"current_mode","","",48,[[],["mode",3]]],[11,"pending_mode","","",48,[[],["mode",3]]],[11,"use_mode","","",48,[[["mode",3]],["result",4]]],[11,"crtc","smithay::backend::drm::gbm","",51,[[],["handle",3]]],[11,"current_connectors","","",51,[[]]],[11,"pending_connectors","","",51,[[]]],[11,"add_connector","","",51,[[["handle",3]],["result",4]]],[11,"remove_connector","","",51,[[["handle",3]],["result",4]]],[11,"set_connectors","","",51,[[],["result",4]]],[11,"current_mode","","",51,[[],["mode",3]]],[11,"pending_mode","","",51,[[],["mode",3]]],[11,"use_mode","","",51,[[["mode",3]],["result",4]]],[11,"crtc","smithay::backend::drm::legacy","",208,[[],["handle",3]]],[11,"current_connectors","","",208,[[]]],[11,"pending_connectors","","",208,[[]]],[11,"current_mode","","",208,[[],["mode",3]]],[11,"pending_mode","","",208,[[],["mode",3]]],[11,"add_connector","","",208,[[["handle",3]],[["error",4],["result",4]]]],[11,"remove_connector","","",208,[[["handle",3]],[["error",4],["result",4]]]],[11,"set_connectors","","",208,[[],["result",4]]],[11,"use_mode","","",208,[[["mode",3]],[["error",4],["result",4]]]],[11,"commit_pending","smithay::backend::drm::atomic","",201,[[]]],[11,"commit","","",201,[[["handle",3]],[["error",4],["result",4]]]],[11,"page_flip","","",201,[[["handle",3]],[["error",4],["result",4]]]],[11,"commit_pending","smithay::backend::drm::common::fallback","",43,[[]]],[11,"commit","","",43,[[["handle",3]],[["eithererror",4],["result",4]]]],[11,"page_flip","","",43,[[["handle",3]],[["eithererror",4],["result",4]]]],[11,"commit_pending","smithay::backend::drm::legacy","",208,[[]]],[11,"commit","","",208,[[["handle",3]],[["error",4],["result",4]]]],[11,"page_flip","","",208,[[["handle",3]],[["error",4],["result",4]]]],[11,"get_display","smithay::backend::drm::eglstream::egl","",205,[[["nativedisplaytype",6],["logger",3]],[["eglerror",4],["result",4],["egldisplay",6]]]],[11,"get_display","smithay::backend::drm::gbm::egl","",207,[[["nativedisplaytype",6],["logger",3]],[["eglerror",4],["result",4],["egldisplay",6]]]],[11,"get_display","smithay::backend::egl::native","",215,[[["nativedisplaytype",6],["logger",3]],[["eglerror",4],["result",4],["egldisplay",6]]]],[11,"get_display","","",216,[[["nativedisplaytype",6],["logger",3]],[["eglerror",4],["result",4],["egldisplay",6]]]],[11,"is_backend","smithay::backend::drm::eglstream","",49,[[]]],[11,"ptr","","",49,[[],[["nativedisplaytype",6],["result",4],["eglbackenderror",4]]]],[11,"attributes","","",49,[[],[["vec",3],["eglint",6]]]],[11,"surface_type","","",49,[[],["eglint",6]]],[11,"create_surface","","",49,[[],[["eglstreamsurface",3],["error",4],["result",4]]]],[11,"is_backend","smithay::backend::drm::gbm","",52,[[]]],[11,"ptr","","",52,[[],[["nativedisplaytype",6],["result",4],["eglbackenderror",4]]]],[11,"create_surface","","",52,[[],[["error",4],["gbmsurface",3],["result",4]]]],[11,"create","smithay::backend::drm::eglstream","",48,[[["arc",3],["eglconfig",6]],[["surfacecreationerror",4],["result",4]]]],[11,"needs_recreation","","",48,[[]]],[11,"swap_buffers","","",48,[[["arc",3],["eglsurface",6]],[["swapbufferserror",4],["result",4]]]],[11,"create","","",48,[[["arc",3],["eglconfig",6]],[["surfacecreationerror",4],["result",4]]]],[11,"needs_recreation","","",48,[[]]],[11,"swap_buffers","","",48,[[["arc",3],["eglsurface",6]],[["swapbufferserror",4],["result",4]]]],[11,"create","","",48,[[["arc",3],["eglconfig",6]],[["surfacecreationerror",4],["result",4]]]],[11,"needs_recreation","","",48,[[]]],[11,"swap_buffers","","",48,[[["arc",3],["eglsurface",6]],[["result",4],["swapbufferserror",4]]]],[11,"create","smithay::backend::drm::gbm","",51,[[["arc",3],["eglconfig",6]],[["surfacecreationerror",4],["result",4]]]],[11,"needs_recreation","","",51,[[]]],[11,"swap_buffers","","",51,[[["arc",3],["eglsurface",6]],[["result",4],["swapbufferserror",4]]]],[11,"create","smithay::backend::egl::native","",214,[[["arc",3],["eglconfig",6]],[["surfacecreationerror",4],["result",4]]]],[11,"bind_wl_display","smithay::backend::drm::common::fallback","",42,[[["display",3]],[["eglerror",4],["result",4],["eglbufferreader",3]]]],[11,"bind_wl_display","smithay::backend::drm::egl","",46,[[["display",3]],[["eglerror",4],["result",4],["eglbufferreader",3]]]],[11,"bind_wl_display","smithay::backend::egl::display","Binds this EGL display to the given Wayland display.",74,[[["display",3]],[["result",4],["error",4],["eglbufferreader",3]]]],[11,"bind_wl_display","smithay::backend::winit","",107,[[["display",3]],[["eglerror",4],["result",4],["eglbufferreader",3]]]],[11,"open","smithay::backend::session::auto","",87,[[["oflag",3],["path",3]],[["result",4],["rawfd",6],["error",4]]]],[11,"close","","",87,[[["rawfd",6]],[["result",4],["error",4]]]],[11,"change_vt","","",87,[[],[["result",4],["error",4]]]],[11,"is_active","","",87,[[]]],[11,"seat","","",87,[[],["string",3]]],[11,"open","smithay::backend::session::direct","",91,[[["oflag",3],["path",3]],[["rawfd",6],["nixresult",6]]]],[11,"close","","",91,[[["rawfd",6]],["nixresult",6]]],[11,"is_active","","",91,[[]]],[11,"seat","","",91,[[],["string",3]]],[11,"change_vt","","",91,[[],["nixresult",6]]],[11,"open","smithay::backend::session::logind","",219,[[["oflag",3],["path",3]],[["rawfd",6],["error",4],["result",4]]]],[11,"close","","",219,[[["rawfd",6]],[["result",4],["error",4]]]],[11,"is_active","","",219,[[]]],[11,"seat","","",219,[[],["string",3]]],[11,"change_vt","","",219,[[],[["result",4],["error",4]]]],[11,"as_errno","smithay::backend::session::auto","",89,[[],["option",4]]],[11,"as_errno","smithay::backend::session::logind","",93,[[],["option",4]]],[11,"link","smithay::backend::drm::atomic","",36,[[["signaler",3],["sessionsignal",4]]]],[11,"link","smithay::backend::drm::common::fallback","",42,[[["signal",4],["signaler",3]]]],[11,"link","smithay::backend::drm::egl","",46,[[["signaler",3],["sessionsignal",4]]]],[11,"link","smithay::backend::drm::eglstream","",49,[[["signaler",3],["sessionsignal",4]]]],[11,"link","smithay::backend::drm::gbm","",52,[[["signaler",3],["sessionsignal",4]]]],[11,"link","smithay::backend::drm::legacy","",53,[[["signaler",3],["sessionsignal",4]]]],[11,"link","smithay::backend::libinput","",82,[[["signaler",3],["sessionsignal",4]]]],[11,"drop","smithay::backend::drm::atomic","",36,[[]]],[11,"drop","smithay::backend::drm::egl","",46,[[]]],[11,"drop","smithay::backend::drm::eglstream","",49,[[]]],[11,"drop","smithay::backend::drm::gbm","",52,[[]]],[11,"drop","smithay::backend::drm::legacy","",53,[[]]],[11,"drop","smithay::backend::egl::context","",71,[[]]],[11,"drop","smithay::backend::egl::display","",73,[[]]],[11,"drop","","",75,[[]]],[11,"drop","smithay::backend::egl::surface","",79,[[]]],[11,"drop","smithay::backend::egl","",60,[[]]],[11,"drop","smithay::backend::session::direct","",91,[[]]],[11,"drop","smithay::backend::session::logind","",220,[[]]],[11,"drop","smithay::xwayland","",197,[[]]],[11,"from","smithay::backend::graphics::glium","",4,[[]]],[11,"from","smithay::backend::egl","",62,[[]]],[11,"from","","",63,[[["eglextensionnotsupportederror",3]]]],[11,"from","","",210,[[["eglerror",4]]]],[11,"from","smithay::backend::graphics","",1,[[["makecurrenterror",3]],["graphicsswapbufferserror",4]]],[11,"from","smithay::backend::input","",8,[[["keystate",4]]]],[11,"from","","",11,[[["axis",4]]]],[11,"from","","",12,[[["axissource",4]]]],[11,"from","","",10,[[["buttonstate",4]]]],[11,"from","smithay::backend::libinput","",217,[[],["libinputsessioninterface",3]]],[11,"from","smithay::backend::session::auto","",89,[[["error",4]]]],[11,"from","","",89,[[["error",4]]]],[11,"from","","",89,[[["error",4]]]],[11,"from","smithay::backend::winit","",103,[[["oserror",3]]]],[11,"from","","",103,[[["eglerror",4]]]],[11,"from","","",103,[[["surfacecreationerror",4],["eglerror",4]]]],[11,"from","smithay::backend::input","",9,[[["winitmousebutton",4]],["mousebutton",4]]],[11,"from","","",8,[[["elementstate",4]]]],[11,"from","","",10,[[["elementstate",4]]]],[11,"into","smithay::backend::drm::common::fallback","",44,[[],["swapbufferserror",4]]],[11,"into","smithay::backend::drm::common","",37,[[],["swapbufferserror",4]]],[11,"into","smithay::backend::drm::eglstream","",47,[[],["swapbufferserror",4]]],[11,"into","smithay::backend::drm::gbm","",50,[[],["swapbufferserror",4]]],[11,"extend","smithay::wayland::dmabuf","",132,[[["intoiterator",8]]]],[11,"clone","smithay::backend::graphics","",0,[[],["pixelformat",3]]],[11,"clone","smithay::backend::graphics::gl","",2,[[],["gles2",3]]],[11,"clone","smithay::backend::input","",35,[[],["seat",3]]],[11,"clone","","",7,[[],["seatcapabilities",3]]],[11,"clone","","",8,[[],["keystate",4]]],[11,"clone","","",9,[[],["mousebutton",4]]],[11,"clone","","",10,[[],["mousebuttonstate",4]]],[11,"clone","","",11,[[],["axis",4]]],[11,"clone","","",12,[[],["axissource",4]]],[11,"clone","","",199,[[],["touchslot",3]]],[11,"clone","smithay::backend::egl::context","",68,[[],["glattributes",3]]],[11,"clone","","",70,[[],["glprofile",4]]],[11,"clone","","",69,[[],["pixelformatrequirements",3]]],[11,"clone","smithay::backend::egl","",209,[[],["eglextensionnotsupportederror",3]]],[11,"clone","","",66,[[],["texturecreationerror",4]]],[11,"clone","smithay::backend::session","",84,[[],["signal",4]]],[11,"clone","smithay::backend::session::auto","",87,[[],["autosession",4]]],[11,"clone","smithay::backend::session::direct","",218,[[],["id",3]]],[11,"clone","smithay::backend::session::logind","",219,[[],["logindsession",3]]],[11,"clone","","",220,[[],["logindsessionnotifier",3]]],[11,"clone","smithay::backend::winit","",106,[[],["winitinputerror",4]]],[11,"clone","","",222,[[],["winitkeyboardinputevent",3]]],[11,"clone","","",223,[[],["winitmousemovedevent",3]]],[11,"clone","","",224,[[],["winitmousewheelevent",3]]],[11,"clone","","",225,[[],["winitmouseinputevent",3]]],[11,"clone","","",226,[[],["winittouchstartedevent",3]]],[11,"clone","","",227,[[],["winittouchmovedevent",3]]],[11,"clone","","",228,[[],["winittouchendedevent",3]]],[11,"clone","","",229,[[],["winittouchcancelledevent",3]]],[11,"clone","smithay::utils","",108,[[],["rectangle",3]]],[11,"clone","smithay::wayland::compositor","",110,[[],["subsurfacerole",3]]],[11,"clone","","",116,[[],["rectanglekind",4]]],[11,"clone","","",111,[[],["regionattributes",3]]],[11,"clone","","",120,[[],["compositortoken",3]]],[11,"clone","smithay::wayland::data_device","",121,[[],["sourcemetadata",3]]],[11,"clone","smithay::wayland::dmabuf","",132,[[],["bufferflags",3]]],[11,"clone","smithay::wayland::output","",136,[[],["mode",3]]],[11,"clone","smithay::wayland::seat","",139,[[],["modifiersstate",3]]],[11,"clone","","",140,[[],["xkbconfig",3]]],[11,"clone","","",145,[[],["keyboardhandle",3]]],[11,"clone","","",141,[[],["cursorimagerole",3]]],[11,"clone","","",144,[[],["cursorimagestatus",4]]],[11,"clone","","",146,[[],["pointerhandle",3]]],[11,"clone","","",142,[[],["grabstartdata",3]]],[11,"clone","","",148,[[],["axisframe",3]]],[11,"clone","","",150,[[],["seat",3]]],[11,"clone","smithay::wayland::shell::legacy","",163,[[]]],[11,"clone","smithay::wayland::shell::xdg","",166,[[],["positionerstate",3]]],[11,"clone","","",167,[[],["toplevelstate",3]]],[11,"clone","","",168,[[],["popupstate",3]]],[11,"clone","","",189,[[]]],[11,"clone","smithay::wayland::shm","",233,[[],["shmglobaldata",3]]],[11,"clone","","",191,[[],["bufferdata",3]]],[11,"clone","smithay::signaling","",195,[[],["signaler",3]]],[11,"default","smithay::backend::egl::context","",69,[[]]],[11,"default","smithay::utils","",108,[[],["rectangle",3]]],[11,"default","smithay::wayland::compositor","",109,[[],["surfaceattributes",3]]],[11,"default","","",110,[[],["subsurfacerole",3]]],[11,"default","","",111,[[],["regionattributes",3]]],[11,"default","smithay::wayland::data_device","",232,[[],["dndiconrole",3]]],[11,"default","smithay::wayland::seat","",140,[[]]],[11,"default","","",141,[[],["cursorimagerole",3]]],[11,"default","smithay::wayland::shell::xdg","",171,[[],["xdgsurfacependingstate",4]]],[11,"default","smithay::signaling","",195,[[]]],[11,"cmp","smithay::wayland::dmabuf","",132,[[["bufferflags",3]],["ordering",4]]],[11,"eq","smithay::backend::graphics","",0,[[["pixelformat",3]]]],[11,"ne","","",0,[[["pixelformat",3]]]],[11,"eq","smithay::backend::input","",35,[[["seat",3]]]],[11,"eq","","",7,[[["seatcapabilities",3]]]],[11,"ne","","",7,[[["seatcapabilities",3]]]],[11,"eq","","",8,[[["keystate",4]]]],[11,"eq","","",9,[[["mousebutton",4]]]],[11,"ne","","",9,[[["mousebutton",4]]]],[11,"eq","","",10,[[["mousebuttonstate",4]]]],[11,"eq","","",11,[[["axis",4]]]],[11,"eq","","",12,[[["axissource",4]]]],[11,"eq","","",199,[[["touchslot",3]]]],[11,"ne","","",199,[[["touchslot",3]]]],[11,"eq","smithay::backend::egl::context","",68,[[["glattributes",3]]]],[11,"ne","","",68,[[["glattributes",3]]]],[11,"eq","","",70,[[["glprofile",4]]]],[11,"eq","","",69,[[["pixelformatrequirements",3]]]],[11,"ne","","",69,[[["pixelformatrequirements",3]]]],[11,"eq","smithay::backend::egl","",209,[[["eglextensionnotsupportederror",3]]]],[11,"ne","","",209,[[["eglextensionnotsupportederror",3]]]],[11,"eq","","",66,[[["texturecreationerror",4]]]],[11,"ne","","",66,[[["texturecreationerror",4]]]],[11,"eq","smithay::backend::session::direct","",218,[[["id",3]]]],[11,"ne","","",218,[[["id",3]]]],[11,"eq","smithay::backend::winit","",106,[[["winitinputerror",4]]]],[11,"eq","","",222,[[["winitkeyboardinputevent",3]]]],[11,"ne","","",222,[[["winitkeyboardinputevent",3]]]],[11,"eq","","",224,[[["winitmousewheelevent",3]]]],[11,"ne","","",224,[[["winitmousewheelevent",3]]]],[11,"eq","","",225,[[["winitmouseinputevent",3]]]],[11,"ne","","",225,[[["winitmouseinputevent",3]]]],[11,"eq","","",228,[[["winittouchendedevent",3]]]],[11,"ne","","",228,[[["winittouchendedevent",3]]]],[11,"eq","","",229,[[["winittouchcancelledevent",3]]]],[11,"ne","","",229,[[["winittouchcancelledevent",3]]]],[11,"eq","smithay::wayland::dmabuf","",132,[[["bufferflags",3]]]],[11,"ne","","",132,[[["bufferflags",3]]]],[11,"eq","smithay::wayland::output","",136,[[["mode",3]]]],[11,"ne","","",136,[[["mode",3]]]],[11,"eq","smithay::wayland::seat","",139,[[["modifiersstate",3]]]],[11,"ne","","",139,[[["modifiersstate",3]]]],[11,"eq","","",144,[[["cursorimagestatus",4]]]],[11,"ne","","",144,[[["cursorimagestatus",4]]]],[11,"eq","","",150,[[["seat",3]]]],[11,"partial_cmp","smithay::wayland::dmabuf","",132,[[["bufferflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",132,[[["bufferflags",3]]]],[11,"le","","",132,[[["bufferflags",3]]]],[11,"gt","","",132,[[["bufferflags",3]]]],[11,"ge","","",132,[[["bufferflags",3]]]],[11,"deref","smithay::backend::egl::ffi::egl","",211,[[],["library",3]]],[11,"deref","smithay::backend::egl::display","",73,[[]]],[11,"deref","smithay::backend::egl::surface","",79,[[]]],[11,"deref_mut","","",79,[[]]],[11,"fmt","smithay::backend::graphics","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::input","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",199,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::common::fallback","",44,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::common","",37,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::egl","",45,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::eglstream","",47,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::gbm","",50,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::egl::context","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::egl","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],["result",6]]],[11,"fmt","","",63,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session","",84,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session::auto","",89,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session::direct","",218,[[["formatter",3]],["result",6]]],[11,"fmt","","",90,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session::logind","",93,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::winit","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","","",222,[[["formatter",3]],["result",6]]],[11,"fmt","","",224,[[["formatter",3]],["result",6]]],[11,"fmt","","",225,[[["formatter",3]],["result",6]]],[11,"fmt","","",228,[[["formatter",3]],["result",6]]],[11,"fmt","","",229,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::utils","",108,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::compositor::roles","",231,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::compositor","",110,[[["formatter",3]],["result",6]]],[11,"fmt","","",116,[[["formatter",3]],["result",6]]],[11,"fmt","","",111,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::data_device","",121,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::dmabuf","",132,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::seat","",139,[[["formatter",3]],["result",6]]],[11,"fmt","","",140,[[["formatter",3]],["result",6]]],[11,"fmt","","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",148,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::shell::xdg","",166,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::shm","",192,[[["formatter",3]],["result",6]]],[11,"fmt","","",191,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::graphics","",1,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::common::fallback","",44,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::common","",37,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::egl","",45,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::eglstream","",47,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::drm::gbm","",50,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::egl","",61,[[["formatter",3]],["result",6]]],[11,"fmt","","",62,[[["formatter",3]],["result",6]]],[11,"fmt","","",209,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",65,[[["formatter",3]],["result",6]]],[11,"fmt","","",210,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session::auto","",89,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session::direct","",90,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::session::logind","",93,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::backend::winit","",103,[[["formatter",3]],["result",6]]],[11,"fmt","","",106,[[["formatter",3]],["result",6]]],[11,"fmt","smithay::wayland::seat","",143,[[["formatter",3]],["result",6]]],[11,"sub","smithay::wayland::dmabuf","Returns the set difference of the two sets of flags.",132,[[["bufferflags",3]],["bufferflags",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",132,[[["bufferflags",3]]]],[11,"not","","Returns the complement of this set of flags.",132,[[],["bufferflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",132,[[["bufferflags",3]],["bufferflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",132,[[["bufferflags",3]],["bufferflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",132,[[["bufferflags",3]],["bufferflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",132,[[["bufferflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",132,[[["bufferflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",132,[[["bufferflags",3]]]],[11,"hash","smithay::backend::input","",35,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",199,[[]]],[11,"hash","smithay::backend::winit","",106,[[]]],[11,"hash","","",222,[[]]],[11,"hash","","",225,[[]]],[11,"hash","","",228,[[]]],[11,"hash","","",229,[[]]],[11,"hash","smithay::wayland::dmabuf","",132,[[]]],[11,"hash","smithay::wayland::seat","",139,[[]]],[11,"from_iter","smithay::wayland::dmabuf","",132,[[["intoiterator",8]],["bufferflags",3]]],[11,"try_from","smithay::backend::graphics","",1,[[["swapbufferserror",4]],["result",4]]],[11,"fmt","smithay::wayland::dmabuf","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"fmt","","",132,[[["formatter",3]],["result",6]]],[11,"source","smithay::backend::drm::common::fallback","",44,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::drm::common","",37,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::drm::egl","",45,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::drm::eglstream","",47,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::drm::gbm","",50,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::egl","",61,[[],[["error",8],["option",4]]]],[11,"source","","",63,[[],[["error",8],["option",4]]]],[11,"source","","",64,[[],[["error",8],["option",4]]]],[11,"source","","",65,[[],[["error",8],["option",4]]]],[11,"source","","",210,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::session::auto","",89,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::session::direct","",90,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::session::logind","",93,[[],[["error",8],["option",4]]]],[11,"source","smithay::backend::winit","",103,[[],[["error",8],["option",4]]]],[11,"as_raw_fd","smithay::backend::drm::atomic","",201,[[],["rawfd",6]]],[11,"as_raw_fd","","",36,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::drm::common::fallback","",42,[[],["rawfd",6]]],[11,"as_raw_fd","","",43,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::drm::egl","",46,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::drm::eglstream","",49,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::drm::gbm","",52,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::drm::legacy","",208,[[],["rawfd",6]]],[11,"as_raw_fd","","",53,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::libinput","",82,[[],["rawfd",6]]],[11,"as_raw_fd","smithay::backend::udev","",102,[[],["rawfd",6]]],[11,"initialize","smithay::backend::egl::ffi::egl","",211,[[]]],[11,"get_context","smithay::backend::graphics::glium","",4,[[],["rc",3]]],[11,"clear","","",5,[[["option",4],["option",4],["option",4],["rect",3],["option",4]]]],[11,"get_dimensions","","",5,[[]]],[11,"get_depth_buffer_bits","","",5,[[],["option",4]]],[11,"get_stencil_buffer_bits","","",5,[[],["option",4]]],[11,"draw","","",5,[[["drawparameters",3],["program",3]],[["result",4],["drawerror",4]]]],[11,"blit_from_frame","","",5,[[["magnifysamplerfilter",4],["rect",3],["blittarget",3]]]],[11,"blit_from_simple_framebuffer","","",5,[[["simpleframebuffer",3],["magnifysamplerfilter",4],["rect",3],["blittarget",3]]]],[11,"blit_from_multioutput_framebuffer","","",5,[[["multioutputframebuffer",3],["magnifysamplerfilter",4],["rect",3],["blittarget",3]]]],[11,"blit_color","","",5,[[["magnifysamplerfilter",4],["rect",3],["blittarget",3]]]],[11,"process_events","smithay::backend::libinput","",82,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",82,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",82,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",82,[[["poll",3]],["result",6]]],[11,"process_events","smithay::backend::session::auto","",88,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",88,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",88,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",88,[[["poll",3]],["result",6]]],[11,"process_events","smithay::backend::session::direct","",92,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",92,[[["poll",3],["token",3]],["result",6]]],[11,"reregister","","",92,[[["poll",3],["token",3]],["result",6]]],[11,"unregister","","",92,[[["poll",3]],["result",6]]],[11,"process_events","smithay::backend::session::logind","",220,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",220,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",220,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",220,[[["poll",3]],["result",6]]],[11,"process_events","smithay::backend::udev","",102,[[["token",3],["readiness",3]],["result",6]]],[11,"register","","",102,[[["token",3],["poll",3]],["result",6]]],[11,"reregister","","",102,[[["token",3],["poll",3]],["result",6]]],[11,"unregister","","",102,[[["poll",3]],["result",6]]],[11,"open_restricted","smithay::backend::libinput","",217,[[["path",3]],[["result",4],["rawfd",6]]]],[11,"close_restricted","","",217,[[["rawfd",6]]]],[11,"new","smithay::backend::session::logind","Tries to create a new session via the logind dbus interface.",219,[[],[["error",4],["result",4]]]],[11,"session","","Creates a new session object belonging to this notifier.",220,[[],["logindsession",3]]],[11,"signaler","","Get a handle to the Signaler of this session.",220,[[],[["sessionsignal",4],["signaler",3]]]],[11,"from_raw","smithay::wayland::dmabuf","",127,[[],[["flags",4],["option",4]]]],[11,"to_raw","","",127,[[]]]],"p":[[3,"PixelFormat"],[4,"SwapBuffersError"],[3,"Gles2"],[8,"GLGraphicsBackend"],[3,"GliumGraphicsBackend"],[3,"Frame"],[8,"CursorBackend"],[3,"SeatCapabilities"],[4,"KeyState"],[4,"MouseButton"],[4,"MouseButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"InputEvent"],[13,"Keyboard"],[13,"PointerMotion"],[13,"PointerMotionAbsolute"],[13,"PointerButton"],[13,"PointerAxis"],[13,"TouchDown"],[13,"TouchMotion"],[13,"TouchUp"],[13,"TouchCancel"],[13,"TouchFrame"],[8,"Event"],[8,"KeyboardKeyEvent"],[8,"PointerButtonEvent"],[8,"PointerAxisEvent"],[8,"PointerMotionEvent"],[8,"PointerMotionAbsoluteEvent"],[8,"TouchDownEvent"],[8,"TouchMotionEvent"],[8,"TouchUpEvent"],[8,"TouchCancelEvent"],[8,"InputBackend"],[3,"Seat"],[3,"AtomicDrmDevice"],[4,"Error"],[13,"Access"],[13,"NoSuitableEncoder"],[13,"NoSuitablePlanes"],[13,"UnknownProperty"],[4,"FallbackDevice"],[4,"FallbackSurface"],[4,"EitherError"],[4,"Error"],[3,"EglDevice"],[4,"Error"],[3,"EglStreamSurface"],[3,"EglStreamDevice"],[4,"Error"],[3,"GbmSurface"],[3,"GbmDevice"],[3,"LegacyDrmDevice"],[8,"DeviceHandler"],[8,"Device"],[8,"RawDevice"],[8,"Surface"],[8,"RawSurface"],[8,"DevPath"],[3,"EGLImages"],[4,"Error"],[4,"EGLError"],[4,"BufferAccessError"],[4,"SurfaceCreationError"],[4,"SwapBuffersError"],[4,"TextureCreationError"],[4,"Format"],[3,"GlAttributes"],[3,"PixelFormatRequirements"],[4,"GlProfile"],[3,"EGLContext"],[3,"FnPtr"],[3,"EGLDisplayHandle"],[3,"EGLDisplay"],[3,"EGLBufferReader"],[8,"Backend"],[8,"NativeDisplay"],[8,"NativeSurface"],[3,"EGLSurface"],[8,"EGLGraphicsBackend"],[4,"LibinputEvent"],[3,"LibinputInputBackend"],[3,"LibinputConfig"],[4,"Signal"],[13,"PauseDevice"],[13,"ActivateDevice"],[4,"AutoSession"],[4,"AutoSessionNotifier"],[4,"Error"],[4,"Error"],[3,"DirectSession"],[3,"DirectSessionNotifier"],[4,"Error"],[13,"FailedToSendDbusCall"],[13,"DbusCallFailed"],[8,"Session"],[8,"AsErrno"],[4,"UdevEvent"],[13,"Added"],[13,"Changed"],[13,"Removed"],[3,"UdevBackend"],[4,"Error"],[4,"WinitEvent"],[13,"Resized"],[4,"WinitInputError"],[3,"WinitGraphicsBackend"],[3,"Rectangle"],[3,"SurfaceAttributes"],[3,"SubsurfaceRole"],[3,"RegionAttributes"],[4,"TraversalAction"],[4,"Damage"],[4,"BufferAssignment"],[13,"NewBuffer"],[4,"RectangleKind"],[4,"SurfaceEvent"],[8,"RoleType"],[8,"Role"],[3,"CompositorToken"],[3,"SourceMetadata"],[4,"ServerDndEvent"],[13,"Send"],[4,"DataDeviceEvent"],[13,"DnDStarted"],[13,"SendSelection"],[4,"Flags"],[3,"Format"],[3,"Plane"],[3,"BufferInfo"],[8,"DmabufHandler"],[3,"BufferFlags"],[3,"ExplicitSyncState"],[4,"ExplicitSyncError"],[3,"ExplicitBufferRelease"],[3,"Mode"],[3,"PhysicalProperties"],[3,"Output"],[3,"ModifiersState"],[3,"XkbConfig"],[3,"CursorImageRole"],[3,"GrabStartData"],[4,"KeyboardError"],[4,"CursorImageStatus"],[3,"KeyboardHandle"],[3,"PointerHandle"],[3,"PointerInnerHandle"],[3,"AxisFrame"],[8,"PointerGrab"],[3,"Seat"],[3,"ShellSurfaceRole"],[4,"ShellSurfaceKind"],[13,"Transient"],[13,"Fullscreen"],[13,"Popup"],[13,"Maximized"],[4,"ShellRequest"],[13,"NewShellSurface"],[13,"Pong"],[13,"Move"],[13,"Resize"],[13,"SetKind"],[3,"ShellSurface"],[3,"ShellState"],[3,"XdgSurfaceRole"],[3,"PositionerState"],[3,"ToplevelState"],[3,"PopupState"],[3,"ToplevelConfigure"],[3,"PopupConfigure"],[4,"XdgSurfacePendingState"],[4,"XdgRequest"],[13,"NewClient"],[13,"ClientPong"],[13,"NewToplevel"],[13,"NewPopup"],[13,"Move"],[13,"Resize"],[13,"Grab"],[13,"Maximize"],[13,"UnMaximize"],[13,"Fullscreen"],[13,"UnFullscreen"],[13,"Minimize"],[13,"ShowWindowMenu"],[13,"AckConfigure"],[3,"ShellState"],[3,"ShellClient"],[3,"ToplevelSurface"],[3,"PopupSurface"],[3,"BufferData"],[4,"BufferAccessError"],[3,"SerialCounter"],[8,"Linkable"],[3,"Signaler"],[3,"SignalToken"],[3,"XWayland"],[8,"XWindowManager"],[3,"TouchSlot"],[4,"UnusedEvent"],[3,"AtomicDrmSurface"],[3,"AtomicDrmDeviceObserver"],[3,"EglSurface"],[3,"EglDeviceObserver"],[3,"EglStreamDeviceBackend"],[3,"EglStreamDeviceObserver"],[3,"Gbm"],[3,"LegacyDrmSurface"],[3,"EglExtensionNotSupportedError"],[3,"MakeCurrentError"],[3,"LIB"],[3,"EGLClientPixmapHI"],[4,"__eglMustCastToProperFunctionPointerType_fn"],[3,"XlibWindow"],[4,"Wayland"],[4,"X11"],[3,"LibinputSessionInterface"],[3,"Id"],[3,"LogindSession"],[3,"LogindSessionNotifier"],[3,"WinitInputBackend"],[3,"WinitKeyboardInputEvent"],[3,"WinitMouseMovedEvent"],[3,"WinitMouseWheelEvent"],[3,"WinitMouseInputEvent"],[3,"WinitTouchStartedEvent"],[3,"WinitTouchMovedEvent"],[3,"WinitTouchEndedEvent"],[3,"WinitTouchCancelledEvent"],[3,"WinitInputConfig"],[3,"WrongRole"],[3,"DnDIconRole"],[3,"ShmGlobalData"]]},\
"udev":{"doc":"libudev Bindings for Rust","i":[[3,"Attribute","udev","A device attribute.",null,null],[3,"Attributes","","Iterator over a device\'s attributes.",null,null],[3,"Device","","A structure that provides access to sysfs/kernel devices.",null,null],[3,"Properties","","Iterator over a device\'s properties.",null,null],[3,"Property","","A device property.",null,null],[3,"Devices","","Iterator over devices.",null,null],[3,"Enumerator","","An enumeration context.",null,null],[3,"MonitorBuilder","","Monitors for device events.",null,null],[3,"Event","","An event that indicates a change in device state.",null,null],[3,"MonitorSocket","","An active monitor that can receive events.",null,null],[4,"EventType","","Types of events that can be received from udev.",null,null],[13,"Add","","A device was added.",0,null],[13,"Change","","A device changed.",0,null],[13,"Remove","","A device was removed.",0,null],[13,"Bind","","A device was bound to driver.",0,null],[13,"Unbind","","A device was unbound to driver.",0,null],[13,"Unknown","","An unknown event occurred.",0,null],[11,"from_syspath","","Creates a device for a given syspath.",1,[[["path",3]],["result",6]]],[11,"is_initialized","","Checks whether the device has already been handled by udev.",1,[[]]],[11,"devnum","","Gets the device\'s major/minor number.",1,[[],[["option",4],["dev_t",6]]]],[11,"syspath","","Returns the syspath of the device.",1,[[],["path",3]]],[11,"devpath","","Returns the kernel devpath value of the device.",1,[[],["osstr",3]]],[11,"devnode","","Returns the path to the device node belonging to the device.",1,[[],[["path",3],["option",4]]]],[11,"parent","","Returns the parent of the device.",1,[[],["option",4]]],[11,"parent_with_subsystem","","Returns the parent of the device with the matching…",1,[[["osstr",3],["asref",8]],[["option",4],["result",6]]]],[11,"parent_with_subsystem_devtype","","Returns the parent of the device with the matching…",1,[[["osstr",3],["asref",8]],[["option",4],["result",6]]]],[11,"subsystem","","Returns the subsystem name of the device.",1,[[],[["osstr",3],["option",4]]]],[11,"sysname","","Returns the kernel device name for the device.",1,[[],["osstr",3]]],[11,"sysnum","","Returns the instance number of the device.",1,[[],["option",4]]],[11,"devtype","","Returns the devtype name of the device.",1,[[],[["osstr",3],["option",4]]]],[11,"driver","","Returns the name of the kernel driver attached to the…",1,[[],[["osstr",3],["option",4]]]],[11,"property_value","","Retreives the value of a device property.",1,[[["osstr",3],["asref",8]],[["osstr",3],["option",4]]]],[11,"attribute_value","","Retreives the value of a device attribute.",1,[[["osstr",3],["asref",8]],[["osstr",3],["option",4]]]],[11,"set_attribute_value","","Sets the value of a device attribute.",1,[[["osstr",3],["asref",8]],["result",6]]],[11,"properties","","Returns an iterator over the device\'s properties.",1,[[],["properties",3]]],[11,"attributes","","Returns an iterator over the device\'s attributes.",1,[[],["attributes",3]]],[11,"name","","Returns the property name.",2,[[],["osstr",3]]],[11,"value","","Returns the property value.",2,[[],["osstr",3]]],[11,"name","","Returns the attribute name.",3,[[],["osstr",3]]],[11,"value","","Returns the attribute value.",3,[[],[["osstr",3],["option",4]]]],[11,"new","","Creates a new Enumerator.",4,[[],["result",6]]],[11,"match_is_initialized","","Adds a filter that matches only initialized devices.",4,[[],["result",6]]],[11,"match_subsystem","","Adds a filter that matches only devices that belong to the…",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_attribute","","Adds a filter that matches only devices with the given…",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_sysname","","Adds a filter that matches only devices with the given…",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_property","","Adds a filter that matches only devices with the given…",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_tag","","Adds a filter that matches only devices with the given tag.",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_parent","","Includes the parent device and all devices in the subtree…",4,[[["device",3]],["result",6]]],[11,"nomatch_subsystem","","Adds a filter that matches only devices that don\'t belong…",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"nomatch_attribute","","Adds a filter that matches only devices that don\'t have…",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"add_syspath","","Includes the device with the given syspath.",4,[[["osstr",3],["asref",8]],["result",6]]],[11,"scan_devices","","Scans `/sys` for devices matching the attached filters.",4,[[],[["devices",3],["result",6]]]],[11,"new","","Creates a new `Monitor`.",5,[[],["result",6]]],[11,"match_subsystem","","Adds a filter that matches events for devices with the…",5,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_subsystem_devtype","","Adds a filter that matches events for devices with the…",5,[[["osstr",3],["asref",8]],["result",6]]],[11,"match_tag","","Adds a filter that matches events for devices with the…",5,[[["osstr",3],["asref",8]],["result",6]]],[11,"clear_filters","","Removes all filters currently set on the monitor.",5,[[],["result",6]]],[11,"listen","","Listens for events matching the current filters.",5,[[],[["result",6],["socket",3]]]],[11,"event_type","","Returns the `EventType` corresponding to this event.",6,[[],["eventtype",4]]],[11,"sequence_number","","Returns the event\'s sequence number.",6,[[]]],[11,"device","","Returns the device associated with this event.",6,[[],["device",3]]],[8,"AsRaw","","Receive the underlying raw pointer",null,null],[10,"as_raw","","Get a reference of the underlying struct.",7,[[]]],[10,"into_raw","","Convert the object into the underlying pointer.",7,[[]]],[8,"FromRaw","","Convert from a raw pointer",null,null],[10,"from_raw","","Create an object from a given raw pointer.",8,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"as_raw","","",1,[[]]],[11,"into_raw","","",1,[[]]],[11,"as_raw","","",4,[[]]],[11,"into_raw","","",4,[[]]],[11,"as_raw","","",5,[[]]],[11,"into_raw","","",5,[[]]],[11,"as_raw","","",12,[[]]],[11,"into_raw","","",12,[[]]],[11,"from_raw","","",1,[[]]],[11,"from_raw","","",4,[[]]],[11,"from_raw","","",5,[[]]],[11,"drop","","",1,[[]]],[11,"drop","","",4,[[]]],[11,"drop","","",11,[[]]],[11,"drop","","",5,[[]]],[11,"next","","",10,[[],[["option",4],["property",3]]]],[11,"size_hint","","",10,[[]]],[11,"next","","",9,[[],[["option",4],["attribute",3]]]],[11,"size_hint","","",9,[[]]],[11,"next","","",11,[[],[["option",4],["device",3]]]],[11,"size_hint","","",11,[[]]],[11,"next","","",12,[[],[["option",4],["event",3]]]],[11,"clone","","",1,[[]]],[11,"clone","","",4,[[]]],[11,"clone","","",12,[[]]],[11,"clone","","",0,[[],["eventtype",4]]],[11,"default","","",0,[[]]],[11,"eq","","",0,[[["eventtype",4]]]],[11,"deref","","",6,[[],["device",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"as_raw_fd","","Returns the file descriptor of the monitor\'s socket.",12,[[],["rawfd",6]]]],"p":[[4,"EventType"],[3,"Device"],[3,"Property"],[3,"Attribute"],[3,"Enumerator"],[3,"MonitorBuilder"],[3,"Event"],[8,"AsRaw"],[8,"FromRaw"],[3,"Attributes"],[3,"Properties"],[3,"Devices"],[3,"MonitorSocket"]]},\
"wayland_commons":{"doc":"Common definitions for wayland","i":[[14,"smallvec","wayland_commons","Creates a [`SmallVec`] containing the arguments.",null,null],[3,"ThreadGuard","","Stores a value in a threadafe container that only lets you…",null,null],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[0,"filter","","Filter",null,null],[3,"DispatchData","wayland_commons::filter","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[11,"get","","Access the dispatch data knowing its type",0,[[],["option",4]]],[11,"wrap","","Wrap a mutable reference",0,[[],["dispatchdata",3]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",0,[[],["dispatchdata",3]]],[11,"new","","Create a new filter from given closure",1,[[["fnmut",8]],["filter",3]]],[11,"send","","Send a message to this filter",1,[[["dispatchdata",3]]]],[0,"map","wayland_commons","Wayland objects map",null,null],[3,"Object","wayland_commons::map","The representation of a protocol object",null,null],[12,"interface","","Interface name of this object",2,null],[12,"version","","Version of this object",2,null],[12,"requests","","Description of the requests of this object",2,null],[12,"events","","Description of the events of this object",2,null],[12,"meta","","Metadata associated to this object (ex: its event queue…",2,null],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta,…",2,null],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta,…",2,null],[3,"ObjectMap","","A holder for the object store of a connection",null,null],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created…",null,null],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation…",null,null],[10,"child","","Create the metadata for a child object",3,[[]]],[11,"from_interface","","Create an Object corresponding to given interface and…",2,[[],["object",3]]],[11,"event_child","","Create an optional `Object` corresponding to the possible…",2,[[],[["option",4],["object",3]]]],[11,"request_child","","Create an optional `Object` corresponding to the possible…",2,[[],[["option",4],["object",3]]]],[11,"is_interface","","Check whether this object is of given interface",2,[[]]],[11,"placeholder","","Create a placeholder object that will be filled-in by the…",2,[[],["object",3]]],[11,"new","","Create a new empty object map",4,[[],["objectmap",3]]],[11,"find","","Find an object in the store",4,[[],[["option",4],["object",3]]]],[11,"remove","","Remove an object from the store",4,[[]]],[11,"insert_at","","Insert given object for given id",4,[[["object",3]],["result",4]]],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",4,[[["object",3]]]],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",4,[[["object",3]]]],[11,"with","","Mutably access an object of the map",4,[[["fnonce",8]],["result",4]]],[11,"with_all","","Mutably access all objects of the map in sequence",4,[[["fnmut",8]]]],[0,"socket","wayland_commons","Wayland socket manipulation",null,null],[3,"Socket","wayland_commons::socket","A wayland socket",null,null],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles…",null,null],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket…",null,null],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single…",null,null],[11,"send_msg","","Send a single message to the socket",5,[[],["nixresult",6]]],[11,"rcv_msg","","Receive a single message from the socket",5,[[],["nixresult",6]]],[11,"new","","Wrap a Socket into a Buffered Socket",6,[[["socket",3]],["bufferedsocket",3]]],[11,"get_socket","","Get direct access to the underlying socket",6,[[],["socket",3]]],[11,"into_socket","","Retrieve ownership of the underlying Socket",6,[[],["socket",3]]],[11,"flush","","Flush the contents of the outgoing buffer into the socket",6,[[],["nixresult",6]]],[11,"write_message","","Write a message to the outgoing buffer",6,[[["message",3]],["nixresult",6]]],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to…",6,[[],["nixresult",6]]],[11,"read_one_message","","Read and deserialize a single message from the incoming…",6,[[],[["messageparseerror",4],["message",3],["result",4]]]],[11,"read_messages","","Read and deserialize messages from the socket",6,[[],[["nixresult",6],["result",4]]]],[0,"user_data","wayland_commons","Various utilities used for other implementations",null,null],[3,"UserData","wayland_commons::user_data","A wrapper for user data, able to store any type, and…",null,null],[3,"UserDataMap","","A storage able to store several values of `UserData` of…",null,null],[11,"new","","Create a new UserData instance",7,[[],["userdata",3]]],[11,"set","","Sets the UserData to a given value",7,[[["fnonce",8]]]],[11,"set_threadsafe","","Sets the UserData to a given threadsafe value",7,[[["fnonce",8]]]],[11,"get","","Attempt to access the wrapped user data",7,[[],["option",4]]],[11,"new","","Create a new map",8,[[],["userdatamap",3]]],[11,"get","","Attempt to access the wrapped user data of a given type",8,[[],["option",4]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",8,[[["fnonce",8]]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",8,[[["fnonce",8]]]],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the…",null,null],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",null,null],[12,"name","","Name of this message",9,null],[12,"signature","","Signature of the message",9,null],[12,"since","","Minimum required version of the interface",9,null],[12,"destructor","","Whether this message is a destructor",9,null],[3,"Message","","A wire message",null,null],[12,"sender_id","","ID of the object sending this message",10,null],[12,"opcode","","Opcode of the message",10,null],[12,"args","","Arguments of the message",10,null],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",null,null],[13,"Int","","i32",11,null],[13,"Uint","","u32",11,null],[13,"Fixed","","fixed point, 1/256 precision",11,null],[13,"Str","","CString",11,null],[13,"Object","","id of a wayland object",11,null],[13,"NewId","","id of a newly created wayland object",11,null],[13,"Array","","Vec",11,null],[13,"Fd","","RawFd",11,null],[4,"Argument","","Enum of possible argument as recognized by the wire,…",null,null],[13,"Int","","i32",12,null],[13,"Uint","","u32",12,null],[13,"Fixed","","fixed point, 1/256 precision",12,null],[13,"Str","","CString",12,null],[13,"Object","","id of a wayland object",12,null],[13,"NewId","","id of a newly created wayland object",12,null],[13,"Array","","Vec",12,null],[13,"Fd","","RawFd",12,null],[4,"MessageWriteError","","Error generated when trying to serialize a message into…",null,null],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",13,null],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",13,null],[4,"MessageParseError","","Error generated when trying to deserialize a message from…",null,null],[13,"MissingFD","","The message references a FD but the buffer FD is empty",14,null],[13,"MissingData","","More data is needed to deserialize the message",14,null],[13,"Malformed","","The message is malformed and cannot be parsed",14,null],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",null,[[["rawfd",6]],[["rawfd",6],["nixresult",6]]]],[11,"get_type","","Retrieve the type of a given argument instance",12,[[],["argumenttype",4]]],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",10,[[],[["messagewriteerror",4],["result",4]]]],[11,"from_raw","","Attempts to parse a single wayland message with the given…",10,[[],[["result",4],["messageparseerror",4]]]],[8,"MessageGroup","wayland_commons","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",15,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",15,null],[10,"opcode","","The opcode of this message",15,[[]]],[10,"is_destructor","","Whether this message is a destructor",15,[[]]],[10,"since","","The minimal object version for which this message exists",15,[[]]],[10,"child","","Retrieve the child `Object` associated with this message…",15,[[],[["object",3],["option",4]]]],[10,"from_raw","","Construct a message from its raw representation",15,[[["message",3]],["result",4]]],[10,"into_raw","","Turn this message into its raw representation",15,[[],["message",3]]],[10,"from_raw_c","","Construct a message of this group from its C representation",15,[[],["result",4]]],[10,"as_raw_c_in","","Build a C representation of this message",15,[[]]],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",16,null],[16,"Event","","Set of events associated to this interface",16,null],[18,"NAME","","Name of this interface",16,null],[18,"VERSION","","Maximum supported version of this interface",16,null],[10,"c_interface","","Pointer to the C representation of this interface",16,[[]]],[11,"new","","Create a new ThreadGuard wrapper",17,[[],["threadguard",3]]],[11,"get","","Access the underlying value",17,[[]]],[11,"get_mut","","Mutably access the underlying value",17,[[]]],[11,"try_get","","Try to access the underlying value",17,[[],["option",4]]],[11,"try_get_mut","","Try to mutably access the underlying value",17,[[],["option",4]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","wayland_commons::filter","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","wayland_commons::map","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","wayland_commons::socket","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","wayland_commons::user_data","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","wayland_commons::wire","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"is_destructor","wayland_commons","",18,[[]]],[11,"opcode","","",18,[[]]],[11,"since","","",18,[[]]],[11,"child","","",18,[[],[["object",3],["option",4]]]],[11,"from_raw","","",18,[[["message",3]],["result",4]]],[11,"into_raw","","",18,[[],["message",3]]],[11,"from_raw_c","","",18,[[],["result",4]]],[11,"as_raw_c_in","","",18,[[]]],[11,"drop","wayland_commons::socket","",5,[[]]],[11,"drop","wayland_commons::user_data","",7,[[]]],[11,"drop","wayland_commons","",17,[[]]],[11,"clone","wayland_commons::filter","",1,[[],["filter",3]]],[11,"clone","wayland_commons::map","",2,[[],["object",3]]],[11,"clone","wayland_commons::wire","",9,[[],["messagedesc",3]]],[11,"clone","","",11,[[],["argumenttype",4]]],[11,"clone","","",12,[[],["argument",4]]],[11,"clone","","",10,[[],["message",3]]],[11,"clone","","",13,[[],["messagewriteerror",4]]],[11,"clone","","",14,[[],["messageparseerror",4]]],[11,"default","wayland_commons::map","",4,[[],["objectmap",3]]],[11,"default","wayland_commons::user_data","",8,[[],["userdatamap",3]]],[11,"eq","wayland_commons::wire","",11,[[["argumenttype",4]]]],[11,"eq","","",12,[[["argument",4]]]],[11,"ne","","",12,[[["argument",4]]]],[11,"eq","","",10,[[["message",3]]]],[11,"ne","","",10,[[["message",3]]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",14,[[["formatter",3]],[["error",3],["result",4]]]],[11,"as_raw_fd","wayland_commons::socket","",5,[[],["rawfd",6]]],[11,"from_raw_fd","","",5,[[["rawfd",6]],["socket",3]]],[11,"into_raw_fd","","",5,[[],["rawfd",6]]]],"p":[[3,"DispatchData"],[3,"Filter"],[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"ThreadGuard"],[4,"NoMessage"]]},\
"wayland_protocols":{"doc":"This crate provides bindings to the official wayland…","i":[[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",null,null],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",null,null],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",0,null],[13,"CursorPlane","","compositor has a separate cursor plane",0,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",1,null],[13,"Center","","center the surface on the output",1,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest…",1,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill…",1,null],[13,"Stretch","","scale the surface to the size of the output ignoring…",1,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",2,null],[4,"Request","","",null,null],[13,"Release","","release the wl_fullscreen_shell interface",3,null],[13,"PresentSurface","","present surface for display",3,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",4,null],[12,"method","","",4,null],[12,"output","","",4,null],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","present surface for display at a particular mode",3,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",5,null],[12,"output","","",5,null],[12,"framerate","","",5,null],[12,"feedback","","",5,null],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[13,"Capability","","advertises a capability of the compositor",6,null],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Event","",7,null],[7,"zwp_fullscreen_shell_v1_requests","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_fullscreen_shell_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_fullscreen_shell_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PRESENT_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PRESENT_SURFACE_FOR_MODE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"ModeSuccessful","","mode switch succeeded",8,null],[13,"ModeFailed","","mode switch failed",8,null],[13,"PresentCancelled","","mode switch cancelled",8,null],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","C representation of this interface, for interop",null,null],[17,"EVT_MODE_SUCCESSFUL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_FAILED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESENT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",0,[[],[["capability",4],["option",4]]]],[11,"to_raw","","",0,[[]]],[11,"from_raw","","",1,[[],[["option",4],["presentmethod",4]]]],[11,"to_raw","","",1,[[]]],[11,"from_raw","","",2,[[],[["option",4],["error",4]]]],[11,"to_raw","","",2,[[]]],[11,"capability","","advertises a capability of the compositor",9,[[]]],[11,"mode_successful","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","mode switch succeeded",10,[[]]],[11,"mode_failed","","mode switch failed",10,[[]]],[11,"present_cancelled","","mode switch cancelled",10,[[]]],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",null,null],[0,"v1","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",11,null],[13,"CreateInhibitor","","create a new inhibitor object",11,null],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1::Request","",12,null],[12,"surface","","",12,null],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[7,"zwp_idle_inhibit_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_idle_inhibit_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_INHIBITOR_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",13,null],[4,"Event","","",null,null],[7,"zwp_idle_inhibitor_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_idle_inhibitor_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"input_method","wayland_protocols::unstable","Input method protocol",null,null],[0,"v1","wayland_protocols::unstable::input_method","",null,null],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be…",14,null],[13,"CommitString","","commit string",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",15,null],[12,"text","","",15,null],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit string",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",16,null],[12,"text","","",16,null],[12,"commit","","",16,null],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit styling",14,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",17,null],[12,"length","","",17,null],[12,"style","","",17,null],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit cursor",14,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",18,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","delete text",14,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",19,null],[12,"length","","",19,null],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","set cursor to a new position",14,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",20,null],[12,"anchor","","",20,null],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",14,null],[12,"map","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",21,null],[13,"Keysym","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","keysym",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",22,null],[12,"time","","",22,null],[12,"sym","","",22,null],[12,"state","","",22,null],[12,"modifiers","","",22,null],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","grab hardware keyboard",14,null],[12,"keyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",23,null],[13,"Key","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward key event",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",24,null],[12,"time","","",24,null],[12,"key","","",24,null],[12,"state","","",24,null],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward modifiers event",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",25,null],[12,"mods_depressed","","",25,null],[12,"mods_latched","","",25,null],[12,"mods_locked","","",25,null],[12,"group","","",25,null],[13,"Language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",26,null],[12,"language","","",26,null],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",14,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",27,null],[12,"direction","","",27,null],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[13,"SurroundingText","","surrounding text event",28,null],[12,"text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",29,null],[12,"cursor","","",29,null],[12,"anchor","","",29,null],[13,"Reset","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,null],[13,"ContentType","","",28,null],[12,"hint","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",30,null],[12,"purpose","","",30,null],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,null],[12,"button","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",31,null],[12,"index","","",31,null],[13,"CommitState","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",32,null],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",28,null],[12,"language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",33,null],[7,"zwp_input_method_context_v1_requests","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_method_context_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_method_context_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_STRING_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PREEDIT_STRING_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PREEDIT_STYLING_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PREEDIT_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CURSOR_POSITION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MODIFIERS_MAP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_KEYSYM_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_KEY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MODIFIERS_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_LANGUAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_TEXT_DIRECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_RESET_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CONTENT_TYPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_INVOKE_ACTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_COMMIT_STATE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PREFERRED_LANGUAGE_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Activate","","activate event",34,null],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",35,null],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","deactivate event",34,null],[12,"context","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",36,null],[7,"zwp_input_method_v1_events","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_method_v1_interface","","C representation of this interface, for interop",null,null],[17,"EVT_ACTIVATE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DEACTIVATE_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[4,"Request","","",null,null],[13,"GetInputPanelSurface","","",37,null],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1::Request","",38,null],[12,"surface","","",38,null],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[7,"zwp_input_panel_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_panel_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_INPUT_PANEL_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",39,null],[4,"Request","","",null,null],[13,"SetToplevel","","set the surface type as a keyboard",40,null],[12,"output","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1::Request","",41,null],[12,"position","","",41,null],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as an overlay panel",40,null],[4,"Event","","",null,null],[7,"zwp_input_panel_surface_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_panel_surface_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OVERLAY_PANEL_SINCE","","The minimal object version supporting this request",null,null],[11,"surrounding_text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","surrounding text event",42,[[["string",3]]]],[11,"reset","","",42,[[]]],[11,"content_type","","",42,[[]]],[11,"invoke_action","","",42,[[]]],[11,"commit_state","","",42,[[]]],[11,"preferred_language","","",42,[[["string",3]]]],[11,"activate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","activate event",43,[[["zwpinputmethodcontextv1",3]]]],[11,"deactivate","","deactivate event",43,[[["zwpinputmethodcontextv1",3]]]],[11,"from_raw","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",39,[[],[["option",4],["position",4]]]],[11,"to_raw","","",39,[[]]],[0,"input_timestamps","wayland_protocols::unstable","Input timestamps protocol",null,null],[0,"v1","wayland_protocols::unstable::input_timestamps","",null,null],[0,"server","wayland_protocols::unstable::input_timestamps::v1","Server-side API of this protocol",null,null],[0,"zwp_input_timestamps_manager_v1","wayland_protocols::unstable::input_timestamps::v1::server","context object for high-resolution input timestamps",null,null],[3,"ZwpInputTimestampsManagerV1","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the input timestamps manager object",44,null],[13,"GetKeyboardTimestamps","","subscribe to high-resolution keyboard timestamp events",44,null],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",45,null],[12,"keyboard","","",45,null],[13,"GetPointerTimestamps","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","subscribe to high-resolution pointer timestamp events",44,null],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",46,null],[12,"pointer","","",46,null],[13,"GetTouchTimestamps","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","subscribe to high-resolution touch timestamp events",44,null],[12,"id","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1::Request","",47,null],[12,"touch","","",47,null],[4,"Event","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",null,null],[7,"zwp_input_timestamps_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_timestamps_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_KEYBOARD_TIMESTAMPS_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POINTER_TIMESTAMPS_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOUCH_TIMESTAMPS_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_input_timestamps_v1","wayland_protocols::unstable::input_timestamps::v1::server","context object for input timestamps",null,null],[3,"ZwpInputTimestampsV1","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the input timestamps object",48,null],[4,"Event","","",null,null],[13,"Timestamp","","high-resolution timestamp event",49,null],[12,"tv_sec_hi","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1::Event","",50,null],[12,"tv_sec_lo","","",50,null],[12,"tv_nsec","","",50,null],[7,"zwp_input_timestamps_v1_requests","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_timestamps_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_input_timestamps_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TIMESTAMP_SINCE","","The minimal object version supporting this event",null,null],[11,"timestamp","","high-resolution timestamp event",51,[[]]],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",null,null],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",null,null],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",52,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",53,null],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",53,null],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",54,null],[12,"surface","","",54,null],[12,"seat","","",54,null],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_INHIBIT_SHORTCUTS_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",55,null],[4,"Event","","",null,null],[13,"Active","","shortcuts are inhibited",56,null],[13,"Inactive","","shortcuts are restored",56,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ACTIVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_INACTIVE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",52,[[],[["option",4],["error",4]]]],[11,"to_raw","","",52,[[]]],[11,"active","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","shortcuts are inhibited",57,[[]]],[11,"inactive","","shortcuts are restored",57,[[]]],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",null,null],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unbind the factory",58,null],[13,"CreateParams","","create a temporary object for buffer parameters",58,null],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Request","",59,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[13,"Format","","supported buffer format",60,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",61,null],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format modifier",60,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",62,null],[12,"modifier_hi","","",62,null],[12,"modifier_lo","","",62,null],[7,"zwp_linux_dmabuf_v1_requests","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_dmabuf_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_dmabuf_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_PARAMS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIER_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a…",63,null],[13,"PlaneIdx","","plane index out of bounds",63,null],[13,"PlaneSet","","the plane index was already set",63,null],[13,"Incomplete","","missing or too many planes to create a buffer",63,null],[13,"InvalidFormat","","format not supported",63,null],[13,"InvalidDimensions","","invalid width or height",63,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",63,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the…",63,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",64,null],[13,"Interlaced","","content is interlaced",64,null],[13,"BottomFirst","","bottom field first",64,null],[4,"Request","","",null,null],[13,"Destroy","","delete this object, used or not",65,null],[13,"Add","","add a dmabuf to the temporary set",65,null],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",66,null],[12,"plane_idx","","",66,null],[12,"offset","","",66,null],[12,"stride","","",66,null],[12,"modifier_hi","","",66,null],[12,"modifier_lo","","",66,null],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",65,null],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",67,null],[12,"height","","",67,null],[12,"format","","",67,null],[12,"flags","","",67,null],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",65,null],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",68,null],[12,"width","","",68,null],[12,"height","","",68,null],[12,"format","","",68,null],[12,"flags","","",68,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[13,"Created","","buffer creation succeeded",69,null],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Event","",70,null],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","buffer creation failed",69,null],[7,"zwp_linux_buffer_params_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_buffer_params_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_buffer_params_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_IMMED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CREATED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",null,null],[11,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format",71,[[]]],[11,"modifier","","supported buffer format modifier",71,[[]]],[11,"from_raw","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",63,[[],[["error",4],["option",4]]]],[11,"to_raw","","",63,[[]]],[11,"from_raw","","",64,[[],[["flags",4],["option",4]]]],[11,"to_raw","","",64,[[]]],[11,"created","","buffer creation succeeded",72,[[["wlbuffer",3]]]],[11,"failed","","buffer creation failed",72,[[]]],[0,"linux_explicit_synchronization","wayland_protocols::unstable","Linux explicit synchronization protocol",null,null],[0,"v1","wayland_protocols::unstable::linux_explicit_synchronization","",null,null],[0,"server","wayland_protocols::unstable::linux_explicit_synchronization::v1","Server-side API of this protocol",null,null],[0,"zwp_linux_explicit_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","protocol for providing explicit synchronization",null,null],[3,"ZwpLinuxExplicitSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",null,null],[4,"Error","","",null,null],[13,"SynchronizationExists","","the surface already has a synchronization object associated",73,null],[4,"Request","","",null,null],[13,"Destroy","","destroy explicit synchronization factory object",74,null],[13,"GetSynchronization","","extend surface interface for explicit synchronization",74,null],[12,"id","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1::Request","",75,null],[12,"surface","","",75,null],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",null,null],[7,"zwp_linux_explicit_synchronization_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_explicit_synchronization_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_SYNCHRONIZATION_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_linux_surface_synchronization_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","per-surface explicit synchronization support",null,null],[3,"ZwpLinuxSurfaceSynchronizationV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",null,null],[4,"Error","","",null,null],[13,"InvalidFence","","the fence specified by the client could not be imported",76,null],[13,"DuplicateFence","","multiple fences added for a single surface commit",76,null],[13,"DuplicateRelease","","multiple releases added for a single surface commit",76,null],[13,"NoSurface","","the associated wl_surface was destroyed",76,null],[13,"UnsupportedBuffer","","the buffer does not support explicit synchronization",76,null],[13,"NoBuffer","","no buffer was attached",76,null],[4,"Request","","",null,null],[13,"Destroy","","destroy synchronization object",77,null],[13,"SetAcquireFence","","set the acquire fence",77,null],[12,"fd","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1::Request","",78,null],[13,"GetRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","release fence for last-attached buffer",77,null],[12,"release","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1::Request","",79,null],[4,"Event","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",null,null],[7,"zwp_linux_surface_synchronization_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_surface_synchronization_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACQUIRE_FENCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_linux_buffer_release_v1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server","buffer release explicit synchronization",null,null],[3,"ZwpLinuxBufferReleaseV1","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"FencedRelease","","release buffer with fence",80,null],[12,"fence","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1::Event","",81,null],[13,"ImmediateRelease","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","release buffer immediately",80,null],[7,"zwp_linux_buffer_release_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_linux_buffer_release_v1_interface","","C representation of this interface, for interop",null,null],[17,"EVT_FENCED_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_IMMEDIATE_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[],[["option",4],["error",4]]]],[11,"to_raw","","",73,[[]]],[11,"from_raw","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",76,[[],[["option",4],["error",4]]]],[11,"to_raw","","",76,[[]]],[11,"fenced_release","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","release buffer with fence",82,[[["rawfd",6]]]],[11,"immediate_release","","release buffer immediately",82,[[]]],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",null,null],[0,"v1","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",83,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",84,null],[13,"Persistent","","the pointer constraint may reactivate",84,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer constraints manager object",85,null],[13,"LockPointer","","lock pointer to a position",85,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",86,null],[12,"surface","","",86,null],[12,"pointer","","",86,null],[12,"region","","",86,null],[12,"lifetime","","",86,null],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","confine pointer to a region",85,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",87,null],[12,"surface","","",87,null],[12,"pointer","","",87,null],[12,"region","","",87,null],[12,"lifetime","","",87,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[7,"zwp_pointer_constraints_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_pointer_constraints_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_LOCK_POINTER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CONFINE_POINTER_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the locked pointer object",88,null],[13,"SetCursorPositionHint","","set the pointer cursor position hint",88,null],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",89,null],[12,"surface_y","","",89,null],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","set a new lock region",88,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",90,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[13,"Locked","","lock activation event",91,null],[13,"Unlocked","","lock deactivation event",91,null],[7,"zwp_locked_pointer_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_locked_pointer_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_locked_pointer_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CURSOR_POSITION_HINT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_LOCKED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UNLOCKED_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the confined pointer object",92,null],[13,"SetRegion","","set a new confine region",92,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1::Request","",93,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[13,"Confined","","pointer confined",94,null],[13,"Unconfined","","pointer unconfined",94,null],[7,"zwp_confined_pointer_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_confined_pointer_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_confined_pointer_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFINED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UNCONFINED_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",83,[[],[["option",4],["error",4]]]],[11,"to_raw","","",83,[[]]],[11,"from_raw","","",84,[[],[["option",4],["lifetime",4]]]],[11,"to_raw","","",84,[[]]],[11,"locked","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","lock activation event",95,[[]]],[11,"unlocked","","lock deactivation event",95,[[]]],[11,"confined","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","pointer confined",96,[[]]],[11,"unconfined","","pointer unconfined",96,[[]]],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",null,null],[0,"v1","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",null,null],[4,"Request","","",null,null],[13,"GetSwipeGesture","","get swipe gesture",97,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",98,null],[12,"pointer","","",98,null],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get pinch gesture",97,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",99,null],[12,"pointer","","",99,null],[13,"Release","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","destroy the pointer gesture object",97,null],[4,"Event","","",null,null],[7,"zwp_pointer_gestures_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_pointer_gestures_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_SWIPE_GESTURE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_PINCH_GESTURE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer swipe gesture object",100,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger swipe begin",101,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",102,null],[12,"time","","",102,null],[12,"surface","","",102,null],[12,"fingers","","",102,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",101,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",103,null],[12,"dx","","",103,null],[12,"dy","","",103,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",101,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",104,null],[12,"time","","",104,null],[12,"cancelled","","",104,null],[7,"zwp_pointer_gesture_swipe_v1_requests","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_pointer_gesture_swipe_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_pointer_gesture_swipe_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_BEGIN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UPDATE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_END_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pinch gesture object",105,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger pinch begin",106,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",107,null],[12,"time","","",107,null],[12,"surface","","",107,null],[12,"fingers","","",107,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",106,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",108,null],[12,"dx","","",108,null],[12,"dy","","",108,null],[12,"scale","","",108,null],[12,"rotation","","",108,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",106,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",109,null],[12,"time","","",109,null],[12,"cancelled","","",109,null],[7,"zwp_pointer_gesture_pinch_v1_requests","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_pointer_gesture_pinch_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_pointer_gesture_pinch_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_BEGIN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UPDATE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_END_SINCE","","The minimal object version supporting this event",null,null],[11,"begin","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe begin",110,[[["wlsurface",3]]]],[11,"update","","multi-finger swipe motion",110,[[]]],[11,"end","","multi-finger swipe end",110,[[]]],[11,"begin","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch begin",111,[[["wlsurface",3]]]],[11,"update","","multi-finger pinch motion",111,[[]]],[11,"end","","multi-finger pinch end",111,[[]]],[0,"primary_selection","wayland_protocols::unstable","Primary selection protocol",null,null],[0,"v1","wayland_protocols::unstable::primary_selection","",null,null],[0,"server","wayland_protocols::unstable::primary_selection::v1","Server-side API of this protocol",null,null],[0,"zwp_primary_selection_device_manager_v1","wayland_protocols::unstable::primary_selection::v1::server","X primary selection emulation",null,null],[3,"ZwpPrimarySelectionDeviceManagerV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateSource","","create a new primary selection source",112,null],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1::Request","",113,null],[13,"GetDevice","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","create a new primary selection device",112,null],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1::Request","",114,null],[12,"seat","","",114,null],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","destroy the primary selection device manager",112,null],[4,"Event","","",null,null],[7,"zwp_primary_selection_device_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_device_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_primary_selection_device_v1","wayland_protocols::unstable::primary_selection::v1::server","",null,null],[3,"ZwpPrimarySelectionDeviceV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",null,null],[4,"Request","","",null,null],[13,"SetSelection","","set the primary selection",115,null],[12,"source","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Request","",116,null],[12,"serial","","",116,null],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","destroy the primary selection device",115,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wp_primary_selection_offer",117,null],[12,"offer","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Event","",118,null],[13,"Selection","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","advertise a new primary selection",117,null],[12,"id","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1::Event","",119,null],[7,"zwp_primary_selection_device_v1_requests","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_device_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_device_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_primary_selection_offer_v1","wayland_protocols::unstable::primary_selection::v1::server","offer to transfer primary selection contents",null,null],[3,"ZwpPrimarySelectionOfferV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",120,null],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1::Request","",121,null],[12,"fd","","",121,null],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","destroy the primary selection offer",120,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered mime type",122,null],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1::Event","",123,null],[7,"zwp_primary_selection_offer_v1_requests","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_offer_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_offer_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_primary_selection_source_v1","wayland_protocols::unstable::primary_selection::v1::server","offer to replace the contents of the primary selection",null,null],[3,"ZwpPrimarySelectionSourceV1","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",null,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",124,null],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1::Request","",125,null],[13,"Destroy","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","destroy the primary selection source",124,null],[4,"Event","","",null,null],[13,"Send","","send the primary selection contents",126,null],[12,"mime_type","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1::Event","",127,null],[12,"fd","","",127,null],[13,"Cancelled","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","request for primary selection contents was canceled",126,null],[7,"zwp_primary_selection_source_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_source_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_primary_selection_source_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[11,"data_offer","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","introduce a new wp_primary_selection_offer",128,[[["zwpprimaryselectionofferv1",3]]]],[11,"selection","","advertise a new primary selection",128,[[["option",4],["zwpprimaryselectionofferv1",3]]]],[11,"offer","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","advertise offered mime type",129,[[["string",3]]]],[11,"send","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","send the primary selection contents",130,[[["string",3],["rawfd",6]]]],[11,"cancelled","","request for primary selection contents was canceled",130,[[]]],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",null,null],[0,"v1","wayland_protocols::unstable::relative_pointer","",null,null],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the relative pointer manager object",131,null],[13,"GetRelativePointer","","get a relative pointer object",131,null],[12,"id","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1::Request","",132,null],[12,"pointer","","",132,null],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[7,"zwp_relative_pointer_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_relative_pointer_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_RELATIVE_POINTER_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the relative pointer object",133,null],[4,"Event","","",null,null],[13,"RelativeMotion","","relative pointer motion",134,null],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1::Event","",135,null],[12,"utime_lo","","",135,null],[12,"dx","","",135,null],[12,"dy","","",135,null],[12,"dx_unaccel","","",135,null],[12,"dy_unaccel","","",135,null],[7,"zwp_relative_pointer_v1_requests","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_relative_pointer_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_relative_pointer_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_RELATIVE_MOTION_SINCE","","The minimal object version supporting this event",null,null],[11,"relative_motion","","relative pointer motion",136,[[]]],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",null,null],[0,"v1","wayland_protocols::unstable::tablet","",null,null],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",137,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1::Request","",138,null],[12,"seat","","",138,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","release the memory for the tablet manager object",137,null],[4,"Event","","",null,null],[7,"zwp_tablet_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_TABLET_SEAT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",139,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",140,null],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",141,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","a new tool has been used with a tablet",140,null],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",142,null],[7,"zwp_tablet_seat_v1_requests","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_seat_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_seat_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TABLET_ADDED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_TOOL_ADDED_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",143,null],[13,"Eraser","","Eraser",143,null],[13,"Brush","","Brush",143,null],[13,"Pencil","","Pencil",143,null],[13,"Airbrush","","Airbrush",143,null],[13,"Finger","","Finger",143,null],[13,"Mouse","","Mouse",143,null],[13,"Lens","","Lens",143,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",144,null],[13,"Pressure","","Pressure axis",144,null],[13,"Distance","","Distance axis",144,null],[13,"Rotation","","Z-rotation axis",144,null],[13,"Slider","","Slider axis",144,null],[13,"Wheel","","Wheel axis",144,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",145,null],[13,"Pressed","","button is pressed",145,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",146,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool\'s surface",147,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Request","",148,null],[12,"surface","","",148,null],[12,"hotspot_x","","",148,null],[12,"hotspot_y","","",148,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","destroy the tool object",147,null],[4,"Event","","",null,null],[13,"Type","","tool type",149,null],[12,"tool_type","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",150,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","unique hardware serial number of the tool",149,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",151,null],[12,"hardware_serial_lo","","",151,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","hardware id notification in Wacom\'s format",149,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",152,null],[12,"hardware_id_lo","","",152,null],[13,"Capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool capability notification",149,null],[12,"capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",153,null],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool description events sequence complete",149,null],[13,"Removed","","tool removed",149,null],[13,"ProximityIn","","proximity in event",149,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",154,null],[12,"tablet","","",154,null],[12,"surface","","",154,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","proximity out event",149,null],[13,"Down","","tablet tool is making contact",149,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",155,null],[13,"Up","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tablet tool is no longer making contact",149,null],[13,"Motion","","motion event",149,null],[12,"x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",156,null],[12,"y","","",156,null],[13,"Pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","pressure change event",149,null],[12,"pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",157,null],[13,"Distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","distance change event",149,null],[12,"distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",158,null],[13,"Tilt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tilt change event",149,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",159,null],[12,"tilt_y","","",159,null],[13,"Rotation","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","z-rotation change event",149,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",160,null],[13,"Slider","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Slider position change event",149,null],[12,"position","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",161,null],[13,"Wheel","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Wheel delta event",149,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",162,null],[12,"clicks","","",162,null],[13,"Button","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","button event",149,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",163,null],[12,"button","","",163,null],[12,"state","","",163,null],[13,"Frame","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","frame event",149,null],[12,"time","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",164,null],[7,"zwp_tablet_tool_v1_requests","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_tool_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_tool_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TYPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_HARDWARE_SERIAL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_HARDWARE_ID_WACOM_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PROXIMITY_IN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PROXIMITY_OUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESSURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISTANCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_TILT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ROTATION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SLIDER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_WHEEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",165,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",166,null],[12,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",167,null],[13,"Id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device USB vendor/product id",166,null],[12,"vid","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",168,null],[12,"pid","","",168,null],[13,"Path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","path to the device",166,null],[12,"path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",169,null],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet description events sequence complete",166,null],[13,"Removed","","tablet removed event",166,null],[7,"zwp_tablet_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ID_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",null,null],[11,"tablet_added","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","new device notification",170,[[["zwptabletv1",3]]]],[11,"tool_added","","a new tool has been used with a tablet",170,[[["zwptablettoolv1",3]]]],[11,"from_raw","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",143,[[],[["type",4],["option",4]]]],[11,"to_raw","","",143,[[]]],[11,"from_raw","","",144,[[],[["capability",4],["option",4]]]],[11,"to_raw","","",144,[[]]],[11,"from_raw","","",145,[[],[["buttonstate",4],["option",4]]]],[11,"to_raw","","",145,[[]]],[11,"from_raw","","",146,[[],[["error",4],["option",4]]]],[11,"to_raw","","",146,[[]]],[11,"_type","","tool type",171,[[["type",4]]]],[11,"hardware_serial","","unique hardware serial number of the tool",171,[[]]],[11,"hardware_id_wacom","","hardware id notification in Wacom\'s format",171,[[]]],[11,"capability","","tool capability notification",171,[[["capability",4]]]],[11,"done","","tool description events sequence complete",171,[[]]],[11,"removed","","tool removed",171,[[]]],[11,"proximity_in","","proximity in event",171,[[["wlsurface",3],["zwptabletv1",3]]]],[11,"proximity_out","","proximity out event",171,[[]]],[11,"down","","tablet tool is making contact",171,[[]]],[11,"up","","tablet tool is no longer making contact",171,[[]]],[11,"motion","","motion event",171,[[]]],[11,"pressure","","pressure change event",171,[[]]],[11,"distance","","distance change event",171,[[]]],[11,"tilt","","tilt change event",171,[[]]],[11,"rotation","","z-rotation change event",171,[[]]],[11,"slider","","Slider position change event",171,[[]]],[11,"wheel","","Wheel delta event",171,[[]]],[11,"button","","button event",171,[[["buttonstate",4]]]],[11,"frame","","frame event",171,[[]]],[11,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device name",172,[[["string",3]]]],[11,"id","","tablet device USB vendor/product id",172,[[]]],[11,"path","","path to the device",172,[[["string",3]]]],[11,"done","","tablet description events sequence complete",172,[[]]],[11,"removed","","tablet removed event",172,[[]]],[0,"v2","wayland_protocols::unstable::tablet","",null,null],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",173,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2::Request","",174,null],[12,"seat","","",174,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","release the memory for the tablet manager object",173,null],[4,"Event","","",null,null],[7,"zwp_tablet_manager_v2_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_manager_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_TABLET_SEAT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",175,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",176,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",177,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","a new tool has been used with a tablet",176,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",178,null],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new pad notification",176,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",179,null],[7,"zwp_tablet_seat_v2_requests","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_seat_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_seat_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TABLET_ADDED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_TOOL_ADDED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PAD_ADDED_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",180,null],[13,"Eraser","","Eraser",180,null],[13,"Brush","","Brush",180,null],[13,"Pencil","","Pencil",180,null],[13,"Airbrush","","Airbrush",180,null],[13,"Finger","","Finger",180,null],[13,"Mouse","","Mouse",180,null],[13,"Lens","","Lens",180,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",181,null],[13,"Pressure","","Pressure axis",181,null],[13,"Distance","","Distance axis",181,null],[13,"Rotation","","Z-rotation axis",181,null],[13,"Slider","","Slider axis",181,null],[13,"Wheel","","Wheel axis",181,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",182,null],[13,"Pressed","","button is pressed",182,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",183,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool\'s surface",184,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Request","",185,null],[12,"surface","","",185,null],[12,"hotspot_x","","",185,null],[12,"hotspot_y","","",185,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","destroy the tool object",184,null],[4,"Event","","",null,null],[13,"Type","","tool type",186,null],[12,"tool_type","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",187,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","unique hardware serial number of the tool",186,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",188,null],[12,"hardware_serial_lo","","",188,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","hardware id notification in Wacom\'s format",186,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",189,null],[12,"hardware_id_lo","","",189,null],[13,"Capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool capability notification",186,null],[12,"capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",190,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool description events sequence complete",186,null],[13,"Removed","","tool removed",186,null],[13,"ProximityIn","","proximity in event",186,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",191,null],[12,"tablet","","",191,null],[12,"surface","","",191,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","proximity out event",186,null],[13,"Down","","tablet tool is making contact",186,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",192,null],[13,"Up","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tablet tool is no longer making contact",186,null],[13,"Motion","","motion event",186,null],[12,"x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",193,null],[12,"y","","",193,null],[13,"Pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","pressure change event",186,null],[12,"pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",194,null],[13,"Distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","distance change event",186,null],[12,"distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",195,null],[13,"Tilt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tilt change event",186,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",196,null],[12,"tilt_y","","",196,null],[13,"Rotation","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","z-rotation change event",186,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",197,null],[13,"Slider","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Slider position change event",186,null],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",198,null],[13,"Wheel","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Wheel delta event",186,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",199,null],[12,"clicks","","",199,null],[13,"Button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","button event",186,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",200,null],[12,"button","","",200,null],[12,"state","","",200,null],[13,"Frame","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","frame event",186,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",201,null],[7,"zwp_tablet_tool_v2_requests","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_tool_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_tool_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TYPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_HARDWARE_SERIAL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_HARDWARE_ID_WACOM_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CAPABILITY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PROXIMITY_IN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PROXIMITY_OUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESSURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISTANCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_TILT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ROTATION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SLIDER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_WHEEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",202,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",203,null],[12,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",204,null],[13,"Id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device USB vendor/product id",203,null],[12,"vid","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",205,null],[12,"pid","","",205,null],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","path to the device",203,null],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",206,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet description events sequence complete",203,null],[13,"Removed","","tablet removed event",203,null],[7,"zwp_tablet_v2_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ID_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",207,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",208,null],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Request","",209,null],[12,"serial","","",209,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","destroy the ring object",208,null],[4,"Event","","",null,null],[13,"Source","","ring event source",210,null],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",211,null],[13,"Angle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","angle changed",210,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",212,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","interaction stopped",210,null],[13,"Frame","","end of a ring event sequence",210,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",213,null],[7,"zwp_tablet_pad_ring_v2_requests","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_ring_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_ring_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ANGLE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",214,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",215,null],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Request","",216,null],[12,"serial","","",216,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","destroy the strip object",215,null],[4,"Event","","",null,null],[13,"Source","","strip event source",217,null],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",218,null],[13,"Position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","position changed",217,null],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",219,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","interaction stopped",217,null],[13,"Frame","","end of a strip event sequence",217,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",220,null],[7,"zwp_tablet_pad_strip_v2_requests","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_strip_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_strip_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POSITION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pad object",221,null],[4,"Event","","",null,null],[13,"Buttons","","buttons announced",222,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",223,null],[13,"Ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","ring announced",222,null],[12,"ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",224,null],[13,"Strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","strip announced",222,null],[12,"strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",225,null],[13,"Modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","mode-switch ability announced",222,null],[12,"modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",226,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","tablet group description events sequence complete",222,null],[13,"ModeSwitch","","mode switch event",222,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",227,null],[12,"serial","","",227,null],[12,"mode","","",227,null],[7,"zwp_tablet_pad_group_v2_requests","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_group_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_group_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_BUTTONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_RING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_STRIP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODES_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_SWITCH_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",228,null],[13,"Pressed","","the button is pressed",228,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",229,null],[12,"button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Request","",230,null],[12,"description","","",230,null],[12,"serial","","",230,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","destroy the pad object",229,null],[4,"Event","","",null,null],[13,"Group","","group announced",231,null],[12,"pad_group","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",232,null],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","path to the device",231,null],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",233,null],[13,"Buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","buttons announced",231,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",234,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad description event sequence complete",231,null],[13,"Button","","physical button state",231,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",235,null],[12,"button","","",235,null],[12,"state","","",235,null],[13,"Enter","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",231,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",236,null],[12,"tablet","","",236,null],[12,"surface","","",236,null],[13,"Leave","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",231,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",237,null],[12,"surface","","",237,null],[13,"Removed","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad removed event",231,null],[7,"zwp_tablet_pad_v2_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_tablet_pad_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GROUP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PATH_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REMOVED_SINCE","","The minimal object version supporting this event",null,null],[11,"tablet_added","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new device notification",238,[[["zwptabletv2",3]]]],[11,"tool_added","","a new tool has been used with a tablet",238,[[["zwptablettoolv2",3]]]],[11,"pad_added","","new pad notification",238,[[["zwptabletpadv2",3]]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",180,[[],[["type",4],["option",4]]]],[11,"to_raw","","",180,[[]]],[11,"from_raw","","",181,[[],[["option",4],["capability",4]]]],[11,"to_raw","","",181,[[]]],[11,"from_raw","","",182,[[],[["buttonstate",4],["option",4]]]],[11,"to_raw","","",182,[[]]],[11,"from_raw","","",183,[[],[["error",4],["option",4]]]],[11,"to_raw","","",183,[[]]],[11,"_type","","tool type",239,[[["type",4]]]],[11,"hardware_serial","","unique hardware serial number of the tool",239,[[]]],[11,"hardware_id_wacom","","hardware id notification in Wacom\'s format",239,[[]]],[11,"capability","","tool capability notification",239,[[["capability",4]]]],[11,"done","","tool description events sequence complete",239,[[]]],[11,"removed","","tool removed",239,[[]]],[11,"proximity_in","","proximity in event",239,[[["zwptabletv2",3],["wlsurface",3]]]],[11,"proximity_out","","proximity out event",239,[[]]],[11,"down","","tablet tool is making contact",239,[[]]],[11,"up","","tablet tool is no longer making contact",239,[[]]],[11,"motion","","motion event",239,[[]]],[11,"pressure","","pressure change event",239,[[]]],[11,"distance","","distance change event",239,[[]]],[11,"tilt","","tilt change event",239,[[]]],[11,"rotation","","z-rotation change event",239,[[]]],[11,"slider","","Slider position change event",239,[[]]],[11,"wheel","","Wheel delta event",239,[[]]],[11,"button","","button event",239,[[["buttonstate",4]]]],[11,"frame","","frame event",239,[[]]],[11,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device name",240,[[["string",3]]]],[11,"id","","tablet device USB vendor/product id",240,[[]]],[11,"path","","path to the device",240,[[["string",3]]]],[11,"done","","tablet description events sequence complete",240,[[]]],[11,"removed","","tablet removed event",240,[[]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",207,[[],[["source",4],["option",4]]]],[11,"to_raw","","",207,[[]]],[11,"source","","ring event source",241,[[["source",4]]]],[11,"angle","","angle changed",241,[[]]],[11,"stop","","interaction stopped",241,[[]]],[11,"frame","","end of a ring event sequence",241,[[]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",214,[[],[["option",4],["source",4]]]],[11,"to_raw","","",214,[[]]],[11,"source","","strip event source",242,[[["source",4]]]],[11,"position","","position changed",242,[[]]],[11,"stop","","interaction stopped",242,[[]]],[11,"frame","","end of a strip event sequence",242,[[]]],[11,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","buttons announced",243,[[["vec",3]]]],[11,"ring","","ring announced",243,[[["zwptabletpadringv2",3]]]],[11,"strip","","strip announced",243,[[["zwptabletpadstripv2",3]]]],[11,"modes","","mode-switch ability announced",243,[[]]],[11,"done","","tablet group description events sequence complete",243,[[]]],[11,"mode_switch","","mode switch event",243,[[]]],[11,"from_raw","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",228,[[],[["option",4],["buttonstate",4]]]],[11,"to_raw","","",228,[[]]],[11,"group","","group announced",244,[[["zwptabletpadgroupv2",3]]]],[11,"path","","path to the device",244,[[["string",3]]]],[11,"buttons","","buttons announced",244,[[]]],[11,"done","","pad description event sequence complete",244,[[]]],[11,"button","","physical button state",244,[[["buttonstate",4]]]],[11,"enter","","enter event",244,[[["zwptabletv2",3],["wlsurface",3]]]],[11,"leave","","enter event",244,[[["wlsurface",3]]]],[11,"removed","","pad removed event",244,[[]]],[0,"text_input","wayland_protocols::unstable","Text input protocol",null,null],[0,"v1","wayland_protocols::unstable::text_input","",null,null],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",245,null],[13,"Default","","auto completion, correction and capitalization",245,null],[13,"Password","","hidden and sensitive text",245,null],[13,"AutoCompletion","","suggest word completions",245,null],[13,"AutoCorrection","","suggest word corrections",245,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",245,null],[13,"Lowercase","","prefer lowercase letters",245,null],[13,"Uppercase","","prefer uppercase letters",245,null],[13,"Titlecase","","prefer casing for titles and headings (can be language…",245,null],[13,"HiddenText","","characters should be hidden",245,null],[13,"SensitiveData","","typed text should not be stored",245,null],[13,"Latin","","just latin characters should be entered",245,null],[13,"Multiline","","the text input is multiline",245,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",246,null],[13,"Alpha","","allow only alphabetic characters",246,null],[13,"Digits","","allow only digits",246,null],[13,"Number","","input a number (including decimal separator and sign)",246,null],[13,"Phone","","input a phone number",246,null],[13,"Url","","input an URL",246,null],[13,"Email","","input an email address",246,null],[13,"Name","","input a name of a person",246,null],[13,"Password","","input a password (combine with password or sensitive_data…",246,null],[13,"Date","","input a date",246,null],[13,"Time","","input a time",246,null],[13,"Datetime","","input a date and time",246,null],[13,"Terminal","","input for a terminal",246,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",247,null],[13,"None","","style should be the same as in non-composing text",247,null],[13,"Active","","",247,null],[13,"Inactive","","",247,null],[13,"Highlight","","",247,null],[13,"Underline","","",247,null],[13,"Selection","","",247,null],[13,"Incorrect","","",247,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",248,null],[13,"Ltr","","left-to-right",248,null],[13,"Rtl","","right-to-left",248,null],[4,"Request","","",null,null],[13,"Activate","","request activation",249,null],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",250,null],[12,"surface","","",250,null],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request deactivation",249,null],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",251,null],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","show input panels",249,null],[13,"HideInputPanel","","hide input panels",249,null],[13,"Reset","","reset",249,null],[13,"SetSurroundingText","","sets the surrounding text",249,null],[12,"text","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",252,null],[12,"cursor","","",252,null],[12,"anchor","","",252,null],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set content purpose and hint",249,null],[12,"hint","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",253,null],[12,"purpose","","",253,null],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",249,null],[12,"x","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",254,null],[12,"y","","",254,null],[12,"width","","",254,null],[12,"height","","",254,null],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","sets preferred language",249,null],[12,"language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",255,null],[13,"CommitState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",249,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",256,null],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",249,null],[12,"button","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",257,null],[12,"index","","",257,null],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[13,"Enter","","enter event",258,null],[12,"surface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",259,null],[13,"Leave","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","leave event",258,null],[13,"ModifiersMap","","modifiers map",258,null],[12,"map","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",260,null],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","state of the input panel",258,null],[12,"state","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",261,null],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit",258,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",262,null],[12,"text","","",262,null],[12,"commit","","",262,null],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit styling",258,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",263,null],[12,"length","","",263,null],[12,"style","","",263,null],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit cursor",258,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",264,null],[13,"CommitString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","commit",258,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",265,null],[12,"text","","",265,null],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set cursor to new position",258,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",266,null],[12,"anchor","","",266,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","delete surrounding text",258,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",267,null],[12,"length","","",267,null],[13,"Keysym","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","keysym",258,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",268,null],[12,"time","","",268,null],[12,"sym","","",268,null],[12,"state","","",268,null],[12,"modifiers","","",268,null],[13,"Language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","language",258,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",269,null],[12,"language","","",269,null],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","text direction",258,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",270,null],[12,"direction","","",270,null],[7,"zwp_text_input_v1_requests","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwp_text_input_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_text_input_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_ACTIVATE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DEACTIVATE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_INPUT_PANEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_HIDE_INPUT_PANEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESET_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONTENT_TYPE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CURSOR_RECTANGLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PREFERRED_LANGUAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_STATE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_INVOKE_ACTION_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIERS_MAP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_INPUT_PANEL_STATE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PREEDIT_STRING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PREEDIT_STYLING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PREEDIT_CURSOR_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_COMMIT_STRING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CURSOR_POSITION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_KEYSYM_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LANGUAGE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_TEXT_DIRECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateTextInput","","create text input",271,null],[12,"id","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1::Request","",272,null],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[7,"zwp_text_input_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_text_input_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_TEXT_INPUT_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",245,[[],[["option",4],["contenthint",4]]]],[11,"to_raw","","",245,[[]]],[11,"from_raw","","",246,[[],[["contentpurpose",4],["option",4]]]],[11,"to_raw","","",246,[[]]],[11,"from_raw","","",247,[[],[["preeditstyle",4],["option",4]]]],[11,"to_raw","","",247,[[]]],[11,"from_raw","","",248,[[],[["textdirection",4],["option",4]]]],[11,"to_raw","","",248,[[]]],[11,"enter","","enter event",273,[[["wlsurface",3]]]],[11,"leave","","leave event",273,[[]]],[11,"modifiers_map","","modifiers map",273,[[["vec",3]]]],[11,"input_panel_state","","state of the input panel",273,[[]]],[11,"preedit_string","","pre-edit",273,[[["string",3]]]],[11,"preedit_styling","","pre-edit styling",273,[[]]],[11,"preedit_cursor","","pre-edit cursor",273,[[]]],[11,"commit_string","","commit",273,[[["string",3]]]],[11,"cursor_position","","set cursor to new position",273,[[]]],[11,"delete_surrounding_text","","delete surrounding text",273,[[]]],[11,"keysym","","keysym",273,[[]]],[11,"language","","language",273,[[["string",3]]]],[11,"text_direction","","text direction",273,[[]]],[0,"v3","wayland_protocols::unstable::text_input","",null,null],[0,"server","wayland_protocols::unstable::text_input::v3","Server-side API of this protocol",null,null],[0,"zwp_text_input_v3","wayland_protocols::unstable::text_input::v3::server","text input",null,null],[3,"ContentHint","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","content hint",null,null],[3,"ZwpTextInputV3","","",null,null],[4,"ChangeCause","","text change reason",null,null],[13,"InputMethod","","input method caused the change",274,null],[13,"Other","","something else than the input method caused the change",274,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",275,null],[13,"Alpha","","allow only alphabetic characters",275,null],[13,"Digits","","allow only digits",275,null],[13,"Number","","input a number (including decimal separator and sign)",275,null],[13,"Phone","","input a phone number",275,null],[13,"Url","","input an URL",275,null],[13,"Email","","input an email address",275,null],[13,"Name","","input a name of a person",275,null],[13,"Password","","input a password (combine with sensitive_data hint)",275,null],[13,"Pin","","input is a numeric password (combine with sensitive_data…",275,null],[13,"Date","","input a date",275,null],[13,"Time","","input a time",275,null],[13,"Datetime","","input a date and time",275,null],[13,"Terminal","","input for a terminal",275,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the wp_text_input",276,null],[13,"Enable","","Request text input to be enabled",276,null],[13,"Disable","","Disable text input on a surface",276,null],[13,"SetSurroundingText","","sets the surrounding text",276,null],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",277,null],[12,"cursor","","",277,null],[12,"anchor","","",277,null],[13,"SetTextChangeCause","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","indicates the cause of surrounding text change",276,null],[12,"cause","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",278,null],[13,"SetContentType","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","set content purpose and hint",276,null],[12,"hint","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",279,null],[12,"purpose","","",279,null],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","set cursor position",276,null],[12,"x","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Request","",280,null],[12,"y","","",280,null],[12,"width","","",280,null],[12,"height","","",280,null],[13,"Commit","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","commit state",276,null],[4,"Event","","",null,null],[13,"Enter","","enter event",281,null],[12,"surface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",282,null],[13,"Leave","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","leave event",281,null],[12,"surface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",283,null],[13,"PreeditString","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","pre-edit",281,null],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",284,null],[12,"cursor_begin","","",284,null],[12,"cursor_end","","",284,null],[13,"CommitString","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","text commit",281,null],[12,"text","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",285,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","delete surrounding text",281,null],[12,"before_length","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",286,null],[12,"after_length","","",286,null],[13,"Done","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","apply changes",281,null],[12,"serial","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3::Event","",287,null],[7,"zwp_text_input_v3_requests","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","C-representation of the messages of this interface, for…",null,null],[7,"zwp_text_input_v3_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_text_input_v3_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ENABLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DISABLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TEXT_CHANGE_CAUSE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONTENT_TYPE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CURSOR_RECTANGLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PREEDIT_STRING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_COMMIT_STRING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DELETE_SURROUNDING_TEXT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"zwp_text_input_manager_v3","wayland_protocols::unstable::text_input::v3::server","text input manager",null,null],[3,"ZwpTextInputManagerV3","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",null,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the wp_text_input_manager",288,null],[13,"GetTextInput","","create a new text input object",288,null],[12,"id","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3::Request","",289,null],[12,"seat","","",289,null],[4,"Event","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",null,null],[7,"zwp_text_input_manager_v3_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_text_input_manager_v3_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TEXT_INPUT_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",274,[[],[["option",4],["changecause",4]]]],[11,"to_raw","","",274,[[]]],[18,"None","","no special behavior",290,null],[18,"Completion","","suggest word completions",290,null],[18,"Spellcheck","","suggest word corrections",290,null],[18,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",290,null],[18,"Lowercase","","prefer lowercase letters",290,null],[18,"Uppercase","","prefer uppercase letters",290,null],[18,"Titlecase","","prefer casing for titles and headings (can be language…",290,null],[18,"HiddenText","","characters should be hidden",290,null],[18,"SensitiveData","","typed text should not be stored",290,null],[18,"Latin","","just Latin characters should be entered",290,null],[18,"Multiline","","the text input is multiline",290,null],[11,"empty","","Returns an empty set of flags",290,[[],["contenthint",3]]],[11,"all","","Returns the set containing all flags.",290,[[],["contenthint",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",290,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",290,[[],[["option",4],["contenthint",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",290,[[],["contenthint",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",290,[[],["contenthint",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",290,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",290,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",290,[[["contenthint",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",290,[[["contenthint",3]]]],[11,"insert","","Inserts the specified flags in-place.",290,[[["contenthint",3]]]],[11,"remove","","Removes the specified flags in-place.",290,[[["contenthint",3]]]],[11,"toggle","","Toggles the specified flags in-place.",290,[[["contenthint",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",290,[[["contenthint",3]]]],[11,"from_raw","","",290,[[],[["option",4],["contenthint",3]]]],[11,"to_raw","","",290,[[]]],[11,"from_raw","","",275,[[],[["option",4],["contentpurpose",4]]]],[11,"to_raw","","",275,[[]]],[11,"enter","","enter event",291,[[["wlsurface",3]]]],[11,"leave","","leave event",291,[[["wlsurface",3]]]],[11,"preedit_string","","pre-edit",291,[[["string",3],["option",4]]]],[11,"commit_string","","text commit",291,[[["string",3],["option",4]]]],[11,"delete_surrounding_text","","delete surrounding text",291,[[]]],[11,"done","","apply changes",291,[[]]],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for…",null,null],[0,"v1","wayland_protocols::unstable::xdg_decoration","",null,null],[0,"server","wayland_protocols::unstable::xdg_decoration::v1","Server-side API of this protocol",null,null],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::server","window decoration manager",null,null],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration manager object",292,null],[13,"GetToplevelDecoration","","create a new toplevel decoration object",292,null],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1::Request","",293,null],[12,"toplevel","","",293,null],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",null,null],[7,"zxdg_decoration_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_decoration_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_DECORATION_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::server","decoration object for a toplevel surface",null,null],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",null,null],[4,"Error","","",null,null],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",294,null],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",294,null],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",294,null],[4,"Mode","","window decoration modes",null,null],[13,"ClientSide","","no server-side window decoration",295,null],[13,"ServerSide","","server-side window decoration",295,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration object",296,null],[13,"SetMode","","set the decoration mode",296,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Request","",297,null],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","unset the decoration mode",296,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",298,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Event","",299,null],[7,"zxdg_toplevel_decoration_v1_requests","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_toplevel_decoration_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_toplevel_decoration_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MODE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MODE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",294,[[],[["option",4],["error",4]]]],[11,"to_raw","","",294,[[]]],[11,"from_raw","","",295,[[],[["mode",4],["option",4]]]],[11,"to_raw","","",295,[[]]],[11,"configure","","suggest a surface change",300,[[["mode",4]]]],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",null,null],[0,"v1","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",301,null],[13,"Export","","export a surface",301,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1::Request","",302,null],[12,"surface","","",302,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[7,"zxdg_exporter_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_exporter_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_EXPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",303,null],[13,"Import","","import a surface",303,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1::Request","",304,null],[12,"handle","","",304,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[7,"zxdg_importer_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_importer_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_IMPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",305,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",306,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1::Event","",307,null],[7,"zxdg_exported_v1_requests","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_exported_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_exported_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_HANDLE_SINCE","","The minimal object version supporting this event",null,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",308,null],[13,"SetParentOf","","set as the parent of some surface",308,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1::Request","",309,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",310,null],[7,"zxdg_imported_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_imported_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_imported_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_OF_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DESTROYED_SINCE","","The minimal object version supporting this event",null,null],[11,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","the exported surface handle",311,[[["string",3]]]],[11,"destroyed","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","the imported surface handle has been destroyed",312,[[]]],[0,"v2","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",313,null],[13,"ExportToplevel","","export a toplevel surface",313,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2::Request","",314,null],[12,"surface","","",314,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[7,"zxdg_exporter_v2_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_exporter_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_EXPORT_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",315,null],[13,"ImportToplevel","","import a toplevel surface",315,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2::Request","",316,null],[12,"handle","","",316,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[7,"zxdg_importer_v2_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_importer_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_IMPORT_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",317,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",318,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2::Event","",319,null],[7,"zxdg_exported_v2_requests","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_exported_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_exported_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_HANDLE_SINCE","","The minimal object version supporting this event",null,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",320,null],[13,"SetParentOf","","set as the parent of some surface",320,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2::Request","",321,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",322,null],[7,"zxdg_imported_v2_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_imported_v2_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_imported_v2_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_OF_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DESTROYED_SINCE","","The minimal object version supporting this event",null,null],[11,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","the exported surface handle",323,[[["string",3]]]],[11,"destroyed","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","the imported surface handle has been destroyed",324,[[]]],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",null,null],[0,"v1","wayland_protocols::unstable::xdg_output","",null,null],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output_manager object",325,null],[13,"GetXdgOutput","","create an xdg output from a wl_output",325,null],[12,"id","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1::Request","",326,null],[12,"output","","",326,null],[4,"Event","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[7,"zxdg_output_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_output_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_OUTPUT_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output object",327,null],[4,"Event","","",null,null],[13,"LogicalPosition","","position of the output within the global compositor space",328,null],[12,"x","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",329,null],[12,"y","","",329,null],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","size of the output in the global compositor space",328,null],[12,"width","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",330,null],[12,"height","","",330,null],[13,"Done","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","all information about the output have been sent",328,null],[13,"Name","","name of this output",328,null],[12,"name","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",331,null],[13,"Description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","human-readable description of this output",328,null],[12,"description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",332,null],[7,"zxdg_output_v1_requests","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_output_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_output_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_LOGICAL_POSITION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LOGICAL_SIZE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DESCRIPTION_SINCE","","The minimal object version supporting this event",null,null],[11,"logical_position","","position of the output within the global compositor space",333,[[]]],[11,"logical_size","","size of the output in the global compositor space",333,[[]]],[11,"done","","all information about the output have been sent",333,[[]]],[11,"name","","name of this output",333,[[["string",3]]]],[11,"description","","human-readable description of this output",333,[[["string",3]]]],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",null,null],[0,"v5","wayland_protocols::unstable::xdg_shell","",null,null],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",334,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",335,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",335,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",335,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",335,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",336,null],[13,"UseUnstableVersion","","enable use of this unstable version",336,null],[12,"version","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",337,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a shell surface from a surface",336,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",338,null],[12,"surface","","",338,null],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a popup for a surface",336,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",339,null],[12,"surface","","",339,null],[12,"parent","","",339,null],[12,"seat","","",339,null],[12,"serial","","",339,null],[12,"x","","",339,null],[12,"y","","",339,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","respond to a ping event",336,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",340,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[13,"Ping","","check if the client is alive",341,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Event","",342,null],[7,"xdg_shell_requests","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","C-representation of the messages of this interface, for…",null,null],[7,"xdg_shell_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_shell_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_USE_UNSTABLE_VERSION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",343,null],[13,"Top","","",343,null],[13,"Bottom","","",343,null],[13,"Left","","",343,null],[13,"TopLeft","","",343,null],[13,"BottomLeft","","",343,null],[13,"Right","","",343,null],[13,"TopRight","","",343,null],[13,"BottomRight","","",343,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",344,null],[13,"Fullscreen","","the surface is fullscreen",344,null],[13,"Resizing","","the surface is being resized",344,null],[13,"Activated","","the surface is now activated",344,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the xdg_surface",345,null],[13,"SetParent","","set the parent of this surface",345,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",346,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set surface title",345,null],[12,"title","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",347,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set application ID",345,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",348,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","show the window menu",345,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",349,null],[12,"serial","","",349,null],[12,"x","","",349,null],[12,"y","","",349,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive move",345,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",350,null],[12,"serial","","",350,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive resize",345,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",351,null],[12,"serial","","",351,null],[12,"edges","","",351,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","ack a configure event",345,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",352,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set the new window geometry",345,null],[12,"x","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",353,null],[12,"y","","",353,null],[12,"width","","",353,null],[12,"height","","",353,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","maximize the window",345,null],[13,"UnsetMaximized","","unmaximize the window",345,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",345,null],[12,"output","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",354,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",345,null],[13,"SetMinimized","","set the window as minimized",345,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",355,null],[12,"width","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Event","",356,null],[12,"height","","",356,null],[12,"states","","",356,null],[12,"serial","","",356,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","surface wants to be closed",355,null],[7,"xdg_surface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",null,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",357,null],[4,"Event","","",null,null],[13,"PopupDone","","popup interaction is done",358,null],[7,"xdg_popup_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",334,[[],[["version",4],["option",4]]]],[11,"to_raw","","",334,[[]]],[11,"from_raw","","",335,[[],[["option",4],["error",4]]]],[11,"to_raw","","",335,[[]]],[11,"ping","","check if the client is alive",359,[[]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",343,[[],[["option",4],["resizeedge",4]]]],[11,"to_raw","","",343,[[]]],[11,"from_raw","","",344,[[],[["state",4],["option",4]]]],[11,"to_raw","","",344,[[]]],[11,"configure","","suggest a surface change",360,[[["vec",3]]]],[11,"close","","surface wants to be closed",360,[[]]],[11,"popup_done","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","popup interaction is done",361,[[]]],[0,"v6","wayland_protocols::unstable::xdg_shell","",null,null],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",362,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",362,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",362,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",362,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",362,null],[13,"InvalidPositioner","","the client provided an invalid positioner",362,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",363,null],[13,"CreatePositioner","","create a positioner object",363,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",364,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","create a shell surface from a surface",363,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",365,null],[12,"surface","","",365,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","respond to a ping event",363,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",366,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[13,"Ping","","check if the client is alive",367,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Event","",368,null],[7,"zxdg_shell_v6_requests","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_shell_v6_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_shell_v6_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",null,null],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[3,"ZxdgPositionerV6","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",369,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",370,null],[13,"SetSize","","set the size of the to-be positioned rectangle",370,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",371,null],[12,"height","","",371,null],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the anchor rectangle within the parent surface",370,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",372,null],[12,"y","","",372,null],[12,"width","","",372,null],[12,"height","","",372,null],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set anchor rectangle anchor edges",370,null],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",373,null],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set child surface gravity",370,null],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",374,null],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the adjustment to be done when constrained",370,null],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",375,null],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set surface position offset",370,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",376,null],[12,"y","","",376,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[7,"zxdg_positioner_v6_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_positioner_v6_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",null,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",377,null],[13,"AlreadyConstructed","","",377,null],[13,"UnconfiguredBuffer","","",377,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",378,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",378,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",379,null],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","assign the xdg_popup surface role",378,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",380,null],[12,"parent","","",380,null],[12,"positioner","","",380,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","set the new window geometry",378,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",381,null],[12,"y","","",381,null],[12,"width","","",381,null],[12,"height","","",381,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","ack a configure event",378,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",382,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[13,"Configure","","suggest a surface change",383,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Event","",384,null],[7,"zxdg_surface_v6_requests","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_surface_v6_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_surface_v6_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",385,null],[13,"Top","","",385,null],[13,"Bottom","","",385,null],[13,"Left","","",385,null],[13,"TopLeft","","",385,null],[13,"BottomLeft","","",385,null],[13,"Right","","",385,null],[13,"TopRight","","",385,null],[13,"BottomRight","","",385,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",386,null],[13,"Fullscreen","","the surface is fullscreen",386,null],[13,"Resizing","","the surface is being resized",386,null],[13,"Activated","","the surface is now activated",386,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",387,null],[13,"SetParent","","set the parent of this surface",387,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",388,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set surface title",387,null],[12,"title","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",389,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set application ID",387,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",390,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","show the window menu",387,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",391,null],[12,"serial","","",391,null],[12,"x","","",391,null],[12,"y","","",391,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive move",387,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",392,null],[12,"serial","","",392,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive resize",387,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",393,null],[12,"serial","","",393,null],[12,"edges","","",393,null],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the maximum size",387,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",394,null],[12,"height","","",394,null],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the minimum size",387,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",395,null],[12,"height","","",395,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","maximize the window",387,null],[13,"UnsetMaximized","","unmaximize the window",387,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",387,null],[12,"output","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",396,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",387,null],[13,"SetMinimized","","set the window as minimized",387,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",397,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Event","",398,null],[12,"height","","",398,null],[12,"states","","",398,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","surface wants to be closed",397,null],[7,"zxdg_toplevel_v6_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_toplevel_v6_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_toplevel_v6_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",399,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",400,null],[13,"Grab","","make the popup take an explicit grab",400,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Request","",401,null],[12,"serial","","",401,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[13,"Configure","","configure the popup surface",402,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Event","",403,null],[12,"y","","",403,null],[12,"width","","",403,null],[12,"height","","",403,null],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","popup interaction is done",402,null],[7,"zxdg_popup_v6_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_popup_v6_events","","C-representation of the messages of this interface, for…",null,null],[7,"zxdg_popup_v6_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",362,[[],[["option",4],["error",4]]]],[11,"to_raw","","",362,[[]]],[11,"ping","","check if the client is alive",404,[[]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",369,[[],[["error",4],["option",4]]]],[11,"to_raw","","",369,[[]]],[18,"None","","the center of the anchor rectangle",405,null],[18,"Top","","the top edge of the anchor rectangle",405,null],[18,"Bottom","","the bottom edge of the anchor rectangle",405,null],[18,"Left","","the left edge of the anchor rectangle",405,null],[18,"Right","","the right edge of the anchor rectangle",405,null],[11,"empty","","Returns an empty set of flags",405,[[],["anchor",3]]],[11,"all","","Returns the set containing all flags.",405,[[],["anchor",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",405,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",405,[[],[["option",4],["anchor",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",405,[[],["anchor",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",405,[[],["anchor",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",405,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",405,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",405,[[["anchor",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",405,[[["anchor",3]]]],[11,"insert","","Inserts the specified flags in-place.",405,[[["anchor",3]]]],[11,"remove","","Removes the specified flags in-place.",405,[[["anchor",3]]]],[11,"toggle","","Toggles the specified flags in-place.",405,[[["anchor",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",405,[[["anchor",3]]]],[11,"from_raw","","",405,[[],[["anchor",3],["option",4]]]],[11,"to_raw","","",405,[[]]],[18,"None","","center over the anchor edge",406,null],[18,"Top","","position above the anchor edge",406,null],[18,"Bottom","","position below the anchor edge",406,null],[18,"Left","","position to the left of the anchor edge",406,null],[18,"Right","","position to the right of the anchor edge",406,null],[11,"empty","","Returns an empty set of flags",406,[[],["gravity",3]]],[11,"all","","Returns the set containing all flags.",406,[[],["gravity",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",406,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",406,[[],[["option",4],["gravity",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",406,[[],["gravity",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",406,[[],["gravity",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",406,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",406,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",406,[[["gravity",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",406,[[["gravity",3]]]],[11,"insert","","Inserts the specified flags in-place.",406,[[["gravity",3]]]],[11,"remove","","Removes the specified flags in-place.",406,[[["gravity",3]]]],[11,"toggle","","Toggles the specified flags in-place.",406,[[["gravity",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",406,[[["gravity",3]]]],[11,"from_raw","","",406,[[],[["option",4],["gravity",3]]]],[11,"to_raw","","",406,[[]]],[18,"None","","don\'t move the child surface when constrained",407,null],[18,"SlideX","","move along the x axis until unconstrained",407,null],[18,"SlideY","","move along the y axis until unconstrained",407,null],[18,"FlipX","","invert the anchor and gravity on the x axis",407,null],[18,"FlipY","","invert the anchor and gravity on the y axis",407,null],[18,"ResizeX","","horizontally resize the surface",407,null],[18,"ResizeY","","vertically resize the surface",407,null],[11,"empty","","Returns an empty set of flags",407,[[],["constraintadjustment",3]]],[11,"all","","Returns the set containing all flags.",407,[[],["constraintadjustment",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",407,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",407,[[],[["option",4],["constraintadjustment",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",407,[[],["constraintadjustment",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",407,[[],["constraintadjustment",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",407,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",407,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",407,[[["constraintadjustment",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",407,[[["constraintadjustment",3]]]],[11,"insert","","Inserts the specified flags in-place.",407,[[["constraintadjustment",3]]]],[11,"remove","","Removes the specified flags in-place.",407,[[["constraintadjustment",3]]]],[11,"toggle","","Toggles the specified flags in-place.",407,[[["constraintadjustment",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",407,[[["constraintadjustment",3]]]],[11,"from_raw","","",407,[[],[["option",4],["constraintadjustment",3]]]],[11,"to_raw","","",407,[[]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",377,[[],[["error",4],["option",4]]]],[11,"to_raw","","",377,[[]]],[11,"configure","","suggest a surface change",408,[[]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",385,[[],[["option",4],["resizeedge",4]]]],[11,"to_raw","","",385,[[]]],[11,"from_raw","","",386,[[],[["state",4],["option",4]]]],[11,"to_raw","","",386,[[]]],[11,"configure","","suggest a surface change",409,[[["vec",3]]]],[11,"close","","surface wants to be closed",409,[[]]],[11,"from_raw","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",399,[[],[["error",4],["option",4]]]],[11,"to_raw","","",399,[[]]],[11,"configure","","configure the popup surface",410,[[]]],[11,"popup_done","","popup interaction is done",410,[[]]],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",null,null],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",null,null],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard grab manager",411,null],[13,"GrabKeyboard","","grab the keyboard to a surface",411,null],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1::Request","",412,null],[12,"surface","","",412,null],[12,"seat","","",412,null],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the grabbed keyboard object",413,null],[4,"Event","","",null,null],[7,"zwp_xwayland_keyboard_grab_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwp_xwayland_keyboard_grab_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"misc","wayland_protocols","Misc protocols",null,null],[0,"gtk_primary_selection","wayland_protocols::misc","Gtk primary selection protocol",null,null],[0,"server","wayland_protocols::misc::gtk_primary_selection","Server-side API of this protocol",null,null],[0,"gtk_primary_selection_device_manager","wayland_protocols::misc::gtk_primary_selection::server","X primary selection emulation",null,null],[3,"GtkPrimarySelectionDeviceManager","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",null,null],[4,"Request","","",null,null],[13,"CreateSource","","create a new primary selection source",414,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",415,null],[13,"GetDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","create a new primary selection device",414,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager::Request","",416,null],[12,"seat","","",416,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","destroy the primary selection device manager",414,null],[4,"Event","","",null,null],[7,"gtk_primary_selection_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"gtk_primary_selection_device","wayland_protocols::misc::gtk_primary_selection::server","",null,null],[3,"GtkPrimarySelectionDevice","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",null,null],[4,"Request","","",null,null],[13,"SetSelection","","set the primary selection",417,null],[12,"source","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Request","",418,null],[12,"serial","","",418,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","destroy the primary selection device",417,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wp_primary_selection_offer",419,null],[12,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",420,null],[13,"Selection","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","advertise a new primary selection",419,null],[12,"id","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device::Event","",421,null],[7,"gtk_primary_selection_device_requests","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_offer","wayland_protocols::misc::gtk_primary_selection::server","offer to transfer primary selection contents",null,null],[3,"GtkPrimarySelectionOffer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",422,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Request","",423,null],[12,"fd","","",423,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","destroy the primary selection offer",422,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered mime type",424,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer::Event","",425,null],[7,"gtk_primary_selection_offer_requests","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[0,"gtk_primary_selection_source","wayland_protocols::misc::gtk_primary_selection::server","offer to replace the contents of the primary selection",null,null],[3,"GtkPrimarySelectionSource","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",null,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",426,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Request","",427,null],[13,"Destroy","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","destroy the primary selection source",426,null],[4,"Event","","",null,null],[13,"Send","","send the primary selection contents",428,null],[12,"mime_type","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source::Event","",429,null],[12,"fd","","",429,null],[13,"Cancelled","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","request for primary selection contents was canceled",428,null],[7,"gtk_primary_selection_source_requests","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"gtk_primary_selection_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[11,"data_offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","introduce a new wp_primary_selection_offer",430,[[["gtkprimaryselectionoffer",3]]]],[11,"selection","","advertise a new primary selection",430,[[["option",4],["gtkprimaryselectionoffer",3]]]],[11,"offer","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","advertise offered mime type",431,[[["string",3]]]],[11,"send","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","send the primary selection contents",432,[[["string",3],["rawfd",6]]]],[11,"cancelled","","request for primary selection contents was canceled",432,[[]]],[0,"wlr","wayland_protocols","wlr-procotols extension family",null,null],[0,"unstable","wayland_protocols::wlr","Unstable protocols from wlr-protocols",null,null],[0,"data_control","wayland_protocols::wlr::unstable","Control data devices, particularly the clipboard.",null,null],[0,"v1","wayland_protocols::wlr::unstable::data_control","",null,null],[0,"server","wayland_protocols::wlr::unstable::data_control::v1","Server-side API of this protocol",null,null],[0,"zwlr_data_control_manager_v1","wayland_protocols::wlr::unstable::data_control::v1::server","manager to control data devices",null,null],[3,"ZwlrDataControlManagerV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",433,null],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1::Request","",434,null],[13,"GetDataDevice","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","get a data device for a seat",433,null],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1::Request","",435,null],[12,"seat","","",435,null],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","destroy the manager",433,null],[4,"Event","","",null,null],[7,"zwlr_data_control_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwlr_data_control_device_v1","wayland_protocols::wlr::unstable::data_control::v1::server","manage a data device for a seat",null,null],[3,"ZwlrDataControlDeviceV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",null,null],[4,"Error","","",null,null],[13,"UsedSource","","source given to set_selection or set_primary_selection was…",436,null],[4,"Request","","",null,null],[13,"SetSelection","","copy data to the selection",437,null],[12,"source","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Request","",438,null],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","destroy this data device",437,null],[13,"SetPrimarySelection","","copy data to the primary selection",437,null],[12,"source","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Request","",439,null],[4,"Event","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",null,null],[13,"DataOffer","","introduce a new wlr_data_control_offer",440,null],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Event","",441,null],[13,"Selection","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","advertise new selection",440,null],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Event","",442,null],[13,"Finished","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","this data control is no longer valid",440,null],[13,"PrimarySelection","","advertise new primary selection",440,null],[12,"id","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1::Event","",443,null],[7,"zwlr_data_control_device_v1_requests","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_device_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_device_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PRIMARY_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRIMARY_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[0,"zwlr_data_control_source_v1","wayland_protocols::wlr::unstable::data_control::v1::server","offer to transfer data",null,null],[3,"ZwlrDataControlSourceV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",null,null],[4,"Error","","",null,null],[13,"InvalidOffer","","offer sent after wlr_data_control_device.set_selection",444,null],[4,"Request","","",null,null],[13,"Offer","","add an offered MIME type",445,null],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1::Request","",446,null],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","destroy this source",445,null],[4,"Event","","",null,null],[13,"Send","","send the data",447,null],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1::Event","",448,null],[12,"fd","","",448,null],[13,"Cancelled","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","selection was cancelled",447,null],[7,"zwlr_data_control_source_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_source_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_source_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[0,"zwlr_data_control_offer_v1","wayland_protocols::wlr::unstable::data_control::v1::server","offer to transfer data",null,null],[3,"ZwlrDataControlOfferV1","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",null,null],[4,"Request","","",null,null],[13,"Receive","","request that the data is transferred",449,null],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1::Request","",450,null],[12,"fd","","",450,null],[13,"Destroy","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","destroy this offer",449,null],[4,"Event","","",null,null],[13,"Offer","","advertise offered MIME type",451,null],[12,"mime_type","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1::Event","",452,null],[7,"zwlr_data_control_offer_v1_requests","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_offer_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_data_control_offer_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",436,[[],[["option",4],["error",4]]]],[11,"to_raw","","",436,[[]]],[11,"data_offer","","introduce a new wlr_data_control_offer",453,[[["zwlrdatacontrolofferv1",3]]]],[11,"selection","","advertise new selection",453,[[["zwlrdatacontrolofferv1",3],["option",4]]]],[11,"finished","","this data control is no longer valid",453,[[]]],[11,"primary_selection","","advertise new primary selection",453,[[["zwlrdatacontrolofferv1",3],["option",4]]]],[11,"from_raw","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",444,[[],[["error",4],["option",4]]]],[11,"to_raw","","",444,[[]]],[11,"send","","send the data",454,[[["string",3],["rawfd",6]]]],[11,"cancelled","","selection was cancelled",454,[[]]],[11,"offer","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","advertise offered MIME type",455,[[["string",3]]]],[0,"export_dmabuf","wayland_protocols::wlr::unstable","A protocol for low overhead screen content capturing",null,null],[0,"v1","wayland_protocols::wlr::unstable::export_dmabuf","",null,null],[0,"server","wayland_protocols::wlr::unstable::export_dmabuf::v1","Server-side API of this protocol",null,null],[0,"zwlr_export_dmabuf_manager_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","manager to inform clients and begin capturing",null,null],[3,"ZwlrExportDmabufManagerV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CaptureOutput","","capture a frame from an output",456,null],[12,"frame","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1::Request","",457,null],[12,"overlay_cursor","","",457,null],[12,"output","","",457,null],[13,"Destroy","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","destroy the manager",456,null],[4,"Event","","",null,null],[7,"zwlr_export_dmabuf_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_export_dmabuf_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CAPTURE_OUTPUT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwlr_export_dmabuf_frame_v1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server","a DMA-BUF frame",null,null],[3,"ZwlrExportDmabufFrameV1","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",null,null],[4,"Flags","","frame flags",null,null],[13,"Transient","","clients should copy frame before processing",458,null],[4,"CancelReason","","cancel reason",null,null],[13,"Temporary","","temporary error, source will produce more frames",459,null],[13,"Permanent","","fatal error, source will not produce frames",459,null],[13,"Resizing","","temporary error, source will produce more frames",459,null],[4,"Request","","",null,null],[13,"Destroy","","delete this object, used or not",460,null],[4,"Event","","",null,null],[13,"Frame","","a frame description",461,null],[12,"width","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",462,null],[12,"height","","",462,null],[12,"offset_x","","",462,null],[12,"offset_y","","",462,null],[12,"buffer_flags","","",462,null],[12,"flags","","",462,null],[12,"format","","",462,null],[12,"mod_high","","",462,null],[12,"mod_low","","",462,null],[12,"num_objects","","",462,null],[13,"Object","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","an object description",461,null],[12,"index","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",463,null],[12,"fd","","",463,null],[12,"size","","",463,null],[12,"offset","","",463,null],[12,"stride","","",463,null],[12,"plane_index","","",463,null],[13,"Ready","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates frame is available for reading",461,null],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",464,null],[12,"tv_sec_lo","","",464,null],[12,"tv_nsec","","",464,null],[13,"Cancel","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","indicates the frame is no longer valid",461,null],[12,"reason","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1::Event","",465,null],[7,"zwlr_export_dmabuf_frame_v1_requests","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_export_dmabuf_frame_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_export_dmabuf_frame_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_OBJECT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_READY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",458,[[],[["option",4],["flags",4]]]],[11,"to_raw","","",458,[[]]],[11,"from_raw","","",459,[[],[["cancelreason",4],["option",4]]]],[11,"to_raw","","",459,[[]]],[11,"frame","","a frame description",466,[[["flags",4]]]],[11,"object","","an object description",466,[[["rawfd",6]]]],[11,"ready","","indicates frame is available for reading",466,[[]]],[11,"cancel","","indicates the frame is no longer valid",466,[[["cancelreason",4]]]],[0,"foreign_toplevel","wayland_protocols::wlr::unstable","List and control opened apps",null,null],[0,"v1","wayland_protocols::wlr::unstable::foreign_toplevel","",null,null],[0,"server","wayland_protocols::wlr::unstable::foreign_toplevel::v1","Server-side API of this protocol",null,null],[0,"zwlr_foreign_toplevel_manager_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server","list and control opened apps",null,null],[3,"ZwlrForeignToplevelManagerV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Stop","","stop sending events",467,null],[4,"Event","","",null,null],[13,"Toplevel","","a toplevel has been created",468,null],[12,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1::Event","",469,null],[13,"Finished","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","the compositor has finished with the toplevel manager",468,null],[7,"zwlr_foreign_toplevel_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_foreign_toplevel_manager_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_foreign_toplevel_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_STOP_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TOPLEVEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[0,"zwlr_foreign_toplevel_handle_v1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server","an opened toplevel",null,null],[3,"ZwlrForeignToplevelHandleV1","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",null,null],[4,"State","","types of states on the toplevel",null,null],[13,"Maximized","","the toplevel is maximized",470,null],[13,"Minimized","","the toplevel is minimized",470,null],[13,"Activated","","the toplevel is active",470,null],[13,"Fullscreen","","the toplevel is fullscreen",470,null],[4,"Error","","",null,null],[13,"InvalidRectangle","","the provided rectangle is invalid",471,null],[4,"Request","","",null,null],[13,"SetMaximized","","requests that the toplevel be maximized",472,null],[13,"UnsetMaximized","","requests that the toplevel be unmaximized",472,null],[13,"SetMinimized","","requests that the toplevel be minimized",472,null],[13,"UnsetMinimized","","requests that the toplevel be unminimized",472,null],[13,"Activate","","activate the toplevel",472,null],[12,"seat","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",473,null],[13,"Close","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","request that the toplevel be closed",472,null],[13,"SetRectangle","","the rectangle which represents the toplevel",472,null],[12,"surface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",474,null],[12,"x","","",474,null],[12,"y","","",474,null],[12,"width","","",474,null],[12,"height","","",474,null],[13,"Destroy","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","destroy the zwlr_foreign_toplevel_handle_v1 object",472,null],[13,"SetFullscreen","","request that the toplevel be fullscreened",472,null],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Request","",475,null],[13,"UnsetFullscreen","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","request that the toplevel be unfullscreened",472,null],[4,"Event","","",null,null],[13,"Title","","title change",476,null],[12,"title","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",477,null],[13,"AppId","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","app-id change",476,null],[12,"app_id","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",478,null],[13,"OutputEnter","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","toplevel entered an output",476,null],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",479,null],[13,"OutputLeave","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","toplevel left an output",476,null],[12,"output","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",480,null],[13,"State","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","the toplevel state changed",476,null],[12,"state","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1::Event","",481,null],[13,"Done","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","all information about the toplevel has been sent",476,null],[13,"Closed","","this toplevel has been destroyed",476,null],[7,"zwlr_foreign_toplevel_handle_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_foreign_toplevel_handle_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_foreign_toplevel_handle_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACTIVATE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CLOSE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_RECTANGLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TITLE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_APP_ID_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_OUTPUT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_OUTPUT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_STATE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSED_SINCE","","The minimal object version supporting this event",null,null],[11,"toplevel","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","a toplevel has been created",482,[[["zwlrforeigntoplevelhandlev1",3]]]],[11,"finished","","the compositor has finished with the toplevel manager",482,[[]]],[11,"from_raw","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",470,[[],[["option",4],["state",4]]]],[11,"to_raw","","",470,[[]]],[11,"from_raw","","",471,[[],[["error",4],["option",4]]]],[11,"to_raw","","",471,[[]]],[11,"title","","title change",483,[[["string",3]]]],[11,"app_id","","app-id change",483,[[["string",3]]]],[11,"output_enter","","toplevel entered an output",483,[[["wloutput",3]]]],[11,"output_leave","","toplevel left an output",483,[[["wloutput",3]]]],[11,"state","","the toplevel state changed",483,[[["vec",3]]]],[11,"done","","all information about the toplevel has been sent",483,[[]]],[11,"closed","","this toplevel has been destroyed",483,[[]]],[0,"gamma_control","wayland_protocols::wlr::unstable","Manage gamma tables of outputs.",null,null],[0,"v1","wayland_protocols::wlr::unstable::gamma_control","",null,null],[0,"server","wayland_protocols::wlr::unstable::gamma_control::v1","Server-side API of this protocol",null,null],[0,"zwlr_gamma_control_manager_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","manager to create per-output gamma controls",null,null],[3,"ZwlrGammaControlManagerV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",null,null],[4,"Request","","",null,null],[13,"GetGammaControl","","get a gamma control for an output",484,null],[12,"id","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1::Request","",485,null],[12,"output","","",485,null],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","destroy the manager",484,null],[4,"Event","","",null,null],[7,"zwlr_gamma_control_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_gamma_control_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_GAMMA_CONTROL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwlr_gamma_control_v1","wayland_protocols::wlr::unstable::gamma_control::v1::server","adjust gamma tables for an output",null,null],[3,"ZwlrGammaControlV1","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",null,null],[4,"Error","","",null,null],[13,"InvalidGamma","","invalid gamma tables",486,null],[4,"Request","","",null,null],[13,"SetGamma","","set the gamma table",487,null],[12,"fd","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Request","",488,null],[13,"Destroy","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","destroy this control",487,null],[4,"Event","","",null,null],[13,"GammaSize","","size of gamma ramps",489,null],[12,"size","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1::Event","",490,null],[13,"Failed","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","object no longer valid",489,null],[7,"zwlr_gamma_control_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_gamma_control_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_gamma_control_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_GAMMA_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GAMMA_SIZE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",486,[[],[["option",4],["error",4]]]],[11,"to_raw","","",486,[[]]],[11,"gamma_size","","size of gamma ramps",491,[[]]],[11,"failed","","object no longer valid",491,[[]]],[0,"input_inhibitor","wayland_protocols::wlr::unstable","Inhibits input events to other clients",null,null],[0,"v1","wayland_protocols::wlr::unstable::input_inhibitor","",null,null],[0,"server","wayland_protocols::wlr::unstable::input_inhibitor::v1","Server-side API of this protocol",null,null],[0,"zwlr_input_inhibit_manager_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input events to other clients",null,null],[3,"ZwlrInputInhibitManagerV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","an input inhibitor is already in use on the compositor",492,null],[4,"Request","","",null,null],[13,"GetInhibitor","","inhibit input to other clients",493,null],[12,"id","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1::Request","",494,null],[4,"Event","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",null,null],[7,"zwlr_input_inhibit_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_input_inhibit_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_INHIBITOR_SINCE","","The minimal object version supporting this request",null,null],[0,"zwlr_input_inhibitor_v1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server","inhibits input to other clients",null,null],[3,"ZwlrInputInhibitorV1","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the input inhibitor object",495,null],[4,"Event","","",null,null],[7,"zwlr_input_inhibitor_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_input_inhibitor_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",492,[[],[["option",4],["error",4]]]],[11,"to_raw","","",492,[[]]],[0,"layer_shell","wayland_protocols::wlr::unstable","Layered shell protocol",null,null],[0,"v1","wayland_protocols::wlr::unstable::layer_shell","",null,null],[0,"server","wayland_protocols::wlr::unstable::layer_shell::v1","Server-side API of this protocol",null,null],[0,"zwlr_layer_shell_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","create surfaces that are layers of the desktop",null,null],[3,"ZwlrLayerShellV1","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",null,null],[4,"Error","","",null,null],[13,"Role","","wl_surface has another role",496,null],[13,"InvalidLayer","","layer value is invalid",496,null],[13,"AlreadyConstructed","","wl_surface has a buffer attached or committed",496,null],[4,"Layer","","available layers for surfaces",null,null],[13,"Background","","",497,null],[13,"Bottom","","",497,null],[13,"Top","","",497,null],[13,"Overlay","","",497,null],[4,"Request","","",null,null],[13,"GetLayerSurface","","create a layer_surface from a surface",498,null],[12,"id","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1::Request","",499,null],[12,"surface","","",499,null],[12,"output","","",499,null],[12,"layer","","",499,null],[12,"namespace","","",499,null],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",null,null],[7,"zwlr_layer_shell_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_layer_shell_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_LAYER_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[0,"zwlr_layer_surface_v1","wayland_protocols::wlr::unstable::layer_shell::v1::server","layer metadata interface",null,null],[3,"Anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",null,null],[3,"ZwlrLayerSurfaceV1","","",null,null],[4,"Error","","",null,null],[13,"InvalidSurfaceState","","provided surface state is invalid",500,null],[13,"InvalidSize","","size is invalid",500,null],[13,"InvalidAnchor","","anchor bitfield is invalid",500,null],[4,"Request","","",null,null],[13,"SetSize","","sets the size of the surface",501,null],[12,"width","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",502,null],[12,"height","","",502,null],[13,"SetAnchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the anchor point of the surface",501,null],[12,"anchor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",503,null],[13,"SetExclusiveZone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","configures the exclusive geometry of this surface",501,null],[12,"zone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",504,null],[13,"SetMargin","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","sets a margin from the anchor point",501,null],[12,"top","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",505,null],[12,"right","","",505,null],[12,"bottom","","",505,null],[12,"left","","",505,null],[13,"SetKeyboardInteractivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","requests keyboard events",501,null],[12,"keyboard_interactivity","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",506,null],[13,"GetPopup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","assign this layer_surface as an xdg_popup parent",501,null],[12,"popup","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",507,null],[13,"AckConfigure","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","ack a configure event",501,null],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",508,null],[13,"Destroy","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","destroy the layer_surface",501,null],[13,"SetLayer","","change the layer of the surface",501,null],[12,"layer","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Request","",509,null],[4,"Event","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",null,null],[13,"Configure","","suggest a surface change",510,null],[12,"serial","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1::Event","",511,null],[12,"width","","",511,null],[12,"height","","",511,null],[13,"Closed","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","surface should be closed",510,null],[7,"zwlr_layer_surface_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_layer_surface_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_layer_surface_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_EXCLUSIVE_ZONE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MARGIN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_KEYBOARD_INTERACTIVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_LAYER_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSED_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",496,[[],[["error",4],["option",4]]]],[11,"to_raw","","",496,[[]]],[11,"from_raw","","",497,[[],[["layer",4],["option",4]]]],[11,"to_raw","","",497,[[]]],[11,"from_raw","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",500,[[],[["error",4],["option",4]]]],[11,"to_raw","","",500,[[]]],[18,"Top","","the top edge of the anchor rectangle",512,null],[18,"Bottom","","the bottom edge of the anchor rectangle",512,null],[18,"Left","","the left edge of the anchor rectangle",512,null],[18,"Right","","the right edge of the anchor rectangle",512,null],[11,"empty","","Returns an empty set of flags",512,[[],["anchor",3]]],[11,"all","","Returns the set containing all flags.",512,[[],["anchor",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",512,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",512,[[],[["anchor",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",512,[[],["anchor",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",512,[[],["anchor",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",512,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",512,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",512,[[["anchor",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",512,[[["anchor",3]]]],[11,"insert","","Inserts the specified flags in-place.",512,[[["anchor",3]]]],[11,"remove","","Removes the specified flags in-place.",512,[[["anchor",3]]]],[11,"toggle","","Toggles the specified flags in-place.",512,[[["anchor",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",512,[[["anchor",3]]]],[11,"from_raw","","",512,[[],[["anchor",3],["option",4]]]],[11,"to_raw","","",512,[[]]],[11,"configure","","suggest a surface change",513,[[]]],[11,"closed","","surface should be closed",513,[[]]],[0,"screencopy","wayland_protocols::wlr::unstable","Screen content capturing on client buffers",null,null],[0,"v1","wayland_protocols::wlr::unstable::screencopy","",null,null],[0,"server","wayland_protocols::wlr::unstable::screencopy::v1","Server-side API of this protocol",null,null],[0,"zwlr_screencopy_manager_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","manager to inform clients and begin capturing",null,null],[3,"ZwlrScreencopyManagerV1","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CaptureOutput","","capture an output",514,null],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",515,null],[12,"overlay_cursor","","",515,null],[12,"output","","",515,null],[13,"CaptureOutputRegion","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","capture an output\'s region",514,null],[12,"frame","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1::Request","",516,null],[12,"overlay_cursor","","",516,null],[12,"output","","",516,null],[12,"x","","",516,null],[12,"y","","",516,null],[12,"width","","",516,null],[12,"height","","",516,null],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","destroy the manager",514,null],[4,"Event","","",null,null],[7,"zwlr_screencopy_manager_v1_requests","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_screencopy_manager_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CAPTURE_OUTPUT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CAPTURE_OUTPUT_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[0,"zwlr_screencopy_frame_v1","wayland_protocols::wlr::unstable::screencopy::v1::server","a frame ready for copy",null,null],[3,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",null,null],[3,"ZwlrScreencopyFrameV1","","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the object has already been used to copy a wl_buffer",517,null],[13,"InvalidBuffer","","buffer attributes are invalid",517,null],[4,"Request","","",null,null],[13,"Copy","","copy the frame",518,null],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Request","",519,null],[13,"Destroy","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","delete this object, used or not",518,null],[13,"CopyWithDamage","","copy the frame when it\'s damaged",518,null],[12,"buffer","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Request","",520,null],[4,"Event","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",null,null],[13,"Buffer","","buffer information",521,null],[12,"format","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",522,null],[12,"width","","",522,null],[12,"height","","",522,null],[12,"stride","","",522,null],[13,"Flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame flags",521,null],[12,"flags","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",523,null],[13,"Ready","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","indicates frame is available for reading",521,null],[12,"tv_sec_hi","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",524,null],[12,"tv_sec_lo","","",524,null],[12,"tv_nsec","","",524,null],[13,"Failed","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","frame copy failed",521,null],[13,"Damage","","carries the coordinates of the damaged region",521,null],[12,"x","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1::Event","",525,null],[12,"y","","",525,null],[12,"width","","",525,null],[12,"height","","",525,null],[7,"zwlr_screencopy_frame_v1_requests","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_screencopy_frame_v1_events","","C-representation of the messages of this interface, for…",null,null],[7,"zwlr_screencopy_frame_v1_interface","","C representation of this interface, for interop",null,null],[17,"REQ_COPY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COPY_WITH_DAMAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_BUFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FLAGS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_READY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FAILED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DAMAGE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",517,[[],[["option",4],["error",4]]]],[11,"to_raw","","",517,[[]]],[18,"YInvert","","contents are y-inverted",526,null],[11,"empty","","Returns an empty set of flags",526,[[],["flags",3]]],[11,"all","","Returns the set containing all flags.",526,[[],["flags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",526,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",526,[[],[["flags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",526,[[],["flags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",526,[[],["flags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",526,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",526,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",526,[[["flags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",526,[[["flags",3]]]],[11,"insert","","Inserts the specified flags in-place.",526,[[["flags",3]]]],[11,"remove","","Removes the specified flags in-place.",526,[[["flags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",526,[[["flags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",526,[[["flags",3]]]],[11,"from_raw","","",526,[[],[["flags",3],["option",4]]]],[11,"to_raw","","",526,[[]]],[11,"buffer","","buffer information",527,[[]]],[11,"flags","","frame flags",527,[[["flags",3]]]],[11,"ready","","indicates frame is available for reading",527,[[]]],[11,"failed","","frame copy failed",527,[[]]],[11,"damage","","carries the coordinates of the damaged region",527,[[]]],[0,"presentation_time","wayland_protocols","Presentation time protocol",null,null],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",528,null],[13,"InvalidFlag","","invalid flag",528,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",529,null],[13,"Feedback","","request presentation feedback information",529,null],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",530,null],[12,"callback","","",530,null],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",531,null],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",532,null],[7,"wp_presentation_requests","wayland_protocols::presentation_time::server::wp_presentation","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FEEDBACK_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CLOCK_ID_SINCE","","The minimal object version supporting this event",null,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"Kind","wayland_protocols::presentation_time::server::wp_presentation_feedback","bitmask of flags in presented event",null,null],[3,"WpPresentationFeedback","","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",533,null],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",534,null],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",533,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",535,null],[12,"tv_sec_lo","","",535,null],[12,"tv_nsec","","",535,null],[12,"refresh","","",535,null],[12,"seq_hi","","",535,null],[12,"seq_lo","","",535,null],[12,"flags","","",535,null],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",533,null],[7,"wp_presentation_feedback_events","","C-representation of the messages of this interface, for…",null,null],[7,"wp_presentation_feedback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_SYNC_OUTPUT_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_PRESENTED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DISCARDED_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",null,null],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",536,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",536,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",536,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",536,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",536,null],[13,"InvalidPositioner","","the client provided an invalid positioner",536,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",537,null],[13,"CreatePositioner","","create a positioner object",537,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",538,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",537,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",539,null],[12,"surface","","",539,null],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",537,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",540,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",541,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",542,null],[7,"xdg_wm_base_requests","wayland_protocols::xdg_shell::server::xdg_wm_base","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_wm_base_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_POSITIONER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_XDG_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",543,null],[4,"Anchor","","",null,null],[13,"None","","",544,null],[13,"Top","","",544,null],[13,"Bottom","","",544,null],[13,"Left","","",544,null],[13,"Right","","",544,null],[13,"TopLeft","","",544,null],[13,"BottomLeft","","",544,null],[13,"TopRight","","",544,null],[13,"BottomRight","","",544,null],[4,"Gravity","","",null,null],[13,"None","","",545,null],[13,"Top","","",545,null],[13,"Bottom","","",545,null],[13,"Left","","",545,null],[13,"Right","","",545,null],[13,"TopLeft","","",545,null],[13,"BottomLeft","","",545,null],[13,"TopRight","","",545,null],[13,"BottomRight","","",545,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",546,null],[13,"SetSize","","set the size of the to-be positioned rectangle",546,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",547,null],[12,"height","","",547,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",546,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",548,null],[12,"y","","",548,null],[12,"width","","",548,null],[12,"height","","",548,null],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",546,null],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",549,null],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",546,null],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",550,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",546,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",551,null],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",546,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",552,null],[12,"y","","",552,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",null,null],[7,"xdg_positioner_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_positioner_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_RECT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ANCHOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_GRAVITY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CONSTRAINT_ADJUSTMENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OFFSET_SINCE","","The minimal object version supporting this request",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",553,null],[13,"AlreadyConstructed","","",553,null],[13,"UnconfiguredBuffer","","",553,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",554,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",554,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",555,null],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",554,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",556,null],[12,"parent","","",556,null],[12,"positioner","","",556,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",554,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",557,null],[12,"y","","",557,null],[12,"width","","",557,null],[12,"height","","",557,null],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",554,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",558,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",559,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",560,null],[7,"xdg_surface_requests","wayland_protocols::xdg_shell::server::xdg_surface","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_WINDOW_GEOMETRY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ACK_CONFIGURE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",561,null],[13,"Top","","",561,null],[13,"Bottom","","",561,null],[13,"Left","","",561,null],[13,"TopLeft","","",561,null],[13,"BottomLeft","","",561,null],[13,"Right","","",561,null],[13,"TopRight","","",561,null],[13,"BottomRight","","",561,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",562,null],[13,"Fullscreen","","the surface is fullscreen",562,null],[13,"Resizing","","the surface is being resized",562,null],[13,"Activated","","the surface is now activated",562,null],[13,"TiledLeft","","the surface is tiled",562,null],[13,"TiledRight","","the surface is tiled",562,null],[13,"TiledTop","","the surface is tiled",562,null],[13,"TiledBottom","","the surface is tiled",562,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",563,null],[13,"SetParent","","set the parent of this surface",563,null],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",564,null],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",563,null],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",565,null],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",563,null],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",566,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",563,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",567,null],[12,"serial","","",567,null],[12,"x","","",567,null],[12,"y","","",567,null],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",563,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",568,null],[12,"serial","","",568,null],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",563,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",569,null],[12,"serial","","",569,null],[12,"edges","","",569,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",563,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",570,null],[12,"height","","",570,null],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",563,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",571,null],[12,"height","","",571,null],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",563,null],[13,"UnsetMaximized","","unmaximize the window",563,null],[13,"SetFullscreen","","set the window as fullscreen on an output",563,null],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",572,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",563,null],[13,"SetMinimized","","set the window as minimized",563,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",573,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",574,null],[12,"height","","",574,null],[12,"states","","",574,null],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",573,null],[7,"xdg_toplevel_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_toplevel_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_PARENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_APP_ID_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SHOW_WINDOW_MENU_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAX_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MIN_SIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_UNSET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MINIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CLOSE_SINCE","","The minimal object version supporting this event",null,null],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",575,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",576,null],[13,"Grab","","make the popup take an explicit grab",576,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",577,null],[12,"serial","","",577,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",578,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",579,null],[12,"y","","",579,null],[12,"width","","",579,null],[12,"height","","",579,null],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",578,null],[7,"xdg_popup_requests","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_events","","C-representation of the messages of this interface, for…",null,null],[7,"xdg_popup_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GRAB_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",580,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",581,null],[13,"GetViewport","","extend surface interface for crop and scale",581,null],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",582,null],[12,"surface","","",582,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[7,"wp_viewporter_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewporter_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_VIEWPORT_SINCE","","The minimal object version supporting this request",null,null],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",583,null],[13,"BadSize","","destination size is not integer",583,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",583,null],[13,"NoSurface","","the wl_surface was destroyed",583,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",584,null],[13,"SetSource","","set the source rectangle for cropping",584,null],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",585,null],[12,"y","","",585,null],[12,"width","","",585,null],[12,"height","","",585,null],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",584,null],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",586,null],[12,"height","","",586,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",null,null],[7,"wp_viewport_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wp_viewport_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESTINATION_SINCE","","The minimal object version supporting this request",null,null],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",587,[[]]],[11,"into","","",587,[[]]],[11,"try_from","","",587,[[],["result",4]]],[11,"try_into","","",587,[[],["result",4]]],[11,"borrow","","",587,[[]]],[11,"borrow_mut","","",587,[[]]],[11,"type_id","","",587,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",588,[[]]],[11,"into","","",588,[[]]],[11,"to_owned","","",588,[[]]],[11,"clone_into","","",588,[[]]],[11,"try_from","","",588,[[],["result",4]]],[11,"try_into","","",588,[[],["result",4]]],[11,"borrow","","",588,[[]]],[11,"borrow_mut","","",588,[[]]],[11,"type_id","","",588,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",589,[[]]],[11,"into","","",589,[[]]],[11,"try_from","","",589,[[],["result",4]]],[11,"try_into","","",589,[[],["result",4]]],[11,"borrow","","",589,[[]]],[11,"borrow_mut","","",589,[[]]],[11,"type_id","","",589,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",590,[[]]],[11,"into","","",590,[[]]],[11,"to_owned","","",590,[[]]],[11,"clone_into","","",590,[[]]],[11,"try_from","","",590,[[],["result",4]]],[11,"try_into","","",590,[[],["result",4]]],[11,"borrow","","",590,[[]]],[11,"borrow_mut","","",590,[[]]],[11,"type_id","","",590,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",591,[[]]],[11,"into","","",591,[[]]],[11,"try_from","","",591,[[],["result",4]]],[11,"try_into","","",591,[[],["result",4]]],[11,"borrow","","",591,[[]]],[11,"borrow_mut","","",591,[[]]],[11,"type_id","","",591,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",43,[[]]],[11,"into","","",43,[[]]],[11,"to_owned","","",43,[[]]],[11,"clone_into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",592,[[]]],[11,"into","","",592,[[]]],[11,"try_from","","",592,[[],["result",4]]],[11,"try_into","","",592,[[],["result",4]]],[11,"borrow","","",592,[[]]],[11,"borrow_mut","","",592,[[]]],[11,"type_id","","",592,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",593,[[]]],[11,"into","","",593,[[]]],[11,"to_owned","","",593,[[]]],[11,"clone_into","","",593,[[]]],[11,"try_from","","",593,[[],["result",4]]],[11,"try_into","","",593,[[],["result",4]]],[11,"borrow","","",593,[[]]],[11,"borrow_mut","","",593,[[]]],[11,"type_id","","",593,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",594,[[]]],[11,"into","","",594,[[]]],[11,"try_from","","",594,[[],["result",4]]],[11,"try_into","","",594,[[],["result",4]]],[11,"borrow","","",594,[[]]],[11,"borrow_mut","","",594,[[]]],[11,"type_id","","",594,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",595,[[]]],[11,"into","","",595,[[]]],[11,"to_owned","","",595,[[]]],[11,"clone_into","","",595,[[]]],[11,"try_from","","",595,[[],["result",4]]],[11,"try_into","","",595,[[],["result",4]]],[11,"borrow","","",595,[[]]],[11,"borrow_mut","","",595,[[]]],[11,"type_id","","",595,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",596,[[]]],[11,"into","","",596,[[]]],[11,"try_from","","",596,[[],["result",4]]],[11,"try_into","","",596,[[],["result",4]]],[11,"borrow","","",596,[[]]],[11,"borrow_mut","","",596,[[]]],[11,"type_id","","",596,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",597,[[]]],[11,"into","","",597,[[]]],[11,"to_owned","","",597,[[]]],[11,"clone_into","","",597,[[]]],[11,"try_from","","",597,[[],["result",4]]],[11,"try_into","","",597,[[],["result",4]]],[11,"borrow","","",597,[[]]],[11,"borrow_mut","","",597,[[]]],[11,"type_id","","",597,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",598,[[]]],[11,"into","","",598,[[]]],[11,"try_from","","",598,[[],["result",4]]],[11,"try_into","","",598,[[],["result",4]]],[11,"borrow","","",598,[[]]],[11,"borrow_mut","","",598,[[]]],[11,"type_id","","",598,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",51,[[]]],[11,"into","","",51,[[]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",599,[[]]],[11,"into","","",599,[[]]],[11,"to_owned","","",599,[[]]],[11,"clone_into","","",599,[[]]],[11,"try_from","","",599,[[],["result",4]]],[11,"try_into","","",599,[[],["result",4]]],[11,"borrow","","",599,[[]]],[11,"borrow_mut","","",599,[[]]],[11,"type_id","","",599,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",600,[[]]],[11,"into","","",600,[[]]],[11,"try_from","","",600,[[],["result",4]]],[11,"try_into","","",600,[[],["result",4]]],[11,"borrow","","",600,[[]]],[11,"borrow_mut","","",600,[[]]],[11,"type_id","","",600,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",72,[[]]],[11,"into","","",72,[[]]],[11,"to_owned","","",72,[[]]],[11,"clone_into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"from","","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",601,[[]]],[11,"into","","",601,[[]]],[11,"to_owned","","",601,[[]]],[11,"clone_into","","",601,[[]]],[11,"try_from","","",601,[[],["result",4]]],[11,"try_into","","",601,[[],["result",4]]],[11,"borrow","","",601,[[]]],[11,"borrow_mut","","",601,[[]]],[11,"type_id","","",601,[[],["typeid",3]]],[11,"from","","",73,[[]]],[11,"into","","",73,[[]]],[11,"to_owned","","",73,[[]]],[11,"clone_into","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"from","","",74,[[]]],[11,"into","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"from","","",602,[[]]],[11,"into","","",602,[[]]],[11,"try_from","","",602,[[],["result",4]]],[11,"try_into","","",602,[[],["result",4]]],[11,"borrow","","",602,[[]]],[11,"borrow_mut","","",602,[[]]],[11,"type_id","","",602,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",603,[[]]],[11,"into","","",603,[[]]],[11,"to_owned","","",603,[[]]],[11,"clone_into","","",603,[[]]],[11,"try_from","","",603,[[],["result",4]]],[11,"try_into","","",603,[[],["result",4]]],[11,"borrow","","",603,[[]]],[11,"borrow_mut","","",603,[[]]],[11,"type_id","","",603,[[],["typeid",3]]],[11,"from","","",76,[[]]],[11,"into","","",76,[[]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"from","","",604,[[]]],[11,"into","","",604,[[]]],[11,"try_from","","",604,[[],["result",4]]],[11,"try_into","","",604,[[],["result",4]]],[11,"borrow","","",604,[[]]],[11,"borrow_mut","","",604,[[]]],[11,"type_id","","",604,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",82,[[]]],[11,"into","","",82,[[]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"from","","",605,[[]]],[11,"into","","",605,[[]]],[11,"try_from","","",605,[[],["result",4]]],[11,"try_into","","",605,[[],["result",4]]],[11,"borrow","","",605,[[]]],[11,"borrow_mut","","",605,[[]]],[11,"type_id","","",605,[[],["typeid",3]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",606,[[]]],[11,"into","","",606,[[]]],[11,"to_owned","","",606,[[]]],[11,"clone_into","","",606,[[]]],[11,"try_from","","",606,[[],["result",4]]],[11,"try_into","","",606,[[],["result",4]]],[11,"borrow","","",606,[[]]],[11,"borrow_mut","","",606,[[]]],[11,"type_id","","",606,[[],["typeid",3]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"from","","",607,[[]]],[11,"into","","",607,[[]]],[11,"try_from","","",607,[[],["result",4]]],[11,"try_into","","",607,[[],["result",4]]],[11,"borrow","","",607,[[]]],[11,"borrow_mut","","",607,[[]]],[11,"type_id","","",607,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",95,[[]]],[11,"into","","",95,[[]]],[11,"to_owned","","",95,[[]]],[11,"clone_into","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",96,[[]]],[11,"into","","",96,[[]]],[11,"to_owned","","",96,[[]]],[11,"clone_into","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"from","","",94,[[]]],[11,"into","","",94,[[]]],[11,"try_from","","",94,[[],["result",4]]],[11,"try_into","","",94,[[],["result",4]]],[11,"borrow","","",94,[[]]],[11,"borrow_mut","","",94,[[]]],[11,"type_id","","",94,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",608,[[]]],[11,"into","","",608,[[]]],[11,"to_owned","","",608,[[]]],[11,"clone_into","","",608,[[]]],[11,"try_from","","",608,[[],["result",4]]],[11,"try_into","","",608,[[],["result",4]]],[11,"borrow","","",608,[[]]],[11,"borrow_mut","","",608,[[]]],[11,"type_id","","",608,[[],["typeid",3]]],[11,"from","","",97,[[]]],[11,"into","","",97,[[]]],[11,"try_from","","",97,[[],["result",4]]],[11,"try_into","","",97,[[],["result",4]]],[11,"borrow","","",97,[[]]],[11,"borrow_mut","","",97,[[]]],[11,"type_id","","",97,[[],["typeid",3]]],[11,"from","","",609,[[]]],[11,"into","","",609,[[]]],[11,"try_from","","",609,[[],["result",4]]],[11,"try_into","","",609,[[],["result",4]]],[11,"borrow","","",609,[[]]],[11,"borrow_mut","","",609,[[]]],[11,"type_id","","",609,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"from","","",105,[[]]],[11,"into","","",105,[[]]],[11,"try_from","","",105,[[],["result",4]]],[11,"try_into","","",105,[[],["result",4]]],[11,"borrow","","",105,[[]]],[11,"borrow_mut","","",105,[[]]],[11,"type_id","","",105,[[],["typeid",3]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",610,[[]]],[11,"into","","",610,[[]]],[11,"to_owned","","",610,[[]]],[11,"clone_into","","",610,[[]]],[11,"try_from","","",610,[[],["result",4]]],[11,"try_into","","",610,[[],["result",4]]],[11,"borrow","","",610,[[]]],[11,"borrow_mut","","",610,[[]]],[11,"type_id","","",610,[[],["typeid",3]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"from","","",611,[[]]],[11,"into","","",611,[[]]],[11,"try_from","","",611,[[],["result",4]]],[11,"try_into","","",611,[[],["result",4]]],[11,"borrow","","",611,[[]]],[11,"borrow_mut","","",611,[[]]],[11,"type_id","","",611,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",129,[[]]],[11,"into","","",129,[[]]],[11,"to_owned","","",129,[[]]],[11,"clone_into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"from","","",122,[[]]],[11,"into","","",122,[[]]],[11,"try_from","","",122,[[],["result",4]]],[11,"try_into","","",122,[[],["result",4]]],[11,"borrow","","",122,[[]]],[11,"borrow_mut","","",122,[[]]],[11,"type_id","","",122,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",130,[[]]],[11,"into","","",130,[[]]],[11,"to_owned","","",130,[[]]],[11,"clone_into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"from","","",124,[[]]],[11,"into","","",124,[[]]],[11,"try_from","","",124,[[],["result",4]]],[11,"try_into","","",124,[[],["result",4]]],[11,"borrow","","",124,[[]]],[11,"borrow_mut","","",124,[[]]],[11,"type_id","","",124,[[],["typeid",3]]],[11,"from","","",126,[[]]],[11,"into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",612,[[]]],[11,"into","","",612,[[]]],[11,"to_owned","","",612,[[]]],[11,"clone_into","","",612,[[]]],[11,"try_from","","",612,[[],["result",4]]],[11,"try_into","","",612,[[],["result",4]]],[11,"borrow","","",612,[[]]],[11,"borrow_mut","","",612,[[]]],[11,"type_id","","",612,[[],["typeid",3]]],[11,"from","","",131,[[]]],[11,"into","","",131,[[]]],[11,"try_from","","",131,[[],["result",4]]],[11,"try_into","","",131,[[],["result",4]]],[11,"borrow","","",131,[[]]],[11,"borrow_mut","","",131,[[]]],[11,"type_id","","",131,[[],["typeid",3]]],[11,"from","","",613,[[]]],[11,"into","","",613,[[]]],[11,"try_from","","",613,[[],["result",4]]],[11,"try_into","","",613,[[],["result",4]]],[11,"borrow","","",613,[[]]],[11,"borrow_mut","","",613,[[]]],[11,"type_id","","",613,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",136,[[]]],[11,"into","","",136,[[]]],[11,"to_owned","","",136,[[]]],[11,"clone_into","","",136,[[]]],[11,"try_from","","",136,[[],["result",4]]],[11,"try_into","","",136,[[],["result",4]]],[11,"borrow","","",136,[[]]],[11,"borrow_mut","","",136,[[]]],[11,"type_id","","",136,[[],["typeid",3]]],[11,"from","","",133,[[]]],[11,"into","","",133,[[]]],[11,"try_from","","",133,[[],["result",4]]],[11,"try_into","","",133,[[],["result",4]]],[11,"borrow","","",133,[[]]],[11,"borrow_mut","","",133,[[]]],[11,"type_id","","",133,[[],["typeid",3]]],[11,"from","","",134,[[]]],[11,"into","","",134,[[]]],[11,"try_from","","",134,[[],["result",4]]],[11,"try_into","","",134,[[],["result",4]]],[11,"borrow","","",134,[[]]],[11,"borrow_mut","","",134,[[]]],[11,"type_id","","",134,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",614,[[]]],[11,"into","","",614,[[]]],[11,"to_owned","","",614,[[]]],[11,"clone_into","","",614,[[]]],[11,"try_from","","",614,[[],["result",4]]],[11,"try_into","","",614,[[],["result",4]]],[11,"borrow","","",614,[[]]],[11,"borrow_mut","","",614,[[]]],[11,"type_id","","",614,[[],["typeid",3]]],[11,"from","","",137,[[]]],[11,"into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"from","","",615,[[]]],[11,"into","","",615,[[]]],[11,"try_from","","",615,[[],["result",4]]],[11,"try_into","","",615,[[],["result",4]]],[11,"borrow","","",615,[[]]],[11,"borrow_mut","","",615,[[]]],[11,"type_id","","",615,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"from","","",140,[[]]],[11,"into","","",140,[[]]],[11,"try_from","","",140,[[],["result",4]]],[11,"try_into","","",140,[[],["result",4]]],[11,"borrow","","",140,[[]]],[11,"borrow_mut","","",140,[[]]],[11,"type_id","","",140,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",171,[[]]],[11,"into","","",171,[[]]],[11,"to_owned","","",171,[[]]],[11,"clone_into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"from","","",143,[[]]],[11,"into","","",143,[[]]],[11,"to_owned","","",143,[[]]],[11,"clone_into","","",143,[[]]],[11,"try_from","","",143,[[],["result",4]]],[11,"try_into","","",143,[[],["result",4]]],[11,"borrow","","",143,[[]]],[11,"borrow_mut","","",143,[[]]],[11,"type_id","","",143,[[],["typeid",3]]],[11,"from","","",144,[[]]],[11,"into","","",144,[[]]],[11,"to_owned","","",144,[[]]],[11,"clone_into","","",144,[[]]],[11,"try_from","","",144,[[],["result",4]]],[11,"try_into","","",144,[[],["result",4]]],[11,"borrow","","",144,[[]]],[11,"borrow_mut","","",144,[[]]],[11,"type_id","","",144,[[],["typeid",3]]],[11,"from","","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",172,[[]]],[11,"into","","",172,[[]]],[11,"to_owned","","",172,[[]]],[11,"clone_into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"from","","",165,[[]]],[11,"into","","",165,[[]]],[11,"try_from","","",165,[[],["result",4]]],[11,"try_into","","",165,[[],["result",4]]],[11,"borrow","","",165,[[]]],[11,"borrow_mut","","",165,[[]]],[11,"type_id","","",165,[[],["typeid",3]]],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",616,[[]]],[11,"into","","",616,[[]]],[11,"to_owned","","",616,[[]]],[11,"clone_into","","",616,[[]]],[11,"try_from","","",616,[[],["result",4]]],[11,"try_into","","",616,[[],["result",4]]],[11,"borrow","","",616,[[]]],[11,"borrow_mut","","",616,[[]]],[11,"type_id","","",616,[[],["typeid",3]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"from","","",617,[[]]],[11,"into","","",617,[[]]],[11,"try_from","","",617,[[],["result",4]]],[11,"try_into","","",617,[[],["result",4]]],[11,"borrow","","",617,[[]]],[11,"borrow_mut","","",617,[[]]],[11,"type_id","","",617,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",238,[[]]],[11,"into","","",238,[[]]],[11,"to_owned","","",238,[[]]],[11,"clone_into","","",238,[[]]],[11,"try_from","","",238,[[],["result",4]]],[11,"try_into","","",238,[[],["result",4]]],[11,"borrow","","",238,[[]]],[11,"borrow_mut","","",238,[[]]],[11,"type_id","","",238,[[],["typeid",3]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",239,[[]]],[11,"into","","",239,[[]]],[11,"to_owned","","",239,[[]]],[11,"clone_into","","",239,[[]]],[11,"try_from","","",239,[[],["result",4]]],[11,"try_into","","",239,[[],["result",4]]],[11,"borrow","","",239,[[]]],[11,"borrow_mut","","",239,[[]]],[11,"type_id","","",239,[[],["typeid",3]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"to_owned","","",180,[[]]],[11,"clone_into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"from","","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"to_owned","","",182,[[]]],[11,"clone_into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"from","","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",240,[[]]],[11,"into","","",240,[[]]],[11,"to_owned","","",240,[[]]],[11,"clone_into","","",240,[[]]],[11,"try_from","","",240,[[],["result",4]]],[11,"try_into","","",240,[[],["result",4]]],[11,"borrow","","",240,[[]]],[11,"borrow_mut","","",240,[[]]],[11,"type_id","","",240,[[],["typeid",3]]],[11,"from","","",202,[[]]],[11,"into","","",202,[[]]],[11,"try_from","","",202,[[],["result",4]]],[11,"try_into","","",202,[[],["result",4]]],[11,"borrow","","",202,[[]]],[11,"borrow_mut","","",202,[[]]],[11,"type_id","","",202,[[],["typeid",3]]],[11,"from","","",203,[[]]],[11,"into","","",203,[[]]],[11,"try_from","","",203,[[],["result",4]]],[11,"try_into","","",203,[[],["result",4]]],[11,"borrow","","",203,[[]]],[11,"borrow_mut","","",203,[[]]],[11,"type_id","","",203,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",241,[[]]],[11,"into","","",241,[[]]],[11,"to_owned","","",241,[[]]],[11,"clone_into","","",241,[[]]],[11,"try_from","","",241,[[],["result",4]]],[11,"try_into","","",241,[[],["result",4]]],[11,"borrow","","",241,[[]]],[11,"borrow_mut","","",241,[[]]],[11,"type_id","","",241,[[],["typeid",3]]],[11,"from","","",207,[[]]],[11,"into","","",207,[[]]],[11,"to_owned","","",207,[[]]],[11,"clone_into","","",207,[[]]],[11,"try_from","","",207,[[],["result",4]]],[11,"try_into","","",207,[[],["result",4]]],[11,"borrow","","",207,[[]]],[11,"borrow_mut","","",207,[[]]],[11,"type_id","","",207,[[],["typeid",3]]],[11,"from","","",208,[[]]],[11,"into","","",208,[[]]],[11,"try_from","","",208,[[],["result",4]]],[11,"try_into","","",208,[[],["result",4]]],[11,"borrow","","",208,[[]]],[11,"borrow_mut","","",208,[[]]],[11,"type_id","","",208,[[],["typeid",3]]],[11,"from","","",210,[[]]],[11,"into","","",210,[[]]],[11,"try_from","","",210,[[],["result",4]]],[11,"try_into","","",210,[[],["result",4]]],[11,"borrow","","",210,[[]]],[11,"borrow_mut","","",210,[[]]],[11,"type_id","","",210,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",242,[[]]],[11,"into","","",242,[[]]],[11,"to_owned","","",242,[[]]],[11,"clone_into","","",242,[[]]],[11,"try_from","","",242,[[],["result",4]]],[11,"try_into","","",242,[[],["result",4]]],[11,"borrow","","",242,[[]]],[11,"borrow_mut","","",242,[[]]],[11,"type_id","","",242,[[],["typeid",3]]],[11,"from","","",214,[[]]],[11,"into","","",214,[[]]],[11,"to_owned","","",214,[[]]],[11,"clone_into","","",214,[[]]],[11,"try_from","","",214,[[],["result",4]]],[11,"try_into","","",214,[[],["result",4]]],[11,"borrow","","",214,[[]]],[11,"borrow_mut","","",214,[[]]],[11,"type_id","","",214,[[],["typeid",3]]],[11,"from","","",215,[[]]],[11,"into","","",215,[[]]],[11,"try_from","","",215,[[],["result",4]]],[11,"try_into","","",215,[[],["result",4]]],[11,"borrow","","",215,[[]]],[11,"borrow_mut","","",215,[[]]],[11,"type_id","","",215,[[],["typeid",3]]],[11,"from","","",217,[[]]],[11,"into","","",217,[[]]],[11,"try_from","","",217,[[],["result",4]]],[11,"try_into","","",217,[[],["result",4]]],[11,"borrow","","",217,[[]]],[11,"borrow_mut","","",217,[[]]],[11,"type_id","","",217,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",243,[[]]],[11,"into","","",243,[[]]],[11,"to_owned","","",243,[[]]],[11,"clone_into","","",243,[[]]],[11,"try_from","","",243,[[],["result",4]]],[11,"try_into","","",243,[[],["result",4]]],[11,"borrow","","",243,[[]]],[11,"borrow_mut","","",243,[[]]],[11,"type_id","","",243,[[],["typeid",3]]],[11,"from","","",221,[[]]],[11,"into","","",221,[[]]],[11,"try_from","","",221,[[],["result",4]]],[11,"try_into","","",221,[[],["result",4]]],[11,"borrow","","",221,[[]]],[11,"borrow_mut","","",221,[[]]],[11,"type_id","","",221,[[],["typeid",3]]],[11,"from","","",222,[[]]],[11,"into","","",222,[[]]],[11,"try_from","","",222,[[],["result",4]]],[11,"try_into","","",222,[[],["result",4]]],[11,"borrow","","",222,[[]]],[11,"borrow_mut","","",222,[[]]],[11,"type_id","","",222,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",244,[[]]],[11,"into","","",244,[[]]],[11,"to_owned","","",244,[[]]],[11,"clone_into","","",244,[[]]],[11,"try_from","","",244,[[],["result",4]]],[11,"try_into","","",244,[[],["result",4]]],[11,"borrow","","",244,[[]]],[11,"borrow_mut","","",244,[[]]],[11,"type_id","","",244,[[],["typeid",3]]],[11,"from","","",228,[[]]],[11,"into","","",228,[[]]],[11,"to_owned","","",228,[[]]],[11,"clone_into","","",228,[[]]],[11,"try_from","","",228,[[],["result",4]]],[11,"try_into","","",228,[[],["result",4]]],[11,"borrow","","",228,[[]]],[11,"borrow_mut","","",228,[[]]],[11,"type_id","","",228,[[],["typeid",3]]],[11,"from","","",229,[[]]],[11,"into","","",229,[[]]],[11,"try_from","","",229,[[],["result",4]]],[11,"try_into","","",229,[[],["result",4]]],[11,"borrow","","",229,[[]]],[11,"borrow_mut","","",229,[[]]],[11,"type_id","","",229,[[],["typeid",3]]],[11,"from","","",231,[[]]],[11,"into","","",231,[[]]],[11,"try_from","","",231,[[],["result",4]]],[11,"try_into","","",231,[[],["result",4]]],[11,"borrow","","",231,[[]]],[11,"borrow_mut","","",231,[[]]],[11,"type_id","","",231,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",273,[[]]],[11,"into","","",273,[[]]],[11,"to_owned","","",273,[[]]],[11,"clone_into","","",273,[[]]],[11,"try_from","","",273,[[],["result",4]]],[11,"try_into","","",273,[[],["result",4]]],[11,"borrow","","",273,[[]]],[11,"borrow_mut","","",273,[[]]],[11,"type_id","","",273,[[],["typeid",3]]],[11,"from","","",245,[[]]],[11,"into","","",245,[[]]],[11,"to_owned","","",245,[[]]],[11,"clone_into","","",245,[[]]],[11,"try_from","","",245,[[],["result",4]]],[11,"try_into","","",245,[[],["result",4]]],[11,"borrow","","",245,[[]]],[11,"borrow_mut","","",245,[[]]],[11,"type_id","","",245,[[],["typeid",3]]],[11,"from","","",246,[[]]],[11,"into","","",246,[[]]],[11,"to_owned","","",246,[[]]],[11,"clone_into","","",246,[[]]],[11,"try_from","","",246,[[],["result",4]]],[11,"try_into","","",246,[[],["result",4]]],[11,"borrow","","",246,[[]]],[11,"borrow_mut","","",246,[[]]],[11,"type_id","","",246,[[],["typeid",3]]],[11,"from","","",247,[[]]],[11,"into","","",247,[[]]],[11,"to_owned","","",247,[[]]],[11,"clone_into","","",247,[[]]],[11,"try_from","","",247,[[],["result",4]]],[11,"try_into","","",247,[[],["result",4]]],[11,"borrow","","",247,[[]]],[11,"borrow_mut","","",247,[[]]],[11,"type_id","","",247,[[],["typeid",3]]],[11,"from","","",248,[[]]],[11,"into","","",248,[[]]],[11,"to_owned","","",248,[[]]],[11,"clone_into","","",248,[[]]],[11,"try_from","","",248,[[],["result",4]]],[11,"try_into","","",248,[[],["result",4]]],[11,"borrow","","",248,[[]]],[11,"borrow_mut","","",248,[[]]],[11,"type_id","","",248,[[],["typeid",3]]],[11,"from","","",249,[[]]],[11,"into","","",249,[[]]],[11,"try_from","","",249,[[],["result",4]]],[11,"try_into","","",249,[[],["result",4]]],[11,"borrow","","",249,[[]]],[11,"borrow_mut","","",249,[[]]],[11,"type_id","","",249,[[],["typeid",3]]],[11,"from","","",258,[[]]],[11,"into","","",258,[[]]],[11,"try_from","","",258,[[],["result",4]]],[11,"try_into","","",258,[[],["result",4]]],[11,"borrow","","",258,[[]]],[11,"borrow_mut","","",258,[[]]],[11,"type_id","","",258,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",618,[[]]],[11,"into","","",618,[[]]],[11,"to_owned","","",618,[[]]],[11,"clone_into","","",618,[[]]],[11,"try_from","","",618,[[],["result",4]]],[11,"try_into","","",618,[[],["result",4]]],[11,"borrow","","",618,[[]]],[11,"borrow_mut","","",618,[[]]],[11,"type_id","","",618,[[],["typeid",3]]],[11,"from","","",271,[[]]],[11,"into","","",271,[[]]],[11,"try_from","","",271,[[],["result",4]]],[11,"try_into","","",271,[[],["result",4]]],[11,"borrow","","",271,[[]]],[11,"borrow_mut","","",271,[[]]],[11,"type_id","","",271,[[],["typeid",3]]],[11,"from","","",619,[[]]],[11,"into","","",619,[[]]],[11,"try_from","","",619,[[],["result",4]]],[11,"try_into","","",619,[[],["result",4]]],[11,"borrow","","",619,[[]]],[11,"borrow_mut","","",619,[[]]],[11,"type_id","","",619,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[]]],[11,"into","","",290,[[]]],[11,"to_owned","","",290,[[]]],[11,"clone_into","","",290,[[]]],[11,"try_from","","",290,[[],["result",4]]],[11,"try_into","","",290,[[],["result",4]]],[11,"borrow","","",290,[[]]],[11,"borrow_mut","","",290,[[]]],[11,"type_id","","",290,[[],["typeid",3]]],[11,"from","","",291,[[]]],[11,"into","","",291,[[]]],[11,"to_owned","","",291,[[]]],[11,"clone_into","","",291,[[]]],[11,"try_from","","",291,[[],["result",4]]],[11,"try_into","","",291,[[],["result",4]]],[11,"borrow","","",291,[[]]],[11,"borrow_mut","","",291,[[]]],[11,"type_id","","",291,[[],["typeid",3]]],[11,"from","","",274,[[]]],[11,"into","","",274,[[]]],[11,"to_owned","","",274,[[]]],[11,"clone_into","","",274,[[]]],[11,"try_from","","",274,[[],["result",4]]],[11,"try_into","","",274,[[],["result",4]]],[11,"borrow","","",274,[[]]],[11,"borrow_mut","","",274,[[]]],[11,"type_id","","",274,[[],["typeid",3]]],[11,"from","","",275,[[]]],[11,"into","","",275,[[]]],[11,"to_owned","","",275,[[]]],[11,"clone_into","","",275,[[]]],[11,"try_from","","",275,[[],["result",4]]],[11,"try_into","","",275,[[],["result",4]]],[11,"borrow","","",275,[[]]],[11,"borrow_mut","","",275,[[]]],[11,"type_id","","",275,[[],["typeid",3]]],[11,"from","","",276,[[]]],[11,"into","","",276,[[]]],[11,"try_from","","",276,[[],["result",4]]],[11,"try_into","","",276,[[],["result",4]]],[11,"borrow","","",276,[[]]],[11,"borrow_mut","","",276,[[]]],[11,"type_id","","",276,[[],["typeid",3]]],[11,"from","","",281,[[]]],[11,"into","","",281,[[]]],[11,"try_from","","",281,[[],["result",4]]],[11,"try_into","","",281,[[],["result",4]]],[11,"borrow","","",281,[[]]],[11,"borrow_mut","","",281,[[]]],[11,"type_id","","",281,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",620,[[]]],[11,"into","","",620,[[]]],[11,"to_owned","","",620,[[]]],[11,"clone_into","","",620,[[]]],[11,"try_from","","",620,[[],["result",4]]],[11,"try_into","","",620,[[],["result",4]]],[11,"borrow","","",620,[[]]],[11,"borrow_mut","","",620,[[]]],[11,"type_id","","",620,[[],["typeid",3]]],[11,"from","","",288,[[]]],[11,"into","","",288,[[]]],[11,"try_from","","",288,[[],["result",4]]],[11,"try_into","","",288,[[],["result",4]]],[11,"borrow","","",288,[[]]],[11,"borrow_mut","","",288,[[]]],[11,"type_id","","",288,[[],["typeid",3]]],[11,"from","","",621,[[]]],[11,"into","","",621,[[]]],[11,"try_from","","",621,[[],["result",4]]],[11,"try_into","","",621,[[],["result",4]]],[11,"borrow","","",621,[[]]],[11,"borrow_mut","","",621,[[]]],[11,"type_id","","",621,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",622,[[]]],[11,"into","","",622,[[]]],[11,"to_owned","","",622,[[]]],[11,"clone_into","","",622,[[]]],[11,"try_from","","",622,[[],["result",4]]],[11,"try_into","","",622,[[],["result",4]]],[11,"borrow","","",622,[[]]],[11,"borrow_mut","","",622,[[]]],[11,"type_id","","",622,[[],["typeid",3]]],[11,"from","","",292,[[]]],[11,"into","","",292,[[]]],[11,"try_from","","",292,[[],["result",4]]],[11,"try_into","","",292,[[],["result",4]]],[11,"borrow","","",292,[[]]],[11,"borrow_mut","","",292,[[]]],[11,"type_id","","",292,[[],["typeid",3]]],[11,"from","","",623,[[]]],[11,"into","","",623,[[]]],[11,"try_from","","",623,[[],["result",4]]],[11,"try_into","","",623,[[],["result",4]]],[11,"borrow","","",623,[[]]],[11,"borrow_mut","","",623,[[]]],[11,"type_id","","",623,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",300,[[]]],[11,"into","","",300,[[]]],[11,"to_owned","","",300,[[]]],[11,"clone_into","","",300,[[]]],[11,"try_from","","",300,[[],["result",4]]],[11,"try_into","","",300,[[],["result",4]]],[11,"borrow","","",300,[[]]],[11,"borrow_mut","","",300,[[]]],[11,"type_id","","",300,[[],["typeid",3]]],[11,"from","","",294,[[]]],[11,"into","","",294,[[]]],[11,"to_owned","","",294,[[]]],[11,"clone_into","","",294,[[]]],[11,"try_from","","",294,[[],["result",4]]],[11,"try_into","","",294,[[],["result",4]]],[11,"borrow","","",294,[[]]],[11,"borrow_mut","","",294,[[]]],[11,"type_id","","",294,[[],["typeid",3]]],[11,"from","","",295,[[]]],[11,"into","","",295,[[]]],[11,"to_owned","","",295,[[]]],[11,"clone_into","","",295,[[]]],[11,"try_from","","",295,[[],["result",4]]],[11,"try_into","","",295,[[],["result",4]]],[11,"borrow","","",295,[[]]],[11,"borrow_mut","","",295,[[]]],[11,"type_id","","",295,[[],["typeid",3]]],[11,"from","","",296,[[]]],[11,"into","","",296,[[]]],[11,"try_from","","",296,[[],["result",4]]],[11,"try_into","","",296,[[],["result",4]]],[11,"borrow","","",296,[[]]],[11,"borrow_mut","","",296,[[]]],[11,"type_id","","",296,[[],["typeid",3]]],[11,"from","","",298,[[]]],[11,"into","","",298,[[]]],[11,"try_from","","",298,[[],["result",4]]],[11,"try_into","","",298,[[],["result",4]]],[11,"borrow","","",298,[[]]],[11,"borrow_mut","","",298,[[]]],[11,"type_id","","",298,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",624,[[]]],[11,"into","","",624,[[]]],[11,"to_owned","","",624,[[]]],[11,"clone_into","","",624,[[]]],[11,"try_from","","",624,[[],["result",4]]],[11,"try_into","","",624,[[],["result",4]]],[11,"borrow","","",624,[[]]],[11,"borrow_mut","","",624,[[]]],[11,"type_id","","",624,[[],["typeid",3]]],[11,"from","","",301,[[]]],[11,"into","","",301,[[]]],[11,"try_from","","",301,[[],["result",4]]],[11,"try_into","","",301,[[],["result",4]]],[11,"borrow","","",301,[[]]],[11,"borrow_mut","","",301,[[]]],[11,"type_id","","",301,[[],["typeid",3]]],[11,"from","","",625,[[]]],[11,"into","","",625,[[]]],[11,"try_from","","",625,[[],["result",4]]],[11,"try_into","","",625,[[],["result",4]]],[11,"borrow","","",625,[[]]],[11,"borrow_mut","","",625,[[]]],[11,"type_id","","",625,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",626,[[]]],[11,"into","","",626,[[]]],[11,"to_owned","","",626,[[]]],[11,"clone_into","","",626,[[]]],[11,"try_from","","",626,[[],["result",4]]],[11,"try_into","","",626,[[],["result",4]]],[11,"borrow","","",626,[[]]],[11,"borrow_mut","","",626,[[]]],[11,"type_id","","",626,[[],["typeid",3]]],[11,"from","","",303,[[]]],[11,"into","","",303,[[]]],[11,"try_from","","",303,[[],["result",4]]],[11,"try_into","","",303,[[],["result",4]]],[11,"borrow","","",303,[[]]],[11,"borrow_mut","","",303,[[]]],[11,"type_id","","",303,[[],["typeid",3]]],[11,"from","","",627,[[]]],[11,"into","","",627,[[]]],[11,"try_from","","",627,[[],["result",4]]],[11,"try_into","","",627,[[],["result",4]]],[11,"borrow","","",627,[[]]],[11,"borrow_mut","","",627,[[]]],[11,"type_id","","",627,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",311,[[]]],[11,"into","","",311,[[]]],[11,"to_owned","","",311,[[]]],[11,"clone_into","","",311,[[]]],[11,"try_from","","",311,[[],["result",4]]],[11,"try_into","","",311,[[],["result",4]]],[11,"borrow","","",311,[[]]],[11,"borrow_mut","","",311,[[]]],[11,"type_id","","",311,[[],["typeid",3]]],[11,"from","","",305,[[]]],[11,"into","","",305,[[]]],[11,"try_from","","",305,[[],["result",4]]],[11,"try_into","","",305,[[],["result",4]]],[11,"borrow","","",305,[[]]],[11,"borrow_mut","","",305,[[]]],[11,"type_id","","",305,[[],["typeid",3]]],[11,"from","","",306,[[]]],[11,"into","","",306,[[]]],[11,"try_from","","",306,[[],["result",4]]],[11,"try_into","","",306,[[],["result",4]]],[11,"borrow","","",306,[[]]],[11,"borrow_mut","","",306,[[]]],[11,"type_id","","",306,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",312,[[]]],[11,"into","","",312,[[]]],[11,"to_owned","","",312,[[]]],[11,"clone_into","","",312,[[]]],[11,"try_from","","",312,[[],["result",4]]],[11,"try_into","","",312,[[],["result",4]]],[11,"borrow","","",312,[[]]],[11,"borrow_mut","","",312,[[]]],[11,"type_id","","",312,[[],["typeid",3]]],[11,"from","","",308,[[]]],[11,"into","","",308,[[]]],[11,"try_from","","",308,[[],["result",4]]],[11,"try_into","","",308,[[],["result",4]]],[11,"borrow","","",308,[[]]],[11,"borrow_mut","","",308,[[]]],[11,"type_id","","",308,[[],["typeid",3]]],[11,"from","","",310,[[]]],[11,"into","","",310,[[]]],[11,"try_from","","",310,[[],["result",4]]],[11,"try_into","","",310,[[],["result",4]]],[11,"borrow","","",310,[[]]],[11,"borrow_mut","","",310,[[]]],[11,"type_id","","",310,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",628,[[]]],[11,"into","","",628,[[]]],[11,"to_owned","","",628,[[]]],[11,"clone_into","","",628,[[]]],[11,"try_from","","",628,[[],["result",4]]],[11,"try_into","","",628,[[],["result",4]]],[11,"borrow","","",628,[[]]],[11,"borrow_mut","","",628,[[]]],[11,"type_id","","",628,[[],["typeid",3]]],[11,"from","","",313,[[]]],[11,"into","","",313,[[]]],[11,"try_from","","",313,[[],["result",4]]],[11,"try_into","","",313,[[],["result",4]]],[11,"borrow","","",313,[[]]],[11,"borrow_mut","","",313,[[]]],[11,"type_id","","",313,[[],["typeid",3]]],[11,"from","","",629,[[]]],[11,"into","","",629,[[]]],[11,"try_from","","",629,[[],["result",4]]],[11,"try_into","","",629,[[],["result",4]]],[11,"borrow","","",629,[[]]],[11,"borrow_mut","","",629,[[]]],[11,"type_id","","",629,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",630,[[]]],[11,"into","","",630,[[]]],[11,"to_owned","","",630,[[]]],[11,"clone_into","","",630,[[]]],[11,"try_from","","",630,[[],["result",4]]],[11,"try_into","","",630,[[],["result",4]]],[11,"borrow","","",630,[[]]],[11,"borrow_mut","","",630,[[]]],[11,"type_id","","",630,[[],["typeid",3]]],[11,"from","","",315,[[]]],[11,"into","","",315,[[]]],[11,"try_from","","",315,[[],["result",4]]],[11,"try_into","","",315,[[],["result",4]]],[11,"borrow","","",315,[[]]],[11,"borrow_mut","","",315,[[]]],[11,"type_id","","",315,[[],["typeid",3]]],[11,"from","","",631,[[]]],[11,"into","","",631,[[]]],[11,"try_from","","",631,[[],["result",4]]],[11,"try_into","","",631,[[],["result",4]]],[11,"borrow","","",631,[[]]],[11,"borrow_mut","","",631,[[]]],[11,"type_id","","",631,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",323,[[]]],[11,"into","","",323,[[]]],[11,"to_owned","","",323,[[]]],[11,"clone_into","","",323,[[]]],[11,"try_from","","",323,[[],["result",4]]],[11,"try_into","","",323,[[],["result",4]]],[11,"borrow","","",323,[[]]],[11,"borrow_mut","","",323,[[]]],[11,"type_id","","",323,[[],["typeid",3]]],[11,"from","","",317,[[]]],[11,"into","","",317,[[]]],[11,"try_from","","",317,[[],["result",4]]],[11,"try_into","","",317,[[],["result",4]]],[11,"borrow","","",317,[[]]],[11,"borrow_mut","","",317,[[]]],[11,"type_id","","",317,[[],["typeid",3]]],[11,"from","","",318,[[]]],[11,"into","","",318,[[]]],[11,"try_from","","",318,[[],["result",4]]],[11,"try_into","","",318,[[],["result",4]]],[11,"borrow","","",318,[[]]],[11,"borrow_mut","","",318,[[]]],[11,"type_id","","",318,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",324,[[]]],[11,"into","","",324,[[]]],[11,"to_owned","","",324,[[]]],[11,"clone_into","","",324,[[]]],[11,"try_from","","",324,[[],["result",4]]],[11,"try_into","","",324,[[],["result",4]]],[11,"borrow","","",324,[[]]],[11,"borrow_mut","","",324,[[]]],[11,"type_id","","",324,[[],["typeid",3]]],[11,"from","","",320,[[]]],[11,"into","","",320,[[]]],[11,"try_from","","",320,[[],["result",4]]],[11,"try_into","","",320,[[],["result",4]]],[11,"borrow","","",320,[[]]],[11,"borrow_mut","","",320,[[]]],[11,"type_id","","",320,[[],["typeid",3]]],[11,"from","","",322,[[]]],[11,"into","","",322,[[]]],[11,"try_from","","",322,[[],["result",4]]],[11,"try_into","","",322,[[],["result",4]]],[11,"borrow","","",322,[[]]],[11,"borrow_mut","","",322,[[]]],[11,"type_id","","",322,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",632,[[]]],[11,"into","","",632,[[]]],[11,"to_owned","","",632,[[]]],[11,"clone_into","","",632,[[]]],[11,"try_from","","",632,[[],["result",4]]],[11,"try_into","","",632,[[],["result",4]]],[11,"borrow","","",632,[[]]],[11,"borrow_mut","","",632,[[]]],[11,"type_id","","",632,[[],["typeid",3]]],[11,"from","","",325,[[]]],[11,"into","","",325,[[]]],[11,"try_from","","",325,[[],["result",4]]],[11,"try_into","","",325,[[],["result",4]]],[11,"borrow","","",325,[[]]],[11,"borrow_mut","","",325,[[]]],[11,"type_id","","",325,[[],["typeid",3]]],[11,"from","","",633,[[]]],[11,"into","","",633,[[]]],[11,"try_from","","",633,[[],["result",4]]],[11,"try_into","","",633,[[],["result",4]]],[11,"borrow","","",633,[[]]],[11,"borrow_mut","","",633,[[]]],[11,"type_id","","",633,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",333,[[]]],[11,"into","","",333,[[]]],[11,"to_owned","","",333,[[]]],[11,"clone_into","","",333,[[]]],[11,"try_from","","",333,[[],["result",4]]],[11,"try_into","","",333,[[],["result",4]]],[11,"borrow","","",333,[[]]],[11,"borrow_mut","","",333,[[]]],[11,"type_id","","",333,[[],["typeid",3]]],[11,"from","","",327,[[]]],[11,"into","","",327,[[]]],[11,"try_from","","",327,[[],["result",4]]],[11,"try_into","","",327,[[],["result",4]]],[11,"borrow","","",327,[[]]],[11,"borrow_mut","","",327,[[]]],[11,"type_id","","",327,[[],["typeid",3]]],[11,"from","","",328,[[]]],[11,"into","","",328,[[]]],[11,"try_from","","",328,[[],["result",4]]],[11,"try_into","","",328,[[],["result",4]]],[11,"borrow","","",328,[[]]],[11,"borrow_mut","","",328,[[]]],[11,"type_id","","",328,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",359,[[]]],[11,"into","","",359,[[]]],[11,"to_owned","","",359,[[]]],[11,"clone_into","","",359,[[]]],[11,"try_from","","",359,[[],["result",4]]],[11,"try_into","","",359,[[],["result",4]]],[11,"borrow","","",359,[[]]],[11,"borrow_mut","","",359,[[]]],[11,"type_id","","",359,[[],["typeid",3]]],[11,"from","","",334,[[]]],[11,"into","","",334,[[]]],[11,"to_owned","","",334,[[]]],[11,"clone_into","","",334,[[]]],[11,"try_from","","",334,[[],["result",4]]],[11,"try_into","","",334,[[],["result",4]]],[11,"borrow","","",334,[[]]],[11,"borrow_mut","","",334,[[]]],[11,"type_id","","",334,[[],["typeid",3]]],[11,"from","","",335,[[]]],[11,"into","","",335,[[]]],[11,"to_owned","","",335,[[]]],[11,"clone_into","","",335,[[]]],[11,"try_from","","",335,[[],["result",4]]],[11,"try_into","","",335,[[],["result",4]]],[11,"borrow","","",335,[[]]],[11,"borrow_mut","","",335,[[]]],[11,"type_id","","",335,[[],["typeid",3]]],[11,"from","","",336,[[]]],[11,"into","","",336,[[]]],[11,"try_from","","",336,[[],["result",4]]],[11,"try_into","","",336,[[],["result",4]]],[11,"borrow","","",336,[[]]],[11,"borrow_mut","","",336,[[]]],[11,"type_id","","",336,[[],["typeid",3]]],[11,"from","","",341,[[]]],[11,"into","","",341,[[]]],[11,"try_from","","",341,[[],["result",4]]],[11,"try_into","","",341,[[],["result",4]]],[11,"borrow","","",341,[[]]],[11,"borrow_mut","","",341,[[]]],[11,"type_id","","",341,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",360,[[]]],[11,"into","","",360,[[]]],[11,"to_owned","","",360,[[]]],[11,"clone_into","","",360,[[]]],[11,"try_from","","",360,[[],["result",4]]],[11,"try_into","","",360,[[],["result",4]]],[11,"borrow","","",360,[[]]],[11,"borrow_mut","","",360,[[]]],[11,"type_id","","",360,[[],["typeid",3]]],[11,"from","","",343,[[]]],[11,"into","","",343,[[]]],[11,"to_owned","","",343,[[]]],[11,"clone_into","","",343,[[]]],[11,"try_from","","",343,[[],["result",4]]],[11,"try_into","","",343,[[],["result",4]]],[11,"borrow","","",343,[[]]],[11,"borrow_mut","","",343,[[]]],[11,"type_id","","",343,[[],["typeid",3]]],[11,"from","","",344,[[]]],[11,"into","","",344,[[]]],[11,"to_owned","","",344,[[]]],[11,"clone_into","","",344,[[]]],[11,"try_from","","",344,[[],["result",4]]],[11,"try_into","","",344,[[],["result",4]]],[11,"borrow","","",344,[[]]],[11,"borrow_mut","","",344,[[]]],[11,"type_id","","",344,[[],["typeid",3]]],[11,"from","","",345,[[]]],[11,"into","","",345,[[]]],[11,"try_from","","",345,[[],["result",4]]],[11,"try_into","","",345,[[],["result",4]]],[11,"borrow","","",345,[[]]],[11,"borrow_mut","","",345,[[]]],[11,"type_id","","",345,[[],["typeid",3]]],[11,"from","","",355,[[]]],[11,"into","","",355,[[]]],[11,"try_from","","",355,[[],["result",4]]],[11,"try_into","","",355,[[],["result",4]]],[11,"borrow","","",355,[[]]],[11,"borrow_mut","","",355,[[]]],[11,"type_id","","",355,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",361,[[]]],[11,"into","","",361,[[]]],[11,"to_owned","","",361,[[]]],[11,"clone_into","","",361,[[]]],[11,"try_from","","",361,[[],["result",4]]],[11,"try_into","","",361,[[],["result",4]]],[11,"borrow","","",361,[[]]],[11,"borrow_mut","","",361,[[]]],[11,"type_id","","",361,[[],["typeid",3]]],[11,"from","","",357,[[]]],[11,"into","","",357,[[]]],[11,"try_from","","",357,[[],["result",4]]],[11,"try_into","","",357,[[],["result",4]]],[11,"borrow","","",357,[[]]],[11,"borrow_mut","","",357,[[]]],[11,"type_id","","",357,[[],["typeid",3]]],[11,"from","","",358,[[]]],[11,"into","","",358,[[]]],[11,"try_from","","",358,[[],["result",4]]],[11,"try_into","","",358,[[],["result",4]]],[11,"borrow","","",358,[[]]],[11,"borrow_mut","","",358,[[]]],[11,"type_id","","",358,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",404,[[]]],[11,"into","","",404,[[]]],[11,"to_owned","","",404,[[]]],[11,"clone_into","","",404,[[]]],[11,"try_from","","",404,[[],["result",4]]],[11,"try_into","","",404,[[],["result",4]]],[11,"borrow","","",404,[[]]],[11,"borrow_mut","","",404,[[]]],[11,"type_id","","",404,[[],["typeid",3]]],[11,"from","","",362,[[]]],[11,"into","","",362,[[]]],[11,"to_owned","","",362,[[]]],[11,"clone_into","","",362,[[]]],[11,"try_from","","",362,[[],["result",4]]],[11,"try_into","","",362,[[],["result",4]]],[11,"borrow","","",362,[[]]],[11,"borrow_mut","","",362,[[]]],[11,"type_id","","",362,[[],["typeid",3]]],[11,"from","","",363,[[]]],[11,"into","","",363,[[]]],[11,"try_from","","",363,[[],["result",4]]],[11,"try_into","","",363,[[],["result",4]]],[11,"borrow","","",363,[[]]],[11,"borrow_mut","","",363,[[]]],[11,"type_id","","",363,[[],["typeid",3]]],[11,"from","","",367,[[]]],[11,"into","","",367,[[]]],[11,"try_from","","",367,[[],["result",4]]],[11,"try_into","","",367,[[],["result",4]]],[11,"borrow","","",367,[[]]],[11,"borrow_mut","","",367,[[]]],[11,"type_id","","",367,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[]]],[11,"into","","",405,[[]]],[11,"to_owned","","",405,[[]]],[11,"clone_into","","",405,[[]]],[11,"try_from","","",405,[[],["result",4]]],[11,"try_into","","",405,[[],["result",4]]],[11,"borrow","","",405,[[]]],[11,"borrow_mut","","",405,[[]]],[11,"type_id","","",405,[[],["typeid",3]]],[11,"from","","",406,[[]]],[11,"into","","",406,[[]]],[11,"to_owned","","",406,[[]]],[11,"clone_into","","",406,[[]]],[11,"try_from","","",406,[[],["result",4]]],[11,"try_into","","",406,[[],["result",4]]],[11,"borrow","","",406,[[]]],[11,"borrow_mut","","",406,[[]]],[11,"type_id","","",406,[[],["typeid",3]]],[11,"from","","",407,[[]]],[11,"into","","",407,[[]]],[11,"to_owned","","",407,[[]]],[11,"clone_into","","",407,[[]]],[11,"try_from","","",407,[[],["result",4]]],[11,"try_into","","",407,[[],["result",4]]],[11,"borrow","","",407,[[]]],[11,"borrow_mut","","",407,[[]]],[11,"type_id","","",407,[[],["typeid",3]]],[11,"from","","",634,[[]]],[11,"into","","",634,[[]]],[11,"to_owned","","",634,[[]]],[11,"clone_into","","",634,[[]]],[11,"try_from","","",634,[[],["result",4]]],[11,"try_into","","",634,[[],["result",4]]],[11,"borrow","","",634,[[]]],[11,"borrow_mut","","",634,[[]]],[11,"type_id","","",634,[[],["typeid",3]]],[11,"from","","",369,[[]]],[11,"into","","",369,[[]]],[11,"to_owned","","",369,[[]]],[11,"clone_into","","",369,[[]]],[11,"try_from","","",369,[[],["result",4]]],[11,"try_into","","",369,[[],["result",4]]],[11,"borrow","","",369,[[]]],[11,"borrow_mut","","",369,[[]]],[11,"type_id","","",369,[[],["typeid",3]]],[11,"from","","",370,[[]]],[11,"into","","",370,[[]]],[11,"try_from","","",370,[[],["result",4]]],[11,"try_into","","",370,[[],["result",4]]],[11,"borrow","","",370,[[]]],[11,"borrow_mut","","",370,[[]]],[11,"type_id","","",370,[[],["typeid",3]]],[11,"from","","",635,[[]]],[11,"into","","",635,[[]]],[11,"try_from","","",635,[[],["result",4]]],[11,"try_into","","",635,[[],["result",4]]],[11,"borrow","","",635,[[]]],[11,"borrow_mut","","",635,[[]]],[11,"type_id","","",635,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",408,[[]]],[11,"into","","",408,[[]]],[11,"to_owned","","",408,[[]]],[11,"clone_into","","",408,[[]]],[11,"try_from","","",408,[[],["result",4]]],[11,"try_into","","",408,[[],["result",4]]],[11,"borrow","","",408,[[]]],[11,"borrow_mut","","",408,[[]]],[11,"type_id","","",408,[[],["typeid",3]]],[11,"from","","",377,[[]]],[11,"into","","",377,[[]]],[11,"to_owned","","",377,[[]]],[11,"clone_into","","",377,[[]]],[11,"try_from","","",377,[[],["result",4]]],[11,"try_into","","",377,[[],["result",4]]],[11,"borrow","","",377,[[]]],[11,"borrow_mut","","",377,[[]]],[11,"type_id","","",377,[[],["typeid",3]]],[11,"from","","",378,[[]]],[11,"into","","",378,[[]]],[11,"try_from","","",378,[[],["result",4]]],[11,"try_into","","",378,[[],["result",4]]],[11,"borrow","","",378,[[]]],[11,"borrow_mut","","",378,[[]]],[11,"type_id","","",378,[[],["typeid",3]]],[11,"from","","",383,[[]]],[11,"into","","",383,[[]]],[11,"try_from","","",383,[[],["result",4]]],[11,"try_into","","",383,[[],["result",4]]],[11,"borrow","","",383,[[]]],[11,"borrow_mut","","",383,[[]]],[11,"type_id","","",383,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",409,[[]]],[11,"into","","",409,[[]]],[11,"to_owned","","",409,[[]]],[11,"clone_into","","",409,[[]]],[11,"try_from","","",409,[[],["result",4]]],[11,"try_into","","",409,[[],["result",4]]],[11,"borrow","","",409,[[]]],[11,"borrow_mut","","",409,[[]]],[11,"type_id","","",409,[[],["typeid",3]]],[11,"from","","",385,[[]]],[11,"into","","",385,[[]]],[11,"to_owned","","",385,[[]]],[11,"clone_into","","",385,[[]]],[11,"try_from","","",385,[[],["result",4]]],[11,"try_into","","",385,[[],["result",4]]],[11,"borrow","","",385,[[]]],[11,"borrow_mut","","",385,[[]]],[11,"type_id","","",385,[[],["typeid",3]]],[11,"from","","",386,[[]]],[11,"into","","",386,[[]]],[11,"to_owned","","",386,[[]]],[11,"clone_into","","",386,[[]]],[11,"try_from","","",386,[[],["result",4]]],[11,"try_into","","",386,[[],["result",4]]],[11,"borrow","","",386,[[]]],[11,"borrow_mut","","",386,[[]]],[11,"type_id","","",386,[[],["typeid",3]]],[11,"from","","",387,[[]]],[11,"into","","",387,[[]]],[11,"try_from","","",387,[[],["result",4]]],[11,"try_into","","",387,[[],["result",4]]],[11,"borrow","","",387,[[]]],[11,"borrow_mut","","",387,[[]]],[11,"type_id","","",387,[[],["typeid",3]]],[11,"from","","",397,[[]]],[11,"into","","",397,[[]]],[11,"try_from","","",397,[[],["result",4]]],[11,"try_into","","",397,[[],["result",4]]],[11,"borrow","","",397,[[]]],[11,"borrow_mut","","",397,[[]]],[11,"type_id","","",397,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",410,[[]]],[11,"into","","",410,[[]]],[11,"to_owned","","",410,[[]]],[11,"clone_into","","",410,[[]]],[11,"try_from","","",410,[[],["result",4]]],[11,"try_into","","",410,[[],["result",4]]],[11,"borrow","","",410,[[]]],[11,"borrow_mut","","",410,[[]]],[11,"type_id","","",410,[[],["typeid",3]]],[11,"from","","",399,[[]]],[11,"into","","",399,[[]]],[11,"to_owned","","",399,[[]]],[11,"clone_into","","",399,[[]]],[11,"try_from","","",399,[[],["result",4]]],[11,"try_into","","",399,[[],["result",4]]],[11,"borrow","","",399,[[]]],[11,"borrow_mut","","",399,[[]]],[11,"type_id","","",399,[[],["typeid",3]]],[11,"from","","",400,[[]]],[11,"into","","",400,[[]]],[11,"try_from","","",400,[[],["result",4]]],[11,"try_into","","",400,[[],["result",4]]],[11,"borrow","","",400,[[]]],[11,"borrow_mut","","",400,[[]]],[11,"type_id","","",400,[[],["typeid",3]]],[11,"from","","",402,[[]]],[11,"into","","",402,[[]]],[11,"try_from","","",402,[[],["result",4]]],[11,"try_into","","",402,[[],["result",4]]],[11,"borrow","","",402,[[]]],[11,"borrow_mut","","",402,[[]]],[11,"type_id","","",402,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",636,[[]]],[11,"into","","",636,[[]]],[11,"to_owned","","",636,[[]]],[11,"clone_into","","",636,[[]]],[11,"try_from","","",636,[[],["result",4]]],[11,"try_into","","",636,[[],["result",4]]],[11,"borrow","","",636,[[]]],[11,"borrow_mut","","",636,[[]]],[11,"type_id","","",636,[[],["typeid",3]]],[11,"from","","",411,[[]]],[11,"into","","",411,[[]]],[11,"try_from","","",411,[[],["result",4]]],[11,"try_into","","",411,[[],["result",4]]],[11,"borrow","","",411,[[]]],[11,"borrow_mut","","",411,[[]]],[11,"type_id","","",411,[[],["typeid",3]]],[11,"from","","",637,[[]]],[11,"into","","",637,[[]]],[11,"try_from","","",637,[[],["result",4]]],[11,"try_into","","",637,[[],["result",4]]],[11,"borrow","","",637,[[]]],[11,"borrow_mut","","",637,[[]]],[11,"type_id","","",637,[[],["typeid",3]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",638,[[]]],[11,"into","","",638,[[]]],[11,"to_owned","","",638,[[]]],[11,"clone_into","","",638,[[]]],[11,"try_from","","",638,[[],["result",4]]],[11,"try_into","","",638,[[],["result",4]]],[11,"borrow","","",638,[[]]],[11,"borrow_mut","","",638,[[]]],[11,"type_id","","",638,[[],["typeid",3]]],[11,"from","","",413,[[]]],[11,"into","","",413,[[]]],[11,"try_from","","",413,[[],["result",4]]],[11,"try_into","","",413,[[],["result",4]]],[11,"borrow","","",413,[[]]],[11,"borrow_mut","","",413,[[]]],[11,"type_id","","",413,[[],["typeid",3]]],[11,"from","","",639,[[]]],[11,"into","","",639,[[]]],[11,"try_from","","",639,[[],["result",4]]],[11,"try_into","","",639,[[],["result",4]]],[11,"borrow","","",639,[[]]],[11,"borrow_mut","","",639,[[]]],[11,"type_id","","",639,[[],["typeid",3]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",640,[[]]],[11,"into","","",640,[[]]],[11,"to_owned","","",640,[[]]],[11,"clone_into","","",640,[[]]],[11,"try_from","","",640,[[],["result",4]]],[11,"try_into","","",640,[[],["result",4]]],[11,"borrow","","",640,[[]]],[11,"borrow_mut","","",640,[[]]],[11,"type_id","","",640,[[],["typeid",3]]],[11,"from","","",414,[[]]],[11,"into","","",414,[[]]],[11,"try_from","","",414,[[],["result",4]]],[11,"try_into","","",414,[[],["result",4]]],[11,"borrow","","",414,[[]]],[11,"borrow_mut","","",414,[[]]],[11,"type_id","","",414,[[],["typeid",3]]],[11,"from","","",641,[[]]],[11,"into","","",641,[[]]],[11,"try_from","","",641,[[],["result",4]]],[11,"try_into","","",641,[[],["result",4]]],[11,"borrow","","",641,[[]]],[11,"borrow_mut","","",641,[[]]],[11,"type_id","","",641,[[],["typeid",3]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",430,[[]]],[11,"into","","",430,[[]]],[11,"to_owned","","",430,[[]]],[11,"clone_into","","",430,[[]]],[11,"try_from","","",430,[[],["result",4]]],[11,"try_into","","",430,[[],["result",4]]],[11,"borrow","","",430,[[]]],[11,"borrow_mut","","",430,[[]]],[11,"type_id","","",430,[[],["typeid",3]]],[11,"from","","",417,[[]]],[11,"into","","",417,[[]]],[11,"try_from","","",417,[[],["result",4]]],[11,"try_into","","",417,[[],["result",4]]],[11,"borrow","","",417,[[]]],[11,"borrow_mut","","",417,[[]]],[11,"type_id","","",417,[[],["typeid",3]]],[11,"from","","",419,[[]]],[11,"into","","",419,[[]]],[11,"try_from","","",419,[[],["result",4]]],[11,"try_into","","",419,[[],["result",4]]],[11,"borrow","","",419,[[]]],[11,"borrow_mut","","",419,[[]]],[11,"type_id","","",419,[[],["typeid",3]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",431,[[]]],[11,"into","","",431,[[]]],[11,"to_owned","","",431,[[]]],[11,"clone_into","","",431,[[]]],[11,"try_from","","",431,[[],["result",4]]],[11,"try_into","","",431,[[],["result",4]]],[11,"borrow","","",431,[[]]],[11,"borrow_mut","","",431,[[]]],[11,"type_id","","",431,[[],["typeid",3]]],[11,"from","","",422,[[]]],[11,"into","","",422,[[]]],[11,"try_from","","",422,[[],["result",4]]],[11,"try_into","","",422,[[],["result",4]]],[11,"borrow","","",422,[[]]],[11,"borrow_mut","","",422,[[]]],[11,"type_id","","",422,[[],["typeid",3]]],[11,"from","","",424,[[]]],[11,"into","","",424,[[]]],[11,"try_from","","",424,[[],["result",4]]],[11,"try_into","","",424,[[],["result",4]]],[11,"borrow","","",424,[[]]],[11,"borrow_mut","","",424,[[]]],[11,"type_id","","",424,[[],["typeid",3]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",432,[[]]],[11,"into","","",432,[[]]],[11,"to_owned","","",432,[[]]],[11,"clone_into","","",432,[[]]],[11,"try_from","","",432,[[],["result",4]]],[11,"try_into","","",432,[[],["result",4]]],[11,"borrow","","",432,[[]]],[11,"borrow_mut","","",432,[[]]],[11,"type_id","","",432,[[],["typeid",3]]],[11,"from","","",426,[[]]],[11,"into","","",426,[[]]],[11,"try_from","","",426,[[],["result",4]]],[11,"try_into","","",426,[[],["result",4]]],[11,"borrow","","",426,[[]]],[11,"borrow_mut","","",426,[[]]],[11,"type_id","","",426,[[],["typeid",3]]],[11,"from","","",428,[[]]],[11,"into","","",428,[[]]],[11,"try_from","","",428,[[],["result",4]]],[11,"try_into","","",428,[[],["result",4]]],[11,"borrow","","",428,[[]]],[11,"borrow_mut","","",428,[[]]],[11,"type_id","","",428,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",642,[[]]],[11,"into","","",642,[[]]],[11,"to_owned","","",642,[[]]],[11,"clone_into","","",642,[[]]],[11,"try_from","","",642,[[],["result",4]]],[11,"try_into","","",642,[[],["result",4]]],[11,"borrow","","",642,[[]]],[11,"borrow_mut","","",642,[[]]],[11,"type_id","","",642,[[],["typeid",3]]],[11,"from","","",433,[[]]],[11,"into","","",433,[[]]],[11,"try_from","","",433,[[],["result",4]]],[11,"try_into","","",433,[[],["result",4]]],[11,"borrow","","",433,[[]]],[11,"borrow_mut","","",433,[[]]],[11,"type_id","","",433,[[],["typeid",3]]],[11,"from","","",643,[[]]],[11,"into","","",643,[[]]],[11,"try_from","","",643,[[],["result",4]]],[11,"try_into","","",643,[[],["result",4]]],[11,"borrow","","",643,[[]]],[11,"borrow_mut","","",643,[[]]],[11,"type_id","","",643,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",453,[[]]],[11,"into","","",453,[[]]],[11,"to_owned","","",453,[[]]],[11,"clone_into","","",453,[[]]],[11,"try_from","","",453,[[],["result",4]]],[11,"try_into","","",453,[[],["result",4]]],[11,"borrow","","",453,[[]]],[11,"borrow_mut","","",453,[[]]],[11,"type_id","","",453,[[],["typeid",3]]],[11,"from","","",436,[[]]],[11,"into","","",436,[[]]],[11,"to_owned","","",436,[[]]],[11,"clone_into","","",436,[[]]],[11,"try_from","","",436,[[],["result",4]]],[11,"try_into","","",436,[[],["result",4]]],[11,"borrow","","",436,[[]]],[11,"borrow_mut","","",436,[[]]],[11,"type_id","","",436,[[],["typeid",3]]],[11,"from","","",437,[[]]],[11,"into","","",437,[[]]],[11,"try_from","","",437,[[],["result",4]]],[11,"try_into","","",437,[[],["result",4]]],[11,"borrow","","",437,[[]]],[11,"borrow_mut","","",437,[[]]],[11,"type_id","","",437,[[],["typeid",3]]],[11,"from","","",440,[[]]],[11,"into","","",440,[[]]],[11,"try_from","","",440,[[],["result",4]]],[11,"try_into","","",440,[[],["result",4]]],[11,"borrow","","",440,[[]]],[11,"borrow_mut","","",440,[[]]],[11,"type_id","","",440,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",454,[[]]],[11,"into","","",454,[[]]],[11,"to_owned","","",454,[[]]],[11,"clone_into","","",454,[[]]],[11,"try_from","","",454,[[],["result",4]]],[11,"try_into","","",454,[[],["result",4]]],[11,"borrow","","",454,[[]]],[11,"borrow_mut","","",454,[[]]],[11,"type_id","","",454,[[],["typeid",3]]],[11,"from","","",444,[[]]],[11,"into","","",444,[[]]],[11,"to_owned","","",444,[[]]],[11,"clone_into","","",444,[[]]],[11,"try_from","","",444,[[],["result",4]]],[11,"try_into","","",444,[[],["result",4]]],[11,"borrow","","",444,[[]]],[11,"borrow_mut","","",444,[[]]],[11,"type_id","","",444,[[],["typeid",3]]],[11,"from","","",445,[[]]],[11,"into","","",445,[[]]],[11,"try_from","","",445,[[],["result",4]]],[11,"try_into","","",445,[[],["result",4]]],[11,"borrow","","",445,[[]]],[11,"borrow_mut","","",445,[[]]],[11,"type_id","","",445,[[],["typeid",3]]],[11,"from","","",447,[[]]],[11,"into","","",447,[[]]],[11,"try_from","","",447,[[],["result",4]]],[11,"try_into","","",447,[[],["result",4]]],[11,"borrow","","",447,[[]]],[11,"borrow_mut","","",447,[[]]],[11,"type_id","","",447,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",455,[[]]],[11,"into","","",455,[[]]],[11,"to_owned","","",455,[[]]],[11,"clone_into","","",455,[[]]],[11,"try_from","","",455,[[],["result",4]]],[11,"try_into","","",455,[[],["result",4]]],[11,"borrow","","",455,[[]]],[11,"borrow_mut","","",455,[[]]],[11,"type_id","","",455,[[],["typeid",3]]],[11,"from","","",449,[[]]],[11,"into","","",449,[[]]],[11,"try_from","","",449,[[],["result",4]]],[11,"try_into","","",449,[[],["result",4]]],[11,"borrow","","",449,[[]]],[11,"borrow_mut","","",449,[[]]],[11,"type_id","","",449,[[],["typeid",3]]],[11,"from","","",451,[[]]],[11,"into","","",451,[[]]],[11,"try_from","","",451,[[],["result",4]]],[11,"try_into","","",451,[[],["result",4]]],[11,"borrow","","",451,[[]]],[11,"borrow_mut","","",451,[[]]],[11,"type_id","","",451,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",644,[[]]],[11,"into","","",644,[[]]],[11,"to_owned","","",644,[[]]],[11,"clone_into","","",644,[[]]],[11,"try_from","","",644,[[],["result",4]]],[11,"try_into","","",644,[[],["result",4]]],[11,"borrow","","",644,[[]]],[11,"borrow_mut","","",644,[[]]],[11,"type_id","","",644,[[],["typeid",3]]],[11,"from","","",456,[[]]],[11,"into","","",456,[[]]],[11,"try_from","","",456,[[],["result",4]]],[11,"try_into","","",456,[[],["result",4]]],[11,"borrow","","",456,[[]]],[11,"borrow_mut","","",456,[[]]],[11,"type_id","","",456,[[],["typeid",3]]],[11,"from","","",645,[[]]],[11,"into","","",645,[[]]],[11,"try_from","","",645,[[],["result",4]]],[11,"try_into","","",645,[[],["result",4]]],[11,"borrow","","",645,[[]]],[11,"borrow_mut","","",645,[[]]],[11,"type_id","","",645,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",466,[[]]],[11,"into","","",466,[[]]],[11,"to_owned","","",466,[[]]],[11,"clone_into","","",466,[[]]],[11,"try_from","","",466,[[],["result",4]]],[11,"try_into","","",466,[[],["result",4]]],[11,"borrow","","",466,[[]]],[11,"borrow_mut","","",466,[[]]],[11,"type_id","","",466,[[],["typeid",3]]],[11,"from","","",458,[[]]],[11,"into","","",458,[[]]],[11,"to_owned","","",458,[[]]],[11,"clone_into","","",458,[[]]],[11,"try_from","","",458,[[],["result",4]]],[11,"try_into","","",458,[[],["result",4]]],[11,"borrow","","",458,[[]]],[11,"borrow_mut","","",458,[[]]],[11,"type_id","","",458,[[],["typeid",3]]],[11,"from","","",459,[[]]],[11,"into","","",459,[[]]],[11,"to_owned","","",459,[[]]],[11,"clone_into","","",459,[[]]],[11,"try_from","","",459,[[],["result",4]]],[11,"try_into","","",459,[[],["result",4]]],[11,"borrow","","",459,[[]]],[11,"borrow_mut","","",459,[[]]],[11,"type_id","","",459,[[],["typeid",3]]],[11,"from","","",460,[[]]],[11,"into","","",460,[[]]],[11,"try_from","","",460,[[],["result",4]]],[11,"try_into","","",460,[[],["result",4]]],[11,"borrow","","",460,[[]]],[11,"borrow_mut","","",460,[[]]],[11,"type_id","","",460,[[],["typeid",3]]],[11,"from","","",461,[[]]],[11,"into","","",461,[[]]],[11,"try_from","","",461,[[],["result",4]]],[11,"try_into","","",461,[[],["result",4]]],[11,"borrow","","",461,[[]]],[11,"borrow_mut","","",461,[[]]],[11,"type_id","","",461,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",482,[[]]],[11,"into","","",482,[[]]],[11,"to_owned","","",482,[[]]],[11,"clone_into","","",482,[[]]],[11,"try_from","","",482,[[],["result",4]]],[11,"try_into","","",482,[[],["result",4]]],[11,"borrow","","",482,[[]]],[11,"borrow_mut","","",482,[[]]],[11,"type_id","","",482,[[],["typeid",3]]],[11,"from","","",467,[[]]],[11,"into","","",467,[[]]],[11,"try_from","","",467,[[],["result",4]]],[11,"try_into","","",467,[[],["result",4]]],[11,"borrow","","",467,[[]]],[11,"borrow_mut","","",467,[[]]],[11,"type_id","","",467,[[],["typeid",3]]],[11,"from","","",468,[[]]],[11,"into","","",468,[[]]],[11,"try_from","","",468,[[],["result",4]]],[11,"try_into","","",468,[[],["result",4]]],[11,"borrow","","",468,[[]]],[11,"borrow_mut","","",468,[[]]],[11,"type_id","","",468,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",483,[[]]],[11,"into","","",483,[[]]],[11,"to_owned","","",483,[[]]],[11,"clone_into","","",483,[[]]],[11,"try_from","","",483,[[],["result",4]]],[11,"try_into","","",483,[[],["result",4]]],[11,"borrow","","",483,[[]]],[11,"borrow_mut","","",483,[[]]],[11,"type_id","","",483,[[],["typeid",3]]],[11,"from","","",470,[[]]],[11,"into","","",470,[[]]],[11,"to_owned","","",470,[[]]],[11,"clone_into","","",470,[[]]],[11,"try_from","","",470,[[],["result",4]]],[11,"try_into","","",470,[[],["result",4]]],[11,"borrow","","",470,[[]]],[11,"borrow_mut","","",470,[[]]],[11,"type_id","","",470,[[],["typeid",3]]],[11,"from","","",471,[[]]],[11,"into","","",471,[[]]],[11,"to_owned","","",471,[[]]],[11,"clone_into","","",471,[[]]],[11,"try_from","","",471,[[],["result",4]]],[11,"try_into","","",471,[[],["result",4]]],[11,"borrow","","",471,[[]]],[11,"borrow_mut","","",471,[[]]],[11,"type_id","","",471,[[],["typeid",3]]],[11,"from","","",472,[[]]],[11,"into","","",472,[[]]],[11,"try_from","","",472,[[],["result",4]]],[11,"try_into","","",472,[[],["result",4]]],[11,"borrow","","",472,[[]]],[11,"borrow_mut","","",472,[[]]],[11,"type_id","","",472,[[],["typeid",3]]],[11,"from","","",476,[[]]],[11,"into","","",476,[[]]],[11,"try_from","","",476,[[],["result",4]]],[11,"try_into","","",476,[[],["result",4]]],[11,"borrow","","",476,[[]]],[11,"borrow_mut","","",476,[[]]],[11,"type_id","","",476,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",646,[[]]],[11,"into","","",646,[[]]],[11,"to_owned","","",646,[[]]],[11,"clone_into","","",646,[[]]],[11,"try_from","","",646,[[],["result",4]]],[11,"try_into","","",646,[[],["result",4]]],[11,"borrow","","",646,[[]]],[11,"borrow_mut","","",646,[[]]],[11,"type_id","","",646,[[],["typeid",3]]],[11,"from","","",484,[[]]],[11,"into","","",484,[[]]],[11,"try_from","","",484,[[],["result",4]]],[11,"try_into","","",484,[[],["result",4]]],[11,"borrow","","",484,[[]]],[11,"borrow_mut","","",484,[[]]],[11,"type_id","","",484,[[],["typeid",3]]],[11,"from","","",647,[[]]],[11,"into","","",647,[[]]],[11,"try_from","","",647,[[],["result",4]]],[11,"try_into","","",647,[[],["result",4]]],[11,"borrow","","",647,[[]]],[11,"borrow_mut","","",647,[[]]],[11,"type_id","","",647,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",491,[[]]],[11,"into","","",491,[[]]],[11,"to_owned","","",491,[[]]],[11,"clone_into","","",491,[[]]],[11,"try_from","","",491,[[],["result",4]]],[11,"try_into","","",491,[[],["result",4]]],[11,"borrow","","",491,[[]]],[11,"borrow_mut","","",491,[[]]],[11,"type_id","","",491,[[],["typeid",3]]],[11,"from","","",486,[[]]],[11,"into","","",486,[[]]],[11,"to_owned","","",486,[[]]],[11,"clone_into","","",486,[[]]],[11,"try_from","","",486,[[],["result",4]]],[11,"try_into","","",486,[[],["result",4]]],[11,"borrow","","",486,[[]]],[11,"borrow_mut","","",486,[[]]],[11,"type_id","","",486,[[],["typeid",3]]],[11,"from","","",487,[[]]],[11,"into","","",487,[[]]],[11,"try_from","","",487,[[],["result",4]]],[11,"try_into","","",487,[[],["result",4]]],[11,"borrow","","",487,[[]]],[11,"borrow_mut","","",487,[[]]],[11,"type_id","","",487,[[],["typeid",3]]],[11,"from","","",489,[[]]],[11,"into","","",489,[[]]],[11,"try_from","","",489,[[],["result",4]]],[11,"try_into","","",489,[[],["result",4]]],[11,"borrow","","",489,[[]]],[11,"borrow_mut","","",489,[[]]],[11,"type_id","","",489,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",648,[[]]],[11,"into","","",648,[[]]],[11,"to_owned","","",648,[[]]],[11,"clone_into","","",648,[[]]],[11,"try_from","","",648,[[],["result",4]]],[11,"try_into","","",648,[[],["result",4]]],[11,"borrow","","",648,[[]]],[11,"borrow_mut","","",648,[[]]],[11,"type_id","","",648,[[],["typeid",3]]],[11,"from","","",492,[[]]],[11,"into","","",492,[[]]],[11,"to_owned","","",492,[[]]],[11,"clone_into","","",492,[[]]],[11,"try_from","","",492,[[],["result",4]]],[11,"try_into","","",492,[[],["result",4]]],[11,"borrow","","",492,[[]]],[11,"borrow_mut","","",492,[[]]],[11,"type_id","","",492,[[],["typeid",3]]],[11,"from","","",493,[[]]],[11,"into","","",493,[[]]],[11,"try_from","","",493,[[],["result",4]]],[11,"try_into","","",493,[[],["result",4]]],[11,"borrow","","",493,[[]]],[11,"borrow_mut","","",493,[[]]],[11,"type_id","","",493,[[],["typeid",3]]],[11,"from","","",649,[[]]],[11,"into","","",649,[[]]],[11,"try_from","","",649,[[],["result",4]]],[11,"try_into","","",649,[[],["result",4]]],[11,"borrow","","",649,[[]]],[11,"borrow_mut","","",649,[[]]],[11,"type_id","","",649,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",650,[[]]],[11,"into","","",650,[[]]],[11,"to_owned","","",650,[[]]],[11,"clone_into","","",650,[[]]],[11,"try_from","","",650,[[],["result",4]]],[11,"try_into","","",650,[[],["result",4]]],[11,"borrow","","",650,[[]]],[11,"borrow_mut","","",650,[[]]],[11,"type_id","","",650,[[],["typeid",3]]],[11,"from","","",495,[[]]],[11,"into","","",495,[[]]],[11,"try_from","","",495,[[],["result",4]]],[11,"try_into","","",495,[[],["result",4]]],[11,"borrow","","",495,[[]]],[11,"borrow_mut","","",495,[[]]],[11,"type_id","","",495,[[],["typeid",3]]],[11,"from","","",651,[[]]],[11,"into","","",651,[[]]],[11,"try_from","","",651,[[],["result",4]]],[11,"try_into","","",651,[[],["result",4]]],[11,"borrow","","",651,[[]]],[11,"borrow_mut","","",651,[[]]],[11,"type_id","","",651,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",652,[[]]],[11,"into","","",652,[[]]],[11,"to_owned","","",652,[[]]],[11,"clone_into","","",652,[[]]],[11,"try_from","","",652,[[],["result",4]]],[11,"try_into","","",652,[[],["result",4]]],[11,"borrow","","",652,[[]]],[11,"borrow_mut","","",652,[[]]],[11,"type_id","","",652,[[],["typeid",3]]],[11,"from","","",496,[[]]],[11,"into","","",496,[[]]],[11,"to_owned","","",496,[[]]],[11,"clone_into","","",496,[[]]],[11,"try_from","","",496,[[],["result",4]]],[11,"try_into","","",496,[[],["result",4]]],[11,"borrow","","",496,[[]]],[11,"borrow_mut","","",496,[[]]],[11,"type_id","","",496,[[],["typeid",3]]],[11,"from","","",497,[[]]],[11,"into","","",497,[[]]],[11,"to_owned","","",497,[[]]],[11,"clone_into","","",497,[[]]],[11,"try_from","","",497,[[],["result",4]]],[11,"try_into","","",497,[[],["result",4]]],[11,"borrow","","",497,[[]]],[11,"borrow_mut","","",497,[[]]],[11,"type_id","","",497,[[],["typeid",3]]],[11,"from","","",498,[[]]],[11,"into","","",498,[[]]],[11,"try_from","","",498,[[],["result",4]]],[11,"try_into","","",498,[[],["result",4]]],[11,"borrow","","",498,[[]]],[11,"borrow_mut","","",498,[[]]],[11,"type_id","","",498,[[],["typeid",3]]],[11,"from","","",653,[[]]],[11,"into","","",653,[[]]],[11,"try_from","","",653,[[],["result",4]]],[11,"try_into","","",653,[[],["result",4]]],[11,"borrow","","",653,[[]]],[11,"borrow_mut","","",653,[[]]],[11,"type_id","","",653,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[]]],[11,"into","","",512,[[]]],[11,"to_owned","","",512,[[]]],[11,"clone_into","","",512,[[]]],[11,"try_from","","",512,[[],["result",4]]],[11,"try_into","","",512,[[],["result",4]]],[11,"borrow","","",512,[[]]],[11,"borrow_mut","","",512,[[]]],[11,"type_id","","",512,[[],["typeid",3]]],[11,"from","","",513,[[]]],[11,"into","","",513,[[]]],[11,"to_owned","","",513,[[]]],[11,"clone_into","","",513,[[]]],[11,"try_from","","",513,[[],["result",4]]],[11,"try_into","","",513,[[],["result",4]]],[11,"borrow","","",513,[[]]],[11,"borrow_mut","","",513,[[]]],[11,"type_id","","",513,[[],["typeid",3]]],[11,"from","","",500,[[]]],[11,"into","","",500,[[]]],[11,"to_owned","","",500,[[]]],[11,"clone_into","","",500,[[]]],[11,"try_from","","",500,[[],["result",4]]],[11,"try_into","","",500,[[],["result",4]]],[11,"borrow","","",500,[[]]],[11,"borrow_mut","","",500,[[]]],[11,"type_id","","",500,[[],["typeid",3]]],[11,"from","","",501,[[]]],[11,"into","","",501,[[]]],[11,"try_from","","",501,[[],["result",4]]],[11,"try_into","","",501,[[],["result",4]]],[11,"borrow","","",501,[[]]],[11,"borrow_mut","","",501,[[]]],[11,"type_id","","",501,[[],["typeid",3]]],[11,"from","","",510,[[]]],[11,"into","","",510,[[]]],[11,"try_from","","",510,[[],["result",4]]],[11,"try_into","","",510,[[],["result",4]]],[11,"borrow","","",510,[[]]],[11,"borrow_mut","","",510,[[]]],[11,"type_id","","",510,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",654,[[]]],[11,"into","","",654,[[]]],[11,"to_owned","","",654,[[]]],[11,"clone_into","","",654,[[]]],[11,"try_from","","",654,[[],["result",4]]],[11,"try_into","","",654,[[],["result",4]]],[11,"borrow","","",654,[[]]],[11,"borrow_mut","","",654,[[]]],[11,"type_id","","",654,[[],["typeid",3]]],[11,"from","","",514,[[]]],[11,"into","","",514,[[]]],[11,"try_from","","",514,[[],["result",4]]],[11,"try_into","","",514,[[],["result",4]]],[11,"borrow","","",514,[[]]],[11,"borrow_mut","","",514,[[]]],[11,"type_id","","",514,[[],["typeid",3]]],[11,"from","","",655,[[]]],[11,"into","","",655,[[]]],[11,"try_from","","",655,[[],["result",4]]],[11,"try_into","","",655,[[],["result",4]]],[11,"borrow","","",655,[[]]],[11,"borrow_mut","","",655,[[]]],[11,"type_id","","",655,[[],["typeid",3]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[]]],[11,"into","","",526,[[]]],[11,"to_owned","","",526,[[]]],[11,"clone_into","","",526,[[]]],[11,"try_from","","",526,[[],["result",4]]],[11,"try_into","","",526,[[],["result",4]]],[11,"borrow","","",526,[[]]],[11,"borrow_mut","","",526,[[]]],[11,"type_id","","",526,[[],["typeid",3]]],[11,"from","","",527,[[]]],[11,"into","","",527,[[]]],[11,"to_owned","","",527,[[]]],[11,"clone_into","","",527,[[]]],[11,"try_from","","",527,[[],["result",4]]],[11,"try_into","","",527,[[],["result",4]]],[11,"borrow","","",527,[[]]],[11,"borrow_mut","","",527,[[]]],[11,"type_id","","",527,[[],["typeid",3]]],[11,"from","","",517,[[]]],[11,"into","","",517,[[]]],[11,"to_owned","","",517,[[]]],[11,"clone_into","","",517,[[]]],[11,"try_from","","",517,[[],["result",4]]],[11,"try_into","","",517,[[],["result",4]]],[11,"borrow","","",517,[[]]],[11,"borrow_mut","","",517,[[]]],[11,"type_id","","",517,[[],["typeid",3]]],[11,"from","","",518,[[]]],[11,"into","","",518,[[]]],[11,"try_from","","",518,[[],["result",4]]],[11,"try_into","","",518,[[],["result",4]]],[11,"borrow","","",518,[[]]],[11,"borrow_mut","","",518,[[]]],[11,"type_id","","",518,[[],["typeid",3]]],[11,"from","","",521,[[]]],[11,"into","","",521,[[]]],[11,"try_from","","",521,[[],["result",4]]],[11,"try_into","","",521,[[],["result",4]]],[11,"borrow","","",521,[[]]],[11,"borrow_mut","","",521,[[]]],[11,"type_id","","",521,[[],["typeid",3]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",656,[[]]],[11,"into","","",656,[[]]],[11,"to_owned","","",656,[[]]],[11,"clone_into","","",656,[[]]],[11,"try_from","","",656,[[],["result",4]]],[11,"try_into","","",656,[[],["result",4]]],[11,"borrow","","",656,[[]]],[11,"borrow_mut","","",656,[[]]],[11,"type_id","","",656,[[],["typeid",3]]],[11,"from","","",528,[[]]],[11,"into","","",528,[[]]],[11,"to_owned","","",528,[[]]],[11,"clone_into","","",528,[[]]],[11,"try_from","","",528,[[],["result",4]]],[11,"try_into","","",528,[[],["result",4]]],[11,"borrow","","",528,[[]]],[11,"borrow_mut","","",528,[[]]],[11,"type_id","","",528,[[],["typeid",3]]],[11,"from","","",529,[[]]],[11,"into","","",529,[[]]],[11,"try_from","","",529,[[],["result",4]]],[11,"try_into","","",529,[[],["result",4]]],[11,"borrow","","",529,[[]]],[11,"borrow_mut","","",529,[[]]],[11,"type_id","","",529,[[],["typeid",3]]],[11,"from","","",531,[[]]],[11,"into","","",531,[[]]],[11,"try_from","","",531,[[],["result",4]]],[11,"try_into","","",531,[[],["result",4]]],[11,"borrow","","",531,[[]]],[11,"borrow_mut","","",531,[[]]],[11,"type_id","","",531,[[],["typeid",3]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[]]],[11,"into","","",657,[[]]],[11,"to_owned","","",657,[[]]],[11,"clone_into","","",657,[[]]],[11,"try_from","","",657,[[],["result",4]]],[11,"try_into","","",657,[[],["result",4]]],[11,"borrow","","",657,[[]]],[11,"borrow_mut","","",657,[[]]],[11,"type_id","","",657,[[],["typeid",3]]],[11,"from","","",658,[[]]],[11,"into","","",658,[[]]],[11,"to_owned","","",658,[[]]],[11,"clone_into","","",658,[[]]],[11,"try_from","","",658,[[],["result",4]]],[11,"try_into","","",658,[[],["result",4]]],[11,"borrow","","",658,[[]]],[11,"borrow_mut","","",658,[[]]],[11,"type_id","","",658,[[],["typeid",3]]],[11,"from","","",659,[[]]],[11,"into","","",659,[[]]],[11,"try_from","","",659,[[],["result",4]]],[11,"try_into","","",659,[[],["result",4]]],[11,"borrow","","",659,[[]]],[11,"borrow_mut","","",659,[[]]],[11,"type_id","","",659,[[],["typeid",3]]],[11,"from","","",533,[[]]],[11,"into","","",533,[[]]],[11,"try_from","","",533,[[],["result",4]]],[11,"try_into","","",533,[[],["result",4]]],[11,"borrow","","",533,[[]]],[11,"borrow_mut","","",533,[[]]],[11,"type_id","","",533,[[],["typeid",3]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",660,[[]]],[11,"into","","",660,[[]]],[11,"to_owned","","",660,[[]]],[11,"clone_into","","",660,[[]]],[11,"try_from","","",660,[[],["result",4]]],[11,"try_into","","",660,[[],["result",4]]],[11,"borrow","","",660,[[]]],[11,"borrow_mut","","",660,[[]]],[11,"type_id","","",660,[[],["typeid",3]]],[11,"from","","",536,[[]]],[11,"into","","",536,[[]]],[11,"to_owned","","",536,[[]]],[11,"clone_into","","",536,[[]]],[11,"try_from","","",536,[[],["result",4]]],[11,"try_into","","",536,[[],["result",4]]],[11,"borrow","","",536,[[]]],[11,"borrow_mut","","",536,[[]]],[11,"type_id","","",536,[[],["typeid",3]]],[11,"from","","",537,[[]]],[11,"into","","",537,[[]]],[11,"try_from","","",537,[[],["result",4]]],[11,"try_into","","",537,[[],["result",4]]],[11,"borrow","","",537,[[]]],[11,"borrow_mut","","",537,[[]]],[11,"type_id","","",537,[[],["typeid",3]]],[11,"from","","",541,[[]]],[11,"into","","",541,[[]]],[11,"try_from","","",541,[[],["result",4]]],[11,"try_into","","",541,[[],["result",4]]],[11,"borrow","","",541,[[]]],[11,"borrow_mut","","",541,[[]]],[11,"type_id","","",541,[[],["typeid",3]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[]]],[11,"into","","",661,[[]]],[11,"to_owned","","",661,[[]]],[11,"clone_into","","",661,[[]]],[11,"try_from","","",661,[[],["result",4]]],[11,"try_into","","",661,[[],["result",4]]],[11,"borrow","","",661,[[]]],[11,"borrow_mut","","",661,[[]]],[11,"type_id","","",661,[[],["typeid",3]]],[11,"from","","",662,[[]]],[11,"into","","",662,[[]]],[11,"to_owned","","",662,[[]]],[11,"clone_into","","",662,[[]]],[11,"try_from","","",662,[[],["result",4]]],[11,"try_into","","",662,[[],["result",4]]],[11,"borrow","","",662,[[]]],[11,"borrow_mut","","",662,[[]]],[11,"type_id","","",662,[[],["typeid",3]]],[11,"from","","",543,[[]]],[11,"into","","",543,[[]]],[11,"to_owned","","",543,[[]]],[11,"clone_into","","",543,[[]]],[11,"try_from","","",543,[[],["result",4]]],[11,"try_into","","",543,[[],["result",4]]],[11,"borrow","","",543,[[]]],[11,"borrow_mut","","",543,[[]]],[11,"type_id","","",543,[[],["typeid",3]]],[11,"from","","",544,[[]]],[11,"into","","",544,[[]]],[11,"to_owned","","",544,[[]]],[11,"clone_into","","",544,[[]]],[11,"try_from","","",544,[[],["result",4]]],[11,"try_into","","",544,[[],["result",4]]],[11,"borrow","","",544,[[]]],[11,"borrow_mut","","",544,[[]]],[11,"type_id","","",544,[[],["typeid",3]]],[11,"from","","",545,[[]]],[11,"into","","",545,[[]]],[11,"to_owned","","",545,[[]]],[11,"clone_into","","",545,[[]]],[11,"try_from","","",545,[[],["result",4]]],[11,"try_into","","",545,[[],["result",4]]],[11,"borrow","","",545,[[]]],[11,"borrow_mut","","",545,[[]]],[11,"type_id","","",545,[[],["typeid",3]]],[11,"from","","",546,[[]]],[11,"into","","",546,[[]]],[11,"try_from","","",546,[[],["result",4]]],[11,"try_into","","",546,[[],["result",4]]],[11,"borrow","","",546,[[]]],[11,"borrow_mut","","",546,[[]]],[11,"type_id","","",546,[[],["typeid",3]]],[11,"from","","",663,[[]]],[11,"into","","",663,[[]]],[11,"try_from","","",663,[[],["result",4]]],[11,"try_into","","",663,[[],["result",4]]],[11,"borrow","","",663,[[]]],[11,"borrow_mut","","",663,[[]]],[11,"type_id","","",663,[[],["typeid",3]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",664,[[]]],[11,"into","","",664,[[]]],[11,"to_owned","","",664,[[]]],[11,"clone_into","","",664,[[]]],[11,"try_from","","",664,[[],["result",4]]],[11,"try_into","","",664,[[],["result",4]]],[11,"borrow","","",664,[[]]],[11,"borrow_mut","","",664,[[]]],[11,"type_id","","",664,[[],["typeid",3]]],[11,"from","","",553,[[]]],[11,"into","","",553,[[]]],[11,"to_owned","","",553,[[]]],[11,"clone_into","","",553,[[]]],[11,"try_from","","",553,[[],["result",4]]],[11,"try_into","","",553,[[],["result",4]]],[11,"borrow","","",553,[[]]],[11,"borrow_mut","","",553,[[]]],[11,"type_id","","",553,[[],["typeid",3]]],[11,"from","","",554,[[]]],[11,"into","","",554,[[]]],[11,"try_from","","",554,[[],["result",4]]],[11,"try_into","","",554,[[],["result",4]]],[11,"borrow","","",554,[[]]],[11,"borrow_mut","","",554,[[]]],[11,"type_id","","",554,[[],["typeid",3]]],[11,"from","","",559,[[]]],[11,"into","","",559,[[]]],[11,"try_from","","",559,[[],["result",4]]],[11,"try_into","","",559,[[],["result",4]]],[11,"borrow","","",559,[[]]],[11,"borrow_mut","","",559,[[]]],[11,"type_id","","",559,[[],["typeid",3]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",665,[[]]],[11,"into","","",665,[[]]],[11,"to_owned","","",665,[[]]],[11,"clone_into","","",665,[[]]],[11,"try_from","","",665,[[],["result",4]]],[11,"try_into","","",665,[[],["result",4]]],[11,"borrow","","",665,[[]]],[11,"borrow_mut","","",665,[[]]],[11,"type_id","","",665,[[],["typeid",3]]],[11,"from","","",561,[[]]],[11,"into","","",561,[[]]],[11,"to_owned","","",561,[[]]],[11,"clone_into","","",561,[[]]],[11,"try_from","","",561,[[],["result",4]]],[11,"try_into","","",561,[[],["result",4]]],[11,"borrow","","",561,[[]]],[11,"borrow_mut","","",561,[[]]],[11,"type_id","","",561,[[],["typeid",3]]],[11,"from","","",562,[[]]],[11,"into","","",562,[[]]],[11,"to_owned","","",562,[[]]],[11,"clone_into","","",562,[[]]],[11,"try_from","","",562,[[],["result",4]]],[11,"try_into","","",562,[[],["result",4]]],[11,"borrow","","",562,[[]]],[11,"borrow_mut","","",562,[[]]],[11,"type_id","","",562,[[],["typeid",3]]],[11,"from","","",563,[[]]],[11,"into","","",563,[[]]],[11,"try_from","","",563,[[],["result",4]]],[11,"try_into","","",563,[[],["result",4]]],[11,"borrow","","",563,[[]]],[11,"borrow_mut","","",563,[[]]],[11,"type_id","","",563,[[],["typeid",3]]],[11,"from","","",573,[[]]],[11,"into","","",573,[[]]],[11,"try_from","","",573,[[],["result",4]]],[11,"try_into","","",573,[[],["result",4]]],[11,"borrow","","",573,[[]]],[11,"borrow_mut","","",573,[[]]],[11,"type_id","","",573,[[],["typeid",3]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",666,[[]]],[11,"into","","",666,[[]]],[11,"to_owned","","",666,[[]]],[11,"clone_into","","",666,[[]]],[11,"try_from","","",666,[[],["result",4]]],[11,"try_into","","",666,[[],["result",4]]],[11,"borrow","","",666,[[]]],[11,"borrow_mut","","",666,[[]]],[11,"type_id","","",666,[[],["typeid",3]]],[11,"from","","",575,[[]]],[11,"into","","",575,[[]]],[11,"to_owned","","",575,[[]]],[11,"clone_into","","",575,[[]]],[11,"try_from","","",575,[[],["result",4]]],[11,"try_into","","",575,[[],["result",4]]],[11,"borrow","","",575,[[]]],[11,"borrow_mut","","",575,[[]]],[11,"type_id","","",575,[[],["typeid",3]]],[11,"from","","",576,[[]]],[11,"into","","",576,[[]]],[11,"try_from","","",576,[[],["result",4]]],[11,"try_into","","",576,[[],["result",4]]],[11,"borrow","","",576,[[]]],[11,"borrow_mut","","",576,[[]]],[11,"type_id","","",576,[[],["typeid",3]]],[11,"from","","",578,[[]]],[11,"into","","",578,[[]]],[11,"try_from","","",578,[[],["result",4]]],[11,"try_into","","",578,[[],["result",4]]],[11,"borrow","","",578,[[]]],[11,"borrow_mut","","",578,[[]]],[11,"type_id","","",578,[[],["typeid",3]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",667,[[]]],[11,"into","","",667,[[]]],[11,"to_owned","","",667,[[]]],[11,"clone_into","","",667,[[]]],[11,"try_from","","",667,[[],["result",4]]],[11,"try_into","","",667,[[],["result",4]]],[11,"borrow","","",667,[[]]],[11,"borrow_mut","","",667,[[]]],[11,"type_id","","",667,[[],["typeid",3]]],[11,"from","","",580,[[]]],[11,"into","","",580,[[]]],[11,"to_owned","","",580,[[]]],[11,"clone_into","","",580,[[]]],[11,"try_from","","",580,[[],["result",4]]],[11,"try_into","","",580,[[],["result",4]]],[11,"borrow","","",580,[[]]],[11,"borrow_mut","","",580,[[]]],[11,"type_id","","",580,[[],["typeid",3]]],[11,"from","","",581,[[]]],[11,"into","","",581,[[]]],[11,"try_from","","",581,[[],["result",4]]],[11,"try_into","","",581,[[],["result",4]]],[11,"borrow","","",581,[[]]],[11,"borrow_mut","","",581,[[]]],[11,"type_id","","",581,[[],["typeid",3]]],[11,"from","","",668,[[]]],[11,"into","","",668,[[]]],[11,"try_from","","",668,[[],["result",4]]],[11,"try_into","","",668,[[],["result",4]]],[11,"borrow","","",668,[[]]],[11,"borrow_mut","","",668,[[]]],[11,"type_id","","",668,[[],["typeid",3]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",669,[[]]],[11,"into","","",669,[[]]],[11,"to_owned","","",669,[[]]],[11,"clone_into","","",669,[[]]],[11,"try_from","","",669,[[],["result",4]]],[11,"try_into","","",669,[[],["result",4]]],[11,"borrow","","",669,[[]]],[11,"borrow_mut","","",669,[[]]],[11,"type_id","","",669,[[],["typeid",3]]],[11,"from","","",583,[[]]],[11,"into","","",583,[[]]],[11,"to_owned","","",583,[[]]],[11,"clone_into","","",583,[[]]],[11,"try_from","","",583,[[],["result",4]]],[11,"try_into","","",583,[[],["result",4]]],[11,"borrow","","",583,[[]]],[11,"borrow_mut","","",583,[[]]],[11,"type_id","","",583,[[],["typeid",3]]],[11,"from","","",584,[[]]],[11,"into","","",584,[[]]],[11,"try_from","","",584,[[],["result",4]]],[11,"try_into","","",584,[[],["result",4]]],[11,"borrow","","",584,[[]]],[11,"borrow_mut","","",584,[[]]],[11,"type_id","","",584,[[],["typeid",3]]],[11,"from","","",670,[[]]],[11,"into","","",670,[[]]],[11,"try_from","","",670,[[],["result",4]]],[11,"try_into","","",670,[[],["result",4]]],[11,"borrow","","",670,[[]]],[11,"borrow_mut","","",670,[[]]],[11,"type_id","","",670,[[],["typeid",3]]],[11,"as_ref","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",9,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",10,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",588,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",590,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",43,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",593,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",595,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",597,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",51,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",599,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",57,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",71,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",72,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",601,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",603,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",82,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",606,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",95,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",96,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",608,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",110,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",111,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",610,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",128,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",129,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",130,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",612,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",136,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",614,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",170,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",171,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",172,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",616,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",238,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",239,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",240,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",241,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",242,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",243,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",244,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",273,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",618,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",291,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",620,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",622,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",300,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",624,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",626,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",311,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",312,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",628,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",630,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",323,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",324,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",632,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",333,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",359,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",360,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",361,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",404,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",634,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",408,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",409,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",410,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",636,[[],["resource",3]]],[11,"as_ref","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",638,[[],["resource",3]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",640,[[],["resource",3]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",430,[[],["resource",3]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",431,[[],["resource",3]]],[11,"as_ref","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",432,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",642,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",453,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",454,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",455,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",644,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",466,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",482,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",483,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",646,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",491,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",648,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",650,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",652,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",513,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",654,[[],["resource",3]]],[11,"as_ref","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",527,[[],["resource",3]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation","",656,[[],["resource",3]]],[11,"as_ref","wayland_protocols::presentation_time::server::wp_presentation_feedback","",658,[[],["resource",3]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_wm_base","",660,[[],["resource",3]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_positioner","",662,[[],["resource",3]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_surface","",664,[[],["resource",3]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_toplevel","",665,[[],["resource",3]]],[11,"as_ref","wayland_protocols::xdg_shell::server::xdg_popup","",666,[[],["resource",3]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewporter","",667,[[],["resource",3]]],[11,"as_ref","wayland_protocols::viewporter::server::wp_viewport","",669,[[],["resource",3]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",9,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",10,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",588,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",590,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",43,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",593,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",595,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",597,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",51,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",599,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",57,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",71,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",72,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",601,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",603,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",82,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",606,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",95,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",96,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",608,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",110,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",111,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",610,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",128,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",129,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",130,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",612,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",136,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",614,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",170,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",171,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",172,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",616,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",238,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",239,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",240,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",241,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",242,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",243,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",244,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",273,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",618,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",291,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",620,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",622,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",300,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",624,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",626,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",311,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",312,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",628,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",630,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",323,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",324,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",632,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",333,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",359,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",360,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",361,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",404,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",634,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",408,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",409,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",410,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",636,[[["resource",3]]]],[11,"from","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",638,[[["resource",3]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",640,[[["resource",3]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",430,[[["resource",3]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",431,[[["resource",3]]]],[11,"from","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",432,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",642,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",453,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",454,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",455,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",644,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",466,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",482,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",483,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",646,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",491,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",648,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",650,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",652,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",513,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",654,[[["resource",3]]]],[11,"from","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",527,[[["resource",3]]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation","",656,[[["resource",3]]]],[11,"from","wayland_protocols::presentation_time::server::wp_presentation_feedback","",658,[[["resource",3]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_wm_base","",660,[[["resource",3]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_positioner","",662,[[["resource",3]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_surface","",664,[[["resource",3]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_toplevel","",665,[[["resource",3]]]],[11,"from","wayland_protocols::xdg_shell::server::xdg_popup","",666,[[["resource",3]]]],[11,"from","wayland_protocols::viewporter::server::wp_viewporter","",667,[[["resource",3]]]],[11,"from","wayland_protocols::viewporter::server::wp_viewport","",669,[[["resource",3]]]],[11,"extend","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["intoiterator",8]]]],[11,"extend","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["intoiterator",8]]]],[11,"extend","","",406,[[["intoiterator",8]]]],[11,"extend","","",407,[[["intoiterator",8]]]],[11,"extend","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["intoiterator",8]]]],[11,"extend","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["intoiterator",8]]]],[11,"extend","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["intoiterator",8]]]],[11,"extend","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["intoiterator",8]]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",0,[[],["capability",4]]],[11,"clone","","",1,[[],["presentmethod",4]]],[11,"clone","","",2,[[],["error",4]]],[11,"clone","","",9,[[],["zwpfullscreenshellv1",3]]],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",10,[[],["zwpfullscreenshellmodefeedbackv1",3]]],[11,"clone","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",588,[[],["zwpidleinhibitmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",590,[[],["zwpidleinhibitorv1",3]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[],["zwpinputmethodcontextv1",3]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",43,[[],["zwpinputmethodv1",3]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",593,[[],["zwpinputpanelv1",3]]],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",39,[[],["position",4]]],[11,"clone","","",595,[[],["zwpinputpanelsurfacev1",3]]],[11,"clone","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",597,[[],["zwpinputtimestampsmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",51,[[],["zwpinputtimestampsv1",3]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",52,[[],["error",4]]],[11,"clone","","",599,[[],["zwpkeyboardshortcutsinhibitmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",57,[[],["zwpkeyboardshortcutsinhibitorv1",3]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",71,[[],["zwplinuxdmabufv1",3]]],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",63,[[],["error",4]]],[11,"clone","","",64,[[],["flags",4]]],[11,"clone","","",72,[[],["zwplinuxbufferparamsv1",3]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[],["error",4]]],[11,"clone","","",601,[[],["zwplinuxexplicitsynchronizationv1",3]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",76,[[],["error",4]]],[11,"clone","","",603,[[],["zwplinuxsurfacesynchronizationv1",3]]],[11,"clone","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",82,[[],["zwplinuxbufferreleasev1",3]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",83,[[],["error",4]]],[11,"clone","","",84,[[],["lifetime",4]]],[11,"clone","","",606,[[],["zwppointerconstraintsv1",3]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",95,[[],["zwplockedpointerv1",3]]],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",96,[[],["zwpconfinedpointerv1",3]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",608,[[],["zwppointergesturesv1",3]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",110,[[],["zwppointergestureswipev1",3]]],[11,"clone","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",111,[[],["zwppointergesturepinchv1",3]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",610,[[],["zwpprimaryselectiondevicemanagerv1",3]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",128,[[],["zwpprimaryselectiondevicev1",3]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",129,[[],["zwpprimaryselectionofferv1",3]]],[11,"clone","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",130,[[],["zwpprimaryselectionsourcev1",3]]],[11,"clone","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",612,[[],["zwprelativepointermanagerv1",3]]],[11,"clone","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",136,[[],["zwprelativepointerv1",3]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",614,[[],["zwptabletmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",170,[[],["zwptabletseatv1",3]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",143,[[],["type",4]]],[11,"clone","","",144,[[],["capability",4]]],[11,"clone","","",145,[[],["buttonstate",4]]],[11,"clone","","",146,[[],["error",4]]],[11,"clone","","",171,[[],["zwptablettoolv1",3]]],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",172,[[],["zwptabletv1",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",616,[[],["zwptabletmanagerv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",238,[[],["zwptabletseatv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",180,[[],["type",4]]],[11,"clone","","",181,[[],["capability",4]]],[11,"clone","","",182,[[],["buttonstate",4]]],[11,"clone","","",183,[[],["error",4]]],[11,"clone","","",239,[[],["zwptablettoolv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",240,[[],["zwptabletv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",207,[[],["source",4]]],[11,"clone","","",241,[[],["zwptabletpadringv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",214,[[],["source",4]]],[11,"clone","","",242,[[],["zwptabletpadstripv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",243,[[],["zwptabletpadgroupv2",3]]],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",228,[[],["buttonstate",4]]],[11,"clone","","",244,[[],["zwptabletpadv2",3]]],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",245,[[],["contenthint",4]]],[11,"clone","","",246,[[],["contentpurpose",4]]],[11,"clone","","",247,[[],["preeditstyle",4]]],[11,"clone","","",248,[[],["textdirection",4]]],[11,"clone","","",273,[[],["zwptextinputv1",3]]],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",618,[[],["zwptextinputmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",274,[[],["changecause",4]]],[11,"clone","","",290,[[],["contenthint",3]]],[11,"clone","","",275,[[],["contentpurpose",4]]],[11,"clone","","",291,[[],["zwptextinputv3",3]]],[11,"clone","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",620,[[],["zwptextinputmanagerv3",3]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",622,[[],["zxdgdecorationmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",294,[[],["error",4]]],[11,"clone","","",295,[[],["mode",4]]],[11,"clone","","",300,[[],["zxdgtopleveldecorationv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",624,[[],["zxdgexporterv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",626,[[],["zxdgimporterv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",311,[[],["zxdgexportedv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",312,[[],["zxdgimportedv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",628,[[],["zxdgexporterv2",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",630,[[],["zxdgimporterv2",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",323,[[],["zxdgexportedv2",3]]],[11,"clone","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",324,[[],["zxdgimportedv2",3]]],[11,"clone","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",632,[[],["zxdgoutputmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",333,[[],["zxdgoutputv1",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",334,[[],["version",4]]],[11,"clone","","",335,[[],["error",4]]],[11,"clone","","",359,[[],["xdgshell",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",343,[[],["resizeedge",4]]],[11,"clone","","",344,[[],["state",4]]],[11,"clone","","",360,[[],["xdgsurface",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",361,[[],["xdgpopup",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",362,[[],["error",4]]],[11,"clone","","",404,[[],["zxdgshellv6",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",369,[[],["error",4]]],[11,"clone","","",405,[[],["anchor",3]]],[11,"clone","","",406,[[],["gravity",3]]],[11,"clone","","",407,[[],["constraintadjustment",3]]],[11,"clone","","",634,[[],["zxdgpositionerv6",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",377,[[],["error",4]]],[11,"clone","","",408,[[],["zxdgsurfacev6",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",385,[[],["resizeedge",4]]],[11,"clone","","",386,[[],["state",4]]],[11,"clone","","",409,[[],["zxdgtoplevelv6",3]]],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",399,[[],["error",4]]],[11,"clone","","",410,[[],["zxdgpopupv6",3]]],[11,"clone","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",636,[[],["zwpxwaylandkeyboardgrabmanagerv1",3]]],[11,"clone","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",638,[[],["zwpxwaylandkeyboardgrabv1",3]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",640,[[],["gtkprimaryselectiondevicemanager",3]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",430,[[],["gtkprimaryselectiondevice",3]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",431,[[],["gtkprimaryselectionoffer",3]]],[11,"clone","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",432,[[],["gtkprimaryselectionsource",3]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",642,[[],["zwlrdatacontrolmanagerv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",436,[[],["error",4]]],[11,"clone","","",453,[[],["zwlrdatacontroldevicev1",3]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",444,[[],["error",4]]],[11,"clone","","",454,[[],["zwlrdatacontrolsourcev1",3]]],[11,"clone","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",455,[[],["zwlrdatacontrolofferv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",644,[[],["zwlrexportdmabufmanagerv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",458,[[],["flags",4]]],[11,"clone","","",459,[[],["cancelreason",4]]],[11,"clone","","",466,[[],["zwlrexportdmabufframev1",3]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",482,[[],["zwlrforeigntoplevelmanagerv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",470,[[],["state",4]]],[11,"clone","","",471,[[],["error",4]]],[11,"clone","","",483,[[],["zwlrforeigntoplevelhandlev1",3]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",646,[[],["zwlrgammacontrolmanagerv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",486,[[],["error",4]]],[11,"clone","","",491,[[],["zwlrgammacontrolv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",492,[[],["error",4]]],[11,"clone","","",648,[[],["zwlrinputinhibitmanagerv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",650,[[],["zwlrinputinhibitorv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",496,[[],["error",4]]],[11,"clone","","",497,[[],["layer",4]]],[11,"clone","","",652,[[],["zwlrlayershellv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",500,[[],["error",4]]],[11,"clone","","",512,[[],["anchor",3]]],[11,"clone","","",513,[[],["zwlrlayersurfacev1",3]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",654,[[],["zwlrscreencopymanagerv1",3]]],[11,"clone","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",517,[[],["error",4]]],[11,"clone","","",526,[[],["flags",3]]],[11,"clone","","",527,[[],["zwlrscreencopyframev1",3]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",528,[[],["error",4]]],[11,"clone","","",656,[[],["wppresentation",3]]],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[],["kind",3]]],[11,"clone","","",658,[[],["wppresentationfeedback",3]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",536,[[],["error",4]]],[11,"clone","","",660,[[],["xdgwmbase",3]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",543,[[],["error",4]]],[11,"clone","","",544,[[],["anchor",4]]],[11,"clone","","",545,[[],["gravity",4]]],[11,"clone","","",661,[[],["constraintadjustment",3]]],[11,"clone","","",662,[[],["xdgpositioner",3]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",553,[[],["error",4]]],[11,"clone","","",664,[[],["xdgsurface",3]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",561,[[],["resizeedge",4]]],[11,"clone","","",562,[[],["state",4]]],[11,"clone","","",665,[[],["xdgtoplevel",3]]],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",575,[[],["error",4]]],[11,"clone","","",666,[[],["xdgpopup",3]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",580,[[],["error",4]]],[11,"clone","","",667,[[],["wpviewporter",3]]],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",583,[[],["error",4]]],[11,"clone","","",669,[[],["wpviewport",3]]],[11,"cmp","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["contenthint",3]],["ordering",4]]],[11,"cmp","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["anchor",3]],["ordering",4]]],[11,"cmp","","",406,[[["gravity",3]],["ordering",4]]],[11,"cmp","","",407,[[["constraintadjustment",3]],["ordering",4]]],[11,"cmp","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["anchor",3]],["ordering",4]]],[11,"cmp","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["flags",3]],["ordering",4]]],[11,"cmp","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["kind",3]],["ordering",4]]],[11,"cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["constraintadjustment",3]],["ordering",4]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",0,[[["capability",4]]]],[11,"eq","","",1,[[["presentmethod",4]]]],[11,"eq","","",2,[[["error",4]]]],[11,"eq","","",9,[[["zwpfullscreenshellv1",3]]]],[11,"ne","","",9,[[["zwpfullscreenshellv1",3]]]],[11,"eq","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",10,[[["zwpfullscreenshellmodefeedbackv1",3]]]],[11,"ne","","",10,[[["zwpfullscreenshellmodefeedbackv1",3]]]],[11,"eq","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",588,[[["zwpidleinhibitmanagerv1",3]]]],[11,"ne","","",588,[[["zwpidleinhibitmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",590,[[["zwpidleinhibitorv1",3]]]],[11,"ne","","",590,[[["zwpidleinhibitorv1",3]]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[["zwpinputmethodcontextv1",3]]]],[11,"ne","","",42,[[["zwpinputmethodcontextv1",3]]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",43,[[["zwpinputmethodv1",3]]]],[11,"ne","","",43,[[["zwpinputmethodv1",3]]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",593,[[["zwpinputpanelv1",3]]]],[11,"ne","","",593,[[["zwpinputpanelv1",3]]]],[11,"eq","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",39,[[["position",4]]]],[11,"eq","","",595,[[["zwpinputpanelsurfacev1",3]]]],[11,"ne","","",595,[[["zwpinputpanelsurfacev1",3]]]],[11,"eq","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",597,[[["zwpinputtimestampsmanagerv1",3]]]],[11,"ne","","",597,[[["zwpinputtimestampsmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",51,[[["zwpinputtimestampsv1",3]]]],[11,"ne","","",51,[[["zwpinputtimestampsv1",3]]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",52,[[["error",4]]]],[11,"eq","","",599,[[["zwpkeyboardshortcutsinhibitmanagerv1",3]]]],[11,"ne","","",599,[[["zwpkeyboardshortcutsinhibitmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",57,[[["zwpkeyboardshortcutsinhibitorv1",3]]]],[11,"ne","","",57,[[["zwpkeyboardshortcutsinhibitorv1",3]]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",71,[[["zwplinuxdmabufv1",3]]]],[11,"ne","","",71,[[["zwplinuxdmabufv1",3]]]],[11,"eq","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",63,[[["error",4]]]],[11,"eq","","",64,[[["flags",4]]]],[11,"eq","","",72,[[["zwplinuxbufferparamsv1",3]]]],[11,"ne","","",72,[[["zwplinuxbufferparamsv1",3]]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[["error",4]]]],[11,"eq","","",601,[[["zwplinuxexplicitsynchronizationv1",3]]]],[11,"ne","","",601,[[["zwplinuxexplicitsynchronizationv1",3]]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",76,[[["error",4]]]],[11,"eq","","",603,[[["zwplinuxsurfacesynchronizationv1",3]]]],[11,"ne","","",603,[[["zwplinuxsurfacesynchronizationv1",3]]]],[11,"eq","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",82,[[["zwplinuxbufferreleasev1",3]]]],[11,"ne","","",82,[[["zwplinuxbufferreleasev1",3]]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",83,[[["error",4]]]],[11,"eq","","",84,[[["lifetime",4]]]],[11,"eq","","",606,[[["zwppointerconstraintsv1",3]]]],[11,"ne","","",606,[[["zwppointerconstraintsv1",3]]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",95,[[["zwplockedpointerv1",3]]]],[11,"ne","","",95,[[["zwplockedpointerv1",3]]]],[11,"eq","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",96,[[["zwpconfinedpointerv1",3]]]],[11,"ne","","",96,[[["zwpconfinedpointerv1",3]]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",608,[[["zwppointergesturesv1",3]]]],[11,"ne","","",608,[[["zwppointergesturesv1",3]]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",110,[[["zwppointergestureswipev1",3]]]],[11,"ne","","",110,[[["zwppointergestureswipev1",3]]]],[11,"eq","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",111,[[["zwppointergesturepinchv1",3]]]],[11,"ne","","",111,[[["zwppointergesturepinchv1",3]]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",610,[[["zwpprimaryselectiondevicemanagerv1",3]]]],[11,"ne","","",610,[[["zwpprimaryselectiondevicemanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",128,[[["zwpprimaryselectiondevicev1",3]]]],[11,"ne","","",128,[[["zwpprimaryselectiondevicev1",3]]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",129,[[["zwpprimaryselectionofferv1",3]]]],[11,"ne","","",129,[[["zwpprimaryselectionofferv1",3]]]],[11,"eq","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",130,[[["zwpprimaryselectionsourcev1",3]]]],[11,"ne","","",130,[[["zwpprimaryselectionsourcev1",3]]]],[11,"eq","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",612,[[["zwprelativepointermanagerv1",3]]]],[11,"ne","","",612,[[["zwprelativepointermanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",136,[[["zwprelativepointerv1",3]]]],[11,"ne","","",136,[[["zwprelativepointerv1",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",614,[[["zwptabletmanagerv1",3]]]],[11,"ne","","",614,[[["zwptabletmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",170,[[["zwptabletseatv1",3]]]],[11,"ne","","",170,[[["zwptabletseatv1",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",143,[[["type",4]]]],[11,"eq","","",144,[[["capability",4]]]],[11,"eq","","",145,[[["buttonstate",4]]]],[11,"eq","","",146,[[["error",4]]]],[11,"eq","","",171,[[["zwptablettoolv1",3]]]],[11,"ne","","",171,[[["zwptablettoolv1",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",172,[[["zwptabletv1",3]]]],[11,"ne","","",172,[[["zwptabletv1",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",616,[[["zwptabletmanagerv2",3]]]],[11,"ne","","",616,[[["zwptabletmanagerv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",238,[[["zwptabletseatv2",3]]]],[11,"ne","","",238,[[["zwptabletseatv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",180,[[["type",4]]]],[11,"eq","","",181,[[["capability",4]]]],[11,"eq","","",182,[[["buttonstate",4]]]],[11,"eq","","",183,[[["error",4]]]],[11,"eq","","",239,[[["zwptablettoolv2",3]]]],[11,"ne","","",239,[[["zwptablettoolv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",240,[[["zwptabletv2",3]]]],[11,"ne","","",240,[[["zwptabletv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",207,[[["source",4]]]],[11,"eq","","",241,[[["zwptabletpadringv2",3]]]],[11,"ne","","",241,[[["zwptabletpadringv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",214,[[["source",4]]]],[11,"eq","","",242,[[["zwptabletpadstripv2",3]]]],[11,"ne","","",242,[[["zwptabletpadstripv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",243,[[["zwptabletpadgroupv2",3]]]],[11,"ne","","",243,[[["zwptabletpadgroupv2",3]]]],[11,"eq","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",228,[[["buttonstate",4]]]],[11,"eq","","",244,[[["zwptabletpadv2",3]]]],[11,"ne","","",244,[[["zwptabletpadv2",3]]]],[11,"eq","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",245,[[["contenthint",4]]]],[11,"eq","","",246,[[["contentpurpose",4]]]],[11,"eq","","",247,[[["preeditstyle",4]]]],[11,"eq","","",248,[[["textdirection",4]]]],[11,"eq","","",273,[[["zwptextinputv1",3]]]],[11,"ne","","",273,[[["zwptextinputv1",3]]]],[11,"eq","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",618,[[["zwptextinputmanagerv1",3]]]],[11,"ne","","",618,[[["zwptextinputmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",274,[[["changecause",4]]]],[11,"eq","","",290,[[["contenthint",3]]]],[11,"ne","","",290,[[["contenthint",3]]]],[11,"eq","","",275,[[["contentpurpose",4]]]],[11,"eq","","",291,[[["zwptextinputv3",3]]]],[11,"ne","","",291,[[["zwptextinputv3",3]]]],[11,"eq","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",620,[[["zwptextinputmanagerv3",3]]]],[11,"ne","","",620,[[["zwptextinputmanagerv3",3]]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",622,[[["zxdgdecorationmanagerv1",3]]]],[11,"ne","","",622,[[["zxdgdecorationmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",294,[[["error",4]]]],[11,"eq","","",295,[[["mode",4]]]],[11,"eq","","",300,[[["zxdgtopleveldecorationv1",3]]]],[11,"ne","","",300,[[["zxdgtopleveldecorationv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",624,[[["zxdgexporterv1",3]]]],[11,"ne","","",624,[[["zxdgexporterv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",626,[[["zxdgimporterv1",3]]]],[11,"ne","","",626,[[["zxdgimporterv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",311,[[["zxdgexportedv1",3]]]],[11,"ne","","",311,[[["zxdgexportedv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",312,[[["zxdgimportedv1",3]]]],[11,"ne","","",312,[[["zxdgimportedv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",628,[[["zxdgexporterv2",3]]]],[11,"ne","","",628,[[["zxdgexporterv2",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",630,[[["zxdgimporterv2",3]]]],[11,"ne","","",630,[[["zxdgimporterv2",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",323,[[["zxdgexportedv2",3]]]],[11,"ne","","",323,[[["zxdgexportedv2",3]]]],[11,"eq","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",324,[[["zxdgimportedv2",3]]]],[11,"ne","","",324,[[["zxdgimportedv2",3]]]],[11,"eq","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",632,[[["zxdgoutputmanagerv1",3]]]],[11,"ne","","",632,[[["zxdgoutputmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",333,[[["zxdgoutputv1",3]]]],[11,"ne","","",333,[[["zxdgoutputv1",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",334,[[["version",4]]]],[11,"eq","","",335,[[["error",4]]]],[11,"eq","","",359,[[["xdgshell",3]]]],[11,"ne","","",359,[[["xdgshell",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",343,[[["resizeedge",4]]]],[11,"eq","","",344,[[["state",4]]]],[11,"eq","","",360,[[["xdgsurface",3]]]],[11,"ne","","",360,[[["xdgsurface",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",361,[[["xdgpopup",3]]]],[11,"ne","","",361,[[["xdgpopup",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",362,[[["error",4]]]],[11,"eq","","",404,[[["zxdgshellv6",3]]]],[11,"ne","","",404,[[["zxdgshellv6",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",369,[[["error",4]]]],[11,"eq","","",405,[[["anchor",3]]]],[11,"ne","","",405,[[["anchor",3]]]],[11,"eq","","",406,[[["gravity",3]]]],[11,"ne","","",406,[[["gravity",3]]]],[11,"eq","","",407,[[["constraintadjustment",3]]]],[11,"ne","","",407,[[["constraintadjustment",3]]]],[11,"eq","","",634,[[["zxdgpositionerv6",3]]]],[11,"ne","","",634,[[["zxdgpositionerv6",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",377,[[["error",4]]]],[11,"eq","","",408,[[["zxdgsurfacev6",3]]]],[11,"ne","","",408,[[["zxdgsurfacev6",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",385,[[["resizeedge",4]]]],[11,"eq","","",386,[[["state",4]]]],[11,"eq","","",409,[[["zxdgtoplevelv6",3]]]],[11,"ne","","",409,[[["zxdgtoplevelv6",3]]]],[11,"eq","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",399,[[["error",4]]]],[11,"eq","","",410,[[["zxdgpopupv6",3]]]],[11,"ne","","",410,[[["zxdgpopupv6",3]]]],[11,"eq","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",636,[[["zwpxwaylandkeyboardgrabmanagerv1",3]]]],[11,"ne","","",636,[[["zwpxwaylandkeyboardgrabmanagerv1",3]]]],[11,"eq","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",638,[[["zwpxwaylandkeyboardgrabv1",3]]]],[11,"ne","","",638,[[["zwpxwaylandkeyboardgrabv1",3]]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",640,[[["gtkprimaryselectiondevicemanager",3]]]],[11,"ne","","",640,[[["gtkprimaryselectiondevicemanager",3]]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",430,[[["gtkprimaryselectiondevice",3]]]],[11,"ne","","",430,[[["gtkprimaryselectiondevice",3]]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",431,[[["gtkprimaryselectionoffer",3]]]],[11,"ne","","",431,[[["gtkprimaryselectionoffer",3]]]],[11,"eq","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",432,[[["gtkprimaryselectionsource",3]]]],[11,"ne","","",432,[[["gtkprimaryselectionsource",3]]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",642,[[["zwlrdatacontrolmanagerv1",3]]]],[11,"ne","","",642,[[["zwlrdatacontrolmanagerv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",436,[[["error",4]]]],[11,"eq","","",453,[[["zwlrdatacontroldevicev1",3]]]],[11,"ne","","",453,[[["zwlrdatacontroldevicev1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",444,[[["error",4]]]],[11,"eq","","",454,[[["zwlrdatacontrolsourcev1",3]]]],[11,"ne","","",454,[[["zwlrdatacontrolsourcev1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",455,[[["zwlrdatacontrolofferv1",3]]]],[11,"ne","","",455,[[["zwlrdatacontrolofferv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",644,[[["zwlrexportdmabufmanagerv1",3]]]],[11,"ne","","",644,[[["zwlrexportdmabufmanagerv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",458,[[["flags",4]]]],[11,"eq","","",459,[[["cancelreason",4]]]],[11,"eq","","",466,[[["zwlrexportdmabufframev1",3]]]],[11,"ne","","",466,[[["zwlrexportdmabufframev1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",482,[[["zwlrforeigntoplevelmanagerv1",3]]]],[11,"ne","","",482,[[["zwlrforeigntoplevelmanagerv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",470,[[["state",4]]]],[11,"eq","","",471,[[["error",4]]]],[11,"eq","","",483,[[["zwlrforeigntoplevelhandlev1",3]]]],[11,"ne","","",483,[[["zwlrforeigntoplevelhandlev1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",646,[[["zwlrgammacontrolmanagerv1",3]]]],[11,"ne","","",646,[[["zwlrgammacontrolmanagerv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",486,[[["error",4]]]],[11,"eq","","",491,[[["zwlrgammacontrolv1",3]]]],[11,"ne","","",491,[[["zwlrgammacontrolv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",492,[[["error",4]]]],[11,"eq","","",648,[[["zwlrinputinhibitmanagerv1",3]]]],[11,"ne","","",648,[[["zwlrinputinhibitmanagerv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",650,[[["zwlrinputinhibitorv1",3]]]],[11,"ne","","",650,[[["zwlrinputinhibitorv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",496,[[["error",4]]]],[11,"eq","","",497,[[["layer",4]]]],[11,"eq","","",652,[[["zwlrlayershellv1",3]]]],[11,"ne","","",652,[[["zwlrlayershellv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",500,[[["error",4]]]],[11,"eq","","",512,[[["anchor",3]]]],[11,"ne","","",512,[[["anchor",3]]]],[11,"eq","","",513,[[["zwlrlayersurfacev1",3]]]],[11,"ne","","",513,[[["zwlrlayersurfacev1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",654,[[["zwlrscreencopymanagerv1",3]]]],[11,"ne","","",654,[[["zwlrscreencopymanagerv1",3]]]],[11,"eq","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",517,[[["error",4]]]],[11,"eq","","",526,[[["flags",3]]]],[11,"ne","","",526,[[["flags",3]]]],[11,"eq","","",527,[[["zwlrscreencopyframev1",3]]]],[11,"ne","","",527,[[["zwlrscreencopyframev1",3]]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation","",528,[[["error",4]]]],[11,"eq","","",656,[[["wppresentation",3]]]],[11,"ne","","",656,[[["wppresentation",3]]]],[11,"eq","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["kind",3]]]],[11,"ne","","",657,[[["kind",3]]]],[11,"eq","","",658,[[["wppresentationfeedback",3]]]],[11,"ne","","",658,[[["wppresentationfeedback",3]]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_wm_base","",536,[[["error",4]]]],[11,"eq","","",660,[[["xdgwmbase",3]]]],[11,"ne","","",660,[[["xdgwmbase",3]]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_positioner","",543,[[["error",4]]]],[11,"eq","","",544,[[["anchor",4]]]],[11,"eq","","",545,[[["gravity",4]]]],[11,"eq","","",661,[[["constraintadjustment",3]]]],[11,"ne","","",661,[[["constraintadjustment",3]]]],[11,"eq","","",662,[[["xdgpositioner",3]]]],[11,"ne","","",662,[[["xdgpositioner",3]]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_surface","",553,[[["error",4]]]],[11,"eq","","",664,[[["xdgsurface",3]]]],[11,"ne","","",664,[[["xdgsurface",3]]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_toplevel","",561,[[["resizeedge",4]]]],[11,"eq","","",562,[[["state",4]]]],[11,"eq","","",665,[[["xdgtoplevel",3]]]],[11,"ne","","",665,[[["xdgtoplevel",3]]]],[11,"eq","wayland_protocols::xdg_shell::server::xdg_popup","",575,[[["error",4]]]],[11,"eq","","",666,[[["xdgpopup",3]]]],[11,"ne","","",666,[[["xdgpopup",3]]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewporter","",580,[[["error",4]]]],[11,"eq","","",667,[[["wpviewporter",3]]]],[11,"ne","","",667,[[["wpviewporter",3]]]],[11,"eq","wayland_protocols::viewporter::server::wp_viewport","",583,[[["error",4]]]],[11,"eq","","",669,[[["wpviewport",3]]]],[11,"ne","","",669,[[["wpviewport",3]]]],[11,"partial_cmp","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["contenthint",3]],[["option",4],["ordering",4]]]],[11,"lt","","",290,[[["contenthint",3]]]],[11,"le","","",290,[[["contenthint",3]]]],[11,"gt","","",290,[[["contenthint",3]]]],[11,"ge","","",290,[[["contenthint",3]]]],[11,"partial_cmp","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["anchor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",405,[[["anchor",3]]]],[11,"le","","",405,[[["anchor",3]]]],[11,"gt","","",405,[[["anchor",3]]]],[11,"ge","","",405,[[["anchor",3]]]],[11,"partial_cmp","","",406,[[["gravity",3]],[["option",4],["ordering",4]]]],[11,"lt","","",406,[[["gravity",3]]]],[11,"le","","",406,[[["gravity",3]]]],[11,"gt","","",406,[[["gravity",3]]]],[11,"ge","","",406,[[["gravity",3]]]],[11,"partial_cmp","","",407,[[["constraintadjustment",3]],[["option",4],["ordering",4]]]],[11,"lt","","",407,[[["constraintadjustment",3]]]],[11,"le","","",407,[[["constraintadjustment",3]]]],[11,"gt","","",407,[[["constraintadjustment",3]]]],[11,"ge","","",407,[[["constraintadjustment",3]]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["anchor",3]],[["option",4],["ordering",4]]]],[11,"lt","","",512,[[["anchor",3]]]],[11,"le","","",512,[[["anchor",3]]]],[11,"gt","","",512,[[["anchor",3]]]],[11,"ge","","",512,[[["anchor",3]]]],[11,"partial_cmp","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["flags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",526,[[["flags",3]]]],[11,"le","","",526,[[["flags",3]]]],[11,"gt","","",526,[[["flags",3]]]],[11,"ge","","",526,[[["flags",3]]]],[11,"partial_cmp","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["kind",3]],[["option",4],["ordering",4]]]],[11,"lt","","",657,[[["kind",3]]]],[11,"le","","",657,[[["kind",3]]]],[11,"gt","","",657,[[["kind",3]]]],[11,"ge","","",657,[[["kind",3]]]],[11,"partial_cmp","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["constraintadjustment",3]],[["option",4],["ordering",4]]]],[11,"lt","","",661,[[["constraintadjustment",3]]]],[11,"le","","",661,[[["constraintadjustment",3]]]],[11,"gt","","",661,[[["constraintadjustment",3]]]],[11,"ge","","",661,[[["constraintadjustment",3]]]],[11,"fmt","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",39,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",52,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",63,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",73,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",76,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",143,[[["formatter",3]],["result",6]]],[11,"fmt","","",144,[[["formatter",3]],["result",6]]],[11,"fmt","","",145,[[["formatter",3]],["result",6]]],[11,"fmt","","",146,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",180,[[["formatter",3]],["result",6]]],[11,"fmt","","",181,[[["formatter",3]],["result",6]]],[11,"fmt","","",182,[[["formatter",3]],["result",6]]],[11,"fmt","","",183,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",207,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",214,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",228,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",245,[[["formatter",3]],["result",6]]],[11,"fmt","","",246,[[["formatter",3]],["result",6]]],[11,"fmt","","",247,[[["formatter",3]],["result",6]]],[11,"fmt","","",248,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",274,[[["formatter",3]],["result",6]]],[11,"fmt","","",290,[[["formatter",3]],["result",6]]],[11,"fmt","","",275,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",294,[[["formatter",3]],["result",6]]],[11,"fmt","","",295,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",334,[[["formatter",3]],["result",6]]],[11,"fmt","","",335,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",343,[[["formatter",3]],["result",6]]],[11,"fmt","","",344,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",362,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",369,[[["formatter",3]],["result",6]]],[11,"fmt","","",405,[[["formatter",3]],["result",6]]],[11,"fmt","","",406,[[["formatter",3]],["result",6]]],[11,"fmt","","",407,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",377,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",385,[[["formatter",3]],["result",6]]],[11,"fmt","","",386,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",399,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",436,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",444,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",458,[[["formatter",3]],["result",6]]],[11,"fmt","","",459,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",470,[[["formatter",3]],["result",6]]],[11,"fmt","","",471,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",486,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",492,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",496,[[["formatter",3]],["result",6]]],[11,"fmt","","",497,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",500,[[["formatter",3]],["result",6]]],[11,"fmt","","",512,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",517,[[["formatter",3]],["result",6]]],[11,"fmt","","",526,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation","",528,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_wm_base","",536,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",543,[[["formatter",3]],["result",6]]],[11,"fmt","","",544,[[["formatter",3]],["result",6]]],[11,"fmt","","",545,[[["formatter",3]],["result",6]]],[11,"fmt","","",661,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_surface","",553,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_toplevel","",561,[[["formatter",3]],["result",6]]],[11,"fmt","","",562,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_popup","",575,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewporter","",580,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::viewporter::server::wp_viewport","",583,[[["formatter",3]],["result",6]]],[11,"sub","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the set difference of the two sets of flags.",290,[[["contenthint",3]],["contenthint",3]]],[11,"sub","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the set difference of the two sets of flags.",405,[[["anchor",3]],["anchor",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",406,[[["gravity",3]],["gravity",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",407,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"sub","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the set difference of the two sets of flags.",512,[[["anchor",3]],["anchor",3]]],[11,"sub","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the set difference of the two sets of flags.",526,[[["flags",3]],["flags",3]]],[11,"sub","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the set difference of the two sets of flags.",657,[[["kind",3]],["kind",3]]],[11,"sub","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the set difference of the two sets of flags.",661,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"sub_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Disables all flags enabled in the set.",290,[[["contenthint",3]]]],[11,"sub_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Disables all flags enabled in the set.",405,[[["anchor",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",406,[[["gravity",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",407,[[["constraintadjustment",3]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Disables all flags enabled in the set.",512,[[["anchor",3]]]],[11,"sub_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Disables all flags enabled in the set.",526,[[["flags",3]]]],[11,"sub_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Disables all flags enabled in the set.",657,[[["kind",3]]]],[11,"sub_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags enabled in the set.",661,[[["constraintadjustment",3]]]],[11,"not","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the complement of this set of flags.",290,[[],["contenthint",3]]],[11,"not","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the complement of this set of flags.",405,[[],["anchor",3]]],[11,"not","","Returns the complement of this set of flags.",406,[[],["gravity",3]]],[11,"not","","Returns the complement of this set of flags.",407,[[],["constraintadjustment",3]]],[11,"not","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the complement of this set of flags.",512,[[],["anchor",3]]],[11,"not","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the complement of this set of flags.",526,[[],["flags",3]]],[11,"not","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the complement of this set of flags.",657,[[],["kind",3]]],[11,"not","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the complement of this set of flags.",661,[[],["constraintadjustment",3]]],[11,"bitand","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the intersection between the two sets of flags.",290,[[["contenthint",3]],["contenthint",3]]],[11,"bitand","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the intersection between the two sets of flags.",405,[[["anchor",3]],["anchor",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",406,[[["gravity",3]],["gravity",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",407,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"bitand","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the intersection between the two sets of flags.",512,[[["anchor",3]],["anchor",3]]],[11,"bitand","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the intersection between the two sets of flags.",526,[[["flags",3]],["flags",3]]],[11,"bitand","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the intersection between the two sets of flags.",657,[[["kind",3]],["kind",3]]],[11,"bitand","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the intersection between the two sets of flags.",661,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"bitor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the union of the two sets of flags.",290,[[["contenthint",3]],["contenthint",3]]],[11,"bitor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the union of the two sets of flags.",405,[[["anchor",3]],["anchor",3]]],[11,"bitor","","Returns the union of the two sets of flags.",406,[[["gravity",3]],["gravity",3]]],[11,"bitor","","Returns the union of the two sets of flags.",407,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"bitor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the union of the two sets of flags.",512,[[["anchor",3]],["anchor",3]]],[11,"bitor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the union of the two sets of flags.",526,[[["flags",3]],["flags",3]]],[11,"bitor","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the union of the two sets of flags.",657,[[["kind",3]],["kind",3]]],[11,"bitor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the union of the two sets of flags.",661,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"bitxor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Returns the left flags, but with all the right flags…",290,[[["contenthint",3]],["contenthint",3]]],[11,"bitxor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Returns the left flags, but with all the right flags…",405,[[["anchor",3]],["anchor",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",406,[[["gravity",3]],["gravity",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",407,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"bitxor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Returns the left flags, but with all the right flags…",512,[[["anchor",3]],["anchor",3]]],[11,"bitxor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Returns the left flags, but with all the right flags…",526,[[["flags",3]],["flags",3]]],[11,"bitxor","wayland_protocols::presentation_time::server::wp_presentation_feedback","Returns the left flags, but with all the right flags…",657,[[["kind",3]],["kind",3]]],[11,"bitxor","wayland_protocols::xdg_shell::server::xdg_positioner","Returns the left flags, but with all the right flags…",661,[[["constraintadjustment",3]],["constraintadjustment",3]]],[11,"bitand_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Disables all flags disabled in the set.",290,[[["contenthint",3]]]],[11,"bitand_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Disables all flags disabled in the set.",405,[[["anchor",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",406,[[["gravity",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",407,[[["constraintadjustment",3]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Disables all flags disabled in the set.",512,[[["anchor",3]]]],[11,"bitand_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Disables all flags disabled in the set.",526,[[["flags",3]]]],[11,"bitand_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Disables all flags disabled in the set.",657,[[["kind",3]]]],[11,"bitand_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Disables all flags disabled in the set.",661,[[["constraintadjustment",3]]]],[11,"bitor_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Adds the set of flags.",290,[[["contenthint",3]]]],[11,"bitor_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Adds the set of flags.",405,[[["anchor",3]]]],[11,"bitor_assign","","Adds the set of flags.",406,[[["gravity",3]]]],[11,"bitor_assign","","Adds the set of flags.",407,[[["constraintadjustment",3]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Adds the set of flags.",512,[[["anchor",3]]]],[11,"bitor_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Adds the set of flags.",526,[[["flags",3]]]],[11,"bitor_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Adds the set of flags.",657,[[["kind",3]]]],[11,"bitor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Adds the set of flags.",661,[[["constraintadjustment",3]]]],[11,"bitxor_assign","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","Toggles the set of flags.",290,[[["contenthint",3]]]],[11,"bitxor_assign","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","Toggles the set of flags.",405,[[["anchor",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",406,[[["gravity",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",407,[[["constraintadjustment",3]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","Toggles the set of flags.",512,[[["anchor",3]]]],[11,"bitxor_assign","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","Toggles the set of flags.",526,[[["flags",3]]]],[11,"bitxor_assign","wayland_protocols::presentation_time::server::wp_presentation_feedback","Toggles the set of flags.",657,[[["kind",3]]]],[11,"bitxor_assign","wayland_protocols::xdg_shell::server::xdg_positioner","Toggles the set of flags.",661,[[["constraintadjustment",3]]]],[11,"hash","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[]]],[11,"hash","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[]]],[11,"hash","","",406,[[]]],[11,"hash","","",407,[[]]],[11,"hash","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[]]],[11,"hash","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[]]],[11,"hash","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[]]],[11,"hash","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[]]],[11,"from_iter","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["intoiterator",8]],["contenthint",3]]],[11,"from_iter","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["intoiterator",8]],["anchor",3]]],[11,"from_iter","","",406,[[["intoiterator",8]],["gravity",3]]],[11,"from_iter","","",407,[[["intoiterator",8]],["constraintadjustment",3]]],[11,"from_iter","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["intoiterator",8]],["anchor",3]]],[11,"from_iter","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["intoiterator",8]],["flags",3]]],[11,"from_iter","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["intoiterator",8]],["kind",3]]],[11,"from_iter","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["intoiterator",8]],["constraintadjustment",3]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["formatter",3]],["result",6]]],[11,"fmt","","",406,[[["formatter",3]],["result",6]]],[11,"fmt","","",407,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["formatter",3]],["result",6]]],[11,"fmt","","",406,[[["formatter",3]],["result",6]]],[11,"fmt","","",407,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["formatter",3]],["result",6]]],[11,"fmt","","",406,[[["formatter",3]],["result",6]]],[11,"fmt","","",407,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",290,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",405,[[["formatter",3]],["result",6]]],[11,"fmt","","",406,[[["formatter",3]],["result",6]]],[11,"fmt","","",407,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",512,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",526,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::presentation_time::server::wp_presentation_feedback","",657,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_protocols::xdg_shell::server::xdg_positioner","",661,[[["formatter",3]],["result",6]]],[11,"c_interface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",9,[[]]],[11,"c_interface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",10,[[]]],[11,"c_interface","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",588,[[]]],[11,"c_interface","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",590,[[]]],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,[[]]],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",43,[[]]],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",593,[[]]],[11,"c_interface","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",595,[[]]],[11,"c_interface","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",597,[[]]],[11,"c_interface","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",51,[[]]],[11,"c_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",599,[[]]],[11,"c_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",57,[[]]],[11,"c_interface","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",71,[[]]],[11,"c_interface","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",72,[[]]],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",601,[[]]],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",603,[[]]],[11,"c_interface","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",82,[[]]],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",606,[[]]],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",95,[[]]],[11,"c_interface","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",96,[[]]],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",608,[[]]],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",110,[[]]],[11,"c_interface","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",111,[[]]],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",610,[[]]],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",128,[[]]],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",129,[[]]],[11,"c_interface","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",130,[[]]],[11,"c_interface","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",612,[[]]],[11,"c_interface","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",136,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",614,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",170,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",171,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",172,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",616,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",238,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",239,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",240,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",241,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",242,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",243,[[]]],[11,"c_interface","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",244,[[]]],[11,"c_interface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",273,[[]]],[11,"c_interface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",618,[[]]],[11,"c_interface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",291,[[]]],[11,"c_interface","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",620,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",622,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",300,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",624,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",626,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",311,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",312,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",628,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",630,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",323,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",324,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",632,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",333,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",359,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",360,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",361,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",404,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",634,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",408,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",409,[[]]],[11,"c_interface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",410,[[]]],[11,"c_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",636,[[]]],[11,"c_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",638,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",640,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",430,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",431,[[]]],[11,"c_interface","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",432,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",642,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",453,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",454,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",455,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",644,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",466,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",482,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",483,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",646,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",491,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",648,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",650,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",652,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",513,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",654,[[]]],[11,"c_interface","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",527,[[]]],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation","",656,[[]]],[11,"c_interface","wayland_protocols::presentation_time::server::wp_presentation_feedback","",658,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_wm_base","",660,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_positioner","",662,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_surface","",664,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_toplevel","",665,[[]]],[11,"c_interface","wayland_protocols::xdg_shell::server::xdg_popup","",666,[[]]],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewporter","",667,[[]]],[11,"c_interface","wayland_protocols::viewporter::server::wp_viewport","",669,[[]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",3,[[]]],[11,"opcode","","",3,[[]]],[11,"since","","",3,[[]]],[11,"child","","",3,[[],[["object",3],["option",4]]]],[11,"from_raw","","",3,[[["message",3]],["result",4]]],[11,"into_raw","","",3,[[],["message",3]]],[11,"from_raw_c","","",3,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",3,[[]]],[11,"is_destructor","","",6,[[]]],[11,"opcode","","",6,[[]]],[11,"since","","",6,[[]]],[11,"child","","",6,[[],[["object",3],["option",4]]]],[11,"from_raw","","",6,[[["message",3]],["result",4]]],[11,"into_raw","","",6,[[],["message",3]]],[11,"from_raw_c","","",6,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",6,[[]]],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",587,[[]]],[11,"opcode","","",587,[[]]],[11,"since","","",587,[[]]],[11,"child","","",587,[[],[["object",3],["option",4]]]],[11,"from_raw","","",587,[[["message",3]],["result",4]]],[11,"into_raw","","",587,[[],["message",3]]],[11,"from_raw_c","","",587,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",587,[[]]],[11,"is_destructor","","",8,[[]]],[11,"opcode","","",8,[[]]],[11,"since","","",8,[[]]],[11,"child","","",8,[[],[["object",3],["option",4]]]],[11,"from_raw","","",8,[[["message",3]],["result",4]]],[11,"into_raw","","",8,[[],["message",3]]],[11,"from_raw_c","","",8,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",8,[[]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",11,[[]]],[11,"opcode","","",11,[[]]],[11,"since","","",11,[[]]],[11,"child","","",11,[[],[["object",3],["option",4]]]],[11,"from_raw","","",11,[[["message",3]],["result",4]]],[11,"into_raw","","",11,[[],["message",3]]],[11,"from_raw_c","","",11,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",11,[[]]],[11,"is_destructor","","",589,[[]]],[11,"opcode","","",589,[[]]],[11,"since","","",589,[[]]],[11,"child","","",589,[[],[["object",3],["option",4]]]],[11,"from_raw","","",589,[[["message",3]],["result",4]]],[11,"into_raw","","",589,[[],["message",3]]],[11,"from_raw_c","","",589,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",589,[[]]],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",13,[[]]],[11,"opcode","","",13,[[]]],[11,"since","","",13,[[]]],[11,"child","","",13,[[],[["object",3],["option",4]]]],[11,"from_raw","","",13,[[["message",3]],["result",4]]],[11,"into_raw","","",13,[[],["message",3]]],[11,"from_raw_c","","",13,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",13,[[]]],[11,"is_destructor","","",591,[[]]],[11,"opcode","","",591,[[]]],[11,"since","","",591,[[]]],[11,"child","","",591,[[],[["object",3],["option",4]]]],[11,"from_raw","","",591,[[["message",3]],["result",4]]],[11,"into_raw","","",591,[[],["message",3]]],[11,"from_raw_c","","",591,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",591,[[]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",14,[[]]],[11,"opcode","","",14,[[]]],[11,"since","","",14,[[]]],[11,"child","","",14,[[],[["object",3],["option",4]]]],[11,"from_raw","","",14,[[["message",3]],["result",4]]],[11,"into_raw","","",14,[[],["message",3]]],[11,"from_raw_c","","",14,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",14,[[]]],[11,"is_destructor","","",28,[[]]],[11,"opcode","","",28,[[]]],[11,"since","","",28,[[]]],[11,"child","","",28,[[],[["object",3],["option",4]]]],[11,"from_raw","","",28,[[["message",3]],["result",4]]],[11,"into_raw","","",28,[[],["message",3]]],[11,"from_raw_c","","",28,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",28,[[]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",592,[[]]],[11,"opcode","","",592,[[]]],[11,"since","","",592,[[]]],[11,"child","","",592,[[],[["object",3],["option",4]]]],[11,"from_raw","","",592,[[["message",3]],["result",4]]],[11,"into_raw","","",592,[[],["message",3]]],[11,"from_raw_c","","",592,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",592,[[]]],[11,"is_destructor","","",34,[[]]],[11,"opcode","","",34,[[]]],[11,"since","","",34,[[]]],[11,"child","","",34,[[],[["object",3],["option",4]]]],[11,"from_raw","","",34,[[["message",3]],["result",4]]],[11,"into_raw","","",34,[[],["message",3]]],[11,"from_raw_c","","",34,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",34,[[]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",37,[[]]],[11,"opcode","","",37,[[]]],[11,"since","","",37,[[]]],[11,"child","","",37,[[],[["object",3],["option",4]]]],[11,"from_raw","","",37,[[["message",3]],["result",4]]],[11,"into_raw","","",37,[[],["message",3]]],[11,"from_raw_c","","",37,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",37,[[]]],[11,"is_destructor","","",594,[[]]],[11,"opcode","","",594,[[]]],[11,"since","","",594,[[]]],[11,"child","","",594,[[],[["object",3],["option",4]]]],[11,"from_raw","","",594,[[["message",3]],["result",4]]],[11,"into_raw","","",594,[[],["message",3]]],[11,"from_raw_c","","",594,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",594,[[]]],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",40,[[]]],[11,"opcode","","",40,[[]]],[11,"since","","",40,[[]]],[11,"child","","",40,[[],[["object",3],["option",4]]]],[11,"from_raw","","",40,[[["message",3]],["result",4]]],[11,"into_raw","","",40,[[],["message",3]]],[11,"from_raw_c","","",40,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",40,[[]]],[11,"is_destructor","","",596,[[]]],[11,"opcode","","",596,[[]]],[11,"since","","",596,[[]]],[11,"child","","",596,[[],[["object",3],["option",4]]]],[11,"from_raw","","",596,[[["message",3]],["result",4]]],[11,"into_raw","","",596,[[],["message",3]]],[11,"from_raw_c","","",596,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",596,[[]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_manager_v1","",44,[[]]],[11,"opcode","","",44,[[]]],[11,"since","","",44,[[]]],[11,"child","","",44,[[],[["object",3],["option",4]]]],[11,"from_raw","","",44,[[["message",3]],["result",4]]],[11,"into_raw","","",44,[[],["message",3]]],[11,"from_raw_c","","",44,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",44,[[]]],[11,"is_destructor","","",598,[[]]],[11,"opcode","","",598,[[]]],[11,"since","","",598,[[]]],[11,"child","","",598,[[],[["object",3],["option",4]]]],[11,"from_raw","","",598,[[["message",3]],["result",4]]],[11,"into_raw","","",598,[[],["message",3]]],[11,"from_raw_c","","",598,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",598,[[]]],[11,"is_destructor","wayland_protocols::unstable::input_timestamps::v1::server::zwp_input_timestamps_v1","",48,[[]]],[11,"opcode","","",48,[[]]],[11,"since","","",48,[[]]],[11,"child","","",48,[[],[["object",3],["option",4]]]],[11,"from_raw","","",48,[[["message",3]],["result",4]]],[11,"into_raw","","",48,[[],["message",3]]],[11,"from_raw_c","","",48,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",48,[[]]],[11,"is_destructor","","",49,[[]]],[11,"opcode","","",49,[[]]],[11,"since","","",49,[[]]],[11,"child","","",49,[[],[["object",3],["option",4]]]],[11,"from_raw","","",49,[[["message",3]],["result",4]]],[11,"into_raw","","",49,[[],["message",3]]],[11,"from_raw_c","","",49,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",49,[[]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",53,[[]]],[11,"opcode","","",53,[[]]],[11,"since","","",53,[[]]],[11,"child","","",53,[[],[["object",3],["option",4]]]],[11,"from_raw","","",53,[[["message",3]],["result",4]]],[11,"into_raw","","",53,[[],["message",3]]],[11,"from_raw_c","","",53,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",53,[[]]],[11,"is_destructor","","",600,[[]]],[11,"opcode","","",600,[[]]],[11,"since","","",600,[[]]],[11,"child","","",600,[[],[["object",3],["option",4]]]],[11,"from_raw","","",600,[[["message",3]],["result",4]]],[11,"into_raw","","",600,[[],["message",3]]],[11,"from_raw_c","","",600,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",600,[[]]],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",55,[[]]],[11,"opcode","","",55,[[]]],[11,"since","","",55,[[]]],[11,"child","","",55,[[],[["object",3],["option",4]]]],[11,"from_raw","","",55,[[["message",3]],["result",4]]],[11,"into_raw","","",55,[[],["message",3]]],[11,"from_raw_c","","",55,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",55,[[]]],[11,"is_destructor","","",56,[[]]],[11,"opcode","","",56,[[]]],[11,"since","","",56,[[]]],[11,"child","","",56,[[],[["object",3],["option",4]]]],[11,"from_raw","","",56,[[["message",3]],["result",4]]],[11,"into_raw","","",56,[[],["message",3]]],[11,"from_raw_c","","",56,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",56,[[]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",58,[[]]],[11,"opcode","","",58,[[]]],[11,"since","","",58,[[]]],[11,"child","","",58,[[],[["object",3],["option",4]]]],[11,"from_raw","","",58,[[["message",3]],["result",4]]],[11,"into_raw","","",58,[[],["message",3]]],[11,"from_raw_c","","",58,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",58,[[]]],[11,"is_destructor","","",60,[[]]],[11,"opcode","","",60,[[]]],[11,"since","","",60,[[]]],[11,"child","","",60,[[],[["object",3],["option",4]]]],[11,"from_raw","","",60,[[["message",3]],["result",4]]],[11,"into_raw","","",60,[[],["message",3]]],[11,"from_raw_c","","",60,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",60,[[]]],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",65,[[]]],[11,"opcode","","",65,[[]]],[11,"since","","",65,[[]]],[11,"child","","",65,[[],[["object",3],["option",4]]]],[11,"from_raw","","",65,[[["message",3]],["result",4]]],[11,"into_raw","","",65,[[],["message",3]]],[11,"from_raw_c","","",65,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",65,[[]]],[11,"is_destructor","","",69,[[]]],[11,"opcode","","",69,[[]]],[11,"since","","",69,[[]]],[11,"child","","",69,[[],[["object",3],["option",4]]]],[11,"from_raw","","",69,[[["message",3]],["result",4]]],[11,"into_raw","","",69,[[],["message",3]]],[11,"from_raw_c","","",69,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",69,[[]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_explicit_synchronization_v1","",74,[[]]],[11,"opcode","","",74,[[]]],[11,"since","","",74,[[]]],[11,"child","","",74,[[],[["object",3],["option",4]]]],[11,"from_raw","","",74,[[["message",3]],["result",4]]],[11,"into_raw","","",74,[[],["message",3]]],[11,"from_raw_c","","",74,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",74,[[]]],[11,"is_destructor","","",602,[[]]],[11,"opcode","","",602,[[]]],[11,"since","","",602,[[]]],[11,"child","","",602,[[],[["object",3],["option",4]]]],[11,"from_raw","","",602,[[["message",3]],["result",4]]],[11,"into_raw","","",602,[[],["message",3]]],[11,"from_raw_c","","",602,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",602,[[]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_surface_synchronization_v1","",77,[[]]],[11,"opcode","","",77,[[]]],[11,"since","","",77,[[]]],[11,"child","","",77,[[],[["object",3],["option",4]]]],[11,"from_raw","","",77,[[["message",3]],["result",4]]],[11,"into_raw","","",77,[[],["message",3]]],[11,"from_raw_c","","",77,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",77,[[]]],[11,"is_destructor","","",604,[[]]],[11,"opcode","","",604,[[]]],[11,"since","","",604,[[]]],[11,"child","","",604,[[],[["object",3],["option",4]]]],[11,"from_raw","","",604,[[["message",3]],["result",4]]],[11,"into_raw","","",604,[[],["message",3]]],[11,"from_raw_c","","",604,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",604,[[]]],[11,"is_destructor","wayland_protocols::unstable::linux_explicit_synchronization::v1::server::zwp_linux_buffer_release_v1","",605,[[]]],[11,"opcode","","",605,[[]]],[11,"since","","",605,[[]]],[11,"child","","",605,[[],[["object",3],["option",4]]]],[11,"from_raw","","",605,[[["message",3]],["result",4]]],[11,"into_raw","","",605,[[],["message",3]]],[11,"from_raw_c","","",605,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",605,[[]]],[11,"is_destructor","","",80,[[]]],[11,"opcode","","",80,[[]]],[11,"since","","",80,[[]]],[11,"child","","",80,[[],[["object",3],["option",4]]]],[11,"from_raw","","",80,[[["message",3]],["result",4]]],[11,"into_raw","","",80,[[],["message",3]]],[11,"from_raw_c","","",80,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",80,[[]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",85,[[]]],[11,"opcode","","",85,[[]]],[11,"since","","",85,[[]]],[11,"child","","",85,[[],[["object",3],["option",4]]]],[11,"from_raw","","",85,[[["message",3]],["result",4]]],[11,"into_raw","","",85,[[],["message",3]]],[11,"from_raw_c","","",85,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",85,[[]]],[11,"is_destructor","","",607,[[]]],[11,"opcode","","",607,[[]]],[11,"since","","",607,[[]]],[11,"child","","",607,[[],[["object",3],["option",4]]]],[11,"from_raw","","",607,[[["message",3]],["result",4]]],[11,"into_raw","","",607,[[],["message",3]]],[11,"from_raw_c","","",607,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",607,[[]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",88,[[]]],[11,"opcode","","",88,[[]]],[11,"since","","",88,[[]]],[11,"child","","",88,[[],[["object",3],["option",4]]]],[11,"from_raw","","",88,[[["message",3]],["result",4]]],[11,"into_raw","","",88,[[],["message",3]]],[11,"from_raw_c","","",88,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",88,[[]]],[11,"is_destructor","","",91,[[]]],[11,"opcode","","",91,[[]]],[11,"since","","",91,[[]]],[11,"child","","",91,[[],[["object",3],["option",4]]]],[11,"from_raw","","",91,[[["message",3]],["result",4]]],[11,"into_raw","","",91,[[],["message",3]]],[11,"from_raw_c","","",91,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",91,[[]]],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",92,[[]]],[11,"opcode","","",92,[[]]],[11,"since","","",92,[[]]],[11,"child","","",92,[[],[["object",3],["option",4]]]],[11,"from_raw","","",92,[[["message",3]],["result",4]]],[11,"into_raw","","",92,[[],["message",3]]],[11,"from_raw_c","","",92,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",92,[[]]],[11,"is_destructor","","",94,[[]]],[11,"opcode","","",94,[[]]],[11,"since","","",94,[[]]],[11,"child","","",94,[[],[["object",3],["option",4]]]],[11,"from_raw","","",94,[[["message",3]],["result",4]]],[11,"into_raw","","",94,[[],["message",3]]],[11,"from_raw_c","","",94,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",94,[[]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",97,[[]]],[11,"opcode","","",97,[[]]],[11,"since","","",97,[[]]],[11,"child","","",97,[[],[["object",3],["option",4]]]],[11,"from_raw","","",97,[[["message",3]],["result",4]]],[11,"into_raw","","",97,[[],["message",3]]],[11,"from_raw_c","","",97,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",97,[[]]],[11,"is_destructor","","",609,[[]]],[11,"opcode","","",609,[[]]],[11,"since","","",609,[[]]],[11,"child","","",609,[[],[["object",3],["option",4]]]],[11,"from_raw","","",609,[[["message",3]],["result",4]]],[11,"into_raw","","",609,[[],["message",3]]],[11,"from_raw_c","","",609,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",609,[[]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",100,[[]]],[11,"opcode","","",100,[[]]],[11,"since","","",100,[[]]],[11,"child","","",100,[[],[["object",3],["option",4]]]],[11,"from_raw","","",100,[[["message",3]],["result",4]]],[11,"into_raw","","",100,[[],["message",3]]],[11,"from_raw_c","","",100,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",100,[[]]],[11,"is_destructor","","",101,[[]]],[11,"opcode","","",101,[[]]],[11,"since","","",101,[[]]],[11,"child","","",101,[[],[["object",3],["option",4]]]],[11,"from_raw","","",101,[[["message",3]],["result",4]]],[11,"into_raw","","",101,[[],["message",3]]],[11,"from_raw_c","","",101,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",101,[[]]],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",105,[[]]],[11,"opcode","","",105,[[]]],[11,"since","","",105,[[]]],[11,"child","","",105,[[],[["object",3],["option",4]]]],[11,"from_raw","","",105,[[["message",3]],["result",4]]],[11,"into_raw","","",105,[[],["message",3]]],[11,"from_raw_c","","",105,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",105,[[]]],[11,"is_destructor","","",106,[[]]],[11,"opcode","","",106,[[]]],[11,"since","","",106,[[]]],[11,"child","","",106,[[],[["object",3],["option",4]]]],[11,"from_raw","","",106,[[["message",3]],["result",4]]],[11,"into_raw","","",106,[[],["message",3]]],[11,"from_raw_c","","",106,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",106,[[]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_manager_v1","",112,[[]]],[11,"opcode","","",112,[[]]],[11,"since","","",112,[[]]],[11,"child","","",112,[[],[["object",3],["option",4]]]],[11,"from_raw","","",112,[[["message",3]],["result",4]]],[11,"into_raw","","",112,[[],["message",3]]],[11,"from_raw_c","","",112,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",112,[[]]],[11,"is_destructor","","",611,[[]]],[11,"opcode","","",611,[[]]],[11,"since","","",611,[[]]],[11,"child","","",611,[[],[["object",3],["option",4]]]],[11,"from_raw","","",611,[[["message",3]],["result",4]]],[11,"into_raw","","",611,[[],["message",3]]],[11,"from_raw_c","","",611,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",611,[[]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_device_v1","",115,[[]]],[11,"opcode","","",115,[[]]],[11,"since","","",115,[[]]],[11,"child","","",115,[[],[["object",3],["option",4]]]],[11,"from_raw","","",115,[[["message",3]],["result",4]]],[11,"into_raw","","",115,[[],["message",3]]],[11,"from_raw_c","","",115,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",115,[[]]],[11,"is_destructor","","",117,[[]]],[11,"opcode","","",117,[[]]],[11,"since","","",117,[[]]],[11,"child","","",117,[[],[["object",3],["option",4]]]],[11,"from_raw","","",117,[[["message",3]],["result",4]]],[11,"into_raw","","",117,[[],["message",3]]],[11,"from_raw_c","","",117,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",117,[[]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_offer_v1","",120,[[]]],[11,"opcode","","",120,[[]]],[11,"since","","",120,[[]]],[11,"child","","",120,[[],[["object",3],["option",4]]]],[11,"from_raw","","",120,[[["message",3]],["result",4]]],[11,"into_raw","","",120,[[],["message",3]]],[11,"from_raw_c","","",120,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",120,[[]]],[11,"is_destructor","","",122,[[]]],[11,"opcode","","",122,[[]]],[11,"since","","",122,[[]]],[11,"child","","",122,[[],[["object",3],["option",4]]]],[11,"from_raw","","",122,[[["message",3]],["result",4]]],[11,"into_raw","","",122,[[],["message",3]]],[11,"from_raw_c","","",122,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",122,[[]]],[11,"is_destructor","wayland_protocols::unstable::primary_selection::v1::server::zwp_primary_selection_source_v1","",124,[[]]],[11,"opcode","","",124,[[]]],[11,"since","","",124,[[]]],[11,"child","","",124,[[],[["object",3],["option",4]]]],[11,"from_raw","","",124,[[["message",3]],["result",4]]],[11,"into_raw","","",124,[[],["message",3]]],[11,"from_raw_c","","",124,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",124,[[]]],[11,"is_destructor","","",126,[[]]],[11,"opcode","","",126,[[]]],[11,"since","","",126,[[]]],[11,"child","","",126,[[],[["object",3],["option",4]]]],[11,"from_raw","","",126,[[["message",3]],["result",4]]],[11,"into_raw","","",126,[[],["message",3]]],[11,"from_raw_c","","",126,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",126,[[]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",131,[[]]],[11,"opcode","","",131,[[]]],[11,"since","","",131,[[]]],[11,"child","","",131,[[],[["object",3],["option",4]]]],[11,"from_raw","","",131,[[["message",3]],["result",4]]],[11,"into_raw","","",131,[[],["message",3]]],[11,"from_raw_c","","",131,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",131,[[]]],[11,"is_destructor","","",613,[[]]],[11,"opcode","","",613,[[]]],[11,"since","","",613,[[]]],[11,"child","","",613,[[],[["object",3],["option",4]]]],[11,"from_raw","","",613,[[["message",3]],["result",4]]],[11,"into_raw","","",613,[[],["message",3]]],[11,"from_raw_c","","",613,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",613,[[]]],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",133,[[]]],[11,"opcode","","",133,[[]]],[11,"since","","",133,[[]]],[11,"child","","",133,[[],[["object",3],["option",4]]]],[11,"from_raw","","",133,[[["message",3]],["result",4]]],[11,"into_raw","","",133,[[],["message",3]]],[11,"from_raw_c","","",133,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",133,[[]]],[11,"is_destructor","","",134,[[]]],[11,"opcode","","",134,[[]]],[11,"since","","",134,[[]]],[11,"child","","",134,[[],[["object",3],["option",4]]]],[11,"from_raw","","",134,[[["message",3]],["result",4]]],[11,"into_raw","","",134,[[],["message",3]]],[11,"from_raw_c","","",134,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",134,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",137,[[]]],[11,"opcode","","",137,[[]]],[11,"since","","",137,[[]]],[11,"child","","",137,[[],[["object",3],["option",4]]]],[11,"from_raw","","",137,[[["message",3]],["result",4]]],[11,"into_raw","","",137,[[],["message",3]]],[11,"from_raw_c","","",137,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",137,[[]]],[11,"is_destructor","","",615,[[]]],[11,"opcode","","",615,[[]]],[11,"since","","",615,[[]]],[11,"child","","",615,[[],[["object",3],["option",4]]]],[11,"from_raw","","",615,[[["message",3]],["result",4]]],[11,"into_raw","","",615,[[],["message",3]]],[11,"from_raw_c","","",615,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",615,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",139,[[]]],[11,"opcode","","",139,[[]]],[11,"since","","",139,[[]]],[11,"child","","",139,[[],[["object",3],["option",4]]]],[11,"from_raw","","",139,[[["message",3]],["result",4]]],[11,"into_raw","","",139,[[],["message",3]]],[11,"from_raw_c","","",139,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",139,[[]]],[11,"is_destructor","","",140,[[]]],[11,"opcode","","",140,[[]]],[11,"since","","",140,[[]]],[11,"child","","",140,[[],[["object",3],["option",4]]]],[11,"from_raw","","",140,[[["message",3]],["result",4]]],[11,"into_raw","","",140,[[],["message",3]]],[11,"from_raw_c","","",140,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",140,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",147,[[]]],[11,"opcode","","",147,[[]]],[11,"since","","",147,[[]]],[11,"child","","",147,[[],[["object",3],["option",4]]]],[11,"from_raw","","",147,[[["message",3]],["result",4]]],[11,"into_raw","","",147,[[],["message",3]]],[11,"from_raw_c","","",147,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",147,[[]]],[11,"is_destructor","","",149,[[]]],[11,"opcode","","",149,[[]]],[11,"since","","",149,[[]]],[11,"child","","",149,[[],[["object",3],["option",4]]]],[11,"from_raw","","",149,[[["message",3]],["result",4]]],[11,"into_raw","","",149,[[],["message",3]]],[11,"from_raw_c","","",149,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",149,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",165,[[]]],[11,"opcode","","",165,[[]]],[11,"since","","",165,[[]]],[11,"child","","",165,[[],[["object",3],["option",4]]]],[11,"from_raw","","",165,[[["message",3]],["result",4]]],[11,"into_raw","","",165,[[],["message",3]]],[11,"from_raw_c","","",165,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",165,[[]]],[11,"is_destructor","","",166,[[]]],[11,"opcode","","",166,[[]]],[11,"since","","",166,[[]]],[11,"child","","",166,[[],[["object",3],["option",4]]]],[11,"from_raw","","",166,[[["message",3]],["result",4]]],[11,"into_raw","","",166,[[],["message",3]]],[11,"from_raw_c","","",166,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",166,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",173,[[]]],[11,"opcode","","",173,[[]]],[11,"since","","",173,[[]]],[11,"child","","",173,[[],[["object",3],["option",4]]]],[11,"from_raw","","",173,[[["message",3]],["result",4]]],[11,"into_raw","","",173,[[],["message",3]]],[11,"from_raw_c","","",173,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",173,[[]]],[11,"is_destructor","","",617,[[]]],[11,"opcode","","",617,[[]]],[11,"since","","",617,[[]]],[11,"child","","",617,[[],[["object",3],["option",4]]]],[11,"from_raw","","",617,[[["message",3]],["result",4]]],[11,"into_raw","","",617,[[],["message",3]]],[11,"from_raw_c","","",617,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",617,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",175,[[]]],[11,"opcode","","",175,[[]]],[11,"since","","",175,[[]]],[11,"child","","",175,[[],[["object",3],["option",4]]]],[11,"from_raw","","",175,[[["message",3]],["result",4]]],[11,"into_raw","","",175,[[],["message",3]]],[11,"from_raw_c","","",175,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",175,[[]]],[11,"is_destructor","","",176,[[]]],[11,"opcode","","",176,[[]]],[11,"since","","",176,[[]]],[11,"child","","",176,[[],[["object",3],["option",4]]]],[11,"from_raw","","",176,[[["message",3]],["result",4]]],[11,"into_raw","","",176,[[],["message",3]]],[11,"from_raw_c","","",176,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",176,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",184,[[]]],[11,"opcode","","",184,[[]]],[11,"since","","",184,[[]]],[11,"child","","",184,[[],[["object",3],["option",4]]]],[11,"from_raw","","",184,[[["message",3]],["result",4]]],[11,"into_raw","","",184,[[],["message",3]]],[11,"from_raw_c","","",184,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",184,[[]]],[11,"is_destructor","","",186,[[]]],[11,"opcode","","",186,[[]]],[11,"since","","",186,[[]]],[11,"child","","",186,[[],[["object",3],["option",4]]]],[11,"from_raw","","",186,[[["message",3]],["result",4]]],[11,"into_raw","","",186,[[],["message",3]]],[11,"from_raw_c","","",186,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",186,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",202,[[]]],[11,"opcode","","",202,[[]]],[11,"since","","",202,[[]]],[11,"child","","",202,[[],[["object",3],["option",4]]]],[11,"from_raw","","",202,[[["message",3]],["result",4]]],[11,"into_raw","","",202,[[],["message",3]]],[11,"from_raw_c","","",202,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",202,[[]]],[11,"is_destructor","","",203,[[]]],[11,"opcode","","",203,[[]]],[11,"since","","",203,[[]]],[11,"child","","",203,[[],[["object",3],["option",4]]]],[11,"from_raw","","",203,[[["message",3]],["result",4]]],[11,"into_raw","","",203,[[],["message",3]]],[11,"from_raw_c","","",203,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",203,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",208,[[]]],[11,"opcode","","",208,[[]]],[11,"since","","",208,[[]]],[11,"child","","",208,[[],[["object",3],["option",4]]]],[11,"from_raw","","",208,[[["message",3]],["result",4]]],[11,"into_raw","","",208,[[],["message",3]]],[11,"from_raw_c","","",208,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",208,[[]]],[11,"is_destructor","","",210,[[]]],[11,"opcode","","",210,[[]]],[11,"since","","",210,[[]]],[11,"child","","",210,[[],[["object",3],["option",4]]]],[11,"from_raw","","",210,[[["message",3]],["result",4]]],[11,"into_raw","","",210,[[],["message",3]]],[11,"from_raw_c","","",210,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",210,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",215,[[]]],[11,"opcode","","",215,[[]]],[11,"since","","",215,[[]]],[11,"child","","",215,[[],[["object",3],["option",4]]]],[11,"from_raw","","",215,[[["message",3]],["result",4]]],[11,"into_raw","","",215,[[],["message",3]]],[11,"from_raw_c","","",215,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",215,[[]]],[11,"is_destructor","","",217,[[]]],[11,"opcode","","",217,[[]]],[11,"since","","",217,[[]]],[11,"child","","",217,[[],[["object",3],["option",4]]]],[11,"from_raw","","",217,[[["message",3]],["result",4]]],[11,"into_raw","","",217,[[],["message",3]]],[11,"from_raw_c","","",217,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",217,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",221,[[]]],[11,"opcode","","",221,[[]]],[11,"since","","",221,[[]]],[11,"child","","",221,[[],[["object",3],["option",4]]]],[11,"from_raw","","",221,[[["message",3]],["result",4]]],[11,"into_raw","","",221,[[],["message",3]]],[11,"from_raw_c","","",221,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",221,[[]]],[11,"is_destructor","","",222,[[]]],[11,"opcode","","",222,[[]]],[11,"since","","",222,[[]]],[11,"child","","",222,[[],[["object",3],["option",4]]]],[11,"from_raw","","",222,[[["message",3]],["result",4]]],[11,"into_raw","","",222,[[],["message",3]]],[11,"from_raw_c","","",222,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",222,[[]]],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",229,[[]]],[11,"opcode","","",229,[[]]],[11,"since","","",229,[[]]],[11,"child","","",229,[[],[["object",3],["option",4]]]],[11,"from_raw","","",229,[[["message",3]],["result",4]]],[11,"into_raw","","",229,[[],["message",3]]],[11,"from_raw_c","","",229,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",229,[[]]],[11,"is_destructor","","",231,[[]]],[11,"opcode","","",231,[[]]],[11,"since","","",231,[[]]],[11,"child","","",231,[[],[["object",3],["option",4]]]],[11,"from_raw","","",231,[[["message",3]],["result",4]]],[11,"into_raw","","",231,[[],["message",3]]],[11,"from_raw_c","","",231,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",231,[[]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",249,[[]]],[11,"opcode","","",249,[[]]],[11,"since","","",249,[[]]],[11,"child","","",249,[[],[["object",3],["option",4]]]],[11,"from_raw","","",249,[[["message",3]],["result",4]]],[11,"into_raw","","",249,[[],["message",3]]],[11,"from_raw_c","","",249,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",249,[[]]],[11,"is_destructor","","",258,[[]]],[11,"opcode","","",258,[[]]],[11,"since","","",258,[[]]],[11,"child","","",258,[[],[["object",3],["option",4]]]],[11,"from_raw","","",258,[[["message",3]],["result",4]]],[11,"into_raw","","",258,[[],["message",3]]],[11,"from_raw_c","","",258,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",258,[[]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",271,[[]]],[11,"opcode","","",271,[[]]],[11,"since","","",271,[[]]],[11,"child","","",271,[[],[["object",3],["option",4]]]],[11,"from_raw","","",271,[[["message",3]],["result",4]]],[11,"into_raw","","",271,[[],["message",3]]],[11,"from_raw_c","","",271,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",271,[[]]],[11,"is_destructor","","",619,[[]]],[11,"opcode","","",619,[[]]],[11,"since","","",619,[[]]],[11,"child","","",619,[[],[["object",3],["option",4]]]],[11,"from_raw","","",619,[[["message",3]],["result",4]]],[11,"into_raw","","",619,[[],["message",3]]],[11,"from_raw_c","","",619,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",619,[[]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_v3","",276,[[]]],[11,"opcode","","",276,[[]]],[11,"since","","",276,[[]]],[11,"child","","",276,[[],[["object",3],["option",4]]]],[11,"from_raw","","",276,[[["message",3]],["result",4]]],[11,"into_raw","","",276,[[],["message",3]]],[11,"from_raw_c","","",276,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",276,[[]]],[11,"is_destructor","","",281,[[]]],[11,"opcode","","",281,[[]]],[11,"since","","",281,[[]]],[11,"child","","",281,[[],[["object",3],["option",4]]]],[11,"from_raw","","",281,[[["message",3]],["result",4]]],[11,"into_raw","","",281,[[],["message",3]]],[11,"from_raw_c","","",281,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",281,[[]]],[11,"is_destructor","wayland_protocols::unstable::text_input::v3::server::zwp_text_input_manager_v3","",288,[[]]],[11,"opcode","","",288,[[]]],[11,"since","","",288,[[]]],[11,"child","","",288,[[],[["object",3],["option",4]]]],[11,"from_raw","","",288,[[["message",3]],["result",4]]],[11,"into_raw","","",288,[[],["message",3]]],[11,"from_raw_c","","",288,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",288,[[]]],[11,"is_destructor","","",621,[[]]],[11,"opcode","","",621,[[]]],[11,"since","","",621,[[]]],[11,"child","","",621,[[],[["object",3],["option",4]]]],[11,"from_raw","","",621,[[["message",3]],["result",4]]],[11,"into_raw","","",621,[[],["message",3]]],[11,"from_raw_c","","",621,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",621,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",292,[[]]],[11,"opcode","","",292,[[]]],[11,"since","","",292,[[]]],[11,"child","","",292,[[],[["object",3],["option",4]]]],[11,"from_raw","","",292,[[["message",3]],["result",4]]],[11,"into_raw","","",292,[[],["message",3]]],[11,"from_raw_c","","",292,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",292,[[]]],[11,"is_destructor","","",623,[[]]],[11,"opcode","","",623,[[]]],[11,"since","","",623,[[]]],[11,"child","","",623,[[],[["object",3],["option",4]]]],[11,"from_raw","","",623,[[["message",3]],["result",4]]],[11,"into_raw","","",623,[[],["message",3]]],[11,"from_raw_c","","",623,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",623,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",296,[[]]],[11,"opcode","","",296,[[]]],[11,"since","","",296,[[]]],[11,"child","","",296,[[],[["object",3],["option",4]]]],[11,"from_raw","","",296,[[["message",3]],["result",4]]],[11,"into_raw","","",296,[[],["message",3]]],[11,"from_raw_c","","",296,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",296,[[]]],[11,"is_destructor","","",298,[[]]],[11,"opcode","","",298,[[]]],[11,"since","","",298,[[]]],[11,"child","","",298,[[],[["object",3],["option",4]]]],[11,"from_raw","","",298,[[["message",3]],["result",4]]],[11,"into_raw","","",298,[[],["message",3]]],[11,"from_raw_c","","",298,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",298,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",301,[[]]],[11,"opcode","","",301,[[]]],[11,"since","","",301,[[]]],[11,"child","","",301,[[],[["object",3],["option",4]]]],[11,"from_raw","","",301,[[["message",3]],["result",4]]],[11,"into_raw","","",301,[[],["message",3]]],[11,"from_raw_c","","",301,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",301,[[]]],[11,"is_destructor","","",625,[[]]],[11,"opcode","","",625,[[]]],[11,"since","","",625,[[]]],[11,"child","","",625,[[],[["object",3],["option",4]]]],[11,"from_raw","","",625,[[["message",3]],["result",4]]],[11,"into_raw","","",625,[[],["message",3]]],[11,"from_raw_c","","",625,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",625,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",303,[[]]],[11,"opcode","","",303,[[]]],[11,"since","","",303,[[]]],[11,"child","","",303,[[],[["object",3],["option",4]]]],[11,"from_raw","","",303,[[["message",3]],["result",4]]],[11,"into_raw","","",303,[[],["message",3]]],[11,"from_raw_c","","",303,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",303,[[]]],[11,"is_destructor","","",627,[[]]],[11,"opcode","","",627,[[]]],[11,"since","","",627,[[]]],[11,"child","","",627,[[],[["object",3],["option",4]]]],[11,"from_raw","","",627,[[["message",3]],["result",4]]],[11,"into_raw","","",627,[[],["message",3]]],[11,"from_raw_c","","",627,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",627,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",305,[[]]],[11,"opcode","","",305,[[]]],[11,"since","","",305,[[]]],[11,"child","","",305,[[],[["object",3],["option",4]]]],[11,"from_raw","","",305,[[["message",3]],["result",4]]],[11,"into_raw","","",305,[[],["message",3]]],[11,"from_raw_c","","",305,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",305,[[]]],[11,"is_destructor","","",306,[[]]],[11,"opcode","","",306,[[]]],[11,"since","","",306,[[]]],[11,"child","","",306,[[],[["object",3],["option",4]]]],[11,"from_raw","","",306,[[["message",3]],["result",4]]],[11,"into_raw","","",306,[[],["message",3]]],[11,"from_raw_c","","",306,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",306,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",308,[[]]],[11,"opcode","","",308,[[]]],[11,"since","","",308,[[]]],[11,"child","","",308,[[],[["object",3],["option",4]]]],[11,"from_raw","","",308,[[["message",3]],["result",4]]],[11,"into_raw","","",308,[[],["message",3]]],[11,"from_raw_c","","",308,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",308,[[]]],[11,"is_destructor","","",310,[[]]],[11,"opcode","","",310,[[]]],[11,"since","","",310,[[]]],[11,"child","","",310,[[],[["object",3],["option",4]]]],[11,"from_raw","","",310,[[["message",3]],["result",4]]],[11,"into_raw","","",310,[[],["message",3]]],[11,"from_raw_c","","",310,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",310,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",313,[[]]],[11,"opcode","","",313,[[]]],[11,"since","","",313,[[]]],[11,"child","","",313,[[],[["object",3],["option",4]]]],[11,"from_raw","","",313,[[["message",3]],["result",4]]],[11,"into_raw","","",313,[[],["message",3]]],[11,"from_raw_c","","",313,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",313,[[]]],[11,"is_destructor","","",629,[[]]],[11,"opcode","","",629,[[]]],[11,"since","","",629,[[]]],[11,"child","","",629,[[],[["object",3],["option",4]]]],[11,"from_raw","","",629,[[["message",3]],["result",4]]],[11,"into_raw","","",629,[[],["message",3]]],[11,"from_raw_c","","",629,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",629,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",315,[[]]],[11,"opcode","","",315,[[]]],[11,"since","","",315,[[]]],[11,"child","","",315,[[],[["object",3],["option",4]]]],[11,"from_raw","","",315,[[["message",3]],["result",4]]],[11,"into_raw","","",315,[[],["message",3]]],[11,"from_raw_c","","",315,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",315,[[]]],[11,"is_destructor","","",631,[[]]],[11,"opcode","","",631,[[]]],[11,"since","","",631,[[]]],[11,"child","","",631,[[],[["object",3],["option",4]]]],[11,"from_raw","","",631,[[["message",3]],["result",4]]],[11,"into_raw","","",631,[[],["message",3]]],[11,"from_raw_c","","",631,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",631,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",317,[[]]],[11,"opcode","","",317,[[]]],[11,"since","","",317,[[]]],[11,"child","","",317,[[],[["object",3],["option",4]]]],[11,"from_raw","","",317,[[["message",3]],["result",4]]],[11,"into_raw","","",317,[[],["message",3]]],[11,"from_raw_c","","",317,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",317,[[]]],[11,"is_destructor","","",318,[[]]],[11,"opcode","","",318,[[]]],[11,"since","","",318,[[]]],[11,"child","","",318,[[],[["object",3],["option",4]]]],[11,"from_raw","","",318,[[["message",3]],["result",4]]],[11,"into_raw","","",318,[[],["message",3]]],[11,"from_raw_c","","",318,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",318,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",320,[[]]],[11,"opcode","","",320,[[]]],[11,"since","","",320,[[]]],[11,"child","","",320,[[],[["object",3],["option",4]]]],[11,"from_raw","","",320,[[["message",3]],["result",4]]],[11,"into_raw","","",320,[[],["message",3]]],[11,"from_raw_c","","",320,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",320,[[]]],[11,"is_destructor","","",322,[[]]],[11,"opcode","","",322,[[]]],[11,"since","","",322,[[]]],[11,"child","","",322,[[],[["object",3],["option",4]]]],[11,"from_raw","","",322,[[["message",3]],["result",4]]],[11,"into_raw","","",322,[[],["message",3]]],[11,"from_raw_c","","",322,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",322,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",325,[[]]],[11,"opcode","","",325,[[]]],[11,"since","","",325,[[]]],[11,"child","","",325,[[],[["object",3],["option",4]]]],[11,"from_raw","","",325,[[["message",3]],["result",4]]],[11,"into_raw","","",325,[[],["message",3]]],[11,"from_raw_c","","",325,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",325,[[]]],[11,"is_destructor","","",633,[[]]],[11,"opcode","","",633,[[]]],[11,"since","","",633,[[]]],[11,"child","","",633,[[],[["object",3],["option",4]]]],[11,"from_raw","","",633,[[["message",3]],["result",4]]],[11,"into_raw","","",633,[[],["message",3]]],[11,"from_raw_c","","",633,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",633,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",327,[[]]],[11,"opcode","","",327,[[]]],[11,"since","","",327,[[]]],[11,"child","","",327,[[],[["object",3],["option",4]]]],[11,"from_raw","","",327,[[["message",3]],["result",4]]],[11,"into_raw","","",327,[[],["message",3]]],[11,"from_raw_c","","",327,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",327,[[]]],[11,"is_destructor","","",328,[[]]],[11,"opcode","","",328,[[]]],[11,"since","","",328,[[]]],[11,"child","","",328,[[],[["object",3],["option",4]]]],[11,"from_raw","","",328,[[["message",3]],["result",4]]],[11,"into_raw","","",328,[[],["message",3]]],[11,"from_raw_c","","",328,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",328,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",336,[[]]],[11,"opcode","","",336,[[]]],[11,"since","","",336,[[]]],[11,"child","","",336,[[],[["object",3],["option",4]]]],[11,"from_raw","","",336,[[["message",3]],["result",4]]],[11,"into_raw","","",336,[[],["message",3]]],[11,"from_raw_c","","",336,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",336,[[]]],[11,"is_destructor","","",341,[[]]],[11,"opcode","","",341,[[]]],[11,"since","","",341,[[]]],[11,"child","","",341,[[],[["object",3],["option",4]]]],[11,"from_raw","","",341,[[["message",3]],["result",4]]],[11,"into_raw","","",341,[[],["message",3]]],[11,"from_raw_c","","",341,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",341,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",345,[[]]],[11,"opcode","","",345,[[]]],[11,"since","","",345,[[]]],[11,"child","","",345,[[],[["object",3],["option",4]]]],[11,"from_raw","","",345,[[["message",3]],["result",4]]],[11,"into_raw","","",345,[[],["message",3]]],[11,"from_raw_c","","",345,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",345,[[]]],[11,"is_destructor","","",355,[[]]],[11,"opcode","","",355,[[]]],[11,"since","","",355,[[]]],[11,"child","","",355,[[],[["object",3],["option",4]]]],[11,"from_raw","","",355,[[["message",3]],["result",4]]],[11,"into_raw","","",355,[[],["message",3]]],[11,"from_raw_c","","",355,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",355,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",357,[[]]],[11,"opcode","","",357,[[]]],[11,"since","","",357,[[]]],[11,"child","","",357,[[],[["object",3],["option",4]]]],[11,"from_raw","","",357,[[["message",3]],["result",4]]],[11,"into_raw","","",357,[[],["message",3]]],[11,"from_raw_c","","",357,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",357,[[]]],[11,"is_destructor","","",358,[[]]],[11,"opcode","","",358,[[]]],[11,"since","","",358,[[]]],[11,"child","","",358,[[],[["object",3],["option",4]]]],[11,"from_raw","","",358,[[["message",3]],["result",4]]],[11,"into_raw","","",358,[[],["message",3]]],[11,"from_raw_c","","",358,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",358,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",363,[[]]],[11,"opcode","","",363,[[]]],[11,"since","","",363,[[]]],[11,"child","","",363,[[],[["object",3],["option",4]]]],[11,"from_raw","","",363,[[["message",3]],["result",4]]],[11,"into_raw","","",363,[[],["message",3]]],[11,"from_raw_c","","",363,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",363,[[]]],[11,"is_destructor","","",367,[[]]],[11,"opcode","","",367,[[]]],[11,"since","","",367,[[]]],[11,"child","","",367,[[],[["object",3],["option",4]]]],[11,"from_raw","","",367,[[["message",3]],["result",4]]],[11,"into_raw","","",367,[[],["message",3]]],[11,"from_raw_c","","",367,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",367,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",370,[[]]],[11,"opcode","","",370,[[]]],[11,"since","","",370,[[]]],[11,"child","","",370,[[],[["object",3],["option",4]]]],[11,"from_raw","","",370,[[["message",3]],["result",4]]],[11,"into_raw","","",370,[[],["message",3]]],[11,"from_raw_c","","",370,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",370,[[]]],[11,"is_destructor","","",635,[[]]],[11,"opcode","","",635,[[]]],[11,"since","","",635,[[]]],[11,"child","","",635,[[],[["object",3],["option",4]]]],[11,"from_raw","","",635,[[["message",3]],["result",4]]],[11,"into_raw","","",635,[[],["message",3]]],[11,"from_raw_c","","",635,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",635,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",378,[[]]],[11,"opcode","","",378,[[]]],[11,"since","","",378,[[]]],[11,"child","","",378,[[],[["object",3],["option",4]]]],[11,"from_raw","","",378,[[["message",3]],["result",4]]],[11,"into_raw","","",378,[[],["message",3]]],[11,"from_raw_c","","",378,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",378,[[]]],[11,"is_destructor","","",383,[[]]],[11,"opcode","","",383,[[]]],[11,"since","","",383,[[]]],[11,"child","","",383,[[],[["object",3],["option",4]]]],[11,"from_raw","","",383,[[["message",3]],["result",4]]],[11,"into_raw","","",383,[[],["message",3]]],[11,"from_raw_c","","",383,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",383,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",387,[[]]],[11,"opcode","","",387,[[]]],[11,"since","","",387,[[]]],[11,"child","","",387,[[],[["object",3],["option",4]]]],[11,"from_raw","","",387,[[["message",3]],["result",4]]],[11,"into_raw","","",387,[[],["message",3]]],[11,"from_raw_c","","",387,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",387,[[]]],[11,"is_destructor","","",397,[[]]],[11,"opcode","","",397,[[]]],[11,"since","","",397,[[]]],[11,"child","","",397,[[],[["object",3],["option",4]]]],[11,"from_raw","","",397,[[["message",3]],["result",4]]],[11,"into_raw","","",397,[[],["message",3]]],[11,"from_raw_c","","",397,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",397,[[]]],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",400,[[]]],[11,"opcode","","",400,[[]]],[11,"since","","",400,[[]]],[11,"child","","",400,[[],[["object",3],["option",4]]]],[11,"from_raw","","",400,[[["message",3]],["result",4]]],[11,"into_raw","","",400,[[],["message",3]]],[11,"from_raw_c","","",400,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",400,[[]]],[11,"is_destructor","","",402,[[]]],[11,"opcode","","",402,[[]]],[11,"since","","",402,[[]]],[11,"child","","",402,[[],[["object",3],["option",4]]]],[11,"from_raw","","",402,[[["message",3]],["result",4]]],[11,"into_raw","","",402,[[],["message",3]]],[11,"from_raw_c","","",402,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",402,[[]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",411,[[]]],[11,"opcode","","",411,[[]]],[11,"since","","",411,[[]]],[11,"child","","",411,[[],[["object",3],["option",4]]]],[11,"from_raw","","",411,[[["message",3]],["result",4]]],[11,"into_raw","","",411,[[],["message",3]]],[11,"from_raw_c","","",411,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",411,[[]]],[11,"is_destructor","","",637,[[]]],[11,"opcode","","",637,[[]]],[11,"since","","",637,[[]]],[11,"child","","",637,[[],[["object",3],["option",4]]]],[11,"from_raw","","",637,[[["message",3]],["result",4]]],[11,"into_raw","","",637,[[],["message",3]]],[11,"from_raw_c","","",637,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",637,[[]]],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",413,[[]]],[11,"opcode","","",413,[[]]],[11,"since","","",413,[[]]],[11,"child","","",413,[[],[["object",3],["option",4]]]],[11,"from_raw","","",413,[[["message",3]],["result",4]]],[11,"into_raw","","",413,[[],["message",3]]],[11,"from_raw_c","","",413,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",413,[[]]],[11,"is_destructor","","",639,[[]]],[11,"opcode","","",639,[[]]],[11,"since","","",639,[[]]],[11,"child","","",639,[[],[["object",3],["option",4]]]],[11,"from_raw","","",639,[[["message",3]],["result",4]]],[11,"into_raw","","",639,[[],["message",3]]],[11,"from_raw_c","","",639,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",639,[[]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device_manager","",414,[[]]],[11,"opcode","","",414,[[]]],[11,"since","","",414,[[]]],[11,"child","","",414,[[],[["object",3],["option",4]]]],[11,"from_raw","","",414,[[["message",3]],["result",4]]],[11,"into_raw","","",414,[[],["message",3]]],[11,"from_raw_c","","",414,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",414,[[]]],[11,"is_destructor","","",641,[[]]],[11,"opcode","","",641,[[]]],[11,"since","","",641,[[]]],[11,"child","","",641,[[],[["object",3],["option",4]]]],[11,"from_raw","","",641,[[["message",3]],["result",4]]],[11,"into_raw","","",641,[[],["message",3]]],[11,"from_raw_c","","",641,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",641,[[]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_device","",417,[[]]],[11,"opcode","","",417,[[]]],[11,"since","","",417,[[]]],[11,"child","","",417,[[],[["object",3],["option",4]]]],[11,"from_raw","","",417,[[["message",3]],["result",4]]],[11,"into_raw","","",417,[[],["message",3]]],[11,"from_raw_c","","",417,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",417,[[]]],[11,"is_destructor","","",419,[[]]],[11,"opcode","","",419,[[]]],[11,"since","","",419,[[]]],[11,"child","","",419,[[],[["object",3],["option",4]]]],[11,"from_raw","","",419,[[["message",3]],["result",4]]],[11,"into_raw","","",419,[[],["message",3]]],[11,"from_raw_c","","",419,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",419,[[]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_offer","",422,[[]]],[11,"opcode","","",422,[[]]],[11,"since","","",422,[[]]],[11,"child","","",422,[[],[["object",3],["option",4]]]],[11,"from_raw","","",422,[[["message",3]],["result",4]]],[11,"into_raw","","",422,[[],["message",3]]],[11,"from_raw_c","","",422,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",422,[[]]],[11,"is_destructor","","",424,[[]]],[11,"opcode","","",424,[[]]],[11,"since","","",424,[[]]],[11,"child","","",424,[[],[["object",3],["option",4]]]],[11,"from_raw","","",424,[[["message",3]],["result",4]]],[11,"into_raw","","",424,[[],["message",3]]],[11,"from_raw_c","","",424,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",424,[[]]],[11,"is_destructor","wayland_protocols::misc::gtk_primary_selection::server::gtk_primary_selection_source","",426,[[]]],[11,"opcode","","",426,[[]]],[11,"since","","",426,[[]]],[11,"child","","",426,[[],[["object",3],["option",4]]]],[11,"from_raw","","",426,[[["message",3]],["result",4]]],[11,"into_raw","","",426,[[],["message",3]]],[11,"from_raw_c","","",426,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",426,[[]]],[11,"is_destructor","","",428,[[]]],[11,"opcode","","",428,[[]]],[11,"since","","",428,[[]]],[11,"child","","",428,[[],[["object",3],["option",4]]]],[11,"from_raw","","",428,[[["message",3]],["result",4]]],[11,"into_raw","","",428,[[],["message",3]]],[11,"from_raw_c","","",428,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",428,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_manager_v1","",433,[[]]],[11,"opcode","","",433,[[]]],[11,"since","","",433,[[]]],[11,"child","","",433,[[],[["object",3],["option",4]]]],[11,"from_raw","","",433,[[["message",3]],["result",4]]],[11,"into_raw","","",433,[[],["message",3]]],[11,"from_raw_c","","",433,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",433,[[]]],[11,"is_destructor","","",643,[[]]],[11,"opcode","","",643,[[]]],[11,"since","","",643,[[]]],[11,"child","","",643,[[],[["object",3],["option",4]]]],[11,"from_raw","","",643,[[["message",3]],["result",4]]],[11,"into_raw","","",643,[[],["message",3]]],[11,"from_raw_c","","",643,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",643,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_device_v1","",437,[[]]],[11,"opcode","","",437,[[]]],[11,"since","","",437,[[]]],[11,"child","","",437,[[],[["object",3],["option",4]]]],[11,"from_raw","","",437,[[["message",3]],["result",4]]],[11,"into_raw","","",437,[[],["message",3]]],[11,"from_raw_c","","",437,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",437,[[]]],[11,"is_destructor","","",440,[[]]],[11,"opcode","","",440,[[]]],[11,"since","","",440,[[]]],[11,"child","","",440,[[],[["object",3],["option",4]]]],[11,"from_raw","","",440,[[["message",3]],["result",4]]],[11,"into_raw","","",440,[[],["message",3]]],[11,"from_raw_c","","",440,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",440,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_source_v1","",445,[[]]],[11,"opcode","","",445,[[]]],[11,"since","","",445,[[]]],[11,"child","","",445,[[],[["object",3],["option",4]]]],[11,"from_raw","","",445,[[["message",3]],["result",4]]],[11,"into_raw","","",445,[[],["message",3]]],[11,"from_raw_c","","",445,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",445,[[]]],[11,"is_destructor","","",447,[[]]],[11,"opcode","","",447,[[]]],[11,"since","","",447,[[]]],[11,"child","","",447,[[],[["object",3],["option",4]]]],[11,"from_raw","","",447,[[["message",3]],["result",4]]],[11,"into_raw","","",447,[[],["message",3]]],[11,"from_raw_c","","",447,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",447,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::data_control::v1::server::zwlr_data_control_offer_v1","",449,[[]]],[11,"opcode","","",449,[[]]],[11,"since","","",449,[[]]],[11,"child","","",449,[[],[["object",3],["option",4]]]],[11,"from_raw","","",449,[[["message",3]],["result",4]]],[11,"into_raw","","",449,[[],["message",3]]],[11,"from_raw_c","","",449,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",449,[[]]],[11,"is_destructor","","",451,[[]]],[11,"opcode","","",451,[[]]],[11,"since","","",451,[[]]],[11,"child","","",451,[[],[["object",3],["option",4]]]],[11,"from_raw","","",451,[[["message",3]],["result",4]]],[11,"into_raw","","",451,[[],["message",3]]],[11,"from_raw_c","","",451,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",451,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_manager_v1","",456,[[]]],[11,"opcode","","",456,[[]]],[11,"since","","",456,[[]]],[11,"child","","",456,[[],[["object",3],["option",4]]]],[11,"from_raw","","",456,[[["message",3]],["result",4]]],[11,"into_raw","","",456,[[],["message",3]]],[11,"from_raw_c","","",456,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",456,[[]]],[11,"is_destructor","","",645,[[]]],[11,"opcode","","",645,[[]]],[11,"since","","",645,[[]]],[11,"child","","",645,[[],[["object",3],["option",4]]]],[11,"from_raw","","",645,[[["message",3]],["result",4]]],[11,"into_raw","","",645,[[],["message",3]]],[11,"from_raw_c","","",645,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",645,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::export_dmabuf::v1::server::zwlr_export_dmabuf_frame_v1","",460,[[]]],[11,"opcode","","",460,[[]]],[11,"since","","",460,[[]]],[11,"child","","",460,[[],[["object",3],["option",4]]]],[11,"from_raw","","",460,[[["message",3]],["result",4]]],[11,"into_raw","","",460,[[],["message",3]]],[11,"from_raw_c","","",460,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",460,[[]]],[11,"is_destructor","","",461,[[]]],[11,"opcode","","",461,[[]]],[11,"since","","",461,[[]]],[11,"child","","",461,[[],[["object",3],["option",4]]]],[11,"from_raw","","",461,[[["message",3]],["result",4]]],[11,"into_raw","","",461,[[],["message",3]]],[11,"from_raw_c","","",461,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",461,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_manager_v1","",467,[[]]],[11,"opcode","","",467,[[]]],[11,"since","","",467,[[]]],[11,"child","","",467,[[],[["object",3],["option",4]]]],[11,"from_raw","","",467,[[["message",3]],["result",4]]],[11,"into_raw","","",467,[[],["message",3]]],[11,"from_raw_c","","",467,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",467,[[]]],[11,"is_destructor","","",468,[[]]],[11,"opcode","","",468,[[]]],[11,"since","","",468,[[]]],[11,"child","","",468,[[],[["object",3],["option",4]]]],[11,"from_raw","","",468,[[["message",3]],["result",4]]],[11,"into_raw","","",468,[[],["message",3]]],[11,"from_raw_c","","",468,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",468,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::foreign_toplevel::v1::server::zwlr_foreign_toplevel_handle_v1","",472,[[]]],[11,"opcode","","",472,[[]]],[11,"since","","",472,[[]]],[11,"child","","",472,[[],[["object",3],["option",4]]]],[11,"from_raw","","",472,[[["message",3]],["result",4]]],[11,"into_raw","","",472,[[],["message",3]]],[11,"from_raw_c","","",472,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",472,[[]]],[11,"is_destructor","","",476,[[]]],[11,"opcode","","",476,[[]]],[11,"since","","",476,[[]]],[11,"child","","",476,[[],[["object",3],["option",4]]]],[11,"from_raw","","",476,[[["message",3]],["result",4]]],[11,"into_raw","","",476,[[],["message",3]]],[11,"from_raw_c","","",476,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",476,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_manager_v1","",484,[[]]],[11,"opcode","","",484,[[]]],[11,"since","","",484,[[]]],[11,"child","","",484,[[],[["object",3],["option",4]]]],[11,"from_raw","","",484,[[["message",3]],["result",4]]],[11,"into_raw","","",484,[[],["message",3]]],[11,"from_raw_c","","",484,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",484,[[]]],[11,"is_destructor","","",647,[[]]],[11,"opcode","","",647,[[]]],[11,"since","","",647,[[]]],[11,"child","","",647,[[],[["object",3],["option",4]]]],[11,"from_raw","","",647,[[["message",3]],["result",4]]],[11,"into_raw","","",647,[[],["message",3]]],[11,"from_raw_c","","",647,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",647,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::gamma_control::v1::server::zwlr_gamma_control_v1","",487,[[]]],[11,"opcode","","",487,[[]]],[11,"since","","",487,[[]]],[11,"child","","",487,[[],[["object",3],["option",4]]]],[11,"from_raw","","",487,[[["message",3]],["result",4]]],[11,"into_raw","","",487,[[],["message",3]]],[11,"from_raw_c","","",487,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",487,[[]]],[11,"is_destructor","","",489,[[]]],[11,"opcode","","",489,[[]]],[11,"since","","",489,[[]]],[11,"child","","",489,[[],[["object",3],["option",4]]]],[11,"from_raw","","",489,[[["message",3]],["result",4]]],[11,"into_raw","","",489,[[],["message",3]]],[11,"from_raw_c","","",489,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",489,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibit_manager_v1","",493,[[]]],[11,"opcode","","",493,[[]]],[11,"since","","",493,[[]]],[11,"child","","",493,[[],[["object",3],["option",4]]]],[11,"from_raw","","",493,[[["message",3]],["result",4]]],[11,"into_raw","","",493,[[],["message",3]]],[11,"from_raw_c","","",493,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",493,[[]]],[11,"is_destructor","","",649,[[]]],[11,"opcode","","",649,[[]]],[11,"since","","",649,[[]]],[11,"child","","",649,[[],[["object",3],["option",4]]]],[11,"from_raw","","",649,[[["message",3]],["result",4]]],[11,"into_raw","","",649,[[],["message",3]]],[11,"from_raw_c","","",649,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",649,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::input_inhibitor::v1::server::zwlr_input_inhibitor_v1","",495,[[]]],[11,"opcode","","",495,[[]]],[11,"since","","",495,[[]]],[11,"child","","",495,[[],[["object",3],["option",4]]]],[11,"from_raw","","",495,[[["message",3]],["result",4]]],[11,"into_raw","","",495,[[],["message",3]]],[11,"from_raw_c","","",495,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",495,[[]]],[11,"is_destructor","","",651,[[]]],[11,"opcode","","",651,[[]]],[11,"since","","",651,[[]]],[11,"child","","",651,[[],[["object",3],["option",4]]]],[11,"from_raw","","",651,[[["message",3]],["result",4]]],[11,"into_raw","","",651,[[],["message",3]]],[11,"from_raw_c","","",651,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",651,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_shell_v1","",498,[[]]],[11,"opcode","","",498,[[]]],[11,"since","","",498,[[]]],[11,"child","","",498,[[],[["object",3],["option",4]]]],[11,"from_raw","","",498,[[["message",3]],["result",4]]],[11,"into_raw","","",498,[[],["message",3]]],[11,"from_raw_c","","",498,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",498,[[]]],[11,"is_destructor","","",653,[[]]],[11,"opcode","","",653,[[]]],[11,"since","","",653,[[]]],[11,"child","","",653,[[],[["object",3],["option",4]]]],[11,"from_raw","","",653,[[["message",3]],["result",4]]],[11,"into_raw","","",653,[[],["message",3]]],[11,"from_raw_c","","",653,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",653,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::layer_shell::v1::server::zwlr_layer_surface_v1","",501,[[]]],[11,"opcode","","",501,[[]]],[11,"since","","",501,[[]]],[11,"child","","",501,[[],[["object",3],["option",4]]]],[11,"from_raw","","",501,[[["message",3]],["result",4]]],[11,"into_raw","","",501,[[],["message",3]]],[11,"from_raw_c","","",501,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",501,[[]]],[11,"is_destructor","","",510,[[]]],[11,"opcode","","",510,[[]]],[11,"since","","",510,[[]]],[11,"child","","",510,[[],[["object",3],["option",4]]]],[11,"from_raw","","",510,[[["message",3]],["result",4]]],[11,"into_raw","","",510,[[],["message",3]]],[11,"from_raw_c","","",510,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",510,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_manager_v1","",514,[[]]],[11,"opcode","","",514,[[]]],[11,"since","","",514,[[]]],[11,"child","","",514,[[],[["object",3],["option",4]]]],[11,"from_raw","","",514,[[["message",3]],["result",4]]],[11,"into_raw","","",514,[[],["message",3]]],[11,"from_raw_c","","",514,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",514,[[]]],[11,"is_destructor","","",655,[[]]],[11,"opcode","","",655,[[]]],[11,"since","","",655,[[]]],[11,"child","","",655,[[],[["object",3],["option",4]]]],[11,"from_raw","","",655,[[["message",3]],["result",4]]],[11,"into_raw","","",655,[[],["message",3]]],[11,"from_raw_c","","",655,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",655,[[]]],[11,"is_destructor","wayland_protocols::wlr::unstable::screencopy::v1::server::zwlr_screencopy_frame_v1","",518,[[]]],[11,"opcode","","",518,[[]]],[11,"since","","",518,[[]]],[11,"child","","",518,[[],[["object",3],["option",4]]]],[11,"from_raw","","",518,[[["message",3]],["result",4]]],[11,"into_raw","","",518,[[],["message",3]]],[11,"from_raw_c","","",518,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",518,[[]]],[11,"is_destructor","","",521,[[]]],[11,"opcode","","",521,[[]]],[11,"since","","",521,[[]]],[11,"child","","",521,[[],[["object",3],["option",4]]]],[11,"from_raw","","",521,[[["message",3]],["result",4]]],[11,"into_raw","","",521,[[],["message",3]]],[11,"from_raw_c","","",521,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",521,[[]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation","",529,[[]]],[11,"opcode","","",529,[[]]],[11,"since","","",529,[[]]],[11,"child","","",529,[[],[["object",3],["option",4]]]],[11,"from_raw","","",529,[[["message",3]],["result",4]]],[11,"into_raw","","",529,[[],["message",3]]],[11,"from_raw_c","","",529,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",529,[[]]],[11,"is_destructor","","",531,[[]]],[11,"opcode","","",531,[[]]],[11,"since","","",531,[[]]],[11,"child","","",531,[[],[["object",3],["option",4]]]],[11,"from_raw","","",531,[[["message",3]],["result",4]]],[11,"into_raw","","",531,[[],["message",3]]],[11,"from_raw_c","","",531,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",531,[[]]],[11,"is_destructor","wayland_protocols::presentation_time::server::wp_presentation_feedback","",659,[[]]],[11,"opcode","","",659,[[]]],[11,"since","","",659,[[]]],[11,"child","","",659,[[],[["object",3],["option",4]]]],[11,"from_raw","","",659,[[["message",3]],["result",4]]],[11,"into_raw","","",659,[[],["message",3]]],[11,"from_raw_c","","",659,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",659,[[]]],[11,"is_destructor","","",533,[[]]],[11,"opcode","","",533,[[]]],[11,"since","","",533,[[]]],[11,"child","","",533,[[],[["object",3],["option",4]]]],[11,"from_raw","","",533,[[["message",3]],["result",4]]],[11,"into_raw","","",533,[[],["message",3]]],[11,"from_raw_c","","",533,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",533,[[]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_wm_base","",537,[[]]],[11,"opcode","","",537,[[]]],[11,"since","","",537,[[]]],[11,"child","","",537,[[],[["object",3],["option",4]]]],[11,"from_raw","","",537,[[["message",3]],["result",4]]],[11,"into_raw","","",537,[[],["message",3]]],[11,"from_raw_c","","",537,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",537,[[]]],[11,"is_destructor","","",541,[[]]],[11,"opcode","","",541,[[]]],[11,"since","","",541,[[]]],[11,"child","","",541,[[],[["object",3],["option",4]]]],[11,"from_raw","","",541,[[["message",3]],["result",4]]],[11,"into_raw","","",541,[[],["message",3]]],[11,"from_raw_c","","",541,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",541,[[]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_positioner","",546,[[]]],[11,"opcode","","",546,[[]]],[11,"since","","",546,[[]]],[11,"child","","",546,[[],[["object",3],["option",4]]]],[11,"from_raw","","",546,[[["message",3]],["result",4]]],[11,"into_raw","","",546,[[],["message",3]]],[11,"from_raw_c","","",546,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",546,[[]]],[11,"is_destructor","","",663,[[]]],[11,"opcode","","",663,[[]]],[11,"since","","",663,[[]]],[11,"child","","",663,[[],[["object",3],["option",4]]]],[11,"from_raw","","",663,[[["message",3]],["result",4]]],[11,"into_raw","","",663,[[],["message",3]]],[11,"from_raw_c","","",663,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",663,[[]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_surface","",554,[[]]],[11,"opcode","","",554,[[]]],[11,"since","","",554,[[]]],[11,"child","","",554,[[],[["object",3],["option",4]]]],[11,"from_raw","","",554,[[["message",3]],["result",4]]],[11,"into_raw","","",554,[[],["message",3]]],[11,"from_raw_c","","",554,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",554,[[]]],[11,"is_destructor","","",559,[[]]],[11,"opcode","","",559,[[]]],[11,"since","","",559,[[]]],[11,"child","","",559,[[],[["object",3],["option",4]]]],[11,"from_raw","","",559,[[["message",3]],["result",4]]],[11,"into_raw","","",559,[[],["message",3]]],[11,"from_raw_c","","",559,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",559,[[]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_toplevel","",563,[[]]],[11,"opcode","","",563,[[]]],[11,"since","","",563,[[]]],[11,"child","","",563,[[],[["object",3],["option",4]]]],[11,"from_raw","","",563,[[["message",3]],["result",4]]],[11,"into_raw","","",563,[[],["message",3]]],[11,"from_raw_c","","",563,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",563,[[]]],[11,"is_destructor","","",573,[[]]],[11,"opcode","","",573,[[]]],[11,"since","","",573,[[]]],[11,"child","","",573,[[],[["object",3],["option",4]]]],[11,"from_raw","","",573,[[["message",3]],["result",4]]],[11,"into_raw","","",573,[[],["message",3]]],[11,"from_raw_c","","",573,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",573,[[]]],[11,"is_destructor","wayland_protocols::xdg_shell::server::xdg_popup","",576,[[]]],[11,"opcode","","",576,[[]]],[11,"since","","",576,[[]]],[11,"child","","",576,[[],[["object",3],["option",4]]]],[11,"from_raw","","",576,[[["message",3]],["result",4]]],[11,"into_raw","","",576,[[],["message",3]]],[11,"from_raw_c","","",576,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",576,[[]]],[11,"is_destructor","","",578,[[]]],[11,"opcode","","",578,[[]]],[11,"since","","",578,[[]]],[11,"child","","",578,[[],[["object",3],["option",4]]]],[11,"from_raw","","",578,[[["message",3]],["result",4]]],[11,"into_raw","","",578,[[],["message",3]]],[11,"from_raw_c","","",578,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",578,[[]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewporter","",581,[[]]],[11,"opcode","","",581,[[]]],[11,"since","","",581,[[]]],[11,"child","","",581,[[],[["object",3],["option",4]]]],[11,"from_raw","","",581,[[["message",3]],["result",4]]],[11,"into_raw","","",581,[[],["message",3]]],[11,"from_raw_c","","",581,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",581,[[]]],[11,"is_destructor","","",668,[[]]],[11,"opcode","","",668,[[]]],[11,"since","","",668,[[]]],[11,"child","","",668,[[],[["object",3],["option",4]]]],[11,"from_raw","","",668,[[["message",3]],["result",4]]],[11,"into_raw","","",668,[[],["message",3]]],[11,"from_raw_c","","",668,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",668,[[]]],[11,"is_destructor","wayland_protocols::viewporter::server::wp_viewport","",584,[[]]],[11,"opcode","","",584,[[]]],[11,"since","","",584,[[]]],[11,"child","","",584,[[],[["object",3],["option",4]]]],[11,"from_raw","","",584,[[["message",3]],["result",4]]],[11,"into_raw","","",584,[[],["message",3]]],[11,"from_raw_c","","",584,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",584,[[]]],[11,"is_destructor","","",670,[[]]],[11,"opcode","","",670,[[]]],[11,"since","","",670,[[]]],[11,"child","","",670,[[],[["object",3],["option",4]]]],[11,"from_raw","","",670,[[["message",3]],["result",4]]],[11,"into_raw","","",670,[[],["message",3]]],[11,"from_raw_c","","",670,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",670,[[]]],[11,"from_raw","wayland_protocols::presentation_time::server::wp_presentation","",528,[[],[["error",4],["option",4]]]],[11,"to_raw","","",528,[[]]],[11,"clock_id","","clock ID for timestamps",656,[[]]],[18,"Vsync","wayland_protocols::presentation_time::server::wp_presentation_feedback","presentation was vsync\'d",657,null],[18,"HwClock","","hardware provided the presentation timestamp",657,null],[18,"HwCompletion","","hardware signalled the start of the presentation",657,null],[18,"ZeroCopy","","presentation was done zero-copy",657,null],[11,"empty","","Returns an empty set of flags",657,[[],["kind",3]]],[11,"all","","Returns the set containing all flags.",657,[[],["kind",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",657,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",657,[[],[["kind",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",657,[[],["kind",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",657,[[],["kind",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",657,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",657,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",657,[[["kind",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",657,[[["kind",3]]]],[11,"insert","","Inserts the specified flags in-place.",657,[[["kind",3]]]],[11,"remove","","Removes the specified flags in-place.",657,[[["kind",3]]]],[11,"toggle","","Toggles the specified flags in-place.",657,[[["kind",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",657,[[["kind",3]]]],[11,"from_raw","","",657,[[],[["option",4],["kind",3]]]],[11,"to_raw","","",657,[[]]],[11,"sync_output","","presentation synchronized to this output",658,[[["wloutput",3]]]],[11,"presented","","the content update was displayed",658,[[]]],[11,"discarded","","the content update was not displayed",658,[[]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_wm_base","",536,[[],[["option",4],["error",4]]]],[11,"to_raw","","",536,[[]]],[11,"ping","","check if the client is alive",660,[[]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_positioner","",543,[[],[["option",4],["error",4]]]],[11,"to_raw","","",543,[[]]],[11,"from_raw","","",544,[[],[["option",4],["anchor",4]]]],[11,"to_raw","","",544,[[]]],[11,"from_raw","","",545,[[],[["option",4],["gravity",4]]]],[11,"to_raw","","",545,[[]]],[18,"None","","don\'t move the child surface when constrained",661,null],[18,"SlideX","","move along the x axis until unconstrained",661,null],[18,"SlideY","","move along the y axis until unconstrained",661,null],[18,"FlipX","","invert the anchor and gravity on the x axis",661,null],[18,"FlipY","","invert the anchor and gravity on the y axis",661,null],[18,"ResizeX","","horizontally resize the surface",661,null],[18,"ResizeY","","vertically resize the surface",661,null],[11,"empty","","Returns an empty set of flags",661,[[],["constraintadjustment",3]]],[11,"all","","Returns the set containing all flags.",661,[[],["constraintadjustment",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",661,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",661,[[],[["option",4],["constraintadjustment",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",661,[[],["constraintadjustment",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",661,[[],["constraintadjustment",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",661,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",661,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",661,[[["constraintadjustment",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",661,[[["constraintadjustment",3]]]],[11,"insert","","Inserts the specified flags in-place.",661,[[["constraintadjustment",3]]]],[11,"remove","","Removes the specified flags in-place.",661,[[["constraintadjustment",3]]]],[11,"toggle","","Toggles the specified flags in-place.",661,[[["constraintadjustment",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",661,[[["constraintadjustment",3]]]],[11,"from_raw","","",661,[[],[["option",4],["constraintadjustment",3]]]],[11,"to_raw","","",661,[[]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_surface","",553,[[],[["option",4],["error",4]]]],[11,"to_raw","","",553,[[]]],[11,"configure","","suggest a surface change",664,[[]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_toplevel","",561,[[],[["option",4],["resizeedge",4]]]],[11,"to_raw","","",561,[[]]],[11,"from_raw","","",562,[[],[["option",4],["state",4]]]],[11,"to_raw","","",562,[[]]],[11,"configure","","suggest a surface change",665,[[["vec",3]]]],[11,"close","","surface wants to be closed",665,[[]]],[11,"from_raw","wayland_protocols::xdg_shell::server::xdg_popup","",575,[[],[["option",4],["error",4]]]],[11,"to_raw","","",575,[[]]],[11,"configure","","configure the popup surface",666,[[]]],[11,"popup_done","","popup interaction is done",666,[[]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewporter","",580,[[],[["option",4],["error",4]]]],[11,"to_raw","","",580,[[]]],[11,"from_raw","wayland_protocols::viewporter::server::wp_viewport","",583,[[],[["option",4],["error",4]]]],[11,"to_raw","","",583,[[]]]],"p":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[13,"PresentSurface"],[13,"PresentSurfaceForMode"],[4,"Event"],[13,"Capability"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[13,"CreateInhibitor"],[4,"Request"],[4,"Request"],[13,"CommitString"],[13,"PreeditString"],[13,"PreeditStyling"],[13,"PreeditCursor"],[13,"DeleteSurroundingText"],[13,"CursorPosition"],[13,"ModifiersMap"],[13,"Keysym"],[13,"GrabKeyboard"],[13,"Key"],[13,"Modifiers"],[13,"Language"],[13,"TextDirection"],[4,"Event"],[13,"SurroundingText"],[13,"ContentType"],[13,"InvokeAction"],[13,"CommitState"],[13,"PreferredLanguage"],[4,"Event"],[13,"Activate"],[13,"Deactivate"],[4,"Request"],[13,"GetInputPanelSurface"],[4,"Position"],[4,"Request"],[13,"SetToplevel"],[3,"ZwpInputMethodContextV1"],[3,"ZwpInputMethodV1"],[4,"Request"],[13,"GetKeyboardTimestamps"],[13,"GetPointerTimestamps"],[13,"GetTouchTimestamps"],[4,"Request"],[4,"Event"],[13,"Timestamp"],[3,"ZwpInputTimestampsV1"],[4,"Error"],[4,"Request"],[13,"InhibitShortcuts"],[4,"Request"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[13,"CreateParams"],[4,"Event"],[13,"Format"],[13,"Modifier"],[4,"Error"],[4,"Flags"],[4,"Request"],[13,"Add"],[13,"Create"],[13,"CreateImmed"],[4,"Event"],[13,"Created"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Request"],[13,"GetSynchronization"],[4,"Error"],[4,"Request"],[13,"SetAcquireFence"],[13,"GetRelease"],[4,"Event"],[13,"FencedRelease"],[3,"ZwpLinuxBufferReleaseV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[13,"LockPointer"],[13,"ConfinePointer"],[4,"Request"],[13,"SetCursorPositionHint"],[13,"SetRegion"],[4,"Event"],[4,"Request"],[13,"SetRegion"],[4,"Event"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Request"],[13,"GetSwipeGesture"],[13,"GetPinchGesture"],[4,"Request"],[4,"Event"],[13,"Begin"],[13,"Update"],[13,"End"],[4,"Request"],[4,"Event"],[13,"Begin"],[13,"Update"],[13,"End"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[13,"CreateSource"],[13,"GetDevice"],[4,"Request"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Selection"],[4,"Request"],[13,"Receive"],[4,"Event"],[13,"Offer"],[4,"Request"],[13,"Offer"],[4,"Event"],[13,"Send"],[3,"ZwpPrimarySelectionDeviceV1"],[3,"ZwpPrimarySelectionOfferV1"],[3,"ZwpPrimarySelectionSourceV1"],[4,"Request"],[13,"GetRelativePointer"],[4,"Request"],[4,"Event"],[13,"RelativeMotion"],[3,"ZwpRelativePointerV1"],[4,"Request"],[13,"GetTabletSeat"],[4,"Request"],[4,"Event"],[13,"TabletAdded"],[13,"ToolAdded"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[13,"SetCursor"],[4,"Event"],[13,"Type"],[13,"HardwareSerial"],[13,"HardwareIdWacom"],[13,"Capability"],[13,"ProximityIn"],[13,"Down"],[13,"Motion"],[13,"Pressure"],[13,"Distance"],[13,"Tilt"],[13,"Rotation"],[13,"Slider"],[13,"Wheel"],[13,"Button"],[13,"Frame"],[4,"Request"],[4,"Event"],[13,"Name"],[13,"Id"],[13,"Path"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Request"],[13,"GetTabletSeat"],[4,"Request"],[4,"Event"],[13,"TabletAdded"],[13,"ToolAdded"],[13,"PadAdded"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[13,"SetCursor"],[4,"Event"],[13,"Type"],[13,"HardwareSerial"],[13,"HardwareIdWacom"],[13,"Capability"],[13,"ProximityIn"],[13,"Down"],[13,"Motion"],[13,"Pressure"],[13,"Distance"],[13,"Tilt"],[13,"Rotation"],[13,"Slider"],[13,"Wheel"],[13,"Button"],[13,"Frame"],[4,"Request"],[4,"Event"],[13,"Name"],[13,"Id"],[13,"Path"],[4,"Source"],[4,"Request"],[13,"SetFeedback"],[4,"Event"],[13,"Source"],[13,"Angle"],[13,"Frame"],[4,"Source"],[4,"Request"],[13,"SetFeedback"],[4,"Event"],[13,"Source"],[13,"Position"],[13,"Frame"],[4,"Request"],[4,"Event"],[13,"Buttons"],[13,"Ring"],[13,"Strip"],[13,"Modes"],[13,"ModeSwitch"],[4,"ButtonState"],[4,"Request"],[13,"SetFeedback"],[4,"Event"],[13,"Group"],[13,"Path"],[13,"Buttons"],[13,"Button"],[13,"Enter"],[13,"Leave"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[13,"Activate"],[13,"Deactivate"],[13,"SetSurroundingText"],[13,"SetContentType"],[13,"SetCursorRectangle"],[13,"SetPreferredLanguage"],[13,"CommitState"],[13,"InvokeAction"],[4,"Event"],[13,"Enter"],[13,"ModifiersMap"],[13,"InputPanelState"],[13,"PreeditString"],[13,"PreeditStyling"],[13,"PreeditCursor"],[13,"CommitString"],[13,"CursorPosition"],[13,"DeleteSurroundingText"],[13,"Keysym"],[13,"Language"],[13,"TextDirection"],[4,"Request"],[13,"CreateTextInput"],[3,"ZwpTextInputV1"],[4,"ChangeCause"],[4,"ContentPurpose"],[4,"Request"],[13,"SetSurroundingText"],[13,"SetTextChangeCause"],[13,"SetContentType"],[13,"SetCursorRectangle"],[4,"Event"],[13,"Enter"],[13,"Leave"],[13,"PreeditString"],[13,"CommitString"],[13,"DeleteSurroundingText"],[13,"Done"],[4,"Request"],[13,"GetTextInput"],[3,"ContentHint"],[3,"ZwpTextInputV3"],[4,"Request"],[13,"GetToplevelDecoration"],[4,"Error"],[4,"Mode"],[4,"Request"],[13,"SetMode"],[4,"Event"],[13,"Configure"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[13,"Export"],[4,"Request"],[13,"Import"],[4,"Request"],[4,"Event"],[13,"Handle"],[4,"Request"],[13,"SetParentOf"],[4,"Event"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Request"],[13,"ExportToplevel"],[4,"Request"],[13,"ImportToplevel"],[4,"Request"],[4,"Event"],[13,"Handle"],[4,"Request"],[13,"SetParentOf"],[4,"Event"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Request"],[13,"GetXdgOutput"],[4,"Request"],[4,"Event"],[13,"LogicalPosition"],[13,"LogicalSize"],[13,"Name"],[13,"Description"],[3,"ZxdgOutputV1"],[4,"Version"],[4,"Error"],[4,"Request"],[13,"UseUnstableVersion"],[13,"GetXdgSurface"],[13,"GetXdgPopup"],[13,"Pong"],[4,"Event"],[13,"Ping"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[13,"SetParent"],[13,"SetTitle"],[13,"SetAppId"],[13,"ShowWindowMenu"],[13,"Move"],[13,"Resize"],[13,"AckConfigure"],[13,"SetWindowGeometry"],[13,"SetFullscreen"],[4,"Event"],[13,"Configure"],[4,"Request"],[4,"Event"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[13,"CreatePositioner"],[13,"GetXdgSurface"],[13,"Pong"],[4,"Event"],[13,"Ping"],[4,"Error"],[4,"Request"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetAnchor"],[13,"SetGravity"],[13,"SetConstraintAdjustment"],[13,"SetOffset"],[4,"Error"],[4,"Request"],[13,"GetToplevel"],[13,"GetPopup"],[13,"SetWindowGeometry"],[13,"AckConfigure"],[4,"Event"],[13,"Configure"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[13,"SetParent"],[13,"SetTitle"],[13,"SetAppId"],[13,"ShowWindowMenu"],[13,"Move"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"Grab"],[4,"Event"],[13,"Configure"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Request"],[13,"GrabKeyboard"],[4,"Request"],[4,"Request"],[13,"CreateSource"],[13,"GetDevice"],[4,"Request"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Selection"],[4,"Request"],[13,"Receive"],[4,"Event"],[13,"Offer"],[4,"Request"],[13,"Offer"],[4,"Event"],[13,"Send"],[3,"GtkPrimarySelectionDevice"],[3,"GtkPrimarySelectionOffer"],[3,"GtkPrimarySelectionSource"],[4,"Request"],[13,"CreateDataSource"],[13,"GetDataDevice"],[4,"Error"],[4,"Request"],[13,"SetSelection"],[13,"SetPrimarySelection"],[4,"Event"],[13,"DataOffer"],[13,"Selection"],[13,"PrimarySelection"],[4,"Error"],[4,"Request"],[13,"Offer"],[4,"Event"],[13,"Send"],[4,"Request"],[13,"Receive"],[4,"Event"],[13,"Offer"],[3,"ZwlrDataControlDeviceV1"],[3,"ZwlrDataControlSourceV1"],[3,"ZwlrDataControlOfferV1"],[4,"Request"],[13,"CaptureOutput"],[4,"Flags"],[4,"CancelReason"],[4,"Request"],[4,"Event"],[13,"Frame"],[13,"Object"],[13,"Ready"],[13,"Cancel"],[3,"ZwlrExportDmabufFrameV1"],[4,"Request"],[4,"Event"],[13,"Toplevel"],[4,"State"],[4,"Error"],[4,"Request"],[13,"Activate"],[13,"SetRectangle"],[13,"SetFullscreen"],[4,"Event"],[13,"Title"],[13,"AppId"],[13,"OutputEnter"],[13,"OutputLeave"],[13,"State"],[3,"ZwlrForeignToplevelManagerV1"],[3,"ZwlrForeignToplevelHandleV1"],[4,"Request"],[13,"GetGammaControl"],[4,"Error"],[4,"Request"],[13,"SetGamma"],[4,"Event"],[13,"GammaSize"],[3,"ZwlrGammaControlV1"],[4,"Error"],[4,"Request"],[13,"GetInhibitor"],[4,"Request"],[4,"Error"],[4,"Layer"],[4,"Request"],[13,"GetLayerSurface"],[4,"Error"],[4,"Request"],[13,"SetSize"],[13,"SetAnchor"],[13,"SetExclusiveZone"],[13,"SetMargin"],[13,"SetKeyboardInteractivity"],[13,"GetPopup"],[13,"AckConfigure"],[13,"SetLayer"],[4,"Event"],[13,"Configure"],[3,"Anchor"],[3,"ZwlrLayerSurfaceV1"],[4,"Request"],[13,"CaptureOutput"],[13,"CaptureOutputRegion"],[4,"Error"],[4,"Request"],[13,"Copy"],[13,"CopyWithDamage"],[4,"Event"],[13,"Buffer"],[13,"Flags"],[13,"Ready"],[13,"Damage"],[3,"Flags"],[3,"ZwlrScreencopyFrameV1"],[4,"Error"],[4,"Request"],[13,"Feedback"],[4,"Event"],[13,"ClockId"],[4,"Event"],[13,"SyncOutput"],[13,"Presented"],[4,"Error"],[4,"Request"],[13,"CreatePositioner"],[13,"GetXdgSurface"],[13,"Pong"],[4,"Event"],[13,"Ping"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[13,"SetSize"],[13,"SetAnchorRect"],[13,"SetAnchor"],[13,"SetGravity"],[13,"SetConstraintAdjustment"],[13,"SetOffset"],[4,"Error"],[4,"Request"],[13,"GetToplevel"],[13,"GetPopup"],[13,"SetWindowGeometry"],[13,"AckConfigure"],[4,"Event"],[13,"Configure"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[13,"SetParent"],[13,"SetTitle"],[13,"SetAppId"],[13,"ShowWindowMenu"],[13,"Move"],[13,"Resize"],[13,"SetMaxSize"],[13,"SetMinSize"],[13,"SetFullscreen"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"Grab"],[4,"Event"],[13,"Configure"],[4,"Error"],[4,"Request"],[13,"GetViewport"],[4,"Error"],[4,"Request"],[13,"SetSource"],[13,"SetDestination"],[4,"Request"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[4,"Request"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Event"],[3,"ZwpInputTimestampsManagerV1"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[4,"Event"],[3,"ZwpLinuxExplicitSynchronizationV1"],[4,"Event"],[3,"ZwpLinuxSurfaceSynchronizationV1"],[4,"Event"],[4,"Request"],[3,"ZwpPointerConstraintsV1"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[4,"Event"],[3,"ZwpPrimarySelectionDeviceManagerV1"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[4,"Event"],[3,"ZwpTabletManagerV1"],[4,"Event"],[3,"ZwpTabletManagerV2"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[4,"Event"],[3,"ZwpTextInputManagerV3"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[4,"Event"],[3,"ZxdgPositionerV6"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[3,"GtkPrimarySelectionDeviceManager"],[4,"Event"],[3,"ZwlrDataControlManagerV1"],[4,"Event"],[3,"ZwlrExportDmabufManagerV1"],[4,"Event"],[3,"ZwlrGammaControlManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitManagerV1"],[4,"Event"],[3,"ZwlrInputInhibitorV1"],[4,"Event"],[3,"ZwlrLayerShellV1"],[4,"Event"],[3,"ZwlrScreencopyManagerV1"],[4,"Event"],[3,"WpPresentation"],[3,"Kind"],[3,"WpPresentationFeedback"],[4,"Request"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[3,"XdgPositioner"],[4,"Event"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"]]},\
"wayland_server":{"doc":"Server-side Wayland connector","i":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of…",null,null],[3,"DispatchData","","Holder of global dispatch-related data",null,null],[3,"Filter","","An event filter",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,[[]]],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of…",1,null],[10,"opcode","","The opcode of this message",1,[[]]],[10,"is_destructor","","Whether this message is a destructor",1,[[]]],[10,"since","","The minimal object version for which this message exists",1,[[]]],[10,"child","","Retrieve the child `Object` associated with this message…",1,[[],[["option",4],["object",3]]]],[10,"from_raw","","Construct a message from its raw representation",1,[[["message",3]],["result",4]]],[10,"into_raw","","Turn this message into its raw representation",1,[[],["message",3]]],[10,"from_raw_c","","Construct a message of this group from its C representation",1,[[],["result",4]]],[10,"as_raw_c_in","","Build a C representation of this message",1,[[]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Client","","A handle to a client connected to your server",null,null],[3,"Display","","The wayland display",null,null],[3,"Global","","A handle to a global object",null,null],[3,"Main","","A main handle to a proxy",null,null],[3,"Resource","","An handle to a wayland resource",null,null],[3,"AnonymousObject","","Anonymous interface",null,null],[4,"ResourceMap","","A handle to the object map internal to the library state",null,null],[11,"from_ptr","","Creates a client from a pointer",2,[[],["client",3]]],[11,"c_ptr","","Returns a pointer to the underlying `wl_client` of…",2,[[]]],[11,"alive","","Checks whether this client is still connected to the server",2,[[]]],[11,"equals","","Checks whether `self` and `other` refer to the same client",2,[[["client",3]]]],[11,"flush","","Flushes the pending events to this client",2,[[]]],[11,"kill","","Kills this client",2,[[]]],[11,"data_map","","Returns a reference to the `UserDataMap` associated with…",2,[[],["userdatamap",3]]],[11,"add_destructor","","Adds a destructor for this client",2,[[["filter",3],["arc",3]]]],[11,"create_resource","","Creates a new resource for this client",2,[[],[["main",3],["option",4]]]],[11,"new","","Create a new display",3,[[],["display",3]]],[11,"create_global","","Create a new global object",3,[[["filter",3]],["global",3]]],[11,"create_global_with_filter","","Create a new global object with a client filter",3,[[["filter",3]],["global",3]]],[11,"flush_clients","","Flush events to the clients",3,[[]]],[11,"dispatch","","Dispatches all pending messages to their respective filters",3,[[["duration",3]],["ioresult",6]]],[11,"get_poll_fd","","Retrieve the underlying file descriptor",3,[[],["rawfd",6]]],[11,"add_socket","","Add a listening socket to this display",3,[[["option",4]],["ioresult",6]]],[11,"add_socket_auto","","Add an automatically named listening socket to this display",3,[[],[["osstring",3],["ioresult",6]]]],[11,"add_socket_from","","Add existing listening socket to this display",3,[[],["ioresult",6]]],[11,"add_socket_fd","","Add existing listening socket to this display from a raw…",3,[[["rawfd",6]],["ioresult",6]]],[11,"create_client","","Create a new client to this display from an…",3,[[["rawfd",6]],["client",3]]],[11,"c_ptr","","Retrieve a pointer from the C lib to this `wl_display`",3,[[]]],[11,"destroy","","Destroys the associated global object.",4,[[]]],[11,"send","","Send an event through this object",5,[[]]],[11,"is_alive","","Check if the object associated with this resource is still…",5,[[]]],[11,"version","","Retrieve the interface version of this wayland object…",5,[[]]],[11,"equals","","Check if the other resource refers to the same underlying…",5,[[["resource",3]]]],[11,"same_client_as","","Check if this resource and the other belong to the same…",5,[[["resource",3]]]],[11,"post_error","","Posts a protocol error to this resource",5,[[["string",3]]]],[11,"user_data","","Access the UserData associated to this object",5,[[],["userdata",3]]],[11,"client","","Retrieve an handle to the client associated with this…",5,[[],[["option",4],["client",3]]]],[11,"id","","Retrieve the object id of this wayland object",5,[[]]],[11,"is_external","","Check whether this resource is managed by the library or not",5,[[]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",5,[[]]],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",5,[[]]],[11,"assign","","Assign this object to given filter",6,[[["filter",3]]]],[11,"quick_assign","","Shorthand for assigning a closure to an object",6,[[]]],[11,"assign_destructor","","Assign a destructor to this object",6,[[["filter",3]]]],[11,"init_from_c_ptr","","Create a `Main` instance from a C pointer to a new object",6,[[]]],[0,"sys","","C-associated types",null,null],[0,"common","wayland_server::sys","Various types and functions that are used by both the…",null,null],[3,"wl_message","wayland_server::sys::common","",null,null],[12,"name","","",7,null],[12,"signature","","",7,null],[12,"types","","",7,null],[3,"wl_interface","","",null,null],[12,"name","","",8,null],[12,"version","","",8,null],[12,"request_count","","",8,null],[12,"requests","","",8,null],[12,"event_count","","",8,null],[12,"events","","",8,null],[3,"wl_list","","",null,null],[12,"prev","","",9,null],[12,"next","","",9,null],[3,"wl_array","","",null,null],[12,"size","","",10,null],[12,"alloc","","",10,null],[12,"data","","",10,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,[[]]],[5,"wl_fixed_from_double","","",null,[[]]],[5,"wl_fixed_to_int","","",null,[[]]],[5,"wl_fixed_from_int","","",null,[[]]],[19,"wl_argument","","",null,null],[12,"i","","",11,null],[12,"u","","",11,null],[12,"f","","",11,null],[12,"s","","",11,null],[12,"o","","",11,null],[12,"n","","",11,null],[12,"a","","",11,null],[12,"h","","",11,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",null,null],[4,"wl_client","wayland_server::sys::server","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[3,"wl_listener","","",null,null],[12,"link","","",12,null],[12,"notify","","",12,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",13,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",14,null],[12,"wl_client_destroy","","",14,null],[12,"wl_client_get_display","","",14,null],[12,"wl_client_get_credentials","","",14,null],[12,"wl_client_get_object","","",14,null],[12,"wl_client_add_destroy_listener","","",14,null],[12,"wl_client_get_destroy_listener","","",14,null],[12,"wl_client_post_no_memory","","",14,null],[12,"wl_resource_create","","",14,null],[12,"wl_client_create","","",14,null],[12,"wl_display_create","","",14,null],[12,"wl_display_destroy","","",14,null],[12,"wl_display_destroy_clients","","",14,null],[12,"wl_display_get_serial","","",14,null],[12,"wl_display_next_serial","","",14,null],[12,"wl_display_add_socket","","",14,null],[12,"wl_display_add_socket_auto","","",14,null],[12,"wl_display_add_socket_fd","","",14,null],[12,"wl_display_add_shm_format","","",14,null],[12,"wl_display_get_event_loop","","",14,null],[12,"wl_display_terminate","","",14,null],[12,"wl_display_run","","",14,null],[12,"wl_display_flush_clients","","",14,null],[12,"wl_display_add_destroy_listener","","",14,null],[12,"wl_display_get_destroy_listener","","",14,null],[12,"wl_global_create","","",14,null],[12,"wl_display_init_shm","","",14,null],[12,"wl_display_add_client_created_listener","","",14,null],[12,"wl_display_set_global_filter","","",14,null],[12,"wl_event_loop_create","","",14,null],[12,"wl_event_loop_destroy","","",14,null],[12,"wl_event_loop_add_fd","","",14,null],[12,"wl_event_loop_add_timer","","",14,null],[12,"wl_event_loop_add_signal","","",14,null],[12,"wl_event_loop_dispatch","","",14,null],[12,"wl_event_loop_dispatch_idle","","",14,null],[12,"wl_event_loop_add_idle","","",14,null],[12,"wl_event_loop_get_fd","","",14,null],[12,"wl_event_loop_add_destroy_listener","","",14,null],[12,"wl_event_loop_get_destroy_listener","","",14,null],[12,"wl_event_source_fd_update","","",14,null],[12,"wl_event_source_timer_update","","",14,null],[12,"wl_event_source_remove","","",14,null],[12,"wl_event_source_check","","",14,null],[12,"wl_global_destroy","","",14,null],[12,"wl_global_get_user_data","","",14,null],[12,"wl_resource_post_event_array","","",14,null],[12,"wl_resource_queue_event_array","","",14,null],[12,"wl_resource_post_no_memory","","",14,null],[12,"wl_resource_set_implementation","","",14,null],[12,"wl_resource_set_dispatcher","","",14,null],[12,"wl_resource_destroy","","",14,null],[12,"wl_resource_get_client","","",14,null],[12,"wl_resource_get_id","","",14,null],[12,"wl_resource_get_link","","",14,null],[12,"wl_resource_from_link","","",14,null],[12,"wl_resource_find_for_client","","",14,null],[12,"wl_resource_set_user_data","","",14,null],[12,"wl_resource_get_user_data","","",14,null],[12,"wl_resource_get_version","","",14,null],[12,"wl_resource_set_destructor","","",14,null],[12,"wl_resource_instance_of","","",14,null],[12,"wl_resource_add_destroy_listener","","",14,null],[12,"wl_resource_get_destroy_listener","","",14,null],[12,"wl_shm_buffer_begin_access","","",14,null],[12,"wl_shm_buffer_end_access","","",14,null],[12,"wl_shm_buffer_get","","",14,null],[12,"wl_shm_buffer_get_data","","",14,null],[12,"wl_shm_buffer_get_stride","","",14,null],[12,"wl_shm_buffer_get_format","","",14,null],[12,"wl_shm_buffer_get_width","","",14,null],[12,"wl_shm_buffer_get_height","","",14,null],[12,"wl_log_set_handler_server","","",14,null],[12,"wl_list_init","","",14,null],[12,"wl_list_insert","","",14,null],[12,"wl_list_remove","","",14,null],[12,"wl_list_length","","",14,null],[12,"wl_list_empty","","",14,null],[12,"wl_list_insert_list","","",14,null],[12,"wl_array_init","","",14,null],[12,"wl_array_release","","",14,null],[12,"wl_array_add","","",14,null],[12,"wl_array_copy","","",14,null],[12,"wl_resource_post_event","","",14,null],[12,"wl_resource_queue_event","","",14,null],[12,"wl_resource_post_error","","",14,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[5,"is_lib_available","","",null,[[]]],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_server::sys::server::signal","",null,[[]]],[5,"wl_signal_add","","",null,[[]]],[5,"wl_signal_get","","",null,[[]]],[5,"wl_signal_emit","","",null,[[]]],[5,"rust_listener_create","","",null,[[]]],[5,"rust_listener_get_user_data","","",null,[[]]],[5,"rust_listener_set_user_data","","",null,[[]]],[5,"rust_listener_destroy","","",null,[[]]],[11,"get","wayland_server","Returns the `Resource` corresponding to a given id",15,[[],[["resource",3],["option",4]]]],[11,"get_new","","Creates a `NewResource` for a given id",15,[[],[["main",3],["option",4]]]],[0,"protocol","","Generated interfaces for the core wayland protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",16,null],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",17,null],[7,"wl_callback_events","wayland_server::protocol::wl_callback","C-representation of the messages of this interface, for…",null,null],[7,"wl_callback_interface","","C representation of this interface, for interop",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[11,"done","","done event",18,[[]]],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",19,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",20,null],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",19,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",21,null],[4,"Event","wayland_server::protocol::wl_compositor","",null,null],[7,"wl_compositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_compositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_CREATE_REGION_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",22,null],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",23,null],[12,"offset","","",23,null],[12,"width","","",23,null],[12,"height","","",23,null],[12,"stride","","",23,null],[12,"format","","",23,null],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",22,null],[13,"Resize","","change the size of the pool mapping",22,null],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",24,null],[4,"Event","wayland_server::protocol::wl_shm_pool","",null,null],[7,"wl_shm_pool_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_pool_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",25,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",25,null],[13,"InvalidFd","","mmapping the file descriptor failed",25,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",26,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",26,null],[13,"C8","","8-bit color index format, [7:0] C",26,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",26,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",26,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",26,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",26,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",26,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",26,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",26,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",26,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",26,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",26,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",26,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little…",26,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little…",26,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little…",26,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little…",26,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little…",26,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little…",26,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little…",26,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",26,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",26,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",26,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",26,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",26,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",26,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",26,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",26,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",26,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",26,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",26,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",26,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",26,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",26,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",26,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",26,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",26,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",26,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little…",26,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little…",26,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little…",26,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little…",26,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",26,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",26,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",26,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",26,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",26,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2)…",26,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2)…",26,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2)…",26,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2)…",26,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2)…",26,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2)…",26,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2)…",26,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2)…",26,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2)…",26,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2)…",26,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",27,null],[12,"id","wayland_server::protocol::wl_shm::Request","",28,null],[12,"fd","","",28,null],[12,"size","","",28,null],[4,"Event","wayland_server::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",29,null],[12,"format","wayland_server::protocol::wl_shm::Event","",30,null],[7,"wl_shm_requests","wayland_server::protocol::wl_shm","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shm_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_POOL_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_FORMAT_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",25,[[],[["error",4],["option",4]]]],[11,"to_raw","","",25,[[]]],[11,"from_raw","","",26,[[],[["option",4],["format",4]]]],[11,"to_raw","","",26,[[]]],[11,"format","","pixel format description",31,[[["format",4]]]],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",32,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",33,null],[7,"wl_buffer_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_buffer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_RELEASE_SINCE","","The minimal object version supporting this event",null,null],[11,"release","","compositor releases buffer",34,[[]]],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",35,null],[13,"InvalidActionMask","","action mask contains invalid values",35,null],[13,"InvalidAction","","action argument has an invalid value",35,null],[13,"InvalidOffer","","offer doesn\'t accept this request",35,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",36,null],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",37,null],[12,"mime_type","","",37,null],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",36,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",38,null],[12,"fd","","",38,null],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",36,null],[13,"Finish","","the offer will no longer be used",36,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",36,null],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",39,null],[12,"preferred_action","","",39,null],[4,"Event","wayland_server::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",40,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",41,null],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",40,null],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",42,null],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",40,null],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",43,null],[7,"wl_data_offer_requests","wayland_server::protocol::wl_data_offer","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_offer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_ACCEPT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RECEIVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FINISH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SOURCE_ACTIONS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",35,[[],[["option",4],["error",4]]]],[11,"to_raw","","",35,[[]]],[11,"offer","","advertise offered mime type",44,[[["string",3]]]],[11,"source_actions","","notify the source-side available actions",44,[[]]],[11,"action","","notify the selected action",44,[[]]],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",45,null],[13,"InvalidSource","","source doesn\'t accept this request",45,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",46,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",47,null],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",46,null],[13,"SetActions","","set the available drag-and-drop actions",46,null],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",48,null],[4,"Event","wayland_server::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",49,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",50,null],[13,"Send","wayland_server::protocol::wl_data_source","send the data",49,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",51,null],[12,"fd","","",51,null],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",49,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",49,null],[13,"DndFinished","","the drag-and-drop operation concluded",49,null],[13,"Action","","notify the selected action",49,null],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",52,null],[7,"wl_data_source_requests","wayland_server::protocol::wl_data_source","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_source_interface","","C representation of this interface, for interop",null,null],[17,"REQ_OFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_ACTIONS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_TARGET_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SEND_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCELLED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_DROP_PERFORMED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DND_FINISHED_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ACTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",45,[[],[["error",4],["option",4]]]],[11,"to_raw","","",45,[[]]],[11,"target","","a target accepts an offered mime type",53,[[["string",3],["option",4]]]],[11,"send","","send the data",53,[[["string",3],["rawfd",6]]]],[11,"cancelled","","selection was cancelled",53,[[]]],[11,"dnd_drop_performed","","the drag-and-drop operation physically finished",53,[[]]],[11,"dnd_finished","","the drag-and-drop operation concluded",53,[[]]],[11,"action","","notify the selected action",53,[[]]],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",54,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",55,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",56,null],[12,"origin","","",56,null],[12,"icon","","",56,null],[12,"serial","","",56,null],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",55,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",57,null],[12,"serial","","",57,null],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",55,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",58,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",59,null],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",58,null],[12,"serial","wayland_server::protocol::wl_data_device::Event","",60,null],[12,"surface","","",60,null],[12,"x","","",60,null],[12,"y","","",60,null],[12,"id","","",60,null],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",58,null],[13,"Motion","","drag-and-drop session motion",58,null],[12,"time","wayland_server::protocol::wl_data_device::Event","",61,null],[12,"x","","",61,null],[12,"y","","",61,null],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",58,null],[13,"Selection","","advertise new selection",58,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",62,null],[7,"wl_data_device_requests","wayland_server::protocol::wl_data_device","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_interface","","C representation of this interface, for interop",null,null],[17,"REQ_START_DRAG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SELECTION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DATA_OFFER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DROP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SELECTION_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",54,[[],[["error",4],["option",4]]]],[11,"to_raw","","",54,[[]]],[11,"data_offer","","introduce a new wl_data_offer",63,[[["wldataoffer",3]]]],[11,"enter","","initiate drag-and-drop session",63,[[["wlsurface",3],["option",4],["wldataoffer",3]]]],[11,"leave","","end drag-and-drop session",63,[[]]],[11,"motion","","drag-and-drop session motion",63,[[]]],[11,"drop","","end drag-and-drop session successfully",63,[[]]],[11,"selection","","advertise new selection",63,[[["option",4],["wldataoffer",3]]]],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",64,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",65,null],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",64,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",66,null],[12,"seat","","",66,null],[4,"Event","wayland_server::protocol::wl_data_device_manager","",null,null],[7,"wl_data_device_manager_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_data_device_manager_interface","","C representation of this interface, for interop",null,null],[17,"REQ_CREATE_DATA_SOURCE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_DATA_DEVICE_SINCE","","The minimal object version supporting this request",null,null],[18,"None","","no action",67,null],[18,"Copy","","copy action",67,null],[18,"Move","","move action",67,null],[18,"Ask","","ask action",67,null],[11,"empty","","Returns an empty set of flags",67,[[],["dndaction",3]]],[11,"all","","Returns the set containing all flags.",67,[[],["dndaction",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",67,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",67,[[],[["dndaction",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",67,[[],["dndaction",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",67,[[],["dndaction",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",67,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",67,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",67,[[["dndaction",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",67,[[["dndaction",3]]]],[11,"insert","","Inserts the specified flags in-place.",67,[[["dndaction",3]]]],[11,"remove","","Removes the specified flags in-place.",67,[[["dndaction",3]]]],[11,"toggle","","Toggles the specified flags in-place.",67,[[["dndaction",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",67,[[["dndaction",3]]]],[11,"from_raw","","",67,[[],[["dndaction",3],["option",4]]]],[11,"to_raw","","",67,[[]]],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",68,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",69,null],[12,"id","wayland_server::protocol::wl_shell::Request","",70,null],[12,"surface","","",70,null],[4,"Event","wayland_server::protocol::wl_shell","",null,null],[7,"wl_shell_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_SHELL_SURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",68,[[],[["error",4],["option",4]]]],[11,"to_raw","","",68,[[]]],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",71,null],[13,"Scale","","scale, preserve the surface\'s aspect ratio and center on…",71,null],[13,"Driver","","switch output mode to the smallest mode that can fit the…",71,null],[13,"Fill","","no upscaling, center on output and add black borders to…",71,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",72,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",73,null],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",72,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",74,null],[12,"serial","","",74,null],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",72,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",75,null],[12,"serial","","",75,null],[12,"edges","","",75,null],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",72,null],[13,"SetTransient","","make the surface a transient surface",72,null],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",76,null],[12,"x","","",76,null],[12,"y","","",76,null],[12,"flags","","",76,null],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",72,null],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",77,null],[12,"framerate","","",77,null],[12,"output","","",77,null],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",72,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",78,null],[12,"serial","","",78,null],[12,"parent","","",78,null],[12,"x","","",78,null],[12,"y","","",78,null],[12,"flags","","",78,null],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",72,null],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",79,null],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",72,null],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",80,null],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",72,null],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",81,null],[4,"Event","wayland_server::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",82,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",83,null],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",82,null],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",84,null],[12,"width","","",84,null],[12,"height","","",84,null],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",82,null],[7,"wl_shell_surface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_shell_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_PONG_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_MOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RESIZE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TOPLEVEL_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TRANSIENT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_FULLSCREEN_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POPUP_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_MAXIMIZED_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_TITLE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_CLASS_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_PING_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CONFIGURE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_POPUP_DONE_SINCE","","The minimal object version supporting this event",null,null],[18,"None","","no edge",85,null],[18,"Top","","top edge",85,null],[18,"Bottom","","bottom edge",85,null],[18,"Left","","left edge",85,null],[18,"TopLeft","","top and left edges",85,null],[18,"BottomLeft","","bottom and left edges",85,null],[18,"Right","","right edge",85,null],[18,"TopRight","","top and right edges",85,null],[18,"BottomRight","","bottom and right edges",85,null],[11,"empty","","Returns an empty set of flags",85,[[],["resize",3]]],[11,"all","","Returns the set containing all flags.",85,[[],["resize",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",85,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",85,[[],[["resize",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",85,[[],["resize",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",85,[[],["resize",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",85,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",85,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",85,[[["resize",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",85,[[["resize",3]]]],[11,"insert","","Inserts the specified flags in-place.",85,[[["resize",3]]]],[11,"remove","","Removes the specified flags in-place.",85,[[["resize",3]]]],[11,"toggle","","Toggles the specified flags in-place.",85,[[["resize",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",85,[[["resize",3]]]],[11,"from_raw","","",85,[[],[["option",4],["resize",3]]]],[11,"to_raw","","",85,[[]]],[18,"Inactive","","do not set keyboard focus",86,null],[11,"empty","","Returns an empty set of flags",86,[[],["transient",3]]],[11,"all","","Returns the set containing all flags.",86,[[],["transient",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",86,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",86,[[],[["option",4],["transient",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",86,[[],["transient",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",86,[[],["transient",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",86,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",86,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",86,[[["transient",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",86,[[["transient",3]]]],[11,"insert","","Inserts the specified flags in-place.",86,[[["transient",3]]]],[11,"remove","","Removes the specified flags in-place.",86,[[["transient",3]]]],[11,"toggle","","Toggles the specified flags in-place.",86,[[["transient",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",86,[[["transient",3]]]],[11,"from_raw","","",86,[[],[["transient",3],["option",4]]]],[11,"to_raw","","",86,[[]]],[11,"from_raw","","",71,[[],[["option",4],["fullscreenmethod",4]]]],[11,"to_raw","","",71,[[]]],[11,"ping","","ping client",87,[[]]],[11,"configure","","suggest resize",87,[[["resize",3]]]],[11,"popup_done","","popup interaction is done",87,[[]]],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",88,null],[13,"InvalidTransform","","buffer transform value is invalid",88,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",89,null],[13,"Attach","","set the surface contents",89,null],[12,"buffer","wayland_server::protocol::wl_surface::Request","",90,null],[12,"x","","",90,null],[12,"y","","",90,null],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",89,null],[12,"x","wayland_server::protocol::wl_surface::Request","",91,null],[12,"y","","",91,null],[12,"width","","",91,null],[12,"height","","",91,null],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",89,null],[12,"callback","wayland_server::protocol::wl_surface::Request","",92,null],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",89,null],[12,"region","wayland_server::protocol::wl_surface::Request","",93,null],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",89,null],[12,"region","wayland_server::protocol::wl_surface::Request","",94,null],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",89,null],[13,"SetBufferTransform","","sets the buffer transformation",89,null],[12,"transform","wayland_server::protocol::wl_surface::Request","",95,null],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",89,null],[12,"scale","wayland_server::protocol::wl_surface::Request","",96,null],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",89,null],[12,"x","wayland_server::protocol::wl_surface::Request","",97,null],[12,"y","","",97,null],[12,"width","","",97,null],[12,"height","","",97,null],[4,"Event","wayland_server::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",98,null],[12,"output","wayland_server::protocol::wl_surface::Event","",99,null],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",98,null],[12,"output","wayland_server::protocol::wl_surface::Event","",100,null],[7,"wl_surface_requests","wayland_server::protocol::wl_surface","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_surface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ATTACH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_FRAME_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_OPAQUE_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_INPUT_REGION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_COMMIT_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_TRANSFORM_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_BUFFER_SCALE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_DAMAGE_BUFFER_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",88,[[],[["error",4],["option",4]]]],[11,"to_raw","","",88,[[]]],[11,"enter","","surface enters an output",101,[[["wloutput",3]]]],[11,"leave","","surface leaves an output",101,[[["wloutput",3]]]],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",102,null],[12,"id","wayland_server::protocol::wl_seat::Request","",103,null],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",102,null],[12,"id","wayland_server::protocol::wl_seat::Request","",104,null],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",102,null],[12,"id","wayland_server::protocol::wl_seat::Request","",105,null],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",102,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",106,null],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",107,null],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",106,null],[12,"name","wayland_server::protocol::wl_seat::Event","",108,null],[7,"wl_seat_requests","wayland_server::protocol::wl_seat","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_seat_interface","","C representation of this interface, for interop",null,null],[17,"REQ_GET_POINTER_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_KEYBOARD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_TOUCH_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_CAPABILITIES_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_NAME_SINCE","","The minimal object version supporting this event",null,null],[18,"Pointer","","the seat has pointer devices",109,null],[18,"Keyboard","","the seat has one or more keyboards",109,null],[18,"Touch","","the seat has touch devices",109,null],[11,"empty","","Returns an empty set of flags",109,[[],["capability",3]]],[11,"all","","Returns the set containing all flags.",109,[[],["capability",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",109,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",109,[[],[["option",4],["capability",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",109,[[],["capability",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",109,[[],["capability",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",109,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",109,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",109,[[["capability",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",109,[[["capability",3]]]],[11,"insert","","Inserts the specified flags in-place.",109,[[["capability",3]]]],[11,"remove","","Removes the specified flags in-place.",109,[[["capability",3]]]],[11,"toggle","","Toggles the specified flags in-place.",109,[[["capability",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",109,[[["capability",3]]]],[11,"from_raw","","",109,[[],[["capability",3],["option",4]]]],[11,"to_raw","","",109,[[]]],[11,"capabilities","","seat capabilities changed",110,[[["capability",3]]]],[11,"name","","unique identifier for this seat",110,[[["string",3]]]],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",111,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",112,null],[13,"Pressed","","the button is pressed",112,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",113,null],[13,"HorizontalScroll","","horizontal axis",113,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel rotation",114,null],[13,"Finger","","finger on a touch surface",114,null],[13,"Continuous","","continuous coordinate space",114,null],[13,"WheelTilt","","a physical wheel tilt",114,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",115,null],[12,"serial","wayland_server::protocol::wl_pointer::Request","",116,null],[12,"surface","","",116,null],[12,"hotspot_x","","",116,null],[12,"hotspot_y","","",116,null],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",115,null],[4,"Event","","",null,null],[13,"Enter","","enter event",117,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",118,null],[12,"surface","","",118,null],[12,"surface_x","","",118,null],[12,"surface_y","","",118,null],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",117,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",119,null],[12,"surface","","",119,null],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",117,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",120,null],[12,"surface_x","","",120,null],[12,"surface_y","","",120,null],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",117,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",121,null],[12,"time","","",121,null],[12,"button","","",121,null],[12,"state","","",121,null],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",117,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",122,null],[12,"axis","","",122,null],[12,"value","","",122,null],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",117,null],[13,"AxisSource","","axis source event",117,null],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",123,null],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",117,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",124,null],[12,"axis","","",124,null],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",117,null],[12,"axis","wayland_server::protocol::wl_pointer::Event","",125,null],[12,"discrete","","",125,null],[7,"wl_pointer_requests","wayland_server::protocol::wl_pointer","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_pointer_interface","","C representation of this interface, for interop",null,null],[17,"REQ_SET_CURSOR_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_BUTTON_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_SOURCE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_STOP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_AXIS_DISCRETE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",111,[[],[["option",4],["error",4]]]],[11,"to_raw","","",111,[[]]],[11,"from_raw","","",112,[[],[["buttonstate",4],["option",4]]]],[11,"to_raw","","",112,[[]]],[11,"from_raw","","",113,[[],[["axis",4],["option",4]]]],[11,"to_raw","","",113,[[]]],[11,"from_raw","","",114,[[],[["option",4],["axissource",4]]]],[11,"to_raw","","",114,[[]]],[11,"enter","","enter event",126,[[["wlsurface",3]]]],[11,"leave","","leave event",126,[[["wlsurface",3]]]],[11,"motion","","pointer motion event",126,[[]]],[11,"button","","pointer button event",126,[[["buttonstate",4]]]],[11,"axis","","axis event",126,[[["axis",4]]]],[11,"frame","","end of a pointer event sequence",126,[[]]],[11,"axis_source","","axis source event",126,[[["axissource",4]]]],[11,"axis_stop","","axis stop event",126,[[["axis",4]]]],[11,"axis_discrete","","axis click event",126,[[["axis",4]]]],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw…",127,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode,…",127,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",128,null],[13,"Pressed","","key is pressed",128,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",129,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",130,null],[12,"format","wayland_server::protocol::wl_keyboard::Event","",131,null],[12,"fd","","",131,null],[12,"size","","",131,null],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",130,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",132,null],[12,"surface","","",132,null],[12,"keys","","",132,null],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",130,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",133,null],[12,"surface","","",133,null],[13,"Key","wayland_server::protocol::wl_keyboard","key event",130,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",134,null],[12,"time","","",134,null],[12,"key","","",134,null],[12,"state","","",134,null],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",130,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",135,null],[12,"mods_depressed","","",135,null],[12,"mods_latched","","",135,null],[12,"mods_locked","","",135,null],[12,"group","","",135,null],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",130,null],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",136,null],[12,"delay","","",136,null],[7,"wl_keyboard_requests","wayland_server::protocol::wl_keyboard","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_keyboard_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_KEYMAP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ENTER_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_LEAVE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_KEY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODIFIERS_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_REPEAT_INFO_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",127,[[],[["option",4],["keymapformat",4]]]],[11,"to_raw","","",127,[[]]],[11,"from_raw","","",128,[[],[["keystate",4],["option",4]]]],[11,"to_raw","","",128,[[]]],[11,"keymap","","keyboard mapping",137,[[["rawfd",6],["keymapformat",4]]]],[11,"enter","","enter event",137,[[["vec",3],["wlsurface",3]]]],[11,"leave","","leave event",137,[[["wlsurface",3]]]],[11,"key","","key event",137,[[["keystate",4]]]],[11,"modifiers","","modifier and group state",137,[[]]],[11,"repeat_info","","repeat rate and delay",137,[[]]],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",138,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",139,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",140,null],[12,"time","","",140,null],[12,"surface","","",140,null],[12,"id","","",140,null],[12,"x","","",140,null],[12,"y","","",140,null],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",139,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",141,null],[12,"time","","",141,null],[12,"id","","",141,null],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",139,null],[12,"time","wayland_server::protocol::wl_touch::Event","",142,null],[12,"id","","",142,null],[12,"x","","",142,null],[12,"y","","",142,null],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",139,null],[13,"Cancel","","touch session cancelled",139,null],[13,"Shape","","update shape of touch point",139,null],[12,"id","wayland_server::protocol::wl_touch::Event","",143,null],[12,"major","","",143,null],[12,"minor","","",143,null],[13,"Orientation","wayland_server::protocol::wl_touch","update orientation of touch point",139,null],[12,"id","wayland_server::protocol::wl_touch::Event","",144,null],[12,"orientation","","",144,null],[7,"wl_touch_requests","wayland_server::protocol::wl_touch","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_touch_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_DOWN_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_UP_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MOTION_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_FRAME_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_CANCEL_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SHAPE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_ORIENTATION_SINCE","","The minimal object version supporting this event",null,null],[11,"down","","touch down event and beginning of a touch sequence",145,[[["wlsurface",3]]]],[11,"up","","end of a touch event sequence",145,[[]]],[11,"motion","","update of touch point coordinates",145,[[]]],[11,"frame","","end of touch frame event",145,[[]]],[11,"cancel","","touch session cancelled",145,[[]]],[11,"shape","","update shape of touch point",145,[[]]],[11,"orientation","","update orientation of touch point",145,[[]]],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"Mode","wayland_server::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",146,null],[13,"None","","no geometry",146,null],[13,"HorizontalRgb","","horizontal RGB",146,null],[13,"HorizontalBgr","","horizontal BGR",146,null],[13,"VerticalRgb","","vertical RGB",146,null],[13,"VerticalBgr","","vertical BGR",146,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",147,null],[13,"_90","","90 degrees counter-clockwise",147,null],[13,"_180","","180 degrees counter-clockwise",147,null],[13,"_270","","270 degrees counter-clockwise",147,null],[13,"Flipped","","180 degree flip around a vertical axis",147,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",147,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",147,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",147,null],[4,"Request","","",null,null],[13,"Release","","release the output object",148,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",149,null],[12,"x","wayland_server::protocol::wl_output::Event","",150,null],[12,"y","","",150,null],[12,"physical_width","","",150,null],[12,"physical_height","","",150,null],[12,"subpixel","","",150,null],[12,"make","","",150,null],[12,"model","","",150,null],[12,"transform","","",150,null],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",149,null],[12,"flags","wayland_server::protocol::wl_output::Event","",151,null],[12,"width","","",151,null],[12,"height","","",151,null],[12,"refresh","","",151,null],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",149,null],[13,"Scale","","output scaling properties",149,null],[12,"factor","wayland_server::protocol::wl_output::Event","",152,null],[7,"wl_output_requests","wayland_server::protocol::wl_output","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_events","","C-representation of the messages of this interface, for…",null,null],[7,"wl_output_interface","","C representation of this interface, for interop",null,null],[17,"REQ_RELEASE_SINCE","","The minimal object version supporting this request",null,null],[17,"EVT_GEOMETRY_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_MODE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_DONE_SINCE","","The minimal object version supporting this event",null,null],[17,"EVT_SCALE_SINCE","","The minimal object version supporting this event",null,null],[11,"from_raw","","",146,[[],[["option",4],["subpixel",4]]]],[11,"to_raw","","",146,[[]]],[11,"from_raw","","",147,[[],[["transform",4],["option",4]]]],[11,"to_raw","","",147,[[]]],[18,"Current","","indicates this is the current mode",153,null],[18,"Preferred","","indicates this is the preferred mode",153,null],[11,"empty","","Returns an empty set of flags",153,[[],["mode",3]]],[11,"all","","Returns the set containing all flags.",153,[[],["mode",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",153,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",153,[[],[["option",4],["mode",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",153,[[],["mode",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",153,[[],["mode",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",153,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",153,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",153,[[["mode",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",153,[[["mode",3]]]],[11,"insert","","Inserts the specified flags in-place.",153,[[["mode",3]]]],[11,"remove","","Removes the specified flags in-place.",153,[[["mode",3]]]],[11,"toggle","","Toggles the specified flags in-place.",153,[[["mode",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",153,[[["mode",3]]]],[11,"from_raw","","",153,[[],[["option",4],["mode",3]]]],[11,"to_raw","","",153,[[]]],[11,"geometry","","properties of the output",154,[[["string",3],["transform",4],["subpixel",4]]]],[11,"mode","","advertise available modes for the output",154,[[["mode",3]]]],[11,"done","","sent all information about output",154,[[]]],[11,"scale","","output scaling properties",154,[[]]],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",155,null],[13,"Add","","add rectangle to region",155,null],[12,"x","wayland_server::protocol::wl_region::Request","",156,null],[12,"y","","",156,null],[12,"width","","",156,null],[12,"height","","",156,null],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",155,null],[12,"x","wayland_server::protocol::wl_region::Request","",157,null],[12,"y","","",157,null],[12,"width","","",157,null],[12,"height","","",157,null],[4,"Event","wayland_server::protocol::wl_region","",null,null],[7,"wl_region_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_region_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_ADD_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SUBTRACT_SINCE","","The minimal object version supporting this request",null,null],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",158,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",159,null],[13,"GetSubsurface","","give a surface the role sub-surface",159,null],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",160,null],[12,"surface","","",160,null],[12,"parent","","",160,null],[4,"Event","wayland_server::protocol::wl_subcompositor","",null,null],[7,"wl_subcompositor_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subcompositor_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_GET_SUBSURFACE_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",158,[[],[["option",4],["error",4]]]],[11,"to_raw","","",158,[[]]],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",161,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",162,null],[13,"SetPosition","","reposition the sub-surface",162,null],[12,"x","wayland_server::protocol::wl_subsurface::Request","",163,null],[12,"y","","",163,null],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",162,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",164,null],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",162,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",165,null],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",162,null],[13,"SetDesync","","set sub-surface to desynchronized mode",162,null],[4,"Event","","",null,null],[7,"wl_subsurface_requests","","C-representation of the messages of this interface, for…",null,null],[7,"wl_subsurface_interface","","C representation of this interface, for interop",null,null],[17,"REQ_DESTROY_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_POSITION_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_ABOVE_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_PLACE_BELOW_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_SYNC_SINCE","","The minimal object version supporting this request",null,null],[17,"REQ_SET_DESYNC_SINCE","","The minimal object version supporting this request",null,null],[11,"from_raw","","",161,[[],[["option",4],["error",4]]]],[11,"to_raw","","",161,[[]]],[14,"request_enum","wayland_server","Generate an enum joining several objects requests",null,null],[11,"from","","",166,[[]]],[11,"into","","",166,[[]]],[11,"try_from","","",166,[[],["result",4]]],[11,"try_into","","",166,[[],["result",4]]],[11,"borrow","","",166,[[]]],[11,"borrow_mut","","",166,[[]]],[11,"type_id","","",166,[[],["typeid",3]]],[11,"into_any","","",166,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",166,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",166,[[],["any",8]]],[11,"as_any_mut","","",166,[[],["any",8]]],[11,"into_any_arc","","",166,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",167,[[]]],[11,"into","","",167,[[]]],[11,"try_from","","",167,[[],["result",4]]],[11,"try_into","","",167,[[],["result",4]]],[11,"borrow","","",167,[[]]],[11,"borrow_mut","","",167,[[]]],[11,"type_id","","",167,[[],["typeid",3]]],[11,"into_any","","",167,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",167,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",167,[[],["any",8]]],[11,"as_any_mut","","",167,[[],["any",8]]],[11,"from","","",168,[[]]],[11,"into","","",168,[[]]],[11,"to_owned","","",168,[[]]],[11,"clone_into","","",168,[[]]],[11,"try_from","","",168,[[],["result",4]]],[11,"try_into","","",168,[[],["result",4]]],[11,"borrow","","",168,[[]]],[11,"borrow_mut","","",168,[[]]],[11,"type_id","","",168,[[],["typeid",3]]],[11,"into_any","","",168,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",168,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",168,[[],["any",8]]],[11,"as_any_mut","","",168,[[],["any",8]]],[11,"from","","",169,[[]]],[11,"into","","",169,[[]]],[11,"try_from","","",169,[[],["result",4]]],[11,"try_into","","",169,[[],["result",4]]],[11,"borrow","","",169,[[]]],[11,"borrow_mut","","",169,[[]]],[11,"type_id","","",169,[[],["typeid",3]]],[11,"into_any","","",169,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",169,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",169,[[],["any",8]]],[11,"as_any_mut","","",169,[[],["any",8]]],[11,"into_any_arc","","",169,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"into_any","","",2,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",2,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",2,[[],["any",8]]],[11,"as_any_mut","","",2,[[],["any",8]]],[11,"into_any_arc","","",2,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"into_any","","",6,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",6,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",6,[[],["any",8]]],[11,"as_any_mut","","",6,[[],["any",8]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",170,[[]]],[11,"into","","",170,[[]]],[11,"to_owned","","",170,[[]]],[11,"clone_into","","",170,[[]]],[11,"try_from","","",170,[[],["result",4]]],[11,"try_into","","",170,[[],["result",4]]],[11,"borrow","","",170,[[]]],[11,"borrow_mut","","",170,[[]]],[11,"type_id","","",170,[[],["typeid",3]]],[11,"into_any","","",170,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",170,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",170,[[],["any",8]]],[11,"as_any_mut","","",170,[[],["any",8]]],[11,"into_any_arc","","",170,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"into_any","","",15,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",15,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",15,[[],["any",8]]],[11,"as_any_mut","","",15,[[],["any",8]]],[11,"into_any_arc","","",15,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::sys::common","",7,[[]]],[11,"into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"into_any","","",8,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",8,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",8,[[],["any",8]]],[11,"as_any_mut","","",8,[[],["any",8]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"into_any","","",10,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",10,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",10,[[],["any",8]]],[11,"as_any_mut","","",10,[[],["any",8]]],[11,"into_any_arc","","",10,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"into_any","","",11,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",11,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",11,[[],["any",8]]],[11,"as_any_mut","","",11,[[],["any",8]]],[11,"from","wayland_server::sys::server","",171,[[]]],[11,"into","","",171,[[]]],[11,"try_from","","",171,[[],["result",4]]],[11,"try_into","","",171,[[],["result",4]]],[11,"borrow","","",171,[[]]],[11,"borrow_mut","","",171,[[]]],[11,"type_id","","",171,[[],["typeid",3]]],[11,"into_any","","",171,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",171,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",171,[[],["any",8]]],[11,"as_any_mut","","",171,[[],["any",8]]],[11,"into_any_arc","","",171,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",172,[[]]],[11,"into","","",172,[[]]],[11,"try_from","","",172,[[],["result",4]]],[11,"try_into","","",172,[[],["result",4]]],[11,"borrow","","",172,[[]]],[11,"borrow_mut","","",172,[[]]],[11,"type_id","","",172,[[],["typeid",3]]],[11,"into_any","","",172,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",172,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",172,[[],["any",8]]],[11,"as_any_mut","","",172,[[],["any",8]]],[11,"into_any_arc","","",172,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",173,[[]]],[11,"into","","",173,[[]]],[11,"try_from","","",173,[[],["result",4]]],[11,"try_into","","",173,[[],["result",4]]],[11,"borrow","","",173,[[]]],[11,"borrow_mut","","",173,[[]]],[11,"type_id","","",173,[[],["typeid",3]]],[11,"into_any","","",173,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",173,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",173,[[],["any",8]]],[11,"as_any_mut","","",173,[[],["any",8]]],[11,"into_any_arc","","",173,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",174,[[]]],[11,"into","","",174,[[]]],[11,"try_from","","",174,[[],["result",4]]],[11,"try_into","","",174,[[],["result",4]]],[11,"borrow","","",174,[[]]],[11,"borrow_mut","","",174,[[]]],[11,"type_id","","",174,[[],["typeid",3]]],[11,"into_any","","",174,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",174,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",174,[[],["any",8]]],[11,"as_any_mut","","",174,[[],["any",8]]],[11,"into_any_arc","","",174,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",175,[[]]],[11,"into","","",175,[[]]],[11,"try_from","","",175,[[],["result",4]]],[11,"try_into","","",175,[[],["result",4]]],[11,"borrow","","",175,[[]]],[11,"borrow_mut","","",175,[[]]],[11,"type_id","","",175,[[],["typeid",3]]],[11,"into_any","","",175,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",175,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",175,[[],["any",8]]],[11,"as_any_mut","","",175,[[],["any",8]]],[11,"into_any_arc","","",175,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",176,[[]]],[11,"into","","",176,[[]]],[11,"try_from","","",176,[[],["result",4]]],[11,"try_into","","",176,[[],["result",4]]],[11,"borrow","","",176,[[]]],[11,"borrow_mut","","",176,[[]]],[11,"type_id","","",176,[[],["typeid",3]]],[11,"into_any","","",176,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",176,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",176,[[],["any",8]]],[11,"as_any_mut","","",176,[[],["any",8]]],[11,"into_any_arc","","",176,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",177,[[]]],[11,"into","","",177,[[]]],[11,"try_from","","",177,[[],["result",4]]],[11,"try_into","","",177,[[],["result",4]]],[11,"borrow","","",177,[[]]],[11,"borrow_mut","","",177,[[]]],[11,"type_id","","",177,[[],["typeid",3]]],[11,"into_any","","",177,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",177,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",177,[[],["any",8]]],[11,"as_any_mut","","",177,[[],["any",8]]],[11,"into_any_arc","","",177,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",178,[[]]],[11,"into","","",178,[[]]],[11,"try_from","","",178,[[],["result",4]]],[11,"try_into","","",178,[[],["result",4]]],[11,"borrow","","",178,[[]]],[11,"borrow_mut","","",178,[[]]],[11,"type_id","","",178,[[],["typeid",3]]],[11,"into_any","","",178,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",178,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",178,[[],["any",8]]],[11,"as_any_mut","","",178,[[],["any",8]]],[11,"into_any_arc","","",178,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",179,[[]]],[11,"into","","",179,[[]]],[11,"try_from","","",179,[[],["result",4]]],[11,"try_into","","",179,[[],["result",4]]],[11,"borrow","","",179,[[]]],[11,"borrow_mut","","",179,[[]]],[11,"type_id","","",179,[[],["typeid",3]]],[11,"into_any","","",179,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",179,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",179,[[],["any",8]]],[11,"as_any_mut","","",179,[[],["any",8]]],[11,"into_any_arc","","",179,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_callback","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",180,[[]]],[11,"into","","",180,[[]]],[11,"try_from","","",180,[[],["result",4]]],[11,"try_into","","",180,[[],["result",4]]],[11,"borrow","","",180,[[]]],[11,"borrow_mut","","",180,[[]]],[11,"type_id","","",180,[[],["typeid",3]]],[11,"into_any","","",180,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",180,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",180,[[],["any",8]]],[11,"as_any_mut","","",180,[[],["any",8]]],[11,"into_any_arc","","",180,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_compositor","",181,[[]]],[11,"into","","",181,[[]]],[11,"to_owned","","",181,[[]]],[11,"clone_into","","",181,[[]]],[11,"try_from","","",181,[[],["result",4]]],[11,"try_into","","",181,[[],["result",4]]],[11,"borrow","","",181,[[]]],[11,"borrow_mut","","",181,[[]]],[11,"type_id","","",181,[[],["typeid",3]]],[11,"into_any","","",181,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",181,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",181,[[],["any",8]]],[11,"as_any_mut","","",181,[[],["any",8]]],[11,"into_any_arc","","",181,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",182,[[]]],[11,"into","","",182,[[]]],[11,"try_from","","",182,[[],["result",4]]],[11,"try_into","","",182,[[],["result",4]]],[11,"borrow","","",182,[[]]],[11,"borrow_mut","","",182,[[]]],[11,"type_id","","",182,[[],["typeid",3]]],[11,"into_any","","",182,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",182,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",182,[[],["any",8]]],[11,"as_any_mut","","",182,[[],["any",8]]],[11,"into_any_arc","","",182,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_shm_pool","",183,[[]]],[11,"into","","",183,[[]]],[11,"to_owned","","",183,[[]]],[11,"clone_into","","",183,[[]]],[11,"try_from","","",183,[[],["result",4]]],[11,"try_into","","",183,[[],["result",4]]],[11,"borrow","","",183,[[]]],[11,"borrow_mut","","",183,[[]]],[11,"type_id","","",183,[[],["typeid",3]]],[11,"into_any","","",183,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",183,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",183,[[],["any",8]]],[11,"as_any_mut","","",183,[[],["any",8]]],[11,"into_any_arc","","",183,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"into_any","","",22,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",22,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",22,[[],["any",8]]],[11,"as_any_mut","","",22,[[],["any",8]]],[11,"into_any_arc","","",22,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",184,[[]]],[11,"into","","",184,[[]]],[11,"try_from","","",184,[[],["result",4]]],[11,"try_into","","",184,[[],["result",4]]],[11,"borrow","","",184,[[]]],[11,"borrow_mut","","",184,[[]]],[11,"type_id","","",184,[[],["typeid",3]]],[11,"into_any","","",184,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",184,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",184,[[],["any",8]]],[11,"as_any_mut","","",184,[[],["any",8]]],[11,"into_any_arc","","",184,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_shm","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_buffer","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any","","",33,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_data_offer","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any","","",44,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"into_any","","",40,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",40,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",40,[[],["any",8]]],[11,"as_any_mut","","",40,[[],["any",8]]],[11,"into_any_arc","","",40,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_data_source","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_any","","",53,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"into_any_arc","","",53,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_any","","",45,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"into_any","","",46,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",46,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",46,[[],["any",8]]],[11,"as_any_mut","","",46,[[],["any",8]]],[11,"into_any_arc","","",46,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"into_any","","",49,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",49,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",49,[[],["any",8]]],[11,"as_any_mut","","",49,[[],["any",8]]],[11,"into_any_arc","","",49,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_data_device","",63,[[]]],[11,"into","","",63,[[]]],[11,"to_owned","","",63,[[]]],[11,"clone_into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"into_any","","",63,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",63,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",63,[[],["any",8]]],[11,"as_any_mut","","",63,[[],["any",8]]],[11,"into_any_arc","","",63,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"into_any_arc","","",55,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_any","","",58,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"into_any","","",67,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",67,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",67,[[],["any",8]]],[11,"as_any_mut","","",67,[[],["any",8]]],[11,"into_any_arc","","",67,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",185,[[]]],[11,"into","","",185,[[]]],[11,"to_owned","","",185,[[]]],[11,"clone_into","","",185,[[]]],[11,"try_from","","",185,[[],["result",4]]],[11,"try_into","","",185,[[],["result",4]]],[11,"borrow","","",185,[[]]],[11,"borrow_mut","","",185,[[]]],[11,"type_id","","",185,[[],["typeid",3]]],[11,"into_any","","",185,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",185,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",185,[[],["any",8]]],[11,"as_any_mut","","",185,[[],["any",8]]],[11,"into_any_arc","","",185,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",186,[[]]],[11,"into","","",186,[[]]],[11,"try_from","","",186,[[],["result",4]]],[11,"try_into","","",186,[[],["result",4]]],[11,"borrow","","",186,[[]]],[11,"borrow_mut","","",186,[[]]],[11,"type_id","","",186,[[],["typeid",3]]],[11,"into_any","","",186,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",186,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",186,[[],["any",8]]],[11,"as_any_mut","","",186,[[],["any",8]]],[11,"into_any_arc","","",186,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_shell","",187,[[]]],[11,"into","","",187,[[]]],[11,"to_owned","","",187,[[]]],[11,"clone_into","","",187,[[]]],[11,"try_from","","",187,[[],["result",4]]],[11,"try_into","","",187,[[],["result",4]]],[11,"borrow","","",187,[[]]],[11,"borrow_mut","","",187,[[]]],[11,"type_id","","",187,[[],["typeid",3]]],[11,"into_any","","",187,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",187,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",187,[[],["any",8]]],[11,"as_any_mut","","",187,[[],["any",8]]],[11,"into_any_arc","","",187,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_any","","",68,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"into_any","","",69,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",69,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",69,[[],["any",8]]],[11,"as_any_mut","","",69,[[],["any",8]]],[11,"into_any_arc","","",69,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",188,[[]]],[11,"into","","",188,[[]]],[11,"try_from","","",188,[[],["result",4]]],[11,"try_into","","",188,[[],["result",4]]],[11,"borrow","","",188,[[]]],[11,"borrow_mut","","",188,[[]]],[11,"type_id","","",188,[[],["typeid",3]]],[11,"into_any","","",188,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",188,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",188,[[],["any",8]]],[11,"as_any_mut","","",188,[[],["any",8]]],[11,"into_any_arc","","",188,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_shell_surface","",85,[[]]],[11,"into","","",85,[[]]],[11,"to_owned","","",85,[[]]],[11,"clone_into","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_any","","",85,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any_arc","","",85,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"to_owned","","",86,[[]]],[11,"clone_into","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_any","","",86,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"to_owned","","",87,[[]]],[11,"clone_into","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"to_owned","","",71,[[]]],[11,"clone_into","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any_arc","","",71,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",72,[[]]],[11,"into","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_any","","",72,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_any","","",82,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_surface","",101,[[]]],[11,"into","","",101,[[]]],[11,"to_owned","","",101,[[]]],[11,"clone_into","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_any","","",101,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"to_owned","","",88,[[]]],[11,"clone_into","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_any","","",89,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",98,[[]]],[11,"into","","",98,[[]]],[11,"try_from","","",98,[[],["result",4]]],[11,"try_into","","",98,[[],["result",4]]],[11,"borrow","","",98,[[]]],[11,"borrow_mut","","",98,[[]]],[11,"type_id","","",98,[[],["typeid",3]]],[11,"into_any","","",98,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",98,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",98,[[],["any",8]]],[11,"as_any_mut","","",98,[[],["any",8]]],[11,"into_any_arc","","",98,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_seat","",109,[[]]],[11,"into","","",109,[[]]],[11,"to_owned","","",109,[[]]],[11,"clone_into","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"into_any","","",109,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",110,[[]]],[11,"into","","",110,[[]]],[11,"to_owned","","",110,[[]]],[11,"clone_into","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_any","","",110,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",102,[[]]],[11,"into","","",102,[[]]],[11,"try_from","","",102,[[],["result",4]]],[11,"try_into","","",102,[[],["result",4]]],[11,"borrow","","",102,[[]]],[11,"borrow_mut","","",102,[[]]],[11,"type_id","","",102,[[],["typeid",3]]],[11,"into_any","","",102,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",102,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",102,[[],["any",8]]],[11,"as_any_mut","","",102,[[],["any",8]]],[11,"into_any_arc","","",102,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",106,[[]]],[11,"into","","",106,[[]]],[11,"try_from","","",106,[[],["result",4]]],[11,"try_into","","",106,[[],["result",4]]],[11,"borrow","","",106,[[]]],[11,"borrow_mut","","",106,[[]]],[11,"type_id","","",106,[[],["typeid",3]]],[11,"into_any","","",106,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",106,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",106,[[],["any",8]]],[11,"as_any_mut","","",106,[[],["any",8]]],[11,"into_any_arc","","",106,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_pointer","",126,[[]]],[11,"into","","",126,[[]]],[11,"to_owned","","",126,[[]]],[11,"clone_into","","",126,[[]]],[11,"try_from","","",126,[[],["result",4]]],[11,"try_into","","",126,[[],["result",4]]],[11,"borrow","","",126,[[]]],[11,"borrow_mut","","",126,[[]]],[11,"type_id","","",126,[[],["typeid",3]]],[11,"into_any","","",126,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",126,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",126,[[],["any",8]]],[11,"as_any_mut","","",126,[[],["any",8]]],[11,"into_any_arc","","",126,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",111,[[]]],[11,"into","","",111,[[]]],[11,"to_owned","","",111,[[]]],[11,"clone_into","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_any","","",111,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",112,[[]]],[11,"into","","",112,[[]]],[11,"to_owned","","",112,[[]]],[11,"clone_into","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"into_any","","",112,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"to_owned","","",113,[[]]],[11,"clone_into","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_any","","",113,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",114,[[]]],[11,"into","","",114,[[]]],[11,"to_owned","","",114,[[]]],[11,"clone_into","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"into_any","","",114,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"into_any_arc","","",114,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",115,[[]]],[11,"into","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"into_any","","",115,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",115,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",115,[[],["any",8]]],[11,"as_any_mut","","",115,[[],["any",8]]],[11,"into_any_arc","","",115,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"into_any","","",117,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",117,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",117,[[],["any",8]]],[11,"as_any_mut","","",117,[[],["any",8]]],[11,"into_any_arc","","",117,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_keyboard","",137,[[]]],[11,"into","","",137,[[]]],[11,"to_owned","","",137,[[]]],[11,"clone_into","","",137,[[]]],[11,"try_from","","",137,[[],["result",4]]],[11,"try_into","","",137,[[],["result",4]]],[11,"borrow","","",137,[[]]],[11,"borrow_mut","","",137,[[]]],[11,"type_id","","",137,[[],["typeid",3]]],[11,"into_any","","",137,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",137,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",137,[[],["any",8]]],[11,"as_any_mut","","",137,[[],["any",8]]],[11,"into_any_arc","","",137,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",127,[[]]],[11,"into","","",127,[[]]],[11,"to_owned","","",127,[[]]],[11,"clone_into","","",127,[[]]],[11,"try_from","","",127,[[],["result",4]]],[11,"try_into","","",127,[[],["result",4]]],[11,"borrow","","",127,[[]]],[11,"borrow_mut","","",127,[[]]],[11,"type_id","","",127,[[],["typeid",3]]],[11,"into_any","","",127,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",127,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",127,[[],["any",8]]],[11,"as_any_mut","","",127,[[],["any",8]]],[11,"into_any_arc","","",127,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",128,[[]]],[11,"into","","",128,[[]]],[11,"to_owned","","",128,[[]]],[11,"clone_into","","",128,[[]]],[11,"try_from","","",128,[[],["result",4]]],[11,"try_into","","",128,[[],["result",4]]],[11,"borrow","","",128,[[]]],[11,"borrow_mut","","",128,[[]]],[11,"type_id","","",128,[[],["typeid",3]]],[11,"into_any","","",128,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",128,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",128,[[],["any",8]]],[11,"as_any_mut","","",128,[[],["any",8]]],[11,"into_any_arc","","",128,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",129,[[]]],[11,"into","","",129,[[]]],[11,"try_from","","",129,[[],["result",4]]],[11,"try_into","","",129,[[],["result",4]]],[11,"borrow","","",129,[[]]],[11,"borrow_mut","","",129,[[]]],[11,"type_id","","",129,[[],["typeid",3]]],[11,"into_any","","",129,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",129,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",129,[[],["any",8]]],[11,"as_any_mut","","",129,[[],["any",8]]],[11,"into_any_arc","","",129,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",130,[[]]],[11,"into","","",130,[[]]],[11,"try_from","","",130,[[],["result",4]]],[11,"try_into","","",130,[[],["result",4]]],[11,"borrow","","",130,[[]]],[11,"borrow_mut","","",130,[[]]],[11,"type_id","","",130,[[],["typeid",3]]],[11,"into_any","","",130,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",130,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",130,[[],["any",8]]],[11,"as_any_mut","","",130,[[],["any",8]]],[11,"into_any_arc","","",130,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_touch","",145,[[]]],[11,"into","","",145,[[]]],[11,"to_owned","","",145,[[]]],[11,"clone_into","","",145,[[]]],[11,"try_from","","",145,[[],["result",4]]],[11,"try_into","","",145,[[],["result",4]]],[11,"borrow","","",145,[[]]],[11,"borrow_mut","","",145,[[]]],[11,"type_id","","",145,[[],["typeid",3]]],[11,"into_any","","",145,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",145,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",145,[[],["any",8]]],[11,"as_any_mut","","",145,[[],["any",8]]],[11,"into_any_arc","","",145,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",138,[[]]],[11,"into","","",138,[[]]],[11,"try_from","","",138,[[],["result",4]]],[11,"try_into","","",138,[[],["result",4]]],[11,"borrow","","",138,[[]]],[11,"borrow_mut","","",138,[[]]],[11,"type_id","","",138,[[],["typeid",3]]],[11,"into_any","","",138,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",138,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",138,[[],["any",8]]],[11,"as_any_mut","","",138,[[],["any",8]]],[11,"into_any_arc","","",138,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",139,[[]]],[11,"into","","",139,[[]]],[11,"try_from","","",139,[[],["result",4]]],[11,"try_into","","",139,[[],["result",4]]],[11,"borrow","","",139,[[]]],[11,"borrow_mut","","",139,[[]]],[11,"type_id","","",139,[[],["typeid",3]]],[11,"into_any","","",139,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",139,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",139,[[],["any",8]]],[11,"as_any_mut","","",139,[[],["any",8]]],[11,"into_any_arc","","",139,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_output","",153,[[]]],[11,"into","","",153,[[]]],[11,"to_owned","","",153,[[]]],[11,"clone_into","","",153,[[]]],[11,"try_from","","",153,[[],["result",4]]],[11,"try_into","","",153,[[],["result",4]]],[11,"borrow","","",153,[[]]],[11,"borrow_mut","","",153,[[]]],[11,"type_id","","",153,[[],["typeid",3]]],[11,"into_any","","",153,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",153,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",153,[[],["any",8]]],[11,"as_any_mut","","",153,[[],["any",8]]],[11,"into_any_arc","","",153,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",154,[[]]],[11,"into","","",154,[[]]],[11,"to_owned","","",154,[[]]],[11,"clone_into","","",154,[[]]],[11,"try_from","","",154,[[],["result",4]]],[11,"try_into","","",154,[[],["result",4]]],[11,"borrow","","",154,[[]]],[11,"borrow_mut","","",154,[[]]],[11,"type_id","","",154,[[],["typeid",3]]],[11,"into_any","","",154,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",154,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",154,[[],["any",8]]],[11,"as_any_mut","","",154,[[],["any",8]]],[11,"into_any_arc","","",154,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",146,[[]]],[11,"into","","",146,[[]]],[11,"to_owned","","",146,[[]]],[11,"clone_into","","",146,[[]]],[11,"try_from","","",146,[[],["result",4]]],[11,"try_into","","",146,[[],["result",4]]],[11,"borrow","","",146,[[]]],[11,"borrow_mut","","",146,[[]]],[11,"type_id","","",146,[[],["typeid",3]]],[11,"into_any","","",146,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",146,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",146,[[],["any",8]]],[11,"as_any_mut","","",146,[[],["any",8]]],[11,"into_any_arc","","",146,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",147,[[]]],[11,"into","","",147,[[]]],[11,"to_owned","","",147,[[]]],[11,"clone_into","","",147,[[]]],[11,"try_from","","",147,[[],["result",4]]],[11,"try_into","","",147,[[],["result",4]]],[11,"borrow","","",147,[[]]],[11,"borrow_mut","","",147,[[]]],[11,"type_id","","",147,[[],["typeid",3]]],[11,"into_any","","",147,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",147,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",147,[[],["any",8]]],[11,"as_any_mut","","",147,[[],["any",8]]],[11,"into_any_arc","","",147,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",148,[[]]],[11,"into","","",148,[[]]],[11,"try_from","","",148,[[],["result",4]]],[11,"try_into","","",148,[[],["result",4]]],[11,"borrow","","",148,[[]]],[11,"borrow_mut","","",148,[[]]],[11,"type_id","","",148,[[],["typeid",3]]],[11,"into_any","","",148,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",148,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",148,[[],["any",8]]],[11,"as_any_mut","","",148,[[],["any",8]]],[11,"into_any_arc","","",148,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",149,[[]]],[11,"into","","",149,[[]]],[11,"try_from","","",149,[[],["result",4]]],[11,"try_into","","",149,[[],["result",4]]],[11,"borrow","","",149,[[]]],[11,"borrow_mut","","",149,[[]]],[11,"type_id","","",149,[[],["typeid",3]]],[11,"into_any","","",149,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",149,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",149,[[],["any",8]]],[11,"as_any_mut","","",149,[[],["any",8]]],[11,"into_any_arc","","",149,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_region","",189,[[]]],[11,"into","","",189,[[]]],[11,"to_owned","","",189,[[]]],[11,"clone_into","","",189,[[]]],[11,"try_from","","",189,[[],["result",4]]],[11,"try_into","","",189,[[],["result",4]]],[11,"borrow","","",189,[[]]],[11,"borrow_mut","","",189,[[]]],[11,"type_id","","",189,[[],["typeid",3]]],[11,"into_any","","",189,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",189,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",189,[[],["any",8]]],[11,"as_any_mut","","",189,[[],["any",8]]],[11,"into_any_arc","","",189,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",155,[[]]],[11,"into","","",155,[[]]],[11,"try_from","","",155,[[],["result",4]]],[11,"try_into","","",155,[[],["result",4]]],[11,"borrow","","",155,[[]]],[11,"borrow_mut","","",155,[[]]],[11,"type_id","","",155,[[],["typeid",3]]],[11,"into_any","","",155,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",155,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",155,[[],["any",8]]],[11,"as_any_mut","","",155,[[],["any",8]]],[11,"into_any_arc","","",155,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",190,[[]]],[11,"into","","",190,[[]]],[11,"try_from","","",190,[[],["result",4]]],[11,"try_into","","",190,[[],["result",4]]],[11,"borrow","","",190,[[]]],[11,"borrow_mut","","",190,[[]]],[11,"type_id","","",190,[[],["typeid",3]]],[11,"into_any","","",190,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",190,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",190,[[],["any",8]]],[11,"as_any_mut","","",190,[[],["any",8]]],[11,"into_any_arc","","",190,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_subcompositor","",191,[[]]],[11,"into","","",191,[[]]],[11,"to_owned","","",191,[[]]],[11,"clone_into","","",191,[[]]],[11,"try_from","","",191,[[],["result",4]]],[11,"try_into","","",191,[[],["result",4]]],[11,"borrow","","",191,[[]]],[11,"borrow_mut","","",191,[[]]],[11,"type_id","","",191,[[],["typeid",3]]],[11,"into_any","","",191,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",191,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",191,[[],["any",8]]],[11,"as_any_mut","","",191,[[],["any",8]]],[11,"into_any_arc","","",191,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",158,[[]]],[11,"into","","",158,[[]]],[11,"to_owned","","",158,[[]]],[11,"clone_into","","",158,[[]]],[11,"try_from","","",158,[[],["result",4]]],[11,"try_into","","",158,[[],["result",4]]],[11,"borrow","","",158,[[]]],[11,"borrow_mut","","",158,[[]]],[11,"type_id","","",158,[[],["typeid",3]]],[11,"into_any","","",158,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",158,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",158,[[],["any",8]]],[11,"as_any_mut","","",158,[[],["any",8]]],[11,"into_any_arc","","",158,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",159,[[]]],[11,"into","","",159,[[]]],[11,"try_from","","",159,[[],["result",4]]],[11,"try_into","","",159,[[],["result",4]]],[11,"borrow","","",159,[[]]],[11,"borrow_mut","","",159,[[]]],[11,"type_id","","",159,[[],["typeid",3]]],[11,"into_any","","",159,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",159,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",159,[[],["any",8]]],[11,"as_any_mut","","",159,[[],["any",8]]],[11,"into_any_arc","","",159,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",192,[[]]],[11,"into","","",192,[[]]],[11,"try_from","","",192,[[],["result",4]]],[11,"try_into","","",192,[[],["result",4]]],[11,"borrow","","",192,[[]]],[11,"borrow_mut","","",192,[[]]],[11,"type_id","","",192,[[],["typeid",3]]],[11,"into_any","","",192,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",192,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",192,[[],["any",8]]],[11,"as_any_mut","","",192,[[],["any",8]]],[11,"into_any_arc","","",192,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","wayland_server::protocol::wl_subsurface","",193,[[]]],[11,"into","","",193,[[]]],[11,"to_owned","","",193,[[]]],[11,"clone_into","","",193,[[]]],[11,"try_from","","",193,[[],["result",4]]],[11,"try_into","","",193,[[],["result",4]]],[11,"borrow","","",193,[[]]],[11,"borrow_mut","","",193,[[]]],[11,"type_id","","",193,[[],["typeid",3]]],[11,"into_any","","",193,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",193,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",193,[[],["any",8]]],[11,"as_any_mut","","",193,[[],["any",8]]],[11,"into_any_arc","","",193,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",161,[[]]],[11,"into","","",161,[[]]],[11,"to_owned","","",161,[[]]],[11,"clone_into","","",161,[[]]],[11,"try_from","","",161,[[],["result",4]]],[11,"try_into","","",161,[[],["result",4]]],[11,"borrow","","",161,[[]]],[11,"borrow_mut","","",161,[[]]],[11,"type_id","","",161,[[],["typeid",3]]],[11,"into_any","","",161,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",161,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",161,[[],["any",8]]],[11,"as_any_mut","","",161,[[],["any",8]]],[11,"into_any_arc","","",161,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",162,[[]]],[11,"into","","",162,[[]]],[11,"try_from","","",162,[[],["result",4]]],[11,"try_into","","",162,[[],["result",4]]],[11,"borrow","","",162,[[]]],[11,"borrow_mut","","",162,[[]]],[11,"type_id","","",162,[[],["typeid",3]]],[11,"into_any","","",162,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",162,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",162,[[],["any",8]]],[11,"as_any_mut","","",162,[[],["any",8]]],[11,"into_any_arc","","",162,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",194,[[]]],[11,"into","","",194,[[]]],[11,"try_from","","",194,[[],["result",4]]],[11,"try_into","","",194,[[],["result",4]]],[11,"borrow","","",194,[[]]],[11,"borrow_mut","","",194,[[]]],[11,"type_id","","",194,[[],["typeid",3]]],[11,"into_any","","",194,[[["box",3]],[["any",8],["box",3]]]],[11,"into_any_rc","","",194,[[["rc",3]],[["any",8],["rc",3]]]],[11,"as_any","","",194,[[],["any",8]]],[11,"as_any_mut","","",194,[[],["any",8]]],[11,"into_any_arc","","",194,[[["arc",3]],[["any",8],["arc",3]]]],[11,"deref","wayland_server::sys::server","",178,[[],["option",4]]],[11,"deref","","",179,[[],["waylandserver",3]]],[11,"initialize","","",179,[[["wayland_server_handle",3]]]],[11,"initialize","","",178,[[["wayland_server_option",3]]]],[11,"is_destructor","wayland_server","",169,[[]]],[11,"opcode","","",169,[[]]],[11,"since","","",169,[[]]],[11,"child","","",169,[[],[["option",4],["object",3]]]],[11,"from_raw","","",169,[[["message",3]],[["result",4],["nomessage",4]]]],[11,"into_raw","","",169,[[],["message",3]]],[11,"from_raw_c","","",169,[[],[["result",4],["nomessage",4]]]],[11,"as_raw_c_in","","",169,[[]]],[11,"clone","","",168,[[],["filter",3]]],[11,"default","","",166,[[],["userdatamap",3]]],[11,"as_ref","wayland_server::protocol::wl_callback","",18,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_compositor","",181,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_shm_pool","",183,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_shm","",31,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_buffer","",34,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_data_offer","",44,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_data_source","",53,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_data_device","",63,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_data_device_manager","",185,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_shell","",187,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_shell_surface","",87,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_surface","",101,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_seat","",110,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_pointer","",126,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_keyboard","",137,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_touch","",145,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_output","",154,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_region","",189,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_subcompositor","",191,[[],["resource",3]]],[11,"as_ref","wayland_server::protocol::wl_subsurface","",193,[[],["resource",3]]],[11,"as_ref","wayland_server","",170,[[],["resource",3]]],[11,"from","wayland_server::protocol::wl_callback","",18,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlcallback",3]]]],[11,"from","wayland_server::protocol::wl_compositor","",181,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlcompositor",3]]]],[11,"from","wayland_server::protocol::wl_shm_pool","",183,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlshmpool",3]]]],[11,"from","wayland_server::protocol::wl_shm","",31,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlshm",3]]]],[11,"from","wayland_server::protocol::wl_buffer","",34,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlbuffer",3]]]],[11,"from","wayland_server::protocol::wl_data_offer","",44,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wldataoffer",3]]]],[11,"from","wayland_server::protocol::wl_data_source","",53,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wldatasource",3]]]],[11,"from","wayland_server::protocol::wl_data_device","",63,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wldatadevice",3]]]],[11,"from","wayland_server::protocol::wl_data_device_manager","",185,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wldatadevicemanager",3]]]],[11,"from","wayland_server::protocol::wl_shell","",187,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlshell",3]]]],[11,"from","wayland_server::protocol::wl_shell_surface","",87,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlshellsurface",3]]]],[11,"from","wayland_server::protocol::wl_surface","",101,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlsurface",3]]]],[11,"from","wayland_server::protocol::wl_seat","",110,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlseat",3]]]],[11,"from","wayland_server::protocol::wl_pointer","",126,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlpointer",3]]]],[11,"from","wayland_server::protocol::wl_keyboard","",137,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlkeyboard",3]]]],[11,"from","wayland_server::protocol::wl_touch","",145,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wltouch",3]]]],[11,"from","wayland_server::protocol::wl_output","",154,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wloutput",3]]]],[11,"from","wayland_server::protocol::wl_region","",189,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlregion",3]]]],[11,"from","wayland_server::protocol::wl_subcompositor","",191,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlsubcompositor",3]]]],[11,"from","wayland_server::protocol::wl_subsurface","",193,[[["resource",3]]]],[11,"from","wayland_server","",5,[[["wlsubsurface",3]]]],[11,"from","","",170,[[["resource",3]]]],[11,"from","","",5,[[["anonymousobject",3]]]],[11,"extend","wayland_server::protocol::wl_data_device_manager","",67,[[["intoiterator",8]]]],[11,"extend","wayland_server::protocol::wl_shell_surface","",85,[[["intoiterator",8]]]],[11,"extend","","",86,[[["intoiterator",8]]]],[11,"extend","wayland_server::protocol::wl_seat","",109,[[["intoiterator",8]]]],[11,"extend","wayland_server::protocol::wl_output","",153,[[["intoiterator",8]]]],[11,"clone","wayland_server","",2,[[],["client",3]]],[11,"clone","","",5,[[],["resource",3]]],[11,"clone","","",6,[[],["main",3]]],[11,"clone","wayland_server::protocol::wl_callback","",18,[[],["wlcallback",3]]],[11,"clone","wayland_server::protocol::wl_compositor","",181,[[],["wlcompositor",3]]],[11,"clone","wayland_server::protocol::wl_shm_pool","",183,[[],["wlshmpool",3]]],[11,"clone","wayland_server::protocol::wl_shm","",25,[[],["error",4]]],[11,"clone","","",26,[[],["format",4]]],[11,"clone","","",31,[[],["wlshm",3]]],[11,"clone","wayland_server::protocol::wl_buffer","",34,[[],["wlbuffer",3]]],[11,"clone","wayland_server::protocol::wl_data_offer","",35,[[],["error",4]]],[11,"clone","","",44,[[],["wldataoffer",3]]],[11,"clone","wayland_server::protocol::wl_data_source","",45,[[],["error",4]]],[11,"clone","","",53,[[],["wldatasource",3]]],[11,"clone","wayland_server::protocol::wl_data_device","",54,[[],["error",4]]],[11,"clone","","",63,[[],["wldatadevice",3]]],[11,"clone","wayland_server::protocol::wl_data_device_manager","",67,[[],["dndaction",3]]],[11,"clone","","",185,[[],["wldatadevicemanager",3]]],[11,"clone","wayland_server::protocol::wl_shell","",68,[[],["error",4]]],[11,"clone","","",187,[[],["wlshell",3]]],[11,"clone","wayland_server::protocol::wl_shell_surface","",85,[[],["resize",3]]],[11,"clone","","",86,[[],["transient",3]]],[11,"clone","","",71,[[],["fullscreenmethod",4]]],[11,"clone","","",87,[[],["wlshellsurface",3]]],[11,"clone","wayland_server::protocol::wl_surface","",88,[[],["error",4]]],[11,"clone","","",101,[[],["wlsurface",3]]],[11,"clone","wayland_server::protocol::wl_seat","",109,[[],["capability",3]]],[11,"clone","","",110,[[],["wlseat",3]]],[11,"clone","wayland_server::protocol::wl_pointer","",111,[[],["error",4]]],[11,"clone","","",112,[[],["buttonstate",4]]],[11,"clone","","",113,[[],["axis",4]]],[11,"clone","","",114,[[],["axissource",4]]],[11,"clone","","",126,[[],["wlpointer",3]]],[11,"clone","wayland_server::protocol::wl_keyboard","",127,[[],["keymapformat",4]]],[11,"clone","","",128,[[],["keystate",4]]],[11,"clone","","",137,[[],["wlkeyboard",3]]],[11,"clone","wayland_server::protocol::wl_touch","",145,[[],["wltouch",3]]],[11,"clone","wayland_server::protocol::wl_output","",146,[[],["subpixel",4]]],[11,"clone","","",147,[[],["transform",4]]],[11,"clone","","",153,[[],["mode",3]]],[11,"clone","","",154,[[],["wloutput",3]]],[11,"clone","wayland_server::protocol::wl_region","",189,[[],["wlregion",3]]],[11,"clone","wayland_server::protocol::wl_subcompositor","",158,[[],["error",4]]],[11,"clone","","",191,[[],["wlsubcompositor",3]]],[11,"clone","wayland_server::protocol::wl_subsurface","",161,[[],["error",4]]],[11,"clone","","",193,[[],["wlsubsurface",3]]],[11,"clone","wayland_server","",170,[[],["anonymousobject",3]]],[11,"cmp","wayland_server::protocol::wl_data_device_manager","",67,[[["dndaction",3]],["ordering",4]]],[11,"cmp","wayland_server::protocol::wl_shell_surface","",85,[[["resize",3]],["ordering",4]]],[11,"cmp","","",86,[[["transient",3]],["ordering",4]]],[11,"cmp","wayland_server::protocol::wl_seat","",109,[[["capability",3]],["ordering",4]]],[11,"cmp","wayland_server::protocol::wl_output","",153,[[["mode",3]],["ordering",4]]],[11,"eq","wayland_server","",5,[[["resource",3]]]],[11,"eq","","",6,[[["main",3]]]],[11,"ne","","",6,[[["main",3]]]],[11,"eq","wayland_server::protocol::wl_callback","",18,[[["wlcallback",3]]]],[11,"ne","","",18,[[["wlcallback",3]]]],[11,"eq","wayland_server::protocol::wl_compositor","",181,[[["wlcompositor",3]]]],[11,"ne","","",181,[[["wlcompositor",3]]]],[11,"eq","wayland_server::protocol::wl_shm_pool","",183,[[["wlshmpool",3]]]],[11,"ne","","",183,[[["wlshmpool",3]]]],[11,"eq","wayland_server::protocol::wl_shm","",25,[[["error",4]]]],[11,"eq","","",26,[[["format",4]]]],[11,"eq","","",31,[[["wlshm",3]]]],[11,"ne","","",31,[[["wlshm",3]]]],[11,"eq","wayland_server::protocol::wl_buffer","",34,[[["wlbuffer",3]]]],[11,"ne","","",34,[[["wlbuffer",3]]]],[11,"eq","wayland_server::protocol::wl_data_offer","",35,[[["error",4]]]],[11,"eq","","",44,[[["wldataoffer",3]]]],[11,"ne","","",44,[[["wldataoffer",3]]]],[11,"eq","wayland_server::protocol::wl_data_source","",45,[[["error",4]]]],[11,"eq","","",53,[[["wldatasource",3]]]],[11,"ne","","",53,[[["wldatasource",3]]]],[11,"eq","wayland_server::protocol::wl_data_device","",54,[[["error",4]]]],[11,"eq","","",63,[[["wldatadevice",3]]]],[11,"ne","","",63,[[["wldatadevice",3]]]],[11,"eq","wayland_server::protocol::wl_data_device_manager","",67,[[["dndaction",3]]]],[11,"ne","","",67,[[["dndaction",3]]]],[11,"eq","","",185,[[["wldatadevicemanager",3]]]],[11,"ne","","",185,[[["wldatadevicemanager",3]]]],[11,"eq","wayland_server::protocol::wl_shell","",68,[[["error",4]]]],[11,"eq","","",187,[[["wlshell",3]]]],[11,"ne","","",187,[[["wlshell",3]]]],[11,"eq","wayland_server::protocol::wl_shell_surface","",85,[[["resize",3]]]],[11,"ne","","",85,[[["resize",3]]]],[11,"eq","","",86,[[["transient",3]]]],[11,"ne","","",86,[[["transient",3]]]],[11,"eq","","",71,[[["fullscreenmethod",4]]]],[11,"eq","","",87,[[["wlshellsurface",3]]]],[11,"ne","","",87,[[["wlshellsurface",3]]]],[11,"eq","wayland_server::protocol::wl_surface","",88,[[["error",4]]]],[11,"eq","","",101,[[["wlsurface",3]]]],[11,"ne","","",101,[[["wlsurface",3]]]],[11,"eq","wayland_server::protocol::wl_seat","",109,[[["capability",3]]]],[11,"ne","","",109,[[["capability",3]]]],[11,"eq","","",110,[[["wlseat",3]]]],[11,"ne","","",110,[[["wlseat",3]]]],[11,"eq","wayland_server::protocol::wl_pointer","",111,[[["error",4]]]],[11,"eq","","",112,[[["buttonstate",4]]]],[11,"eq","","",113,[[["axis",4]]]],[11,"eq","","",114,[[["axissource",4]]]],[11,"eq","","",126,[[["wlpointer",3]]]],[11,"ne","","",126,[[["wlpointer",3]]]],[11,"eq","wayland_server::protocol::wl_keyboard","",127,[[["keymapformat",4]]]],[11,"eq","","",128,[[["keystate",4]]]],[11,"eq","","",137,[[["wlkeyboard",3]]]],[11,"ne","","",137,[[["wlkeyboard",3]]]],[11,"eq","wayland_server::protocol::wl_touch","",145,[[["wltouch",3]]]],[11,"ne","","",145,[[["wltouch",3]]]],[11,"eq","wayland_server::protocol::wl_output","",146,[[["subpixel",4]]]],[11,"eq","","",147,[[["transform",4]]]],[11,"eq","","",153,[[["mode",3]]]],[11,"ne","","",153,[[["mode",3]]]],[11,"eq","","",154,[[["wloutput",3]]]],[11,"ne","","",154,[[["wloutput",3]]]],[11,"eq","wayland_server::protocol::wl_region","",189,[[["wlregion",3]]]],[11,"ne","","",189,[[["wlregion",3]]]],[11,"eq","wayland_server::protocol::wl_subcompositor","",158,[[["error",4]]]],[11,"eq","","",191,[[["wlsubcompositor",3]]]],[11,"ne","","",191,[[["wlsubcompositor",3]]]],[11,"eq","wayland_server::protocol::wl_subsurface","",161,[[["error",4]]]],[11,"eq","","",193,[[["wlsubsurface",3]]]],[11,"ne","","",193,[[["wlsubsurface",3]]]],[11,"eq","wayland_server","",170,[[["anonymousobject",3]]]],[11,"ne","","",170,[[["anonymousobject",3]]]],[11,"partial_cmp","wayland_server::protocol::wl_data_device_manager","",67,[[["dndaction",3]],[["option",4],["ordering",4]]]],[11,"lt","","",67,[[["dndaction",3]]]],[11,"le","","",67,[[["dndaction",3]]]],[11,"gt","","",67,[[["dndaction",3]]]],[11,"ge","","",67,[[["dndaction",3]]]],[11,"partial_cmp","wayland_server::protocol::wl_shell_surface","",85,[[["resize",3]],[["option",4],["ordering",4]]]],[11,"lt","","",85,[[["resize",3]]]],[11,"le","","",85,[[["resize",3]]]],[11,"gt","","",85,[[["resize",3]]]],[11,"ge","","",85,[[["resize",3]]]],[11,"partial_cmp","","",86,[[["transient",3]],[["option",4],["ordering",4]]]],[11,"lt","","",86,[[["transient",3]]]],[11,"le","","",86,[[["transient",3]]]],[11,"gt","","",86,[[["transient",3]]]],[11,"ge","","",86,[[["transient",3]]]],[11,"partial_cmp","wayland_server::protocol::wl_seat","",109,[[["capability",3]],[["option",4],["ordering",4]]]],[11,"lt","","",109,[[["capability",3]]]],[11,"le","","",109,[[["capability",3]]]],[11,"gt","","",109,[[["capability",3]]]],[11,"ge","","",109,[[["capability",3]]]],[11,"partial_cmp","wayland_server::protocol::wl_output","",153,[[["mode",3]],[["option",4],["ordering",4]]]],[11,"lt","","",153,[[["mode",3]]]],[11,"le","","",153,[[["mode",3]]]],[11,"gt","","",153,[[["mode",3]]]],[11,"ge","","",153,[[["mode",3]]]],[11,"deref","wayland_server","",6,[[]]],[11,"fmt","wayland_server::protocol::wl_shm","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_offer","",35,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_source","",45,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_device","",54,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",67,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_shell","",68,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","","",71,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_surface","",88,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_seat","",109,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_pointer","",111,[[["formatter",3]],["result",6]]],[11,"fmt","","",112,[[["formatter",3]],["result",6]]],[11,"fmt","","",113,[[["formatter",3]],["result",6]]],[11,"fmt","","",114,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_keyboard","",127,[[["formatter",3]],["result",6]]],[11,"fmt","","",128,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_output","",146,[[["formatter",3]],["result",6]]],[11,"fmt","","",147,[[["formatter",3]],["result",6]]],[11,"fmt","","",153,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_subcompositor","",158,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_subsurface","",161,[[["formatter",3]],["result",6]]],[11,"sub","wayland_server::protocol::wl_data_device_manager","Returns the set difference of the two sets of flags.",67,[[["dndaction",3]],["dndaction",3]]],[11,"sub","wayland_server::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",85,[[["resize",3]],["resize",3]]],[11,"sub","","Returns the set difference of the two sets of flags.",86,[[["transient",3]],["transient",3]]],[11,"sub","wayland_server::protocol::wl_seat","Returns the set difference of the two sets of flags.",109,[[["capability",3]],["capability",3]]],[11,"sub","wayland_server::protocol::wl_output","Returns the set difference of the two sets of flags.",153,[[["mode",3]],["mode",3]]],[11,"sub_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags enabled in the set.",67,[[["dndaction",3]]]],[11,"sub_assign","wayland_server::protocol::wl_shell_surface","Disables all flags enabled in the set.",85,[[["resize",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",86,[[["transient",3]]]],[11,"sub_assign","wayland_server::protocol::wl_seat","Disables all flags enabled in the set.",109,[[["capability",3]]]],[11,"sub_assign","wayland_server::protocol::wl_output","Disables all flags enabled in the set.",153,[[["mode",3]]]],[11,"not","wayland_server::protocol::wl_data_device_manager","Returns the complement of this set of flags.",67,[[],["dndaction",3]]],[11,"not","wayland_server::protocol::wl_shell_surface","Returns the complement of this set of flags.",85,[[],["resize",3]]],[11,"not","","Returns the complement of this set of flags.",86,[[],["transient",3]]],[11,"not","wayland_server::protocol::wl_seat","Returns the complement of this set of flags.",109,[[],["capability",3]]],[11,"not","wayland_server::protocol::wl_output","Returns the complement of this set of flags.",153,[[],["mode",3]]],[11,"bitand","wayland_server::protocol::wl_data_device_manager","Returns the intersection between the two sets of flags.",67,[[["dndaction",3]],["dndaction",3]]],[11,"bitand","wayland_server::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",85,[[["resize",3]],["resize",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",86,[[["transient",3]],["transient",3]]],[11,"bitand","wayland_server::protocol::wl_seat","Returns the intersection between the two sets of flags.",109,[[["capability",3]],["capability",3]]],[11,"bitand","wayland_server::protocol::wl_output","Returns the intersection between the two sets of flags.",153,[[["mode",3]],["mode",3]]],[11,"bitor","wayland_server::protocol::wl_data_device_manager","Returns the union of the two sets of flags.",67,[[["dndaction",3]],["dndaction",3]]],[11,"bitor","wayland_server::protocol::wl_shell_surface","Returns the union of the two sets of flags.",85,[[["resize",3]],["resize",3]]],[11,"bitor","","Returns the union of the two sets of flags.",86,[[["transient",3]],["transient",3]]],[11,"bitor","wayland_server::protocol::wl_seat","Returns the union of the two sets of flags.",109,[[["capability",3]],["capability",3]]],[11,"bitor","wayland_server::protocol::wl_output","Returns the union of the two sets of flags.",153,[[["mode",3]],["mode",3]]],[11,"bitxor","wayland_server::protocol::wl_data_device_manager","Returns the left flags, but with all the right flags…",67,[[["dndaction",3]],["dndaction",3]]],[11,"bitxor","wayland_server::protocol::wl_shell_surface","Returns the left flags, but with all the right flags…",85,[[["resize",3]],["resize",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",86,[[["transient",3]],["transient",3]]],[11,"bitxor","wayland_server::protocol::wl_seat","Returns the left flags, but with all the right flags…",109,[[["capability",3]],["capability",3]]],[11,"bitxor","wayland_server::protocol::wl_output","Returns the left flags, but with all the right flags…",153,[[["mode",3]],["mode",3]]],[11,"bitand_assign","wayland_server::protocol::wl_data_device_manager","Disables all flags disabled in the set.",67,[[["dndaction",3]]]],[11,"bitand_assign","wayland_server::protocol::wl_shell_surface","Disables all flags disabled in the set.",85,[[["resize",3]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",86,[[["transient",3]]]],[11,"bitand_assign","wayland_server::protocol::wl_seat","Disables all flags disabled in the set.",109,[[["capability",3]]]],[11,"bitand_assign","wayland_server::protocol::wl_output","Disables all flags disabled in the set.",153,[[["mode",3]]]],[11,"bitor_assign","wayland_server::protocol::wl_data_device_manager","Adds the set of flags.",67,[[["dndaction",3]]]],[11,"bitor_assign","wayland_server::protocol::wl_shell_surface","Adds the set of flags.",85,[[["resize",3]]]],[11,"bitor_assign","","Adds the set of flags.",86,[[["transient",3]]]],[11,"bitor_assign","wayland_server::protocol::wl_seat","Adds the set of flags.",109,[[["capability",3]]]],[11,"bitor_assign","wayland_server::protocol::wl_output","Adds the set of flags.",153,[[["mode",3]]]],[11,"bitxor_assign","wayland_server::protocol::wl_data_device_manager","Toggles the set of flags.",67,[[["dndaction",3]]]],[11,"bitxor_assign","wayland_server::protocol::wl_shell_surface","Toggles the set of flags.",85,[[["resize",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",86,[[["transient",3]]]],[11,"bitxor_assign","wayland_server::protocol::wl_seat","Toggles the set of flags.",109,[[["capability",3]]]],[11,"bitxor_assign","wayland_server::protocol::wl_output","Toggles the set of flags.",153,[[["mode",3]]]],[11,"hash","wayland_server::protocol::wl_data_device_manager","",67,[[]]],[11,"hash","wayland_server::protocol::wl_shell_surface","",85,[[]]],[11,"hash","","",86,[[]]],[11,"hash","wayland_server::protocol::wl_seat","",109,[[]]],[11,"hash","wayland_server::protocol::wl_output","",153,[[]]],[11,"from_iter","wayland_server::protocol::wl_data_device_manager","",67,[[["intoiterator",8]],["dndaction",3]]],[11,"from_iter","wayland_server::protocol::wl_shell_surface","",85,[[["intoiterator",8]],["resize",3]]],[11,"from_iter","","",86,[[["intoiterator",8]],["transient",3]]],[11,"from_iter","wayland_server::protocol::wl_seat","",109,[[["intoiterator",8]],["capability",3]]],[11,"from_iter","wayland_server::protocol::wl_output","",153,[[["intoiterator",8]],["mode",3]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",67,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_seat","",109,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_output","",153,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",67,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_seat","",109,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_output","",153,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",67,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_seat","",109,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_output","",153,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_data_device_manager","",67,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_shell_surface","",85,[[["formatter",3]],["result",6]]],[11,"fmt","","",86,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_seat","",109,[[["formatter",3]],["result",6]]],[11,"fmt","wayland_server::protocol::wl_output","",153,[[["formatter",3]],["result",6]]],[11,"c_interface","wayland_server::protocol::wl_callback","",18,[[]]],[11,"c_interface","wayland_server::protocol::wl_compositor","",181,[[]]],[11,"c_interface","wayland_server::protocol::wl_shm_pool","",183,[[]]],[11,"c_interface","wayland_server::protocol::wl_shm","",31,[[]]],[11,"c_interface","wayland_server::protocol::wl_buffer","",34,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_offer","",44,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_source","",53,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_device","",63,[[]]],[11,"c_interface","wayland_server::protocol::wl_data_device_manager","",185,[[]]],[11,"c_interface","wayland_server::protocol::wl_shell","",187,[[]]],[11,"c_interface","wayland_server::protocol::wl_shell_surface","",87,[[]]],[11,"c_interface","wayland_server::protocol::wl_surface","",101,[[]]],[11,"c_interface","wayland_server::protocol::wl_seat","",110,[[]]],[11,"c_interface","wayland_server::protocol::wl_pointer","",126,[[]]],[11,"c_interface","wayland_server::protocol::wl_keyboard","",137,[[]]],[11,"c_interface","wayland_server::protocol::wl_touch","",145,[[]]],[11,"c_interface","wayland_server::protocol::wl_output","",154,[[]]],[11,"c_interface","wayland_server::protocol::wl_region","",189,[[]]],[11,"c_interface","wayland_server::protocol::wl_subcompositor","",191,[[]]],[11,"c_interface","wayland_server::protocol::wl_subsurface","",193,[[]]],[11,"c_interface","wayland_server","",170,[[]]],[11,"is_destructor","wayland_server::protocol::wl_callback","",180,[[]]],[11,"opcode","","",180,[[]]],[11,"since","","",180,[[]]],[11,"child","","",180,[[],[["object",3],["option",4]]]],[11,"from_raw","","",180,[[["message",3]],["result",4]]],[11,"into_raw","","",180,[[],["message",3]]],[11,"from_raw_c","","",180,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",180,[[]]],[11,"is_destructor","","",16,[[]]],[11,"opcode","","",16,[[]]],[11,"since","","",16,[[]]],[11,"child","","",16,[[],[["object",3],["option",4]]]],[11,"from_raw","","",16,[[["message",3]],["result",4]]],[11,"into_raw","","",16,[[],["message",3]]],[11,"from_raw_c","","",16,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",16,[[]]],[11,"is_destructor","wayland_server::protocol::wl_compositor","",19,[[]]],[11,"opcode","","",19,[[]]],[11,"since","","",19,[[]]],[11,"child","","",19,[[],[["object",3],["option",4]]]],[11,"from_raw","","",19,[[["message",3]],["result",4]]],[11,"into_raw","","",19,[[],["message",3]]],[11,"from_raw_c","","",19,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",19,[[]]],[11,"is_destructor","","",182,[[]]],[11,"opcode","","",182,[[]]],[11,"since","","",182,[[]]],[11,"child","","",182,[[],[["object",3],["option",4]]]],[11,"from_raw","","",182,[[["message",3]],["result",4]]],[11,"into_raw","","",182,[[],["message",3]]],[11,"from_raw_c","","",182,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",182,[[]]],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",22,[[]]],[11,"opcode","","",22,[[]]],[11,"since","","",22,[[]]],[11,"child","","",22,[[],[["object",3],["option",4]]]],[11,"from_raw","","",22,[[["message",3]],["result",4]]],[11,"into_raw","","",22,[[],["message",3]]],[11,"from_raw_c","","",22,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",22,[[]]],[11,"is_destructor","","",184,[[]]],[11,"opcode","","",184,[[]]],[11,"since","","",184,[[]]],[11,"child","","",184,[[],[["object",3],["option",4]]]],[11,"from_raw","","",184,[[["message",3]],["result",4]]],[11,"into_raw","","",184,[[],["message",3]]],[11,"from_raw_c","","",184,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",184,[[]]],[11,"is_destructor","wayland_server::protocol::wl_shm","",27,[[]]],[11,"opcode","","",27,[[]]],[11,"since","","",27,[[]]],[11,"child","","",27,[[],[["object",3],["option",4]]]],[11,"from_raw","","",27,[[["message",3]],["result",4]]],[11,"into_raw","","",27,[[],["message",3]]],[11,"from_raw_c","","",27,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",27,[[]]],[11,"is_destructor","","",29,[[]]],[11,"opcode","","",29,[[]]],[11,"since","","",29,[[]]],[11,"child","","",29,[[],[["object",3],["option",4]]]],[11,"from_raw","","",29,[[["message",3]],["result",4]]],[11,"into_raw","","",29,[[],["message",3]]],[11,"from_raw_c","","",29,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",29,[[]]],[11,"is_destructor","wayland_server::protocol::wl_buffer","",32,[[]]],[11,"opcode","","",32,[[]]],[11,"since","","",32,[[]]],[11,"child","","",32,[[],[["object",3],["option",4]]]],[11,"from_raw","","",32,[[["message",3]],["result",4]]],[11,"into_raw","","",32,[[],["message",3]]],[11,"from_raw_c","","",32,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",32,[[]]],[11,"is_destructor","","",33,[[]]],[11,"opcode","","",33,[[]]],[11,"since","","",33,[[]]],[11,"child","","",33,[[],[["object",3],["option",4]]]],[11,"from_raw","","",33,[[["message",3]],["result",4]]],[11,"into_raw","","",33,[[],["message",3]]],[11,"from_raw_c","","",33,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",33,[[]]],[11,"is_destructor","wayland_server::protocol::wl_data_offer","",36,[[]]],[11,"opcode","","",36,[[]]],[11,"since","","",36,[[]]],[11,"child","","",36,[[],[["object",3],["option",4]]]],[11,"from_raw","","",36,[[["message",3]],["result",4]]],[11,"into_raw","","",36,[[],["message",3]]],[11,"from_raw_c","","",36,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",36,[[]]],[11,"is_destructor","","",40,[[]]],[11,"opcode","","",40,[[]]],[11,"since","","",40,[[]]],[11,"child","","",40,[[],[["object",3],["option",4]]]],[11,"from_raw","","",40,[[["message",3]],["result",4]]],[11,"into_raw","","",40,[[],["message",3]]],[11,"from_raw_c","","",40,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",40,[[]]],[11,"is_destructor","wayland_server::protocol::wl_data_source","",46,[[]]],[11,"opcode","","",46,[[]]],[11,"since","","",46,[[]]],[11,"child","","",46,[[],[["object",3],["option",4]]]],[11,"from_raw","","",46,[[["message",3]],["result",4]]],[11,"into_raw","","",46,[[],["message",3]]],[11,"from_raw_c","","",46,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",46,[[]]],[11,"is_destructor","","",49,[[]]],[11,"opcode","","",49,[[]]],[11,"since","","",49,[[]]],[11,"child","","",49,[[],[["object",3],["option",4]]]],[11,"from_raw","","",49,[[["message",3]],["result",4]]],[11,"into_raw","","",49,[[],["message",3]]],[11,"from_raw_c","","",49,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",49,[[]]],[11,"is_destructor","wayland_server::protocol::wl_data_device","",55,[[]]],[11,"opcode","","",55,[[]]],[11,"since","","",55,[[]]],[11,"child","","",55,[[],[["object",3],["option",4]]]],[11,"from_raw","","",55,[[["message",3]],["result",4]]],[11,"into_raw","","",55,[[],["message",3]]],[11,"from_raw_c","","",55,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",55,[[]]],[11,"is_destructor","","",58,[[]]],[11,"opcode","","",58,[[]]],[11,"since","","",58,[[]]],[11,"child","","",58,[[],[["object",3],["option",4]]]],[11,"from_raw","","",58,[[["message",3]],["result",4]]],[11,"into_raw","","",58,[[],["message",3]]],[11,"from_raw_c","","",58,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",58,[[]]],[11,"is_destructor","wayland_server::protocol::wl_data_device_manager","",64,[[]]],[11,"opcode","","",64,[[]]],[11,"since","","",64,[[]]],[11,"child","","",64,[[],[["object",3],["option",4]]]],[11,"from_raw","","",64,[[["message",3]],["result",4]]],[11,"into_raw","","",64,[[],["message",3]]],[11,"from_raw_c","","",64,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",64,[[]]],[11,"is_destructor","","",186,[[]]],[11,"opcode","","",186,[[]]],[11,"since","","",186,[[]]],[11,"child","","",186,[[],[["object",3],["option",4]]]],[11,"from_raw","","",186,[[["message",3]],["result",4]]],[11,"into_raw","","",186,[[],["message",3]]],[11,"from_raw_c","","",186,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",186,[[]]],[11,"is_destructor","wayland_server::protocol::wl_shell","",69,[[]]],[11,"opcode","","",69,[[]]],[11,"since","","",69,[[]]],[11,"child","","",69,[[],[["object",3],["option",4]]]],[11,"from_raw","","",69,[[["message",3]],["result",4]]],[11,"into_raw","","",69,[[],["message",3]]],[11,"from_raw_c","","",69,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",69,[[]]],[11,"is_destructor","","",188,[[]]],[11,"opcode","","",188,[[]]],[11,"since","","",188,[[]]],[11,"child","","",188,[[],[["object",3],["option",4]]]],[11,"from_raw","","",188,[[["message",3]],["result",4]]],[11,"into_raw","","",188,[[],["message",3]]],[11,"from_raw_c","","",188,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",188,[[]]],[11,"is_destructor","wayland_server::protocol::wl_shell_surface","",72,[[]]],[11,"opcode","","",72,[[]]],[11,"since","","",72,[[]]],[11,"child","","",72,[[],[["object",3],["option",4]]]],[11,"from_raw","","",72,[[["message",3]],["result",4]]],[11,"into_raw","","",72,[[],["message",3]]],[11,"from_raw_c","","",72,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",72,[[]]],[11,"is_destructor","","",82,[[]]],[11,"opcode","","",82,[[]]],[11,"since","","",82,[[]]],[11,"child","","",82,[[],[["object",3],["option",4]]]],[11,"from_raw","","",82,[[["message",3]],["result",4]]],[11,"into_raw","","",82,[[],["message",3]]],[11,"from_raw_c","","",82,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",82,[[]]],[11,"is_destructor","wayland_server::protocol::wl_surface","",89,[[]]],[11,"opcode","","",89,[[]]],[11,"since","","",89,[[]]],[11,"child","","",89,[[],[["object",3],["option",4]]]],[11,"from_raw","","",89,[[["message",3]],["result",4]]],[11,"into_raw","","",89,[[],["message",3]]],[11,"from_raw_c","","",89,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",89,[[]]],[11,"is_destructor","","",98,[[]]],[11,"opcode","","",98,[[]]],[11,"since","","",98,[[]]],[11,"child","","",98,[[],[["object",3],["option",4]]]],[11,"from_raw","","",98,[[["message",3]],["result",4]]],[11,"into_raw","","",98,[[],["message",3]]],[11,"from_raw_c","","",98,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",98,[[]]],[11,"is_destructor","wayland_server::protocol::wl_seat","",102,[[]]],[11,"opcode","","",102,[[]]],[11,"since","","",102,[[]]],[11,"child","","",102,[[],[["object",3],["option",4]]]],[11,"from_raw","","",102,[[["message",3]],["result",4]]],[11,"into_raw","","",102,[[],["message",3]]],[11,"from_raw_c","","",102,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",102,[[]]],[11,"is_destructor","","",106,[[]]],[11,"opcode","","",106,[[]]],[11,"since","","",106,[[]]],[11,"child","","",106,[[],[["object",3],["option",4]]]],[11,"from_raw","","",106,[[["message",3]],["result",4]]],[11,"into_raw","","",106,[[],["message",3]]],[11,"from_raw_c","","",106,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",106,[[]]],[11,"is_destructor","wayland_server::protocol::wl_pointer","",115,[[]]],[11,"opcode","","",115,[[]]],[11,"since","","",115,[[]]],[11,"child","","",115,[[],[["object",3],["option",4]]]],[11,"from_raw","","",115,[[["message",3]],["result",4]]],[11,"into_raw","","",115,[[],["message",3]]],[11,"from_raw_c","","",115,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",115,[[]]],[11,"is_destructor","","",117,[[]]],[11,"opcode","","",117,[[]]],[11,"since","","",117,[[]]],[11,"child","","",117,[[],[["object",3],["option",4]]]],[11,"from_raw","","",117,[[["message",3]],["result",4]]],[11,"into_raw","","",117,[[],["message",3]]],[11,"from_raw_c","","",117,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",117,[[]]],[11,"is_destructor","wayland_server::protocol::wl_keyboard","",129,[[]]],[11,"opcode","","",129,[[]]],[11,"since","","",129,[[]]],[11,"child","","",129,[[],[["object",3],["option",4]]]],[11,"from_raw","","",129,[[["message",3]],["result",4]]],[11,"into_raw","","",129,[[],["message",3]]],[11,"from_raw_c","","",129,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",129,[[]]],[11,"is_destructor","","",130,[[]]],[11,"opcode","","",130,[[]]],[11,"since","","",130,[[]]],[11,"child","","",130,[[],[["object",3],["option",4]]]],[11,"from_raw","","",130,[[["message",3]],["result",4]]],[11,"into_raw","","",130,[[],["message",3]]],[11,"from_raw_c","","",130,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",130,[[]]],[11,"is_destructor","wayland_server::protocol::wl_touch","",138,[[]]],[11,"opcode","","",138,[[]]],[11,"since","","",138,[[]]],[11,"child","","",138,[[],[["object",3],["option",4]]]],[11,"from_raw","","",138,[[["message",3]],["result",4]]],[11,"into_raw","","",138,[[],["message",3]]],[11,"from_raw_c","","",138,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",138,[[]]],[11,"is_destructor","","",139,[[]]],[11,"opcode","","",139,[[]]],[11,"since","","",139,[[]]],[11,"child","","",139,[[],[["object",3],["option",4]]]],[11,"from_raw","","",139,[[["message",3]],["result",4]]],[11,"into_raw","","",139,[[],["message",3]]],[11,"from_raw_c","","",139,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",139,[[]]],[11,"is_destructor","wayland_server::protocol::wl_output","",148,[[]]],[11,"opcode","","",148,[[]]],[11,"since","","",148,[[]]],[11,"child","","",148,[[],[["object",3],["option",4]]]],[11,"from_raw","","",148,[[["message",3]],["result",4]]],[11,"into_raw","","",148,[[],["message",3]]],[11,"from_raw_c","","",148,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",148,[[]]],[11,"is_destructor","","",149,[[]]],[11,"opcode","","",149,[[]]],[11,"since","","",149,[[]]],[11,"child","","",149,[[],[["object",3],["option",4]]]],[11,"from_raw","","",149,[[["message",3]],["result",4]]],[11,"into_raw","","",149,[[],["message",3]]],[11,"from_raw_c","","",149,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",149,[[]]],[11,"is_destructor","wayland_server::protocol::wl_region","",155,[[]]],[11,"opcode","","",155,[[]]],[11,"since","","",155,[[]]],[11,"child","","",155,[[],[["object",3],["option",4]]]],[11,"from_raw","","",155,[[["message",3]],["result",4]]],[11,"into_raw","","",155,[[],["message",3]]],[11,"from_raw_c","","",155,[[],[["request",4],["result",4]]]],[11,"as_raw_c_in","","",155,[[]]],[11,"is_destructor","","",190,[[]]],[11,"opcode","","",190,[[]]],[11,"since","","",190,[[]]],[11,"child","","",190,[[],[["object",3],["option",4]]]],[11,"from_raw","","",190,[[["message",3]],["result",4]]],[11,"into_raw","","",190,[[],["message",3]]],[11,"from_raw_c","","",190,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",190,[[]]],[11,"is_destructor","wayland_server::protocol::wl_subcompositor","",159,[[]]],[11,"opcode","","",159,[[]]],[11,"since","","",159,[[]]],[11,"child","","",159,[[],[["object",3],["option",4]]]],[11,"from_raw","","",159,[[["message",3]],["result",4]]],[11,"into_raw","","",159,[[],["message",3]]],[11,"from_raw_c","","",159,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",159,[[]]],[11,"is_destructor","","",192,[[]]],[11,"opcode","","",192,[[]]],[11,"since","","",192,[[]]],[11,"child","","",192,[[],[["object",3],["option",4]]]],[11,"from_raw","","",192,[[["message",3]],["result",4]]],[11,"into_raw","","",192,[[],["message",3]]],[11,"from_raw_c","","",192,[[],[["event",4],["result",4]]]],[11,"as_raw_c_in","","",192,[[]]],[11,"is_destructor","wayland_server::protocol::wl_subsurface","",162,[[]]],[11,"opcode","","",162,[[]]],[11,"since","","",162,[[]]],[11,"child","","",162,[[],[["object",3],["option",4]]]],[11,"from_raw","","",162,[[["message",3]],["result",4]]],[11,"into_raw","","",162,[[],["message",3]]],[11,"from_raw_c","","",162,[[],[["result",4],["request",4]]]],[11,"as_raw_c_in","","",162,[[]]],[11,"is_destructor","","",194,[[]]],[11,"opcode","","",194,[[]]],[11,"since","","",194,[[]]],[11,"child","","",194,[[],[["object",3],["option",4]]]],[11,"from_raw","","",194,[[["message",3]],["result",4]]],[11,"into_raw","","",194,[[],["message",3]]],[11,"from_raw_c","","",194,[[],[["result",4],["event",4]]]],[11,"as_raw_c_in","","",194,[[]]],[11,"new","wayland_server","Create a new map",166,[[],["userdatamap",3]]],[11,"get","","Attempt to access the wrapped user data of a given type",166,[[],["option",4]]],[11,"insert_if_missing","","Insert a value in the map if it is not already there",166,[[]]],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",166,[[]]],[11,"get","","Access the dispatch data knowing its type",167,[[],["option",4]]],[11,"wrap","","Wrap a mutable reference",167,[[],["dispatchdata",3]]],[11,"reborrow","","Reborrows this `DispatchData` to create a new one with the…",167,[[],["dispatchdata",3]]],[11,"new","","Create a new filter from given closure",168,[[],["filter",3]]],[11,"send","","Send a message to this filter",168,[[["dispatchdata",3]]]],[11,"open","wayland_server::sys::server","",14,[[],[["waylandserver",3],["dlerror",4],["result",4]]]]],"p":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"Main"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[4,"ResourceMap"],[4,"Event"],[13,"Done"],[3,"WlCallback"],[4,"Request"],[13,"CreateSurface"],[13,"CreateRegion"],[4,"Request"],[13,"CreateBuffer"],[13,"Resize"],[4,"Error"],[4,"Format"],[4,"Request"],[13,"CreatePool"],[4,"Event"],[13,"Format"],[3,"WlShm"],[4,"Request"],[4,"Event"],[3,"WlBuffer"],[4,"Error"],[4,"Request"],[13,"Accept"],[13,"Receive"],[13,"SetActions"],[4,"Event"],[13,"Offer"],[13,"SourceActions"],[13,"Action"],[3,"WlDataOffer"],[4,"Error"],[4,"Request"],[13,"Offer"],[13,"SetActions"],[4,"Event"],[13,"Target"],[13,"Send"],[13,"Action"],[3,"WlDataSource"],[4,"Error"],[4,"Request"],[13,"StartDrag"],[13,"SetSelection"],[4,"Event"],[13,"DataOffer"],[13,"Enter"],[13,"Motion"],[13,"Selection"],[3,"WlDataDevice"],[4,"Request"],[13,"CreateDataSource"],[13,"GetDataDevice"],[3,"DndAction"],[4,"Error"],[4,"Request"],[13,"GetShellSurface"],[4,"FullscreenMethod"],[4,"Request"],[13,"Pong"],[13,"Move"],[13,"Resize"],[13,"SetTransient"],[13,"SetFullscreen"],[13,"SetPopup"],[13,"SetMaximized"],[13,"SetTitle"],[13,"SetClass"],[4,"Event"],[13,"Ping"],[13,"Configure"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[4,"Error"],[4,"Request"],[13,"Attach"],[13,"Damage"],[13,"Frame"],[13,"SetOpaqueRegion"],[13,"SetInputRegion"],[13,"SetBufferTransform"],[13,"SetBufferScale"],[13,"DamageBuffer"],[4,"Event"],[13,"Enter"],[13,"Leave"],[3,"WlSurface"],[4,"Request"],[13,"GetPointer"],[13,"GetKeyboard"],[13,"GetTouch"],[4,"Event"],[13,"Capabilities"],[13,"Name"],[3,"Capability"],[3,"WlSeat"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[13,"SetCursor"],[4,"Event"],[13,"Enter"],[13,"Leave"],[13,"Motion"],[13,"Button"],[13,"Axis"],[13,"AxisSource"],[13,"AxisStop"],[13,"AxisDiscrete"],[3,"WlPointer"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[13,"Keymap"],[13,"Enter"],[13,"Leave"],[13,"Key"],[13,"Modifiers"],[13,"RepeatInfo"],[3,"WlKeyboard"],[4,"Request"],[4,"Event"],[13,"Down"],[13,"Up"],[13,"Motion"],[13,"Shape"],[13,"Orientation"],[3,"WlTouch"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[13,"Geometry"],[13,"Mode"],[13,"Scale"],[3,"Mode"],[3,"WlOutput"],[4,"Request"],[13,"Add"],[13,"Subtract"],[4,"Error"],[4,"Request"],[13,"GetSubsurface"],[4,"Error"],[4,"Request"],[13,"SetPosition"],[13,"PlaceAbove"],[13,"PlaceBelow"],[3,"UserDataMap"],[3,"DispatchData"],[3,"Filter"],[4,"NoMessage"],[3,"AnonymousObject"],[4,"wl_client"],[4,"wl_display"],[4,"wl_event_loop"],[4,"wl_event_source"],[4,"wl_global"],[4,"wl_resource"],[4,"wl_shm_buffer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[4,"Request"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"Event"]]},\
"winit":{"doc":"Winit is a cross-platform window creation and event loop…","i":[[0,"dpi","winit","UI scaling is important, so read the docs for this module…",null,null],[3,"LogicalPosition","winit::dpi","A position represented in logical pixels.",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[3,"PhysicalPosition","","A position represented in physical pixels.",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[3,"LogicalSize","","A size represented in logical pixels.",null,null],[12,"width","","",2,null],[12,"height","","",2,null],[3,"PhysicalSize","","A size represented in physical pixels.",null,null],[12,"width","","",3,null],[12,"height","","",3,null],[4,"Size","","A size that\'s either physical or logical.",null,null],[13,"Physical","","",4,null],[13,"Logical","","",4,null],[4,"Position","","A position that\'s either physical or logical.",null,null],[13,"Physical","","",5,null],[13,"Logical","","",5,null],[5,"validate_scale_factor","","Checks that the scale factor is a normal positive `f64`.",null,[[]]],[8,"Pixel","","",null,null],[10,"from_f64","","",6,[[]]],[11,"cast","","",6,[[],["pixel",8]]],[11,"new","","",0,[[]]],[11,"from_physical","","",0,[[["physicalposition",3],["into",8]]]],[11,"to_physical","","",0,[[],[["physicalposition",3],["pixel",8]]]],[11,"cast","","",0,[[],[["logicalposition",3],["pixel",8]]]],[11,"new","","",1,[[]]],[11,"from_logical","","",1,[[["into",8],["logicalposition",3]]]],[11,"to_logical","","",1,[[],[["logicalposition",3],["pixel",8]]]],[11,"cast","","",1,[[],[["physicalposition",3],["pixel",8]]]],[11,"new","","",2,[[]]],[11,"from_physical","","",2,[[["into",8],["physicalsize",3]]]],[11,"to_physical","","",2,[[],[["physicalsize",3],["pixel",8]]]],[11,"cast","","",2,[[],[["pixel",8],["logicalsize",3]]]],[11,"new","","",3,[[]]],[11,"from_logical","","",3,[[["logicalsize",3],["into",8]]]],[11,"to_logical","","",3,[[],[["pixel",8],["logicalsize",3]]]],[11,"cast","","",3,[[],[["physicalsize",3],["pixel",8]]]],[11,"new","","",4,[[["into",8],["size",4]],["size",4]]],[11,"to_logical","","",4,[[],[["logicalsize",3],["pixel",8]]]],[11,"to_physical","","",4,[[],[["physicalsize",3],["pixel",8]]]],[11,"new","","",5,[[["position",4],["into",8]],["position",4]]],[11,"to_logical","","",5,[[],[["logicalposition",3],["pixel",8]]]],[11,"to_physical","","",5,[[],[["physicalposition",3],["pixel",8]]]],[0,"error","winit","",null,null],[3,"NotSupportedError","winit::error","The error type for when the requested operation is not…",null,null],[3,"OsError","","The error type for when the OS cannot perform the…",null,null],[4,"ExternalError","","An error whose cause it outside Winit\'s control.",null,null],[13,"NotSupported","","The operation is not supported by the backend.",7,null],[13,"Os","","The OS cannot perform the operation.",7,null],[0,"event","winit","The `Event` enum and assorted supporting types.",null,null],[3,"DeviceId","winit::event","Identifier of an input device.",null,null],[3,"KeyboardInput","","Describes a keyboard input event.",null,null],[12,"scancode","","Identifies the physical key pressed",8,null],[12,"state","","",8,null],[12,"virtual_keycode","","Identifies the semantic meaning of the key",8,null],[12,"modifiers","","Modifier keys active at the time of this input.",8,null],[3,"Touch","","Represents a touch event",null,null],[12,"device_id","","",9,null],[12,"phase","","",9,null],[12,"location","","",9,null],[12,"force","","Describes how hard the screen was pressed. May be `None`…",9,null],[12,"id","","Unique identifier of a finger.",9,null],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",null,null],[4,"Event","","Describes a generic event.",null,null],[13,"NewEvents","","Emitted when new events arrive from the OS to be processed.",10,null],[13,"WindowEvent","","Emitted when the OS sends an event to a winit window.",10,null],[12,"window_id","winit::event::Event","",11,null],[12,"event","","",11,null],[13,"DeviceEvent","winit::event","Emitted when the OS sends an event to a device.",10,null],[12,"device_id","winit::event::Event","",12,null],[12,"event","","",12,null],[13,"UserEvent","winit::event","Emitted when an event is sent from…",10,null],[13,"Suspended","","Emitted when the application has been suspended.",10,null],[13,"Resumed","","Emitted when the application has been resumed.",10,null],[13,"MainEventsCleared","","Emitted when all of the event loop\'s input events have…",10,null],[13,"RedrawRequested","","Emitted after `MainEventsCleared` when a window should be…",10,null],[13,"RedrawEventsCleared","","Emitted after all `RedrawRequested` events have been…",10,null],[13,"LoopDestroyed","","Emitted when the event loop is being shut down.",10,null],[4,"StartCause","","Describes the reason the event loop is resuming.",null,null],[13,"ResumeTimeReached","","Sent if the time specified by `ControlFlow::WaitUntil` has…",13,null],[12,"start","winit::event::StartCause","",14,null],[12,"requested_resume","","",14,null],[13,"WaitCancelled","winit::event","Sent if the OS has new events to send to the window, after…",13,null],[12,"start","winit::event::StartCause","",15,null],[12,"requested_resume","","",15,null],[13,"Poll","winit::event","Sent if the event loop is being resumed after the loop\'s…",13,null],[13,"Init","","Sent once, immediately after `run` is called. Indicates…",13,null],[4,"WindowEvent","","Describes an event from a `Window`.",null,null],[13,"Resized","","The size of the window has changed. Contains the client…",16,null],[13,"Moved","","The position of the window has changed. Contains the…",16,null],[13,"CloseRequested","","The window has been requested to close.",16,null],[13,"Destroyed","","The window has been destroyed.",16,null],[13,"DroppedFile","","A file has been dropped into the window.",16,null],[13,"HoveredFile","","A file is being hovered over the window.",16,null],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",16,null],[13,"ReceivedCharacter","","The window received a unicode character.",16,null],[13,"Focused","","The window gained or lost focus.",16,null],[13,"KeyboardInput","","An event from the keyboard has been received.",16,null],[12,"device_id","winit::event::WindowEvent","",17,null],[12,"input","","",17,null],[12,"is_synthetic","","If `true`, the event was generated synthetically by winit…",17,null],[13,"ModifiersChanged","winit::event","The keyboard modifiers have changed.",16,null],[13,"CursorMoved","","The cursor has moved on the window.",16,null],[12,"device_id","winit::event::WindowEvent","",18,null],[12,"position","","(x,y) coords in pixels relative to the top-left corner of…",18,null],[12,"modifiers","","",18,null],[13,"CursorEntered","winit::event","The cursor has entered the window.",16,null],[12,"device_id","winit::event::WindowEvent","",19,null],[13,"CursorLeft","winit::event","The cursor has left the window.",16,null],[12,"device_id","winit::event::WindowEvent","",20,null],[13,"MouseWheel","winit::event","A mouse wheel movement or touchpad scroll occurred.",16,null],[12,"device_id","winit::event::WindowEvent","",21,null],[12,"delta","","",21,null],[12,"phase","","",21,null],[12,"modifiers","","",21,null],[13,"MouseInput","winit::event","An mouse button press has been received.",16,null],[12,"device_id","winit::event::WindowEvent","",22,null],[12,"state","","",22,null],[12,"button","","",22,null],[12,"modifiers","","",22,null],[13,"TouchpadPressure","winit::event","Touchpad pressure event.",16,null],[12,"device_id","winit::event::WindowEvent","",23,null],[12,"pressure","","",23,null],[12,"stage","","",23,null],[13,"AxisMotion","winit::event","Motion on some analog axis. May report data redundant to…",16,null],[12,"device_id","winit::event::WindowEvent","",24,null],[12,"axis","","",24,null],[12,"value","","",24,null],[13,"Touch","winit::event","Touch event has been received",16,null],[13,"ScaleFactorChanged","","The window\'s scale factor has changed.",16,null],[12,"scale_factor","winit::event::WindowEvent","",25,null],[12,"new_inner_size","","",25,null],[13,"ThemeChanged","winit::event","The system window theme has changed.",16,null],[4,"DeviceEvent","","Represents raw hardware events that are not associated…",null,null],[13,"Added","","",26,null],[13,"Removed","","",26,null],[13,"MouseMotion","","Change in physical position of a pointing device.",26,null],[12,"delta","winit::event::DeviceEvent","(x, y) change in position in unspecified units.",27,null],[13,"MouseWheel","winit::event","Physical scroll event",26,null],[12,"delta","winit::event::DeviceEvent","",28,null],[13,"Motion","winit::event","Motion on some analog axis. This event will be reported…",26,null],[12,"axis","winit::event::DeviceEvent","",29,null],[12,"value","","",29,null],[13,"Button","winit::event","",26,null],[12,"button","winit::event::DeviceEvent","",30,null],[12,"state","","",30,null],[13,"Key","winit::event","",26,null],[13,"Text","","",26,null],[12,"codepoint","winit::event::DeviceEvent","",31,null],[4,"TouchPhase","winit::event","Describes touch-screen input state.",null,null],[13,"Started","","",32,null],[13,"Moved","","",32,null],[13,"Ended","","",32,null],[13,"Cancelled","","",32,null],[4,"Force","","Describes the force of a touch event",null,null],[13,"Calibrated","","On iOS, the force is calibrated so that the same number…",33,null],[12,"force","winit::event::Force","The force of the touch, where a value of 1.0 represents…",34,null],[12,"max_possible_force","","The maximum possible force for a touch.",34,null],[12,"altitude_angle","","The altitude (in radians) of the stylus.",34,null],[13,"Normalized","winit::event","If the platform reports the force as normalized, we have…",33,null],[4,"ElementState","","Describes the input state of a key.",null,null],[13,"Pressed","","",35,null],[13,"Released","","",35,null],[4,"MouseButton","","Describes a button of a mouse controller.",null,null],[13,"Left","","",36,null],[13,"Right","","",36,null],[13,"Middle","","",36,null],[13,"Other","","",36,null],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",null,null],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and…",37,null],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical…",37,null],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",null,null],[13,"Key1","","The \'1\' key over the letters.",38,null],[13,"Key2","","The \'2\' key over the letters.",38,null],[13,"Key3","","The \'3\' key over the letters.",38,null],[13,"Key4","","The \'4\' key over the letters.",38,null],[13,"Key5","","The \'5\' key over the letters.",38,null],[13,"Key6","","The \'6\' key over the letters.",38,null],[13,"Key7","","The \'7\' key over the letters.",38,null],[13,"Key8","","The \'8\' key over the letters.",38,null],[13,"Key9","","The \'9\' key over the letters.",38,null],[13,"Key0","","The \'0\' key over the \'O\' and \'P\' keys.",38,null],[13,"A","","",38,null],[13,"B","","",38,null],[13,"C","","",38,null],[13,"D","","",38,null],[13,"E","","",38,null],[13,"F","","",38,null],[13,"G","","",38,null],[13,"H","","",38,null],[13,"I","","",38,null],[13,"J","","",38,null],[13,"K","","",38,null],[13,"L","","",38,null],[13,"M","","",38,null],[13,"N","","",38,null],[13,"O","","",38,null],[13,"P","","",38,null],[13,"Q","","",38,null],[13,"R","","",38,null],[13,"S","","",38,null],[13,"T","","",38,null],[13,"U","","",38,null],[13,"V","","",38,null],[13,"W","","",38,null],[13,"X","","",38,null],[13,"Y","","",38,null],[13,"Z","","",38,null],[13,"Escape","","The Escape key, next to F1.",38,null],[13,"F1","","",38,null],[13,"F2","","",38,null],[13,"F3","","",38,null],[13,"F4","","",38,null],[13,"F5","","",38,null],[13,"F6","","",38,null],[13,"F7","","",38,null],[13,"F8","","",38,null],[13,"F9","","",38,null],[13,"F10","","",38,null],[13,"F11","","",38,null],[13,"F12","","",38,null],[13,"F13","","",38,null],[13,"F14","","",38,null],[13,"F15","","",38,null],[13,"F16","","",38,null],[13,"F17","","",38,null],[13,"F18","","",38,null],[13,"F19","","",38,null],[13,"F20","","",38,null],[13,"F21","","",38,null],[13,"F22","","",38,null],[13,"F23","","",38,null],[13,"F24","","",38,null],[13,"Snapshot","","Print Screen/SysRq.",38,null],[13,"Scroll","","Scroll Lock.",38,null],[13,"Pause","","Pause/Break key, next to Scroll lock.",38,null],[13,"Insert","","`Insert`, next to Backspace.",38,null],[13,"Home","","",38,null],[13,"Delete","","",38,null],[13,"End","","",38,null],[13,"PageDown","","",38,null],[13,"PageUp","","",38,null],[13,"Left","","",38,null],[13,"Up","","",38,null],[13,"Right","","",38,null],[13,"Down","","",38,null],[13,"Back","","The Backspace key, right over Enter.",38,null],[13,"Return","","The Enter key.",38,null],[13,"Space","","The space bar.",38,null],[13,"Compose","","The \\\"Compose\\\" key on Linux.",38,null],[13,"Caret","","",38,null],[13,"Numlock","","",38,null],[13,"Numpad0","","",38,null],[13,"Numpad1","","",38,null],[13,"Numpad2","","",38,null],[13,"Numpad3","","",38,null],[13,"Numpad4","","",38,null],[13,"Numpad5","","",38,null],[13,"Numpad6","","",38,null],[13,"Numpad7","","",38,null],[13,"Numpad8","","",38,null],[13,"Numpad9","","",38,null],[13,"AbntC1","","",38,null],[13,"AbntC2","","",38,null],[13,"Add","","",38,null],[13,"Apostrophe","","",38,null],[13,"Apps","","",38,null],[13,"At","","",38,null],[13,"Ax","","",38,null],[13,"Backslash","","",38,null],[13,"Calculator","","",38,null],[13,"Capital","","",38,null],[13,"Colon","","",38,null],[13,"Comma","","",38,null],[13,"Convert","","",38,null],[13,"Decimal","","",38,null],[13,"Divide","","",38,null],[13,"Equals","","",38,null],[13,"Grave","","",38,null],[13,"Kana","","",38,null],[13,"Kanji","","",38,null],[13,"LAlt","","",38,null],[13,"LBracket","","",38,null],[13,"LControl","","",38,null],[13,"LShift","","",38,null],[13,"LWin","","",38,null],[13,"Mail","","",38,null],[13,"MediaSelect","","",38,null],[13,"MediaStop","","",38,null],[13,"Minus","","",38,null],[13,"Multiply","","",38,null],[13,"Mute","","",38,null],[13,"MyComputer","","",38,null],[13,"NavigateForward","","",38,null],[13,"NavigateBackward","","",38,null],[13,"NextTrack","","",38,null],[13,"NoConvert","","",38,null],[13,"NumpadComma","","",38,null],[13,"NumpadEnter","","",38,null],[13,"NumpadEquals","","",38,null],[13,"OEM102","","",38,null],[13,"Period","","",38,null],[13,"PlayPause","","",38,null],[13,"Power","","",38,null],[13,"PrevTrack","","",38,null],[13,"RAlt","","",38,null],[13,"RBracket","","",38,null],[13,"RControl","","",38,null],[13,"RShift","","",38,null],[13,"RWin","","",38,null],[13,"Semicolon","","",38,null],[13,"Slash","","",38,null],[13,"Sleep","","",38,null],[13,"Stop","","",38,null],[13,"Subtract","","",38,null],[13,"Sysrq","","",38,null],[13,"Tab","","",38,null],[13,"Underline","","",38,null],[13,"Unlabeled","","",38,null],[13,"VolumeDown","","",38,null],[13,"VolumeUp","","",38,null],[13,"Wake","","",38,null],[13,"WebBack","","",38,null],[13,"WebFavorites","","",38,null],[13,"WebForward","","",38,null],[13,"WebHome","","",38,null],[13,"WebRefresh","","",38,null],[13,"WebSearch","","",38,null],[13,"WebStop","","",38,null],[13,"Yen","","",38,null],[13,"Copy","","",38,null],[13,"Paste","","",38,null],[13,"Cut","","",38,null],[6,"ScanCode","","Hardware-dependent keyboard scan code.",null,null],[6,"AxisId","","Identifier for a specific analog axis on some device.",null,null],[6,"ButtonId","","Identifier for a specific button on some device.",null,null],[11,"map_nonuser_event","","",10,[[],[["event",4],["result",4],["event",4]]]],[11,"to_static","","If the event doesn\'t contain a reference, turn it into an…",10,[[],[["event",4],["option",4]]]],[11,"to_static","","",16,[[],[["windowevent",4],["option",4]]]],[11,"dummy","","Returns a dummy `DeviceId`, useful for unit testing. The…",39,[[]]],[11,"normalized","","Returns the force normalized to the range between 0.0 and…",33,[[]]],[11,"shift","","Returns `true` if the shift key is pressed.",40,[[]]],[11,"ctrl","","Returns `true` if the control key is pressed.",40,[[]]],[11,"alt","","Returns `true` if the alt key is pressed.",40,[[]]],[11,"logo","","Returns `true` if the logo key is pressed.",40,[[]]],[18,"SHIFT","","The \\\"shift\\\" key.",40,null],[18,"CTRL","","The \\\"control\\\" key.",40,null],[18,"ALT","","The \\\"alt\\\" key.",40,null],[18,"LOGO","","This is the \\\"windows\\\" key on PC and \\\"command\\\" key on Mac.",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["modifiersstate",3]]],[11,"all","","Returns the set containing all flags.",40,[[],["modifiersstate",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",40,[[],[["modifiersstate",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",40,[[],["modifiersstate",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[],["modifiersstate",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",40,[[["modifiersstate",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",40,[[["modifiersstate",3]]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["modifiersstate",3]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["modifiersstate",3]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["modifiersstate",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",40,[[["modifiersstate",3]]]],[0,"event_loop","winit","The `EventLoop` struct and assorted supporting types,…",null,null],[3,"EventLoop","winit::event_loop","Provides a way to retrieve events from the system and from…",null,null],[3,"EventLoopWindowTarget","","Target that associates windows with an `EventLoop`.",null,null],[3,"EventLoopProxy","","Used to send custom events to `EventLoop`.",null,null],[3,"EventLoopClosed","","The error that is returned when an `EventLoopProxy`…",null,null],[12,"0","","",41,null],[4,"ControlFlow","","Set by the user callback given to the `EventLoop::run`…",null,null],[13,"Poll","","When the current loop iteration finishes, immediately…",42,null],[13,"Wait","","When the current loop iteration finishes, suspend the…",42,null],[13,"WaitUntil","","When the current loop iteration finishes, suspend the…",42,null],[13,"Exit","","Send a `LoopDestroyed` event and stop the event loop. This…",42,null],[11,"new","","Builds a new event loop with a `()` as the user event type.",43,[[],["eventloop",3]]],[11,"with_user_event","","Builds a new event loop.",43,[[],["eventloop",3]]],[11,"run","","Hijacks the calling thread and initializes the winit event…",43,[[]]],[11,"create_proxy","","Creates an `EventLoopProxy` that can be used to dispatch…",43,[[],["eventloopproxy",3]]],[11,"available_monitors","","Returns the list of all the monitors available on the…",43,[[]]],[11,"primary_monitor","","Returns the primary monitor of the system.",43,[[],["monitorhandle",3]]],[11,"send_event","","Send an event to the `EventLoop` from which this proxy was…",44,[[],[["eventloopclosed",3],["result",4]]]],[0,"monitor","winit","Types useful for interacting with a user\'s monitors.",null,null],[3,"VideoMode","winit::monitor","Describes a fullscreen video mode of a monitor.",null,null],[3,"MonitorHandle","","Handle to a monitor.",null,null],[11,"size","","Returns the resolution of this video mode.",45,[[],["physicalsize",3]]],[11,"bit_depth","","Returns the bit depth of this video mode, as in how many…",45,[[]]],[11,"refresh_rate","","Returns the refresh rate of this video mode. Note: the…",45,[[]]],[11,"monitor","","Returns the monitor that this video mode is valid for.…",45,[[],["monitorhandle",3]]],[11,"name","","Returns a human-readable name of the monitor.",46,[[],[["string",3],["option",4]]]],[11,"size","","Returns the monitor\'s resolution.",46,[[],["physicalsize",3]]],[11,"position","","Returns the top-left corner position of the monitor…",46,[[],["physicalposition",3]]],[11,"scale_factor","","Returns the scale factor that can be used to map logical…",46,[[]]],[11,"video_modes","","Returns all fullscreen video modes supported by this…",46,[[]]],[0,"window","winit","The `Window` struct and associated types.",null,null],[3,"Icon","winit::window","An icon used for the window titlebar, taskbar, etc.",null,null],[3,"Window","","Represents a window.",null,null],[3,"WindowId","","Identifier of a window. Unique for each window.",null,null],[3,"WindowBuilder","","Object that allows you to build windows.",null,null],[12,"window","","The attributes to use to create the window.",47,null],[3,"WindowAttributes","","Attributes to use when creating a window.",null,null],[12,"inner_size","","The dimensions of the window. If this is `None`, some…",48,null],[12,"min_inner_size","","The minimum dimensions a window can be, If this is `None`,…",48,null],[12,"max_inner_size","","The maximum dimensions a window can be, If this is `None`,…",48,null],[12,"resizable","","Whether the window is resizable or not.",48,null],[12,"fullscreen","","Whether the window should be set as fullscreen upon…",48,null],[12,"title","","The title of the window in the title bar.",48,null],[12,"maximized","","Whether the window should be maximized upon creation.",48,null],[12,"visible","","Whether the window should be immediately visible upon…",48,null],[12,"transparent","","Whether the the window should be transparent. If this is…",48,null],[12,"decorations","","Whether the window should have borders and bars.",48,null],[12,"always_on_top","","Whether the window should always be on top of other windows.",48,null],[12,"window_icon","","The window icon.",48,null],[4,"BadIcon","","An error produced when using `Icon::from_rgba` with…",null,null],[13,"ByteCountNotDivisibleBy4","","Produced when the length of the `rgba` argument isn\'t…",49,null],[12,"byte_count","winit::window::BadIcon","",50,null],[13,"DimensionsVsPixelCount","winit::window","Produced when the number of pixels (`rgba.len() / 4`)…",49,null],[12,"width","winit::window::BadIcon","",51,null],[12,"height","","",51,null],[12,"width_x_height","","",51,null],[12,"pixel_count","","",51,null],[13,"OsError","winit::window","Produced when underlying OS functionality failed to create…",49,null],[4,"CursorIcon","","Describes the appearance of the mouse cursor.",null,null],[13,"Default","","The platform-dependent default cursor.",52,null],[13,"Crosshair","","A simple crosshair.",52,null],[13,"Hand","","A hand (often used to indicate links in web browsers).",52,null],[13,"Arrow","","Self explanatory.",52,null],[13,"Move","","Indicates something is to be moved.",52,null],[13,"Text","","Indicates text that may be selected or edited.",52,null],[13,"Wait","","Program busy indicator.",52,null],[13,"Help","","Help indicator (often rendered as a \\\"?\\\")",52,null],[13,"Progress","","Progress indicator. Shows that processing is being done.…",52,null],[13,"NotAllowed","","Cursor showing that something cannot be done.",52,null],[13,"ContextMenu","","",52,null],[13,"Cell","","",52,null],[13,"VerticalText","","",52,null],[13,"Alias","","",52,null],[13,"Copy","","",52,null],[13,"NoDrop","","",52,null],[13,"Grab","","Indicates something can be grabbed.",52,null],[13,"Grabbing","","Indicates something is grabbed.",52,null],[13,"AllScroll","","",52,null],[13,"ZoomIn","","",52,null],[13,"ZoomOut","","",52,null],[13,"EResize","","Indicate that some edge is to be moved. For example, the…",52,null],[13,"NResize","","",52,null],[13,"NeResize","","",52,null],[13,"NwResize","","",52,null],[13,"SResize","","",52,null],[13,"SeResize","","",52,null],[13,"SwResize","","",52,null],[13,"WResize","","",52,null],[13,"EwResize","","",52,null],[13,"NsResize","","",52,null],[13,"NeswResize","","",52,null],[13,"NwseResize","","",52,null],[13,"ColResize","","",52,null],[13,"RowResize","","",52,null],[4,"Fullscreen","","",null,null],[13,"Exclusive","","",53,null],[13,"Borderless","","",53,null],[4,"Theme","","",null,null],[13,"Light","","",54,null],[13,"Dark","","",54,null],[11,"dummy","","Returns a dummy `WindowId`, useful for unit testing. The…",55,[[]]],[11,"new","","Initializes a new `WindowBuilder` with default values.",47,[[]]],[11,"with_inner_size","","Requests the window to be of specific dimensions.",47,[[["into",8],["size",4]]]],[11,"with_min_inner_size","","Sets a minimum dimension size for the window.",47,[[["into",8],["size",4]]]],[11,"with_max_inner_size","","Sets a maximum dimension size for the window.",47,[[["into",8],["size",4]]]],[11,"with_resizable","","Sets whether the window is resizable or not.",47,[[]]],[11,"with_title","","Requests a specific title for the window.",47,[[["into",8],["string",3]]]],[11,"with_fullscreen","","Sets the window fullscreen state.",47,[[["option",4],["fullscreen",4]]]],[11,"with_maximized","","Requests maximized mode.",47,[[]]],[11,"with_visible","","Sets whether the window will be initially hidden or visible.",47,[[]]],[11,"with_transparent","","Sets whether the background of the window should be…",47,[[]]],[11,"with_decorations","","Sets whether the window should have a border, a title bar,…",47,[[]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of…",47,[[]]],[11,"with_window_icon","","Sets the window icon.",47,[[["option",4],["icon",3]]]],[11,"build","","Builds the window.",47,[[["eventloopwindowtarget",3]],[["result",4],["oserror",3],["window",3]]]],[11,"new","","Creates a new Window for platforms where this is…",56,[[["eventloopwindowtarget",3]],[["result",4],["oserror",3],["window",3]]]],[11,"id","","Returns an identifier unique to the window.",56,[[],["windowid",3]]],[11,"scale_factor","","Returns the scale factor that can be used to map logical…",56,[[]]],[11,"request_redraw","","Emits a `WindowEvent::RedrawRequested` event in the…",56,[[]]],[11,"inner_position","","Returns the position of the top-left hand corner of the…",56,[[],[["physicalposition",3],["notsupportederror",3],["result",4]]]],[11,"outer_position","","Returns the position of the top-left hand corner of the…",56,[[],[["physicalposition",3],["notsupportederror",3],["result",4]]]],[11,"set_outer_position","","Modifies the position of the window.",56,[[["position",4],["into",8]]]],[11,"inner_size","","Returns the physical size of the window\'s client area.",56,[[],["physicalsize",3]]],[11,"set_inner_size","","Modifies the inner size of the window.",56,[[["into",8],["size",4]]]],[11,"outer_size","","Returns the physical size of the entire window.",56,[[],["physicalsize",3]]],[11,"set_min_inner_size","","Sets a minimum dimension size for the window.",56,[[["into",8],["option",4],["size",4]]]],[11,"set_max_inner_size","","Sets a maximum dimension size for the window.",56,[[["into",8],["option",4],["size",4]]]],[11,"set_title","","Modifies the title of the window.",56,[[]]],[11,"set_visible","","Modifies the window\'s visibility.",56,[[]]],[11,"set_resizable","","Sets whether the window is resizable or not.",56,[[]]],[11,"set_minimized","","Sets the window to minimized or back",56,[[]]],[11,"set_maximized","","Sets the window to maximized or back.",56,[[]]],[11,"set_fullscreen","","Sets the window to fullscreen or back.",56,[[["option",4],["fullscreen",4]]]],[11,"fullscreen","","Gets the window\'s current fullscreen state.",56,[[],[["option",4],["fullscreen",4]]]],[11,"set_decorations","","Turn window decorations on or off.",56,[[]]],[11,"set_always_on_top","","Change whether or not the window will always be on top of…",56,[[]]],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is…",56,[[["option",4],["icon",3]]]],[11,"set_ime_position","","Sets location of IME candidate box in client area…",56,[[["position",4],["into",8]]]],[11,"set_cursor_icon","","Modifies the cursor icon of the window.",56,[[["cursoricon",4]]]],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",56,[[["position",4],["into",8]],[["externalerror",4],["result",4]]]],[11,"set_cursor_grab","","Grabs the cursor, preventing it from leaving the window.",56,[[],[["externalerror",4],["result",4]]]],[11,"set_cursor_visible","","Modifies the cursor\'s visibility.",56,[[]]],[11,"current_monitor","","Returns the monitor on which the window currently resides",56,[[],["monitorhandle",3]]],[11,"available_monitors","","Returns the list of all the monitors available on the…",56,[[]]],[11,"primary_monitor","","Returns the primary monitor of the system.",56,[[],["monitorhandle",3]]],[0,"platform","winit","Contains traits with platform-specific methods in them.",null,null],[0,"unix","winit::platform","",null,null],[4,"XWindowType","winit::platform::unix","X window type. Maps directly to `_NET_WM_WINDOW_TYPE`.",null,null],[13,"Desktop","","A desktop feature. This can include a single window…",57,null],[13,"Dock","","A dock or panel feature. Typically a Window Manager would…",57,null],[13,"Toolbar","","Toolbar windows. \\\"Torn off\\\" from the main application.",57,null],[13,"Menu","","Pinnable menu windows. \\\"Torn off\\\" from the main application.",57,null],[13,"Utility","","A small persistent utility window, such as a palette or…",57,null],[13,"Splash","","The window is a splash screen displayed as an application…",57,null],[13,"Dialog","","This is a dialog window.",57,null],[13,"DropdownMenu","","A dropdown menu that usually appears when the user clicks…",57,null],[13,"PopupMenu","","A popup menu that usually appears when the user right…",57,null],[13,"Tooltip","","A tooltip window. Usually used to show additional…",57,null],[13,"Notification","","The window is a notification. This property is typically…",57,null],[13,"Combo","","This should be used on the windows that are popped up by…",57,null],[13,"Dnd","","This indicates the the window is being dragged. This…",57,null],[13,"Normal","","This is a normal, top-level window.",57,null],[4,"XNotSupported","","Error returned if this system doesn\'t have XLib or can\'t…",null,null],[13,"LibraryOpenError","","Failed to load one or several shared libraries.",58,null],[13,"XOpenDisplayFailed","","Connecting to the X server with `XOpenDisplay` failed.",58,null],[4,"ButtonState","","",null,null],[13,"Hovered","","Button is being hovered over by pointer.",59,null],[13,"Idle","","Button is not being hovered over by pointer.",59,null],[13,"Disabled","","Button is disabled.",59,null],[8,"EventLoopWindowTargetExtUnix","","Additional methods on `EventLoopWindowTarget` that are…",null,null],[10,"is_wayland","","True if the `EventLoopWindowTarget` uses Wayland.",60,[[]]],[10,"is_x11","","True if the `EventLoopWindowTarget` uses X11.",60,[[]]],[10,"wayland_display","","Returns a pointer to the `wl_display` object of wayland…",60,[[],["option",4]]],[8,"EventLoopExtUnix","","Additional methods on `EventLoop` that are specific to Unix.",null,null],[10,"new_x11","","Builds a new `EventLoop` that is forced to use X11.",61,[[],[["xnotsupported",4],["result",4]]]],[10,"new_wayland","","Builds a new `EventLoop` that is forced to use Wayland.",61,[[]]],[10,"new_any_thread","","Builds a new `EventLoop` on any thread.",61,[[]]],[10,"new_x11_any_thread","","Builds a new X11 `EventLoop` on any thread.",61,[[],[["xnotsupported",4],["result",4]]]],[10,"new_wayland_any_thread","","Builds a new Wayland `EventLoop` on any thread.",61,[[]]],[8,"WindowExtUnix","","Additional methods on `Window` that are specific to Unix.",null,null],[10,"xlib_window","","Returns the ID of the `Window` xlib object that is used by…",62,[[],[["c_ulong",6],["option",4]]]],[10,"xlib_display","","Returns a pointer to the `Display` object of xlib that is…",62,[[],["option",4]]],[10,"xlib_screen_id","","",62,[[],[["option",4],["c_int",6]]]],[10,"set_urgent","","Set window urgency hint (`XUrgencyHint`). Only relevant on…",62,[[]]],[10,"xcb_connection","","This function returns the underlying `xcb_connection_t` of…",62,[[],["option",4]]],[10,"wayland_surface","","Returns a pointer to the `wl_surface` object of wayland…",62,[[],["option",4]]],[10,"wayland_display","","Returns a pointer to the `wl_display` object of wayland…",62,[[],["option",4]]],[10,"set_wayland_theme","","Sets the color theme of the client side window decorations…",62,[[["theme",8]]]],[10,"is_ready","","Check if the window is ready for drawing",62,[[]]],[8,"WindowBuilderExtUnix","","Additional methods on `WindowBuilder` that are specific to…",null,null],[10,"with_x11_visual","","",63,[[]]],[10,"with_x11_screen","","",63,[[]]],[10,"with_class","","Build window with `WM_CLASS` hint; defaults to the name of…",63,[[["string",3]]]],[10,"with_override_redirect","","Build window with override-redirect flag; defaults to…",63,[[]]],[10,"with_x11_window_type","","Build window with `_NET_WM_WINDOW_TYPE` hints; defaults to…",63,[[["xwindowtype",4],["vec",3]]]],[10,"with_gtk_theme_variant","","Build window with `_GTK_THEME_VARIANT` hint set to the…",63,[[["string",3]]]],[10,"with_resize_increments","","Build window with resize increment hint. Only implemented…",63,[[["into",8],["size",4]]]],[10,"with_base_size","","Build window with base size hint. Only implemented on X11.",63,[[["into",8],["size",4]]]],[10,"with_app_id","","Build window with a given application ID. It should match…",63,[[["string",3]]]],[8,"MonitorHandleExtUnix","","Additional methods on `MonitorHandle` that are specific to…",null,null],[10,"native_id","","Returns the inner identifier of the monitor.",64,[[]]],[8,"Theme","","",null,null],[10,"primary_color","","Primary color of the scheme.",65,[[]]],[10,"secondary_color","","Secondary color of the scheme.",65,[[]]],[10,"close_button_color","","Color for the close button.",65,[[["buttonstate",4]]]],[11,"close_button_icon_color","","Icon color for the close button, defaults to the secondary…",65,[[["buttonstate",4]]]],[10,"maximize_button_color","","Background color for the maximize button.",65,[[["buttonstate",4]]]],[11,"maximize_button_icon_color","","Icon color for the maximize button, defaults to the…",65,[[["buttonstate",4]]]],[10,"minimize_button_color","","Background color for the minimize button.",65,[[["buttonstate",4]]]],[11,"minimize_button_icon_color","","Icon color for the minimize button, defaults to the…",65,[[["buttonstate",4]]]],[0,"desktop","winit::platform","",null,null],[8,"EventLoopExtDesktop","winit::platform::desktop","Additional methods on `EventLoop` that are specific to…",null,null],[16,"UserEvent","","A type provided by the user that can be passed through…",66,null],[10,"run_return","","Initializes the `winit` event loop.",66,[[]]],[11,"from","winit::dpi","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","winit::error","",67,[[]]],[11,"into","","",67,[[]]],[11,"to_owned","","",67,[[]]],[11,"clone_into","","",67,[[]]],[11,"to_string","","",67,[[],["string",3]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"to_string","","",68,[[],["string",3]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","winit::event","",39,[[]]],[11,"into","","",39,[[]]],[11,"to_owned","","",39,[[]]],[11,"clone_into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",40,[[]]],[11,"into","","",40,[[]]],[11,"to_owned","","",40,[[]]],[11,"clone_into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"to_owned","","",38,[[]]],[11,"clone_into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","winit::event_loop","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"to_owned","","",44,[[]]],[11,"clone_into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"to_owned","","",41,[[]]],[11,"clone_into","","",41,[[]]],[11,"to_string","","",41,[[],["string",3]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"to_owned","","",42,[[]]],[11,"clone_into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","winit::window","",70,[[]]],[11,"into","","",70,[[]]],[11,"to_owned","","",70,[[]]],[11,"clone_into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"to_string","","",49,[[],["string",3]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","winit::monitor","",45,[[]]],[11,"into","","",45,[[]]],[11,"to_owned","","",45,[[]]],[11,"clone_into","","",45,[[]]],[11,"to_string","","",45,[[],["string",3]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","winit::platform::unix","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"to_owned","","",58,[[]]],[11,"clone_into","","",58,[[]]],[11,"to_string","","",58,[[],["string",3]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","winit::window","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","winit::platform::unix","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"is_wayland","winit::event_loop","",69,[[]]],[11,"is_x11","","",69,[[]]],[11,"wayland_display","","",69,[[],["option",4]]],[11,"new_any_thread","","",43,[[]]],[11,"new_x11_any_thread","","",43,[[],[["xnotsupported",4],["result",4]]]],[11,"new_wayland_any_thread","","",43,[[]]],[11,"new_x11","","",43,[[],[["xnotsupported",4],["result",4]]]],[11,"new_wayland","","",43,[[]]],[11,"xlib_window","winit::window","",56,[[],[["c_ulong",6],["option",4]]]],[11,"xlib_display","","",56,[[],["option",4]]],[11,"xlib_screen_id","","",56,[[],[["option",4],["c_int",6]]]],[11,"set_urgent","","",56,[[]]],[11,"xcb_connection","","",56,[[],["option",4]]],[11,"wayland_surface","","",56,[[],["option",4]]],[11,"wayland_display","","",56,[[],["option",4]]],[11,"set_wayland_theme","","",56,[[["theme",8]]]],[11,"is_ready","","",56,[[]]],[11,"with_x11_visual","","",47,[[]]],[11,"with_x11_screen","","",47,[[]]],[11,"with_class","","",47,[[["string",3]]]],[11,"with_override_redirect","","",47,[[]]],[11,"with_x11_window_type","","",47,[[["xwindowtype",4],["vec",3]]]],[11,"with_gtk_theme_variant","","",47,[[["string",3]]]],[11,"with_resize_increments","","",47,[[["into",8],["size",4]]]],[11,"with_base_size","","",47,[[["into",8],["size",4]]]],[11,"with_app_id","","",47,[[["string",3]]]],[11,"native_id","winit::monitor","",46,[[]]],[11,"run_return","winit::event_loop","",43,[[]]],[11,"drop","winit::window","",56,[[]]],[11,"from","winit::dpi","",0,[[],["logicalposition",3]]],[11,"from","","",0,[[],["logicalposition",3]]],[11,"from","","",1,[[],["physicalposition",3]]],[11,"from","","",1,[[],["physicalposition",3]]],[11,"from","","",2,[[],["logicalsize",3]]],[11,"from","","",2,[[],["logicalsize",3]]],[11,"from","","",3,[[],["physicalsize",3]]],[11,"from","","",3,[[],["physicalsize",3]]],[11,"from","","",4,[[["physicalsize",3]],["size",4]]],[11,"from","","",4,[[["logicalsize",3]],["size",4]]],[11,"from","","",5,[[["physicalposition",3]],["position",4]]],[11,"from","","",5,[[["logicalposition",3]],["position",4]]],[11,"from","winit::platform::unix","",58,[[["openerror",3]],["xnotsupported",4]]],[11,"into","winit::dpi","",0,[[]]],[11,"into","","",0,[[]]],[11,"into","","",1,[[]]],[11,"into","","",1,[[]]],[11,"into","","",2,[[["logicalsize",3]]]],[11,"into","","",2,[[]]],[11,"into","","",3,[[]]],[11,"into","","",3,[[]]],[11,"extend","winit::event","",40,[[["intoiterator",8]]]],[11,"clone","winit::dpi","",0,[[],["logicalposition",3]]],[11,"clone","","",1,[[],["physicalposition",3]]],[11,"clone","","",2,[[],["logicalsize",3]]],[11,"clone","","",3,[[],["physicalsize",3]]],[11,"clone","","",4,[[],["size",4]]],[11,"clone","","",5,[[],["position",4]]],[11,"clone","winit::error","",67,[[],["notsupportederror",3]]],[11,"clone","winit::event","",10,[[]]],[11,"clone","","",13,[[],["startcause",4]]],[11,"clone","","",16,[[]]],[11,"clone","","",39,[[],["deviceid",3]]],[11,"clone","","",26,[[],["deviceevent",4]]],[11,"clone","","",8,[[],["keyboardinput",3]]],[11,"clone","","",32,[[],["touchphase",4]]],[11,"clone","","",9,[[],["touch",3]]],[11,"clone","","",33,[[],["force",4]]],[11,"clone","","",35,[[],["elementstate",4]]],[11,"clone","","",36,[[],["mousebutton",4]]],[11,"clone","","",37,[[],["mousescrolldelta",4]]],[11,"clone","","",38,[[],["virtualkeycode",4]]],[11,"clone","","",40,[[],["modifiersstate",3]]],[11,"clone","winit::event_loop","",42,[[],["controlflow",4]]],[11,"clone","","",44,[[]]],[11,"clone","","",41,[[],["eventloopclosed",3]]],[11,"clone","winit::window","",70,[[],["icon",3]]],[11,"clone","winit::monitor","",45,[[],["videomode",3]]],[11,"clone","","",46,[[],["monitorhandle",3]]],[11,"clone","winit::platform::unix","",57,[[],["windowtype",4]]],[11,"clone","","",58,[[],["xnotsupported",4]]],[11,"clone","winit::window","",55,[[],["windowid",3]]],[11,"clone","","",47,[[],["windowbuilder",3]]],[11,"clone","","",48,[[],["windowattributes",3]]],[11,"clone","","",52,[[],["cursoricon",4]]],[11,"clone","","",53,[[],["fullscreen",4]]],[11,"clone","","",54,[[],["theme",4]]],[11,"default","winit::event","",40,[[],["modifiersstate",3]]],[11,"default","winit::event_loop","",42,[[],["controlflow",4]]],[11,"default","winit::platform::unix","",57,[[]]],[11,"default","winit::window","",47,[[],["windowbuilder",3]]],[11,"default","","",48,[[],["windowattributes",3]]],[11,"default","","",52,[[]]],[11,"cmp","winit::event","",39,[[["deviceid",3]],["ordering",4]]],[11,"cmp","","",38,[[["virtualkeycode",4]],["ordering",4]]],[11,"cmp","","",40,[[["modifiersstate",3]],["ordering",4]]],[11,"cmp","winit::monitor","",45,[[["videomode",3]],["ordering",4]]],[11,"cmp","","",46,[[["monitorhandle",3]],["ordering",4]]],[11,"cmp","winit::window","",55,[[["windowid",3]],["ordering",4]]],[11,"eq","winit::dpi","",0,[[["logicalposition",3]]]],[11,"ne","","",0,[[["logicalposition",3]]]],[11,"eq","","",1,[[["physicalposition",3]]]],[11,"ne","","",1,[[["physicalposition",3]]]],[11,"eq","","",2,[[["logicalsize",3]]]],[11,"ne","","",2,[[["logicalsize",3]]]],[11,"eq","","",3,[[["physicalsize",3]]]],[11,"ne","","",3,[[["physicalsize",3]]]],[11,"eq","","",4,[[["size",4]]]],[11,"ne","","",4,[[["size",4]]]],[11,"eq","","",5,[[["position",4]]]],[11,"ne","","",5,[[["position",4]]]],[11,"eq","winit::event","",10,[[["event",4]]]],[11,"ne","","",10,[[["event",4]]]],[11,"eq","","",13,[[["startcause",4]]]],[11,"ne","","",13,[[["startcause",4]]]],[11,"eq","","",16,[[["windowevent",4]]]],[11,"ne","","",16,[[["windowevent",4]]]],[11,"eq","","",39,[[["deviceid",3]]]],[11,"ne","","",39,[[["deviceid",3]]]],[11,"eq","","",26,[[["deviceevent",4]]]],[11,"ne","","",26,[[["deviceevent",4]]]],[11,"eq","","",8,[[["keyboardinput",3]]]],[11,"ne","","",8,[[["keyboardinput",3]]]],[11,"eq","","",32,[[["touchphase",4]]]],[11,"eq","","",9,[[["touch",3]]]],[11,"ne","","",9,[[["touch",3]]]],[11,"eq","","",33,[[["force",4]]]],[11,"ne","","",33,[[["force",4]]]],[11,"eq","","",35,[[["elementstate",4]]]],[11,"eq","","",36,[[["mousebutton",4]]]],[11,"ne","","",36,[[["mousebutton",4]]]],[11,"eq","","",37,[[["mousescrolldelta",4]]]],[11,"ne","","",37,[[["mousescrolldelta",4]]]],[11,"eq","","",38,[[["virtualkeycode",4]]]],[11,"eq","","",40,[[["modifiersstate",3]]]],[11,"ne","","",40,[[["modifiersstate",3]]]],[11,"eq","winit::event_loop","",42,[[["controlflow",4]]]],[11,"ne","","",42,[[["controlflow",4]]]],[11,"eq","","",41,[[["eventloopclosed",3]]]],[11,"ne","","",41,[[["eventloopclosed",3]]]],[11,"eq","winit::monitor","",45,[[["videomode",3]]]],[11,"ne","","",45,[[["videomode",3]]]],[11,"eq","","",46,[[["monitorhandle",3]]]],[11,"ne","","",46,[[["monitorhandle",3]]]],[11,"eq","winit::platform::unix","",57,[[["windowtype",4]]]],[11,"eq","winit::window","",55,[[["windowid",3]]]],[11,"ne","","",55,[[["windowid",3]]]],[11,"eq","","",52,[[["cursoricon",4]]]],[11,"eq","","",53,[[["fullscreen",4]]]],[11,"ne","","",53,[[["fullscreen",4]]]],[11,"eq","","",54,[[["theme",4]]]],[11,"partial_cmp","winit::event","",39,[[["deviceid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",39,[[["deviceid",3]]]],[11,"le","","",39,[[["deviceid",3]]]],[11,"gt","","",39,[[["deviceid",3]]]],[11,"ge","","",39,[[["deviceid",3]]]],[11,"partial_cmp","","",38,[[["virtualkeycode",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",40,[[["modifiersstate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",40,[[["modifiersstate",3]]]],[11,"le","","",40,[[["modifiersstate",3]]]],[11,"gt","","",40,[[["modifiersstate",3]]]],[11,"ge","","",40,[[["modifiersstate",3]]]],[11,"partial_cmp","winit::monitor","",45,[[["videomode",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",46,[[["monitorhandle",3]],[["option",4],["ordering",4]]]],[11,"lt","","",46,[[["monitorhandle",3]]]],[11,"le","","",46,[[["monitorhandle",3]]]],[11,"gt","","",46,[[["monitorhandle",3]]]],[11,"ge","","",46,[[["monitorhandle",3]]]],[11,"partial_cmp","winit::window","",55,[[["windowid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",55,[[["windowid",3]]]],[11,"le","","",55,[[["windowid",3]]]],[11,"gt","","",55,[[["windowid",3]]]],[11,"ge","","",55,[[["windowid",3]]]],[11,"deref","winit::event_loop","",43,[[],["eventloopwindowtarget",3]]],[11,"fmt","winit::dpi","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","winit::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","winit::event","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",39,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","winit::event_loop","",43,[[["formatter",3]],["result",6]]],[11,"fmt","","",69,[[["formatter",3]],["result",6]]],[11,"fmt","","",42,[[["formatter",3]],["result",6]]],[11,"fmt","","",44,[[["formatter",3]],["result",6]]],[11,"fmt","","",41,[[["formatter",3]],["result",6]]],[11,"fmt","winit::window","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",70,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","winit::monitor","",45,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","winit::platform::unix","",57,[[["formatter",3]],["result",6]]],[11,"fmt","","",58,[[["formatter",3]],["result",6]]],[11,"fmt","winit::window","",56,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","winit::error","",68,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",7,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",67,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","winit::event_loop","",41,[[["formatter",3]],["result",6]]],[11,"fmt","winit::window","",49,[[["formatter",3]],["result",6]]],[11,"fmt","winit::monitor","",45,[[["formatter",3]],["result",6]]],[11,"fmt","winit::platform::unix","",58,[[["formatter",3]],[["error",3],["result",4]]]],[11,"sub","winit::event","Returns the set difference of the two sets of flags.",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"sub_assign","","Disables all flags enabled in the set.",40,[[["modifiersstate",3]]]],[11,"not","","Returns the complement of this set of flags.",40,[[],["modifiersstate",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitor","","Returns the union of the two sets of flags.",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",40,[[["modifiersstate",3]],["modifiersstate",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",40,[[["modifiersstate",3]]]],[11,"bitor_assign","","Adds the set of flags.",40,[[["modifiersstate",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",40,[[["modifiersstate",3]]]],[11,"hash","winit::dpi","",3,[[]]],[11,"hash","winit::event","",39,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",35,[[]]],[11,"hash","","",36,[[]]],[11,"hash","","",38,[[]]],[11,"hash","","",40,[[]]],[11,"hash","winit::event_loop","",41,[[]]],[11,"hash","winit::monitor","",45,[[]]],[11,"hash","winit::platform::unix","",57,[[]]],[11,"hash","winit::window","",55,[[]]],[11,"hash","","",52,[[]]],[11,"from_iter","winit::event","",40,[[["intoiterator",8]],["modifiersstate",3]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"fmt","","",40,[[["formatter",3]],["result",6]]],[11,"source","winit::window","",49,[[],[["error",8],["option",4]]]],[11,"source","winit::platform::unix","",58,[[],[["error",8],["option",4]]]],[11,"raw_window_handle","winit::window","",56,[[],["rawwindowhandle",4]]],[11,"from_rgba","","Creates an `Icon` from 32bpp RGBA data.",70,[[["vec",3]],[["badicon",4],["result",4]]]]],"p":[[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"Size"],[4,"Position"],[8,"Pixel"],[4,"ExternalError"],[3,"KeyboardInput"],[3,"Touch"],[4,"Event"],[13,"WindowEvent"],[13,"DeviceEvent"],[4,"StartCause"],[13,"ResumeTimeReached"],[13,"WaitCancelled"],[4,"WindowEvent"],[13,"KeyboardInput"],[13,"CursorMoved"],[13,"CursorEntered"],[13,"CursorLeft"],[13,"MouseWheel"],[13,"MouseInput"],[13,"TouchpadPressure"],[13,"AxisMotion"],[13,"ScaleFactorChanged"],[4,"DeviceEvent"],[13,"MouseMotion"],[13,"MouseWheel"],[13,"Motion"],[13,"Button"],[13,"Text"],[4,"TouchPhase"],[4,"Force"],[13,"Calibrated"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[3,"DeviceId"],[3,"ModifiersState"],[3,"EventLoopClosed"],[4,"ControlFlow"],[3,"EventLoop"],[3,"EventLoopProxy"],[3,"VideoMode"],[3,"MonitorHandle"],[3,"WindowBuilder"],[3,"WindowAttributes"],[4,"BadIcon"],[13,"ByteCountNotDivisibleBy4"],[13,"DimensionsVsPixelCount"],[4,"CursorIcon"],[4,"Fullscreen"],[4,"Theme"],[3,"WindowId"],[3,"Window"],[4,"XWindowType"],[4,"XNotSupported"],[4,"ButtonState"],[8,"EventLoopWindowTargetExtUnix"],[8,"EventLoopExtUnix"],[8,"WindowExtUnix"],[8,"WindowBuilderExtUnix"],[8,"MonitorHandleExtUnix"],[8,"Theme"],[8,"EventLoopExtDesktop"],[3,"NotSupportedError"],[3,"OsError"],[3,"EventLoopWindowTarget"],[3,"Icon"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);